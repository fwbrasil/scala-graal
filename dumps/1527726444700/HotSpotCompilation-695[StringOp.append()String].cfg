begin_compilation
  name " HotSpotCompilation-695[bench.StringOp.append()]"
  method "HotSpotCompilation-695[bench.StringOp.append()]"
  date 1527726444734
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j4363 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j4363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4363 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j4382 
=== Usages ===
v6226 v6227 
=== Predecessor ===
v0 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j4382  <|@  <|@
f <@~|@floating>@ <|@
tid v6226 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j4363 
index: - 
=== Succesors ===
=== Usages ===
j4382 v4384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4363 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4382 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6226 
=== Succesors ===
next: j4383 
=== Usages ===
j4981 j4388 v6298 
=== Predecessor ===
j4363 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6226 #next: j4383  <|@  <|@
f <@~|@floating>@ <|@
tid v6227 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j4363 
index: - 
=== Succesors ===
=== Usages ===
j4383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4363 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4383 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6227 
=== Succesors ===
next: v4371 
=== Usages ===
v4368 
=== Predecessor ===
j4382 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6227 #next: v4371  <|@  <|@
f <@~|@floating>@ <|@
tid j3843 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j4981 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4981 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j4382 
y: j3843 
=== Succesors ===
=== Usages ===
v4368 v4384 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4382 y: j3843  <|@  <|@
f <@~|@floating>@ <|@
tid v4368 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4383 
y: j4981 
=== Succesors ===
=== Usages ===
v4371 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j4383 y: j4981  <|@  <|@
f <@~|@floating>@ <|@
tid i750 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2235 ?2224 ?1325 a4481 ?2199 i4751 ?2249 i1328 ?2256 i4691 ?2231 i1312 v2210 i4628 i1296 i4811 ?2181 a4375 a4949 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4361 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a4375 a4481 a4949 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Lbench/StringOp;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 124
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
a4375 a4434 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v4371 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v4368 
=== Succesors ===
trueSuccessor: v4369 
falseSuccessor: v4370 
=== Usages ===
=== Predecessor ===
j4383 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4368 #trueSuccessor: v4369 #falseSuccessor: v4370  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4369 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a4375 
=== Usages ===
=== Predecessor ===
v4371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4375  <|@  <|@
f <@~|@floating>@ <|@
tid i4983 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
a4375 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4375 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v4361 i4983 i750 
=== Succesors ===
next: j4376 
=== Usages ===
j4376 
=== Predecessor ===
v4369 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v4361 i4983 i750 #next: j4376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4376 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4375 
=== Succesors ===
next: v4389 
=== Usages ===
j4388 
=== Predecessor ===
a4375 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4375 #next: v4389  <|@  <|@
f <@*|@fixed>@ <|@
tid v4389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4386 
=== Predecessor ===
j4376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4384 
=== Usages ===
=== Predecessor ===
v4371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4384 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6226 
value: j4981 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4380 
=== Usages ===
=== Predecessor ===
v4370 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6226 value: j4981 stateAfter: - lastLocationAccess: - #next: v4380  <|@  <|@
f <@~|@floating>@ <|@
tid v6298 <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j4382 
index: - 
=== Succesors ===
=== Usages ===
v4380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4382 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6298 
=== Succesors ===
next: v4387 
=== Usages ===
=== Predecessor ===
v4384 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6298 #next: v4387  <|@  <|@
f <@*|@fixed>@ <|@
tid v4387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4386 
=== Predecessor ===
v4380 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4388 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v4386 
values: j4382 j4376 
=== Succesors ===
=== Usages ===
v6230 v6229 a4024 v6228 v6299 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v4386 values: j4382 j4376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4387 v4389 
=== Succesors ===
next: a4024 
=== Usages ===
j4388 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4387 v4389 #next: a4024  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4024 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j4388 
=== Succesors ===
next: v4399 
=== Usages ===
a4031 
=== Predecessor ===
v4386 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j4388 #next: v4399  <|@  <|@
f <@~|@floating>@ <|@
tid v6228 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j4388 
index: - 
=== Succesors ===
=== Usages ===
v4399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4388 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i2257 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6228 
value: i2257 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4400 
=== Usages ===
=== Predecessor ===
a4024 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6228 value: i2257 stateAfter: - lastLocationAccess: - #next: v4400  <|@  <|@
f <@~|@floating>@ <|@
tid v6229 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4388 
index: - 
=== Succesors ===
=== Usages ===
v4400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4388 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j4395 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4400 v4458 j4571 v4670 v4733 v4793 v4853 v5058 v5324 v5198 v5450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4400 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6229 
value: j4395 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4404 
=== Usages ===
=== Predecessor ===
v4399 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6229 value: j4395 stateAfter: - lastLocationAccess: - #next: v4404  <|@  <|@
f <@~|@floating>@ <|@
tid v6230 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j4388 
index: - 
=== Succesors ===
=== Usages ===
v4404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4388 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4986 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v4404 v4461 v4673 v4736 v4796 v4856 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4404 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6230 
value: v4986 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4409 
=== Usages ===
=== Predecessor ===
v4400 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6230 value: v4986 stateAfter: - lastLocationAccess: - #next: v4409  <|@  <|@
f <@~|@floating>@ <|@
tid v6299 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j4388 
index: - 
=== Succesors ===
=== Usages ===
v4409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4388 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4407 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <27584968630861921,27584968630861922,27584968630861922,27584968630861922>
stableDimension: 0
stamp: <i64,i64,i64,i64>
stampKind: <i64,i64,i64,i64>
value: SIMD<27584968630861921,27584968630861922,27584968630861922,27584968630861922>
=== Inputs ===
=== Succesors ===
=== Usages ===
v4409 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4409 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6299 
value: v4407 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a4031 
=== Usages ===
=== Predecessor ===
v4404 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6299 value: v4407 stateAfter: - lastLocationAccess: - #next: a4031  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4031 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a4024 
=== Succesors ===
next: v4032 
=== Usages ===
v6217 
=== Predecessor ===
v4409 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a4024 #next: v4032  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4032 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j4413 
=== Usages ===
=== Predecessor ===
a4031 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j4413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4413 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j4454 
=== Usages ===
v6231 v6232 
=== Predecessor ===
v4032 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j4454  <|@  <|@
f <@~|@floating>@ <|@
tid v6231 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j4413 
index: - 
=== Succesors ===
=== Usages ===
j4454 v4456 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4413 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4454 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6231 
=== Succesors ===
next: j4455 
=== Usages ===
j5008 v6233 v6234 a4433 v6235 v6307 v6308 v6309 v6310 
=== Predecessor ===
j4413 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6231 #next: j4455  <|@  <|@
f <@~|@floating>@ <|@
tid v6232 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j4413 
index: - 
=== Succesors ===
=== Usages ===
j4455 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4413 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4455 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6232 
=== Succesors ===
next: v4429 
=== Usages ===
v4423 
=== Predecessor ===
j4454 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6232 #next: v4429  <|@  <|@
f <@~|@floating>@ <|@
tid j5007 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 88
stableDimension: 0
stamp: i64 [88] ⇊0000000000000058 ⇈0000000000000058
stampKind: i64
value: long[88|0x58]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5008 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5008 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j4454 
y: j5007 
=== Succesors ===
=== Usages ===
v4423 v4456 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4454 y: j5007  <|@  <|@
f <@~|@floating>@ <|@
tid v4423 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4455 
y: j5008 
=== Succesors ===
=== Usages ===
v4429 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j4455 y: j5008  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3684 v4980 v4196 a4773 v4909 v4189 v3534 v3793 v4228 a4833 a4434 v4514 v4541 v4546 v4567 a4650 a4713 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2410 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 34
stableDimension: 0
stamp: i32 [34] ⇊0000000000000022 ⇈0000000000000022
stampKind: i32
value: int[34|0x22]
=== Inputs ===
=== Succesors ===
=== Usages ===
a4434 i4272 v4510 v4457 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4394 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a4713 a4434 a4833 a4650 a4773 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v4429 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v4423 
=== Succesors ===
trueSuccessor: v4428 
falseSuccessor: v4427 
=== Usages ===
=== Predecessor ===
j4455 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4423 #trueSuccessor: v4428 #falseSuccessor: v4427  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4428 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a4434 
=== Usages ===
=== Predecessor ===
v4429 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4434 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v4394 i2410 i90 
=== Succesors ===
next: v4437 
=== Usages ===
a4438 
=== Predecessor ===
v4428 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v4394 i2410 i90 #next: v4437  <|@  <|@
f <@*|@fixed>@ <|@
tid v4437 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4436 
=== Predecessor ===
a4434 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4456 
=== Usages ===
=== Predecessor ===
v4429 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4456 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6231 
value: j5008 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4444 
=== Usages ===
=== Predecessor ===
v4427 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6231 value: j5008 stateAfter: - lastLocationAccess: - #next: v4444  <|@  <|@
f <@~|@floating>@ <|@
tid v6307 <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j4454 
index: - 
=== Succesors ===
=== Usages ===
v4444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4454 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6307 
=== Succesors ===
next: v4446 
=== Usages ===
=== Predecessor ===
v4456 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6307 #next: v4446  <|@  <|@
f <@~|@floating>@ <|@
tid v6308 <|@
d <@d|@=== Debug Properties ===
displacement: 344
scale: Times1
stamp: void*
=== Inputs ===
base: j4454 
index: - 
=== Succesors ===
=== Usages ===
v4446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4454 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6308 
=== Succesors ===
next: v4449 
=== Usages ===
=== Predecessor ===
v4444 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6308 #next: v4449  <|@  <|@
f <@~|@floating>@ <|@
tid v6309 <|@
d <@d|@=== Debug Properties ===
displacement: 408
scale: Times1
stamp: void*
=== Inputs ===
base: j4454 
index: - 
=== Succesors ===
=== Usages ===
v4449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4454 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6309 
=== Succesors ===
next: v4452 
=== Usages ===
=== Predecessor ===
v4446 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6309 #next: v4452  <|@  <|@
f <@~|@floating>@ <|@
tid v6310 <|@
d <@d|@=== Debug Properties ===
displacement: 472
scale: Times1
stamp: void*
=== Inputs ===
base: j4454 
index: - 
=== Succesors ===
=== Usages ===
v4452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4454 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4452 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6310 
=== Succesors ===
next: v4457 
=== Usages ===
=== Predecessor ===
v4449 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6310 #next: v4457  <|@  <|@
f <@~|@floating>@ <|@
tid v6233 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j4454 
index: - 
=== Succesors ===
=== Usages ===
v4457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4454 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4457 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6233 
value: i2410 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4458 
=== Usages ===
=== Predecessor ===
v4452 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6233 value: i2410 stateAfter: - lastLocationAccess: - #next: v4458  <|@  <|@
f <@~|@floating>@ <|@
tid v6234 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4454 
index: - 
=== Succesors ===
=== Usages ===
v4458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4454 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6234 
value: j4395 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4461 
=== Usages ===
=== Predecessor ===
v4457 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6234 value: j4395 stateAfter: - lastLocationAccess: - #next: v4461  <|@  <|@
f <@~|@floating>@ <|@
tid v6235 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j4454 
index: - 
=== Succesors ===
=== Usages ===
v4461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4454 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4461 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6235 
value: v4986 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4432 
=== Usages ===
=== Predecessor ===
v4458 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6235 value: v4986 stateAfter: - lastLocationAccess: - #next: v4432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4432 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a4433 
=== Usages ===
=== Predecessor ===
v4461 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a4433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4433 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j4454 
=== Succesors ===
next: v4435 
=== Usages ===
a4438 
=== Predecessor ===
v4432 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j4454 #next: v4435  <|@  <|@
f <@*|@fixed>@ <|@
tid v4435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4436 
=== Predecessor ===
a4433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a4438 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v4436 
values: a4433 a4434 
=== Succesors ===
=== Usages ===
v6312 a4281 v6222 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v4436 values: a4433 a4434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4435 v4437 
=== Succesors ===
next: v5710 
=== Usages ===
a4438 v6159 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4435 v4437 #next: v5710  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v6159 
=== Usages ===
j5711 j5712 
=== Predecessor ===
v4436 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v6159  <|@  <|@
f <@~|@floating>@ <|@
tid v6217 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a4031 
index: - 
=== Succesors ===
=== Usages ===
j5711 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4031 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j5711 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5710 
address: v6217 
=== Succesors ===
=== Usages ===
v6332 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5710 address: v6217  <|@  <|@
f <@~|@floating>@ <|@
tid v6332 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j5711 
index: - 
=== Succesors ===
=== Usages ===
v6159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5711 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6159 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v4436 
address: v6332 
=== Succesors ===
next: v6106 
=== Usages ===
v6106 
=== Predecessor ===
v5710 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4436 address: v6332 #next: v6106  <|@  <|@
f <@~|@floating>@ <|@
tid v6222 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a4438 
index: - 
=== Succesors ===
=== Usages ===
j5712 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4438 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j5712 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5710 
address: v6222 
=== Succesors ===
=== Usages ===
v6331 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5710 address: v6222  <|@  <|@
f <@~|@floating>@ <|@
tid v6331 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j5712 
index: - 
=== Succesors ===
=== Usages ===
v6106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5712 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6106 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6331 
value: v6159 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5717 
=== Usages ===
=== Predecessor ===
v6159 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6331 value: v6159 stateAfter: - lastLocationAccess: - #next: v5717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v6107 
=== Usages ===
j5718 
=== Predecessor ===
v6106 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v6107  <|@  <|@
f <@~|@floating>@ <|@
tid v6312 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: a4438 
index: - 
=== Succesors ===
=== Usages ===
j5718 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4438 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j5718 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5717 
address: v6312 
=== Succesors ===
=== Usages ===
v6333 v6334 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5717 address: v6312  <|@  <|@
f <@~|@floating>@ <|@
tid v6333 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j5718 
index: - 
=== Succesors ===
=== Usages ===
v6107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5718 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v6154 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v6123 v6138 v6107 v6104 v6153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6107 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6333 
value: v6154 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v6108 
=== Usages ===
=== Predecessor ===
v5717 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6333 value: v6154 stateAfter: - lastLocationAccess: - #next: v6108  <|@  <|@
f <@~|@floating>@ <|@
tid v6334 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j5718 
index: - 
=== Succesors ===
=== Usages ===
v6108 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5718 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v6156 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v6099 v6108 v6120 v6135 v6150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6108 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6334 
value: v6156 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a4281 
=== Usages ===
=== Predecessor ===
v6107 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6334 value: v6156 stateAfter: - lastLocationAccess: - #next: a4281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4281 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a4438 
=== Succesors ===
next: v2631 
=== Usages ===
v6218 v6188 a4038 ?4058 v6198 v6203 v6197 v6200 v6196 v6204 v6195 v6202 v6194 v6205 v6193 v6199 v6192 ?2192 v6191 v6201 v6190 ?2524 v6189 
=== Predecessor ===
v6108 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a4438 #next: v2631  <|@  <|@
f <@~|@floating>@ <|@
tid v6188 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v2631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i3844 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 98
stableDimension: 0
stamp: i16 [98] ⇊0000000000000062 ⇈0000000000000062
stampKind: i16
value: int[98|0x62]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2631 v2683 v2735 v2787 v2839 v2891 v2943 v2995 v3047 v3099 v3151 v3203 v3255 v3307 v3359 v3411 v3463 v3515 v3573 v3666 v3723 v3775 v3832 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2631 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6188 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2683 
=== Usages ===
=== Predecessor ===
a4281 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6188 value: i3844 stateAfter: - lastLocationAccess: - #next: v2683  <|@  <|@
f <@~|@floating>@ <|@
tid v6189 <|@
d <@d|@=== Debug Properties ===
displacement: 50
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v2683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2683 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6189 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2735 
=== Usages ===
=== Predecessor ===
v2631 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6189 value: i3844 stateAfter: - lastLocationAccess: - #next: v2735  <|@  <|@
f <@~|@floating>@ <|@
tid v6190 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v2735 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2735 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6190 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2787 
=== Usages ===
=== Predecessor ===
v2683 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6190 value: i3844 stateAfter: - lastLocationAccess: - #next: v2787  <|@  <|@
f <@~|@floating>@ <|@
tid v6191 <|@
d <@d|@=== Debug Properties ===
displacement: 54
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v2787 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2787 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6191 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2839 
=== Usages ===
=== Predecessor ===
v2735 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6191 value: i3844 stateAfter: - lastLocationAccess: - #next: v2839  <|@  <|@
f <@~|@floating>@ <|@
tid v6192 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v2839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6192 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2891 
=== Usages ===
=== Predecessor ===
v2787 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6192 value: i3844 stateAfter: - lastLocationAccess: - #next: v2891  <|@  <|@
f <@~|@floating>@ <|@
tid v6193 <|@
d <@d|@=== Debug Properties ===
displacement: 58
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v2891 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2891 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6193 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2943 
=== Usages ===
=== Predecessor ===
v2839 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6193 value: i3844 stateAfter: - lastLocationAccess: - #next: v2943  <|@  <|@
f <@~|@floating>@ <|@
tid v6194 <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v2943 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2943 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6194 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2995 
=== Usages ===
=== Predecessor ===
v2891 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6194 value: i3844 stateAfter: - lastLocationAccess: - #next: v2995  <|@  <|@
f <@~|@floating>@ <|@
tid v6195 <|@
d <@d|@=== Debug Properties ===
displacement: 62
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v2995 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2995 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6195 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3047 
=== Usages ===
=== Predecessor ===
v2943 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6195 value: i3844 stateAfter: - lastLocationAccess: - #next: v3047  <|@  <|@
f <@~|@floating>@ <|@
tid v6196 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v3047 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3047 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6196 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3099 
=== Usages ===
=== Predecessor ===
v2995 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6196 value: i3844 stateAfter: - lastLocationAccess: - #next: v3099  <|@  <|@
f <@~|@floating>@ <|@
tid v6197 <|@
d <@d|@=== Debug Properties ===
displacement: 66
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v3099 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3099 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6197 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3151 
=== Usages ===
=== Predecessor ===
v3047 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6197 value: i3844 stateAfter: - lastLocationAccess: - #next: v3151  <|@  <|@
f <@~|@floating>@ <|@
tid v6198 <|@
d <@d|@=== Debug Properties ===
displacement: 68
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v3151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3151 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6198 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3203 
=== Usages ===
=== Predecessor ===
v3099 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6198 value: i3844 stateAfter: - lastLocationAccess: - #next: v3203  <|@  <|@
f <@~|@floating>@ <|@
tid v6199 <|@
d <@d|@=== Debug Properties ===
displacement: 70
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v3203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6199 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3255 
=== Usages ===
=== Predecessor ===
v3151 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6199 value: i3844 stateAfter: - lastLocationAccess: - #next: v3255  <|@  <|@
f <@~|@floating>@ <|@
tid v6200 <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v3255 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3255 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6200 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3307 
=== Usages ===
=== Predecessor ===
v3203 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6200 value: i3844 stateAfter: - lastLocationAccess: - #next: v3307  <|@  <|@
f <@~|@floating>@ <|@
tid v6201 <|@
d <@d|@=== Debug Properties ===
displacement: 74
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v3307 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3307 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6201 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3359 
=== Usages ===
=== Predecessor ===
v3255 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6201 value: i3844 stateAfter: - lastLocationAccess: - #next: v3359  <|@  <|@
f <@~|@floating>@ <|@
tid v6202 <|@
d <@d|@=== Debug Properties ===
displacement: 76
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v3359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3359 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6202 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3411 
=== Usages ===
=== Predecessor ===
v3307 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6202 value: i3844 stateAfter: - lastLocationAccess: - #next: v3411  <|@  <|@
f <@~|@floating>@ <|@
tid v6203 <|@
d <@d|@=== Debug Properties ===
displacement: 78
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v3411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3411 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6203 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3463 
=== Usages ===
=== Predecessor ===
v3359 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6203 value: i3844 stateAfter: - lastLocationAccess: - #next: v3463  <|@  <|@
f <@~|@floating>@ <|@
tid v6204 <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v3463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3463 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6204 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3515 
=== Usages ===
=== Predecessor ===
v3411 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6204 value: i3844 stateAfter: - lastLocationAccess: - #next: v3515  <|@  <|@
f <@~|@floating>@ <|@
tid v6205 <|@
d <@d|@=== Debug Properties ===
displacement: 82
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v3515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3515 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6205 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j4470 
=== Usages ===
=== Predecessor ===
v3463 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6205 value: i3844 stateAfter: - lastLocationAccess: - #next: j4470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4470 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j4485 
=== Usages ===
v6236 v6237 
=== Predecessor ===
v3515 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j4485  <|@  <|@
f <@~|@floating>@ <|@
tid v6236 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j4470 
index: - 
=== Succesors ===
=== Usages ===
j4485 v4487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4470 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4485 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6236 
=== Succesors ===
next: j4486 
=== Usages ===
j4992 j4491 v6300 
=== Predecessor ===
j4470 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6236 #next: j4486  <|@  <|@
f <@~|@floating>@ <|@
tid v6237 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j4470 
index: - 
=== Succesors ===
=== Usages ===
j4486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4470 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4486 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6237 
=== Succesors ===
next: v4478 
=== Usages ===
v4475 
=== Predecessor ===
j4485 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6237 #next: v4478  <|@  <|@
f <@~|@floating>@ <|@
tid j4991 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j4992 j4999 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4992 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j4485 
y: j4991 
=== Succesors ===
=== Usages ===
v4475 v4487 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4485 y: j4991  <|@  <|@
f <@~|@floating>@ <|@
tid v4475 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4486 
y: j4992 
=== Succesors ===
=== Usages ===
v4478 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j4486 y: j4992  <|@  <|@
tid ?89 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
?247 ?709 ?722 ?696 ?735 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
tid a92 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@67a97361
hasIdentity: true
objectId: 1
stamp: a!# Ljava/lang/StringBuffer;
type: HotSpotType<Ljava/lang/StringBuffer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?1313 ?715 ?715 ?2249 ?2181 ?2531 ?709 ?2224 ?1297 ?722 ?1313 ?251 ?4059 ?2192 ?728 ?4058 ?2231 ?2256 ?735 ?251 ?1329 ?1329 ?1297 ?728 ?696 ?1325 ?2524 ?2217 ?4060 ?1281 ?2199 ?2242 ?1281 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?251 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a92 
materializedValue: a92 
=== Succesors ===
=== Usages ===
?722 ?735 ?696 ?709 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a92 materializedValue: a92  <|@  <|@
tid ?696 <|@
d <@d|@=== Debug Properties ===
bci: 227
code: ResolvedJavaMethodBytecode<StringOp.cont(StringBuffer)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 162
stackSize: 0
=== Inputs ===
outerFrameState: ?89 
values: - a92 
virtualObjectMappings: ?251 
=== Succesors ===
=== Usages ===
?1281 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?89 values: - a92 virtualObjectMappings: ?251  <|@  <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
eliminated: false
lockDepth: 0
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
?1281 
=== Predecessor ===
- >@ <|@
instruction <@MonitorId|@org.graalvm.compiler.nodes.java.MonitorIdNode>@  <|@  <|@
tid ?1281 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<StringBuffer.append(String)>
duringCall: true
localsSize: 2
locksSize: 1
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?696 
values: a92 - a92 
monitorIds: v685 
=== Succesors ===
=== Usages ===
?2181 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?696 values: a92 - a92 monitorIds: v685  <|@  <|@
tid ?2181 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?1281 
values: a92 - i750 
=== Succesors ===
=== Usages ===
?2179 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1281 values: a92 - i750  <|@  <|@
f <@~|@floating>@ <|@
tid i2517 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 33
stableDimension: 0
stamp: i32 [33] ⇊0000000000000021 ⇈0000000000000021
stampKind: i32
value: int[33|0x21]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2524 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?2524 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a92 
values: i2517 a4281 - 
=== Succesors ===
=== Usages ===
?2179 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a92 values: i2517 a4281 -  <|@  <|@
tid ?2179 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<String.getChars(int, int, char[], int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 827
stackSize: 0
=== Inputs ===
outerFrameState: ?2181 
values: - - - - - 
virtualObjectMappings: ?2524 
=== Succesors ===
=== Usages ===
a4481 v4588 v4553 i4540 i4545 v4553 j4554 i4566 j4574 v4588 v4608 v4609 v4610 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2181 values: - - - - - virtualObjectMappings: ?2524  <|@  <|@
f <@~|@floating>@ <|@
tid i3999 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i4000 i4002 a4949 a4481 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v4478 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v4475 
=== Succesors ===
trueSuccessor: v4476 
falseSuccessor: v4477 
=== Usages ===
=== Predecessor ===
j4486 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4475 #trueSuccessor: v4476 #falseSuccessor: v4477  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4476 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a4481 
=== Usages ===
=== Predecessor ===
v4478 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4481 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2179 
arguments: v4361 i3999 i750 
=== Succesors ===
next: j4482 
=== Usages ===
j4482 
=== Predecessor ===
v4476 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2179 arguments: v4361 i3999 i750 #next: j4482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4482 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4481 
=== Succesors ===
next: v4492 
=== Usages ===
j4491 
=== Predecessor ===
a4481 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4481 #next: v4492  <|@  <|@
f <@*|@fixed>@ <|@
tid v4492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4489 
=== Predecessor ===
j4482 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4487 
=== Usages ===
=== Predecessor ===
v4478 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4487 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6236 
value: j4992 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4484 
=== Usages ===
=== Predecessor ===
v4477 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6236 value: j4992 stateAfter: - lastLocationAccess: - #next: v4484  <|@  <|@
f <@~|@floating>@ <|@
tid v6300 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j4485 
index: - 
=== Succesors ===
=== Usages ===
v4484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4485 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6300 
=== Succesors ===
next: v4490 
=== Usages ===
=== Predecessor ===
v4487 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6300 #next: v4490  <|@  <|@
f <@*|@fixed>@ <|@
tid v4490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4489 
=== Predecessor ===
v4484 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4491 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v4489 
values: j4485 j4482 
=== Succesors ===
=== Usages ===
v6240 v6239 a4035 v6301 v6302 v6303 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v4489 values: j4485 j4482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4490 v4492 
=== Succesors ===
next: a4035 
=== Usages ===
j4491 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4490 v4492 #next: a4035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4035 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j4491 
=== Succesors ===
next: j4502 
=== Usages ===
a4042 
=== Predecessor ===
v4489 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j4491 #next: j4502  <|@  <|@
f <@~|@floating>@ <|@
tid v4044 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6241 j4497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4497 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v4044 
=== Succesors ===
=== Usages ===
v6238 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v4044  <|@  <|@
f <@~|@floating>@ <|@
tid v6238 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j4497 
index: - 
=== Succesors ===
=== Usages ===
j4502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4497 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4502 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6238 
=== Succesors ===
next: v4503 
=== Usages ===
v4503 
=== Predecessor ===
a4035 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6238 #next: v4503  <|@  <|@
f <@~|@floating>@ <|@
tid v6239 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4491 
index: - 
=== Succesors ===
=== Usages ===
v4503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4491 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4503 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6239 
value: j4502 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4506 
=== Usages ===
=== Predecessor ===
j4502 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6239 value: j4502 stateAfter: - lastLocationAccess: - #next: v4506  <|@  <|@
f <@~|@floating>@ <|@
tid v6240 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j4491 
index: - 
=== Succesors ===
=== Usages ===
v4506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4491 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4995 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v4506 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4506 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6240 
value: v4995 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4510 
=== Usages ===
=== Predecessor ===
v4503 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6240 value: v4995 stateAfter: - lastLocationAccess: - #next: v4510  <|@  <|@
f <@~|@floating>@ <|@
tid v6301 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j4491 
index: - 
=== Succesors ===
=== Usages ===
v4510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4491 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4510 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6301 
value: i2410 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4512 
=== Usages ===
=== Predecessor ===
v4506 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6301 value: i2410 stateAfter: - lastLocationAccess: - #next: v4512  <|@  <|@
f <@~|@floating>@ <|@
tid v6302 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j4491 
index: - 
=== Succesors ===
=== Usages ===
v4512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4491 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a4038 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a4281 
=== Succesors ===
=== Usages ===
v4512 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4512 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6302 
value: a4038 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4514 
=== Usages ===
=== Predecessor ===
v4510 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6302 value: a4038 stateAfter: - lastLocationAccess: - #next: v4514  <|@  <|@
f <@~|@floating>@ <|@
tid v6303 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j4491 
index: - 
=== Succesors ===
=== Usages ===
v4514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4491 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6303 
value: i90 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a4042 
=== Usages ===
=== Predecessor ===
v4512 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6303 value: i90 stateAfter: - lastLocationAccess: - #next: a4042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4042 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a4035 
=== Succesors ===
next: j4606 
=== Usages ===
v4914 v3520 ?2531 v6206 v6209 v6207 v3671 v3780 v6292 j4516 v4525 j4530 v4553 v4579 v4588 j4681 j4744 j4804 j4864 v4902 j4906 
=== Predecessor ===
v4514 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a4035 #next: j4606  <|@  <|@
f <@~|@floating>@ <|@
tid v6292 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a4042 
index: - 
=== Succesors ===
=== Usages ===
j4925 j4606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4606 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6292 
=== Succesors ===
next: j4515 
=== Usages ===
j4517 j4521 j4537 i4545 j4554 j4571 v4599 v6245 
=== Predecessor ===
a4042 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6292 #next: j4515  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4515 <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
stamp: i64
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j4516 
=== Usages ===
v4553 v6243 j4574 v4588 v4610 
=== Predecessor ===
j4606 >@ <|@
instruction <@BeginLockScope|@org.graalvm.compiler.hotspot.nodes.BeginLockScopeNode>@ stateAfter: - #next: j4516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4516 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4042 
=== Succesors ===
next: j4607 
=== Usages ===
v6244 
=== Predecessor ===
j4515 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4042 #next: j4607  <|@  <|@
f <@~|@floating>@ <|@
tid v6241 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: v4044 
index: - 
=== Succesors ===
=== Usages ===
j4607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v4044 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4607 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6241 
=== Succesors ===
next: j4519 
=== Usages ===
j4520 j4554 
=== Predecessor ===
j4516 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6241 #next: j4519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4519 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v4524 
=== Usages ===
j4520 j4538 
=== Predecessor ===
j4607 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v4524  <|@  <|@
f <@~|@floating>@ <|@
tid j4520 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$92/1285640437@181e2e71
stamp: i64
=== Inputs ===
x: j4519 
y: j4607 
=== Succesors ===
=== Usages ===
j4521 i4545 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j4519 y: j4607  <|@  <|@
f <@~|@floating>@ <|@
tid j4521 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$95/254966325@645792aa
stamp: i64
=== Inputs ===
x: j4520 
y: j4606 
=== Succesors ===
=== Usages ===
v4591 v4593 v4595 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j4520 y: j4606  <|@  <|@
f <@~|@floating>@ <|@
tid j4590 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -121
stableDimension: 0
stamp: i64 [-121] ⇊ffffffffffffff87 ⇈ffffffffffffff87
stampKind: i64
value: long[-121|0xffffffffffffff87]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4591 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4591 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
x: j4521 
y: j4590 
=== Succesors ===
=== Usages ===
v4524 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j4521 y: j4590  <|@  <|@
f <@~|@floating>@ <|@
tid j4022 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5808 v5770 v4931 i4566 v5934 j5927 j5921 j5987 v4561 v5883 j5979 v4609 j5874 j5866 v5996 v5821 j5814 v4879 v4889 v4894 v6047 j5621 j5629 v5639 j6040 j5681 j5687 v5694 j5761 j5753 j6034 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4598 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4599 v4917 j5611 j5674 j5744 j5801 j5857 j5914 j5970 j6027 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4589 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j4517 v4593 j4871 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4592 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 5
stableDimension: 0
stamp: i64 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i64
value: long[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4526 v4872 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v4524 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v4591 
=== Succesors ===
trueSuccessor: v4523 
falseSuccessor: v4522 
=== Usages ===
=== Predecessor ===
j4519 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4591 #trueSuccessor: v4523 #falseSuccessor: v4522  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B35" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4525 
=== Usages ===
=== Predecessor ===
v4524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4525 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
object: a4042 
=== Succesors ===
next: v4618 
=== Usages ===
=== Predecessor ===
v4523 >@ <|@
instruction <@FastAcquireBiasedLock|@org.graalvm.compiler.hotspot.nodes.FastAcquireBiasedLockNode>@ object: a4042 #next: v4618  <|@  <|@
f <@*|@fixed>@ <|@
tid v4618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4613 
=== Predecessor ===
v4525 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4522 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4529 
=== Usages ===
=== Predecessor ===
v4524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4529  <|@  <|@
f <@~|@floating>@ <|@
tid j4517 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$94/978859646@9756628
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j4606 
y: j4589 
=== Succesors ===
=== Usages ===
v4526 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j4606 y: j4589  <|@  <|@
f <@~|@floating>@ <|@
tid v4526 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4517 
y: j4592 
=== Succesors ===
=== Usages ===
v4529 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j4517 y: j4592  <|@  <|@
f <@*|@fixed>@ <|@
tid v4529 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v4526 
=== Succesors ===
trueSuccessor: v4528 
falseSuccessor: v4527 
=== Usages ===
=== Predecessor ===
v4522 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4526 #trueSuccessor: v4528 #falseSuccessor: v4527  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B21" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4530 
=== Usages ===
=== Predecessor ===
v4529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4530 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4042 
=== Succesors ===
next: v4533 
=== Usages ===
v6242 
=== Predecessor ===
v4528 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4042 #next: v4533  <|@  <|@
f <@~|@floating>@ <|@
tid v6242 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4530 
index: - 
=== Succesors ===
=== Usages ===
i4540 i4545 j4554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4530 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
x: j4521 
y: j4589 
=== Succesors ===
=== Usages ===
v4533 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j4521 y: j4589  <|@  <|@
f <@*|@fixed>@ <|@
tid v4533 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v4593 
=== Succesors ===
trueSuccessor: v4532 
falseSuccessor: v4531 
=== Usages ===
=== Predecessor ===
j4530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4593 #trueSuccessor: v4532 #falseSuccessor: v4531  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4532 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4536 
=== Usages ===
=== Predecessor ===
v4533 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4536  <|@  <|@
f <@~|@floating>@ <|@
tid j4594 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 768
stableDimension: 0
stamp: i64 [768] ⇊0000000000000300 ⇈0000000000000300
stampKind: i64
value: long[768|0x300]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4595 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
x: j4521 
y: j4594 
=== Succesors ===
=== Usages ===
v4536 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j4521 y: j4594  <|@  <|@
f <@*|@fixed>@ <|@
tid v4536 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v4595 
=== Succesors ===
trueSuccessor: v4535 
falseSuccessor: v4534 
=== Usages ===
=== Predecessor ===
v4532 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4595 #trueSuccessor: v4535 #falseSuccessor: v4534  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4535 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i4540 
=== Usages ===
=== Predecessor ===
v4536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4540  <|@  <|@
f <@~|@floating>@ <|@
tid j4596 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 895
stableDimension: 0
stamp: i64 [895] ⇊000000000000037f ⇈000000000000037f
stampKind: i64
value: long[895|0x37f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j4537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4537 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$94/978859646@9756628
stamp: i64 [0 - 895] ⇈000000000000037f
=== Inputs ===
x: j4606 
y: j4596 
=== Succesors ===
=== Usages ===
j4538 i4540 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j4606 y: j4596  <|@  <|@
f <@~|@floating>@ <|@
tid j4538 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$92/1285640437@181e2e71
stamp: i64
=== Inputs ===
x: j4519 
y: j4537 
=== Succesors ===
=== Usages ===
i4540 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j4519 y: j4537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4540 <|@
st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
locks: 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: a92 - i750 
locks: 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: a92 - 
locks: a92 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - a92 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6242 
expectedValue: j4537 
newValue: j4538 
stateAfter: ?2179 
=== Succesors ===
next: v4544 
=== Usages ===
v4541 
=== Predecessor ===
v4535 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v6242 expectedValue: j4537 newValue: j4538 stateAfter: ?2179 #next: v4544  <|@  <|@
f <@~|@floating>@ <|@
tid v4541 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4540 
y: i90 
=== Succesors ===
=== Usages ===
v4544 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4540 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v4544 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v4541 
=== Succesors ===
trueSuccessor: v4542 
falseSuccessor: v4543 
=== Usages ===
=== Predecessor ===
i4540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4541 #trueSuccessor: v4542 #falseSuccessor: v4543  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4515753460700115334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4550 
=== Usages ===
=== Predecessor ===
v4544 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4550  <|@  <|@
f <@*|@fixed>@ <|@
tid v4550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4551 
=== Predecessor ===
v4542 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B35" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4543 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4619 
=== Usages ===
=== Predecessor ===
v4544 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4619  <|@  <|@
f <@*|@fixed>@ <|@
tid v4619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4613 
=== Predecessor ===
v4543 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i4545 
=== Usages ===
=== Predecessor ===
v4536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4545 <|@
st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
locks: 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: a92 - i750 
locks: 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: a92 - 
locks: a92 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - a92 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6242 
expectedValue: j4606 
newValue: j4520 
stateAfter: ?2179 
=== Succesors ===
next: v4549 
=== Usages ===
v4546 
=== Predecessor ===
v4534 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v6242 expectedValue: j4606 newValue: j4520 stateAfter: ?2179 #next: v4549  <|@  <|@
f <@~|@floating>@ <|@
tid v4546 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4545 
y: i90 
=== Succesors ===
=== Usages ===
v4549 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4545 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v4549 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v4546 
=== Succesors ===
trueSuccessor: v4547 
falseSuccessor: v4548 
=== Usages ===
=== Predecessor ===
i4545 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4546 #trueSuccessor: v4547 #falseSuccessor: v4548  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4501392635851087307
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4552 
=== Usages ===
=== Predecessor ===
v4549 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4552  <|@  <|@
f <@*|@fixed>@ <|@
tid v4552 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4551 
=== Predecessor ===
v4547 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B35" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4551 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4550 v4552 
=== Succesors ===
next: v4553 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4550 v4552 #next: v4553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4553 <|@
st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
locks: 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: a92 - i750 
locks: 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: a92 - 
locks: a92 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - a92 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorenter(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: void
=== Inputs ===
stateAfter: ?2179 
stateDuring: ?2179 
arguments: a4042 j4515 
=== Succesors ===
next: v4621 
=== Usages ===
=== Predecessor ===
v4551 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?2179 stateDuring: ?2179 arguments: a4042 j4515 #next: v4621  <|@  <|@
f <@*|@fixed>@ <|@
tid v4621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4613 
=== Predecessor ===
v4553 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B35" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4620 
=== Usages ===
=== Predecessor ===
v4549 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4620  <|@  <|@
f <@*|@fixed>@ <|@
tid v4620 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4613 
=== Predecessor ===
v4548 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4554 
=== Usages ===
=== Predecessor ===
v4533 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4554 <|@
st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
locks: 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: a92 - i750 
locks: 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: a92 - 
locks: a92 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - a92 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6242 
expectedValue: j4606 
newValue: j4607 
stateAfter: ?2179 
=== Succesors ===
next: v4555 
=== Usages ===
=== Predecessor ===
v4531 >@ <|@
instruction <@ValueCompareAndSwap|@org.graalvm.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v6242 expectedValue: j4606 newValue: j4607 stateAfter: ?2179 #next: v4555  <|@  <|@
f <@*|@fixed>@ <|@
tid v4555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4597 
=== Predecessor ===
j4554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4527 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4556 
=== Usages ===
=== Predecessor ===
v4529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4556  <|@  <|@
f <@*|@fixed>@ <|@
tid v4556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4597 
=== Predecessor ===
v4527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B29" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4597 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4555 v4556 
=== Succesors ===
next: v4559 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4555 v4556 #next: v4559  <|@  <|@
f <@~|@floating>@ <|@
tid v6243 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4515 
index: - 
=== Succesors ===
=== Usages ===
v4608 v4609 v4610 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4515 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4599 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
x: j4606 
y: j4598 
=== Succesors ===
=== Usages ===
v4559 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j4606 y: j4598  <|@  <|@
f <@*|@fixed>@ <|@
tid v4559 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v4599 
=== Succesors ===
trueSuccessor: v4557 
falseSuccessor: v4558 
=== Usages ===
=== Predecessor ===
v4597 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4599 #trueSuccessor: v4557 #falseSuccessor: v4558  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4608 
=== Usages ===
=== Predecessor ===
v4559 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4608  <|@  <|@
f <@~|@floating>@ <|@
tid j4571 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$92/1285640437@181e2e71
stamp: i64 [-9223372036854775807 - 9223372036854775807] ⇊0000000000000001
=== Inputs ===
x: j4606 
y: j4395 
=== Succesors ===
=== Usages ===
j4574 v4575 v4608 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j4606 y: j4395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4608 <|@
st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
locks: 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: a92 - i750 
locks: 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: a92 - 
locks: a92 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - a92 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6243 
value: j4571 
stateAfter: ?2179 
lastLocationAccess: - 
=== Succesors ===
next: v4572 
=== Usages ===
=== Predecessor ===
v4557 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6243 value: j4571 stateAfter: ?2179 lastLocationAccess: - #next: v4572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4572 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j4574 
=== Usages ===
=== Predecessor ===
v4608 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j4574  <|@  <|@
f <@~|@floating>@ <|@
tid v6244 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4516 
index: - 
=== Succesors ===
=== Usages ===
j4574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4516 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4574 <|@
st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
locks: 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: a92 - i750 
locks: 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: a92 - 
locks: a92 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - a92 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6244 
expectedValue: j4571 
newValue: j4515 
stateAfter: ?2179 
=== Succesors ===
next: v4578 
=== Usages ===
v4575 j4581 
=== Predecessor ===
v4572 >@ <|@
instruction <@ValueCompareAndSwap|@org.graalvm.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v6244 expectedValue: j4571 newValue: j4515 stateAfter: ?2179 #next: v4578  <|@  <|@
f <@~|@floating>@ <|@
tid v4575 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4571 
y: j4574 
=== Succesors ===
=== Usages ===
v4578 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j4571 y: j4574  <|@  <|@
f <@*|@fixed>@ <|@
tid v4578 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v4575 
=== Succesors ===
trueSuccessor: v4577 
falseSuccessor: v4576 
=== Usages ===
=== Predecessor ===
j4574 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4575 #trueSuccessor: v4577 #falseSuccessor: v4576  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B35" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4577 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4579 
=== Usages ===
=== Predecessor ===
v4578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4579  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4579 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
object: a4042 
=== Succesors ===
next: v4615 
=== Usages ===
=== Predecessor ===
v4577 >@ <|@
instruction <@AcquiredCASLock|@org.graalvm.compiler.hotspot.nodes.AcquiredCASLockNode>@ object: a4042 #next: v4615  <|@  <|@
f <@*|@fixed>@ <|@
tid v4615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4613 
=== Predecessor ===
v4579 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4580 
=== Usages ===
=== Predecessor ===
v4578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4580  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4580 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: rsp
stamp: i64
=== Inputs ===
=== Succesors ===
next: v4584 
=== Usages ===
j4581 
=== Predecessor ===
v4576 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v4584  <|@  <|@
f <@~|@floating>@ <|@
tid j4581 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$68/1668473261@10b940da
stamp: i64
=== Inputs ===
x: j4574 
y: j4580 
=== Succesors ===
=== Usages ===
v4602 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j4574 y: j4580  <|@  <|@
f <@~|@floating>@ <|@
tid j4601 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4089
stableDimension: 0
stamp: i64 [-4089] ⇊fffffffffffff007 ⇈fffffffffffff007
stampKind: i64
value: long[-4089|0xfffffffffffff007]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4602 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
x: j4581 
y: j4601 
=== Succesors ===
=== Usages ===
v4584 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j4581 y: j4601  <|@  <|@
f <@*|@fixed>@ <|@
tid v4584 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v4602 
=== Succesors ===
trueSuccessor: v4583 
falseSuccessor: v4582 
=== Usages ===
=== Predecessor ===
j4580 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4602 #trueSuccessor: v4583 #falseSuccessor: v4582  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4609 
=== Usages ===
=== Predecessor ===
v4584 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4609  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4609 <|@
st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
locks: 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: a92 - i750 
locks: 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: a92 - 
locks: a92 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - a92 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6243 
value: j4022 
stateAfter: ?2179 
lastLocationAccess: - 
=== Succesors ===
next: v4616 
=== Usages ===
=== Predecessor ===
v4583 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6243 value: j4022 stateAfter: ?2179 lastLocationAccess: - #next: v4616  <|@  <|@
f <@*|@fixed>@ <|@
tid v4616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4613 
=== Predecessor ===
v4609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4516611986926701044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4582 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4587 
=== Usages ===
=== Predecessor ===
v4584 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4587  <|@  <|@
f <@*|@fixed>@ <|@
tid v4587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4586 
=== Predecessor ===
v4582 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4610 
=== Usages ===
=== Predecessor ===
v4559 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4610 <|@
st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
locks: 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: a92 - i750 
locks: 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: a92 - 
locks: a92 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - a92 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6243 
value: j4515 
stateAfter: ?2179 
lastLocationAccess: - 
=== Succesors ===
next: j4611 
=== Usages ===
=== Predecessor ===
v4558 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6243 value: j4515 stateAfter: ?2179 lastLocationAccess: - #next: j4611  <|@  <|@
f <@~|@floating>@ <|@
tid v6245 <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: j4606 
index: - 
=== Succesors ===
=== Usages ===
i4566 j4611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4606 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4611 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_owner
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6245 
=== Succesors ===
next: v4564 
=== Usages ===
v4561 
=== Predecessor ===
v4610 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6245 #next: v4564  <|@  <|@
f <@~|@floating>@ <|@
tid v4561 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4611 
y: j4022 
=== Succesors ===
=== Usages ===
v4564 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j4611 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v4564 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v4561 
=== Succesors ===
trueSuccessor: v4563 
falseSuccessor: v4562 
=== Usages ===
=== Predecessor ===
j4611 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4561 #trueSuccessor: v4563 #falseSuccessor: v4562  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4565 
=== Usages ===
=== Predecessor ===
v4564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4565  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4565 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: i4566 
=== Usages ===
i4566 
=== Predecessor ===
v4563 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: i4566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4566 <|@
st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
locks: 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: a92 - i750 
locks: 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: a92 - 
locks: a92 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - a92 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ObjectMonitor::_owner
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6245 
expectedValue: j4022 
newValue: j4565 
stateAfter: ?2179 
=== Succesors ===
next: v4570 
=== Usages ===
v4567 
=== Predecessor ===
j4565 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v6245 expectedValue: j4022 newValue: j4565 stateAfter: ?2179 #next: v4570  <|@  <|@
f <@~|@floating>@ <|@
tid v4567 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4566 
y: i90 
=== Succesors ===
=== Usages ===
v4570 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4566 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v4570 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v4567 
=== Succesors ===
trueSuccessor: v4568 
falseSuccessor: v4569 
=== Usages ===
=== Predecessor ===
i4566 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4567 #trueSuccessor: v4568 #falseSuccessor: v4569  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4530952148194186286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4585 
=== Usages ===
=== Predecessor ===
v4570 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4585  <|@  <|@
f <@*|@fixed>@ <|@
tid v4585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4586 
=== Predecessor ===
v4568 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4569 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4614 
=== Usages ===
=== Predecessor ===
v4570 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4614  <|@  <|@
f <@*|@fixed>@ <|@
tid v4614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4613 
=== Predecessor ===
v4569 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4531489317381612709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4562 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4604 
=== Usages ===
=== Predecessor ===
v4564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4604  <|@  <|@
f <@*|@fixed>@ <|@
tid v4604 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4586 
=== Predecessor ===
v4562 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B28" "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4585 v4587 v4604 
=== Succesors ===
next: v4588 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4585 v4587 v4604 #next: v4588  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4588 <|@
st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
locks: 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: a92 - i750 
locks: 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: a92 - 
locks: a92 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - a92 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorenter(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: void
=== Inputs ===
stateAfter: ?2179 
stateDuring: ?2179 
arguments: a4042 j4515 
=== Succesors ===
next: v4617 
=== Usages ===
=== Predecessor ===
v4586 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?2179 stateDuring: ?2179 arguments: a4042 j4515 #next: v4617  <|@  <|@
f <@*|@fixed>@ <|@
tid v4617 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4613 
=== Predecessor ===
v4588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B25" "B27" "B34" "B10" "B16" "B20" "B19" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4614 v4615 v4616 v4617 v4618 v4619 v4620 v4621 
=== Succesors ===
next: v4046 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4614 v4615 v4616 v4617 v4618 v4619 v4620 v4621 #next: v4046  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4046 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: i2191 
=== Usages ===
=== Predecessor ===
v4613 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i2191  <|@  <|@
f <@~|@floating>@ <|@
tid i2525 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 35
stableDimension: 0
stamp: i32 [35] ⇊0000000000000023 ⇈0000000000000023
stampKind: i32
value: int[35|0x23]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3520 v4270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v3520 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@5dc4b896
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a4042 i2525 
=== Succesors ===
=== Usages ===
i2191 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a4042 i2525  <|@  <|@
tid ?709 <|@
d <@d|@=== Debug Properties ===
bci: 234
code: ResolvedJavaMethodBytecode<StringOp.cont(StringBuffer)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 163
stackSize: 0
=== Inputs ===
outerFrameState: ?89 
values: - a92 
virtualObjectMappings: ?251 
=== Succesors ===
=== Usages ===
?1297 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?89 values: - a92 virtualObjectMappings: ?251  <|@  <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
eliminated: false
lockDepth: 0
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
?715 ?1329 ?1297 ?1313 ?728 
=== Predecessor ===
- >@ <|@
instruction <@MonitorId|@org.graalvm.compiler.nodes.java.MonitorIdNode>@  <|@  <|@
tid ?1297 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<StringBuffer.append(String)>
duringCall: true
localsSize: 2
locksSize: 1
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?709 
values: a92 - a92 
monitorIds: v698 
=== Succesors ===
=== Usages ===
?2199 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?709 values: a92 - a92 monitorIds: v698  <|@  <|@
f <@~|@floating>@ <|@
tid a13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: "b"
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object[String:"b"]
=== Inputs ===
=== Succesors ===
=== Usages ===
?715 ?2249 ?728 ?2224 ?2199 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?2199 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?1297 
values: a92 a13 i750 
=== Succesors ===
=== Usages ===
?2192 ?2196 ?4058 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1297 values: a92 a13 i750  <|@  <|@
tid ?2531 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a92 
materializedValue: a4042 
=== Succesors ===
=== Usages ===
?2192 ?2196 ?1325 ?4058 ?4060 ?2242 ?728 ?715 ?2217 ?2221 ?2560 ?2567 ?4059 ?2246 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a92 materializedValue: a4042  <|@  <|@
tid ?4058 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?2199 
values: - - a92 a4281 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
i2191 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2199 values: - - a92 a4281 virtualObjectMappings: ?2531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2191 <|@
d <@d|@=== Debug Properties ===
bci: 17
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3520 
stateDuring: ?4058 
=== Succesors ===
next: v4156 
=== Usages ===
?2192 v4635 i3969 j5034 i4628 v4669 v4203 a4650 i4272 i2209 i4266 v4196 v4270 
=== Predecessor ===
v4046 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3520 stateDuring: ?4058 #next: v4156  <|@  <|@
tid ?2192 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?2199 
values: - - a92 a4281 i2191 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
a4650 v4162 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2199 values: - - a92 a4281 i2191 virtualObjectMappings: ?2531  <|@  <|@
f <@~|@floating>@ <|@
tid v4196 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2191 
y: i90 
=== Succesors ===
=== Usages ===
v4156 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2191 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v4156 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v4196 
=== Succesors ===
trueSuccessor: v4155 
falseSuccessor: v4151 
=== Usages ===
=== Predecessor ===
i2191 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4196 #trueSuccessor: v4155 #falseSuccessor: v4151  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4162 
=== Usages ===
=== Predecessor ===
v4156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4162  <|@  <|@
f <@*|@fixed>@ <|@
tid v4162 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?2192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4155 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4630 
=== Usages ===
=== Predecessor ===
v4156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4630 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j4666 
=== Usages ===
v6246 v6247 
=== Predecessor ===
v4151 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j4666  <|@  <|@
f <@~|@floating>@ <|@
tid v6246 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j4630 
index: - 
=== Succesors ===
=== Usages ===
j4666 v4668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4630 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4666 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6246 
=== Succesors ===
next: j4667 
=== Usages ===
j4634 v6248 v6249 a4649 v6254 v6250 v6251 v6252 v6253 
=== Predecessor ===
j4630 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6246 #next: j4667  <|@  <|@
f <@~|@floating>@ <|@
tid v6247 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j4630 
index: - 
=== Succesors ===
=== Usages ===
j4667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4630 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4667 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6247 
=== Succesors ===
next: v4638 
=== Usages ===
v4639 
=== Predecessor ===
j4666 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6247 #next: v4638  <|@  <|@
f <@~|@floating>@ <|@
tid i4418 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4818 v4635 v4698 v4758 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4635 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2191 
y: i4418 
=== Succesors ===
=== Usages ===
v4638 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2191 y: i4418  <|@  <|@
f <@~|@floating>@ <|@
tid i4441 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i4840 i4657 i4720 i4780 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4411 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i4812 i4629 i4692 i4752 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v4638 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v4635 
=== Succesors ===
trueSuccessor: v4637 
falseSuccessor: v4636 
=== Usages ===
=== Predecessor ===
j4667 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4635 #trueSuccessor: v4637 #falseSuccessor: v4636  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4637 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4645 
=== Usages ===
=== Predecessor ===
v4638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4645  <|@  <|@
f <@~|@floating>@ <|@
tid i4628 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$11/1514064396@6c95a661
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i2191 
y: i750 
=== Succesors ===
=== Usages ===
i4657 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2191 y: i750  <|@  <|@
f <@~|@floating>@ <|@
tid i4657 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i4628 
y: i4441 
=== Succesors ===
=== Usages ===
i4629 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4628 y: i4441  <|@  <|@
f <@~|@floating>@ <|@
tid i4629 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$94/978859646@9756628
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i4657 
y: i4411 
=== Succesors ===
=== Usages ===
j4633 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i4657 y: i4411  <|@  <|@
f <@~|@floating>@ <|@
tid j4633 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i4629 
=== Succesors ===
=== Usages ===
j4634 v6250 v6251 v6252 v6253 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i4629  <|@  <|@
f <@~|@floating>@ <|@
tid j4634 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j4633 
y: j4666 
=== Succesors ===
=== Usages ===
v4639 v4668 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4633 y: j4666  <|@  <|@
f <@~|@floating>@ <|@
tid v4639 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4667 
y: j4634 
=== Succesors ===
=== Usages ===
v4645 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j4667 y: j4634  <|@  <|@
f <@*|@fixed>@ <|@
tid v4645 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v4639 
=== Succesors ===
trueSuccessor: v4644 
falseSuccessor: v4643 
=== Usages ===
=== Predecessor ===
v4637 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4639 #trueSuccessor: v4644 #falseSuccessor: v4643  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4642 
=== Usages ===
=== Predecessor ===
v4645 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4642  <|@  <|@
f <@*|@fixed>@ <|@
tid v4642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4641 
=== Predecessor ===
v4644 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4668 
=== Usages ===
=== Predecessor ===
v4645 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4668 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6246 
value: j4634 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4659 
=== Usages ===
=== Predecessor ===
v4643 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6246 value: j4634 stateAfter: - lastLocationAccess: - #next: v4659  <|@  <|@
f <@~|@floating>@ <|@
tid v6250 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j4633 
index: j4666 
=== Succesors ===
=== Usages ===
v4659 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4633 index: j4666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6250 
=== Succesors ===
next: v4661 
=== Usages ===
=== Predecessor ===
v4668 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6250 #next: v4661  <|@  <|@
f <@~|@floating>@ <|@
tid v6251 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j4633 
index: j4666 
=== Succesors ===
=== Usages ===
v4661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4633 index: j4666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4661 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6251 
=== Succesors ===
next: v4663 
=== Usages ===
=== Predecessor ===
v4659 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6251 #next: v4663  <|@  <|@
f <@~|@floating>@ <|@
tid v6252 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j4633 
index: j4666 
=== Succesors ===
=== Usages ===
v4663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4633 index: j4666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6252 
=== Succesors ===
next: v4665 
=== Usages ===
=== Predecessor ===
v4661 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6252 #next: v4665  <|@  <|@
f <@~|@floating>@ <|@
tid v6253 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j4633 
index: j4666 
=== Succesors ===
=== Usages ===
v4665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4633 index: j4666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6253 
=== Succesors ===
next: v4669 
=== Usages ===
=== Predecessor ===
v4663 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6253 #next: v4669  <|@  <|@
f <@~|@floating>@ <|@
tid v6248 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j4666 
index: - 
=== Succesors ===
=== Usages ===
v4669 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4666 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4669 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6248 
value: i2191 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4670 
=== Usages ===
=== Predecessor ===
v4665 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6248 value: i2191 stateAfter: - lastLocationAccess: - #next: v4670  <|@  <|@
f <@~|@floating>@ <|@
tid v6249 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4666 
index: - 
=== Succesors ===
=== Usages ===
v4670 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4666 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4670 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6249 
value: j4395 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4673 
=== Usages ===
=== Predecessor ===
v4669 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6249 value: j4395 stateAfter: - lastLocationAccess: - #next: v4673  <|@  <|@
f <@~|@floating>@ <|@
tid v6254 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j4666 
index: - 
=== Succesors ===
=== Usages ===
v4673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4666 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4673 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6254 
value: v4986 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4648 
=== Usages ===
=== Predecessor ===
v4670 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6254 value: v4986 stateAfter: - lastLocationAccess: - #next: v4648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4648 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a4649 
=== Usages ===
=== Predecessor ===
v4673 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a4649  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4649 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j4666 
=== Succesors ===
next: v4651 
=== Usages ===
a4654 
=== Predecessor ===
v4648 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j4666 #next: v4651  <|@  <|@
f <@*|@fixed>@ <|@
tid v4651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4652 
=== Predecessor ===
a4649 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4640 
=== Usages ===
=== Predecessor ===
v4638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4640  <|@  <|@
f <@*|@fixed>@ <|@
tid v4640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4641 
=== Predecessor ===
v4636 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B39" 
    successors "B43" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4640 v4642 
=== Succesors ===
next: a4650 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4640 v4642 #next: a4650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4650 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2192 
arguments: v4394 i2191 i90 
=== Succesors ===
next: v4653 
=== Usages ===
a4654 
=== Predecessor ===
v4641 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2192 arguments: v4394 i2191 i90 #next: v4653  <|@  <|@
f <@*|@fixed>@ <|@
tid v4653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4652 
=== Predecessor ===
a4650 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a4654 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v4652 
values: a4649 a4650 
=== Succesors ===
=== Usages ===
v6313 a4285 v6223 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v4652 values: a4649 a4650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4651 v4653 
=== Succesors ===
next: v5725 
=== Usages ===
a4654 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4651 v4653 #next: v5725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v5201 
=== Usages ===
j5726 j5728 
=== Predecessor ===
v4652 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v5201  <|@  <|@
f <@~|@floating>@ <|@
tid v4270 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2191 
y: i2525 
=== Succesors ===
=== Usages ===
i4272 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2191 y: i2525  <|@  <|@
f <@~|@floating>@ <|@
tid i4272 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v4270 
trueValue: i2191 
falseValue: i2410 
=== Succesors ===
=== Usages ===
j5035 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v4270 trueValue: i2191 falseValue: i2410  <|@  <|@
f <@~|@floating>@ <|@
tid j5035 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i4272 
=== Succesors ===
=== Usages ===
j5783 v6313 j5039 v5198 v5585 j5769 j5774 j5777 j5780 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i4272  <|@  <|@
f <@~|@floating>@ <|@
tid v5198 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5035 
y: j4395 
=== Succesors ===
=== Usages ===
v5201 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5035 y: j4395  <|@  <|@
f <@~|@floating>@ <|@
tid j5655 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5656 j5707 j5783 j5834 j5896 j5947 j6009 j6060 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5651 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5652 j5704 j5780 j5831 j5893 j5944 j6006 j6057 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5619 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5620 j5680 j5752 j5807 j5865 j5920 j5978 j6033 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5647 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5648 j5701 j5777 j5828 j5890 j5941 j6003 j6054 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4402 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j6039 j5986 j5926 j5873 j5813 j5760 j5686 j5628 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5643 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5644 j5698 j5774 j5825 j5887 j5938 j6000 j6051 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2615 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5881 j5692 j5768 j5994 j5819 j5932 j5636 j6045 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5637 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5638 j5693 j5769 j5820 j5882 j5933 j5995 j6046 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5201 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v5198 
=== Succesors ===
trueSuccessor: v5199 
falseSuccessor: v5200 
=== Usages ===
=== Predecessor ===
v5725 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5198 #trueSuccessor: v5199 #falseSuccessor: v5200  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B62" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5217 
=== Usages ===
=== Predecessor ===
v5201 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5217  <|@  <|@
f <@*|@fixed>@ <|@
tid v5217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5218 
=== Predecessor ===
v5199 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5204 
=== Usages ===
=== Predecessor ===
v5201 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5204  <|@  <|@
f <@~|@floating>@ <|@
tid v6223 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a4654 
index: - 
=== Succesors ===
=== Usages ===
j5728 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4654 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j5728 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5725 
address: v6223 
=== Succesors ===
=== Usages ===
v6335 v6337 v6339 v6341 v6343 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5725 address: v6223  <|@  <|@
f <@~|@floating>@ <|@
tid v6218 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
j5726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j5726 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5725 
address: v6218 
=== Succesors ===
=== Usages ===
v6336 v6338 v6340 v6342 v6344 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5725 address: v6218  <|@  <|@
f <@~|@floating>@ <|@
tid j5769 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j5035 
y: j5637 
=== Succesors ===
=== Usages ===
v5770 v5772 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5035 y: j5637  <|@  <|@
f <@~|@floating>@ <|@
tid v5770 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5769 
y: j4022 
=== Succesors ===
=== Usages ===
v5204 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5769 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v5204 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v5770 
=== Succesors ===
trueSuccessor: v5202 
falseSuccessor: v5203 
=== Usages ===
=== Predecessor ===
v5200 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5770 #trueSuccessor: v5202 #falseSuccessor: v5203  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5213 
=== Usages ===
=== Predecessor ===
v5204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5213  <|@  <|@
f <@*|@fixed>@ <|@
tid v5213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5214 
=== Predecessor ===
v5202 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5205 
=== Usages ===
=== Predecessor ===
v5204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5205  <|@  <|@
f <@*|@fixed>@ <|@
tid v5205 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5206 
=== Predecessor ===
v5203 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B270" 
    successors "B49" "B270" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5761 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5206 
values: j4022 j5768 
=== Succesors ===
=== Usages ===
v6344 j5768 v6343 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5206 values: j4022 j5768  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5206 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v5205 
=== Succesors ===
next: v6160 
=== Usages ===
v6160 v5209 v5210 j5761 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v5205 #next: v6160  <|@  <|@
f <@~|@floating>@ <|@
tid v6344 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5726 
index: j5761 
=== Succesors ===
=== Usages ===
v6160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5726 index: j5761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6160 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5206 
address: v6344 
=== Succesors ===
next: v6118 
=== Usages ===
v6118 
=== Predecessor ===
v5206 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5206 address: v6344 #next: v6118  <|@  <|@
f <@~|@floating>@ <|@
tid v6343 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5728 
index: j5761 
=== Succesors ===
=== Usages ===
v6118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5728 index: j5761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6118 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6343 
value: v6160 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5212 
=== Usages ===
=== Predecessor ===
v6160 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6343 value: v6160 stateAfter: - lastLocationAccess: - #next: v5212  <|@  <|@
f <@~|@floating>@ <|@
tid j5768 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5761 
y: j2615 
=== Succesors ===
=== Usages ===
j5753 j5761 v5772 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5761 y: j2615  <|@  <|@
f <@~|@floating>@ <|@
tid v5772 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5769 
y: j5768 
=== Succesors ===
=== Usages ===
v5212 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5769 y: j5768  <|@  <|@
f <@*|@fixed>@ <|@
tid v5212 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5772 
=== Succesors ===
trueSuccessor: v5209 
falseSuccessor: v5211 
=== Usages ===
=== Predecessor ===
v6118 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5772 #trueSuccessor: v5209 #falseSuccessor: v5211  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v5206 
=== Succesors ===
next: v5215 
=== Usages ===
=== Predecessor ===
v5212 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v5206 #next: v5215  <|@  <|@
f <@*|@fixed>@ <|@
tid v5215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5214 
=== Predecessor ===
v5209 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5753 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5214 
values: j4022 j5768 
=== Succesors ===
=== Usages ===
v6342 j5760 j5745 v5775 v6341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5214 values: j4022 j5768  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5213 v5215 
=== Succesors ===
next: v5236 
=== Usages ===
j5753 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5213 v5215 #next: v5236  <|@  <|@
f <@~|@floating>@ <|@
tid j5774 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j5035 
y: j5643 
=== Succesors ===
=== Usages ===
v5775 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5035 y: j5643  <|@  <|@
f <@~|@floating>@ <|@
tid v5775 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5774 
y: j5753 
=== Succesors ===
=== Usages ===
v5236 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5774 y: j5753  <|@  <|@
f <@*|@fixed>@ <|@
tid v5236 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5775 
=== Succesors ===
trueSuccessor: v5235 
falseSuccessor: v5234 
=== Usages ===
=== Predecessor ===
v5214 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5775 #trueSuccessor: v5235 #falseSuccessor: v5234  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5235 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5239 
=== Usages ===
=== Predecessor ===
v5236 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5239  <|@  <|@
f <@*|@fixed>@ <|@
tid v5239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5225 
=== Predecessor ===
v5235 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5234 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6161 
=== Usages ===
v6161 
=== Predecessor ===
v5236 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6161  <|@  <|@
f <@~|@floating>@ <|@
tid v6342 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5726 
index: j5753 
=== Succesors ===
=== Usages ===
v6161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5726 index: j5753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6161 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5234 
address: v6342 
=== Succesors ===
next: v6116 
=== Usages ===
v6116 
=== Predecessor ===
v5234 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5234 address: v6342 #next: v6116  <|@  <|@
f <@~|@floating>@ <|@
tid v6341 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5728 
index: j5753 
=== Succesors ===
=== Usages ===
v6116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5728 index: j5753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6116 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6341 
value: v6161 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5224 
=== Usages ===
=== Predecessor ===
v6161 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6341 value: v6161 stateAfter: - lastLocationAccess: - #next: v5224  <|@  <|@
f <@~|@floating>@ <|@
tid j5760 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5753 
y: j4402 
=== Succesors ===
=== Usages ===
j5745 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5753 y: j4402  <|@  <|@
f <@*|@fixed>@ <|@
tid v5224 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5225 
=== Predecessor ===
v6116 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5745 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5225 
values: j5760 j5753 
=== Succesors ===
=== Usages ===
v6340 j5752 j5737 v5778 v6339 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5225 values: j5760 j5753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5225 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5224 v5239 
=== Succesors ===
next: v5242 
=== Usages ===
j5745 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5224 v5239 #next: v5242  <|@  <|@
f <@~|@floating>@ <|@
tid j5777 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j5035 
y: j5647 
=== Succesors ===
=== Usages ===
v5778 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5035 y: j5647  <|@  <|@
f <@~|@floating>@ <|@
tid v5778 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5777 
y: j5745 
=== Succesors ===
=== Usages ===
v5242 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5777 y: j5745  <|@  <|@
f <@*|@fixed>@ <|@
tid v5242 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5778 
=== Succesors ===
trueSuccessor: v5241 
falseSuccessor: v5240 
=== Usages ===
=== Predecessor ===
v5225 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5778 #trueSuccessor: v5241 #falseSuccessor: v5240  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5245 
=== Usages ===
=== Predecessor ===
v5242 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5245  <|@  <|@
f <@*|@fixed>@ <|@
tid v5245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5228 
=== Predecessor ===
v5241 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6162 
=== Usages ===
v6162 
=== Predecessor ===
v5242 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6162  <|@  <|@
f <@~|@floating>@ <|@
tid v6340 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5726 
index: j5745 
=== Succesors ===
=== Usages ===
v6162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5726 index: j5745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6162 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5240 
address: v6340 
=== Succesors ===
next: v6114 
=== Usages ===
v6114 
=== Predecessor ===
v5240 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5240 address: v6340 #next: v6114  <|@  <|@
f <@~|@floating>@ <|@
tid v6339 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5728 
index: j5745 
=== Succesors ===
=== Usages ===
v6114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5728 index: j5745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6114 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6339 
value: v6162 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5227 
=== Usages ===
=== Predecessor ===
v6162 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6339 value: v6162 stateAfter: - lastLocationAccess: - #next: v5227  <|@  <|@
f <@~|@floating>@ <|@
tid j5752 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5745 
y: j5619 
=== Succesors ===
=== Usages ===
j5737 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5745 y: j5619  <|@  <|@
f <@*|@fixed>@ <|@
tid v5227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5228 
=== Predecessor ===
v6114 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5737 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5228 
values: j5752 j5745 
=== Succesors ===
=== Usages ===
v6338 j5744 j5729 v5781 v6337 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5228 values: j5752 j5745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5227 v5245 
=== Succesors ===
next: v5248 
=== Usages ===
j5737 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5227 v5245 #next: v5248  <|@  <|@
f <@~|@floating>@ <|@
tid j5780 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j5035 
y: j5651 
=== Succesors ===
=== Usages ===
v5781 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5035 y: j5651  <|@  <|@
f <@~|@floating>@ <|@
tid v5781 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5780 
y: j5737 
=== Succesors ===
=== Usages ===
v5248 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5780 y: j5737  <|@  <|@
f <@*|@fixed>@ <|@
tid v5248 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5781 
=== Succesors ===
trueSuccessor: v5247 
falseSuccessor: v5246 
=== Usages ===
=== Predecessor ===
v5228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5781 #trueSuccessor: v5247 #falseSuccessor: v5246  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5251 
=== Usages ===
=== Predecessor ===
v5248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5251  <|@  <|@
f <@*|@fixed>@ <|@
tid v5251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5231 
=== Predecessor ===
v5247 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6163 
=== Usages ===
v6163 
=== Predecessor ===
v5248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6163  <|@  <|@
f <@~|@floating>@ <|@
tid v6338 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5726 
index: j5737 
=== Succesors ===
=== Usages ===
v6163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5726 index: j5737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6163 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5246 
address: v6338 
=== Succesors ===
next: v6112 
=== Usages ===
v6112 
=== Predecessor ===
v5246 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5246 address: v6338 #next: v6112  <|@  <|@
f <@~|@floating>@ <|@
tid v6337 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5728 
index: j5737 
=== Succesors ===
=== Usages ===
v6112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5728 index: j5737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6112 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6337 
value: v6163 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5230 
=== Usages ===
=== Predecessor ===
v6163 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6337 value: v6163 stateAfter: - lastLocationAccess: - #next: v5230  <|@  <|@
f <@~|@floating>@ <|@
tid j5744 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5737 
y: j4598 
=== Succesors ===
=== Usages ===
j5729 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5737 y: j4598  <|@  <|@
f <@*|@fixed>@ <|@
tid v5230 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5231 
=== Predecessor ===
v6112 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5729 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5231 
values: j5744 j5737 
=== Succesors ===
=== Usages ===
v6336 v5784 v6335 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5231 values: j5744 j5737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5230 v5251 
=== Succesors ===
next: v5254 
=== Usages ===
j5729 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5230 v5251 #next: v5254  <|@  <|@
f <@~|@floating>@ <|@
tid j5783 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j5035 
y: j5655 
=== Succesors ===
=== Usages ===
v5784 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5035 y: j5655  <|@  <|@
f <@~|@floating>@ <|@
tid v5784 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5783 
y: j5729 
=== Succesors ===
=== Usages ===
v5254 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5783 y: j5729  <|@  <|@
f <@*|@fixed>@ <|@
tid v5254 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5784 
=== Succesors ===
trueSuccessor: v5253 
falseSuccessor: v5252 
=== Usages ===
=== Predecessor ===
v5231 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5784 #trueSuccessor: v5253 #falseSuccessor: v5252  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5257 
=== Usages ===
=== Predecessor ===
v5254 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5257  <|@  <|@
f <@*|@fixed>@ <|@
tid v5257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5218 
=== Predecessor ===
v5253 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5252 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i6164 
=== Usages ===
i6164 
=== Predecessor ===
v5254 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6164  <|@  <|@
f <@~|@floating>@ <|@
tid v6336 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5726 
index: j5729 
=== Succesors ===
=== Usages ===
i6164 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5726 index: j5729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6164 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v5252 
address: v6336 
=== Succesors ===
next: v6110 
=== Usages ===
v6110 
=== Predecessor ===
v5252 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5252 address: v6336 #next: v6110  <|@  <|@
f <@~|@floating>@ <|@
tid v6335 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5728 
index: j5729 
=== Succesors ===
=== Usages ===
v6110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5728 index: j5729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6110 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6335 
value: i6164 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5233 
=== Usages ===
=== Predecessor ===
i6164 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6335 value: i6164 stateAfter: - lastLocationAccess: - #next: v5233  <|@  <|@
f <@*|@fixed>@ <|@
tid v5233 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5218 
=== Predecessor ===
v6110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B44" "B61" "B60" 
    successors "B63" "B81" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5218 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5217 v5233 v5257 
=== Succesors ===
next: v5787 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5217 v5233 v5257 #next: v5787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5787 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v5264 
=== Usages ===
j5789 
=== Predecessor ===
v5218 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v5264  <|@  <|@
f <@~|@floating>@ <|@
tid j5034 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2191 
=== Succesors ===
=== Usages ===
j5039 v5585 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2191  <|@  <|@
f <@~|@floating>@ <|@
tid v5585 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5035 
y: j5034 
=== Succesors ===
=== Usages ===
v5264 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5035 y: j5034  <|@  <|@
f <@~|@floating>@ <|@
tid i6155 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6097 v6119 v6134 v6149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6157 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v6101 v6121 v6136 v6151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6158 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v6103 v6122 v6137 v6152 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5264 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v5585 
=== Succesors ===
trueSuccessor: v5263 
falseSuccessor: v5262 
=== Usages ===
=== Predecessor ===
v5787 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5585 #trueSuccessor: v5263 #falseSuccessor: v5262  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5267 
=== Usages ===
=== Predecessor ===
v5264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5267  <|@  <|@
f <@~|@floating>@ <|@
tid v6313 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a4654 
index: j5035 
=== Succesors ===
=== Usages ===
j5789 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4654 index: j5035  <|@  <|@
f <@~|@floating>@ <|@
tid j5789 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5787 
address: v6313 
=== Succesors ===
=== Usages ===
v6345 v6346 v6347 v6348 v6349 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5787 address: v6313  <|@  <|@
f <@~|@floating>@ <|@
tid j5039 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$68/1668473261@10b940da
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j5034 
y: j5035 
=== Succesors ===
=== Usages ===
j5834 j5820 j5825 j5828 j5831 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j5034 y: j5035  <|@  <|@
f <@~|@floating>@ <|@
tid j5820 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j5039 
y: j5637 
=== Succesors ===
=== Usages ===
v5821 v5823 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5039 y: j5637  <|@  <|@
f <@~|@floating>@ <|@
tid v5821 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5820 
y: j4022 
=== Succesors ===
=== Usages ===
v5267 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5820 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v5267 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v5821 
=== Succesors ===
trueSuccessor: v5265 
falseSuccessor: v5266 
=== Usages ===
=== Predecessor ===
v5263 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5821 #trueSuccessor: v5265 #falseSuccessor: v5266  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5265 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5276 
=== Usages ===
=== Predecessor ===
v5267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5276  <|@  <|@
f <@*|@fixed>@ <|@
tid v5276 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5277 
=== Predecessor ===
v5265 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5268 
=== Usages ===
=== Predecessor ===
v5267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5268  <|@  <|@
f <@*|@fixed>@ <|@
tid v5268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5269 
=== Predecessor ===
v5266 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B80" 
    successors "B67" "B80" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5814 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5269 
values: j4022 j5819 
=== Succesors ===
=== Usages ===
v6349 j5819 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5269 values: j4022 j5819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5269 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v5268 
=== Succesors ===
next: v6123 
=== Usages ===
j5814 v5272 v5273 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v5268 #next: v6123  <|@  <|@
f <@~|@floating>@ <|@
tid v6349 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5789 
index: j5814 
=== Succesors ===
=== Usages ===
v6123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5789 index: j5814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6123 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6349 
value: v6154 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5275 
=== Usages ===
=== Predecessor ===
v5269 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6349 value: v6154 stateAfter: - lastLocationAccess: - #next: v5275  <|@  <|@
f <@~|@floating>@ <|@
tid j5819 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5814 
y: j2615 
=== Succesors ===
=== Usages ===
j5808 j5814 v5823 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5814 y: j2615  <|@  <|@
f <@~|@floating>@ <|@
tid v5823 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5820 
y: j5819 
=== Succesors ===
=== Usages ===
v5275 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5820 y: j5819  <|@  <|@
f <@*|@fixed>@ <|@
tid v5275 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5823 
=== Succesors ===
trueSuccessor: v5272 
falseSuccessor: v5274 
=== Usages ===
=== Predecessor ===
v6123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5823 #trueSuccessor: v5272 #falseSuccessor: v5274  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v5269 
=== Succesors ===
next: v5278 
=== Usages ===
=== Predecessor ===
v5275 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v5269 #next: v5278  <|@  <|@
f <@*|@fixed>@ <|@
tid v5278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5277 
=== Predecessor ===
v5272 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" "B67" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5808 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5277 
values: j4022 j5819 
=== Succesors ===
=== Usages ===
v6348 j5813 j5802 v5826 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5277 values: j4022 j5819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5276 v5278 
=== Succesors ===
next: v5299 
=== Usages ===
j5808 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5276 v5278 #next: v5299  <|@  <|@
f <@~|@floating>@ <|@
tid j5825 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j5039 
y: j5643 
=== Succesors ===
=== Usages ===
v5826 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5039 y: j5643  <|@  <|@
f <@~|@floating>@ <|@
tid v5826 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5825 
y: j5808 
=== Succesors ===
=== Usages ===
v5299 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5825 y: j5808  <|@  <|@
f <@*|@fixed>@ <|@
tid v5299 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5826 
=== Succesors ===
trueSuccessor: v5298 
falseSuccessor: v5297 
=== Usages ===
=== Predecessor ===
v5277 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5826 #trueSuccessor: v5298 #falseSuccessor: v5297  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5302 
=== Usages ===
=== Predecessor ===
v5299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5302  <|@  <|@
f <@*|@fixed>@ <|@
tid v5302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5288 
=== Predecessor ===
v5298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6122 
=== Usages ===
=== Predecessor ===
v5299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6122  <|@  <|@
f <@~|@floating>@ <|@
tid v6348 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5789 
index: j5808 
=== Succesors ===
=== Usages ===
v6122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5789 index: j5808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6122 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6348 
value: v6158 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5287 
=== Usages ===
=== Predecessor ===
v5297 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6348 value: v6158 stateAfter: - lastLocationAccess: - #next: v5287  <|@  <|@
f <@~|@floating>@ <|@
tid j5813 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5808 
y: j4402 
=== Succesors ===
=== Usages ===
j5802 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5808 y: j4402  <|@  <|@
f <@*|@fixed>@ <|@
tid v5287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5288 
=== Predecessor ===
v6122 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5802 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5288 
values: j5813 j5808 
=== Succesors ===
=== Usages ===
v6347 j5807 j5796 v5829 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5288 values: j5813 j5808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5287 v5302 
=== Succesors ===
next: v5305 
=== Usages ===
j5802 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5287 v5302 #next: v5305  <|@  <|@
f <@~|@floating>@ <|@
tid j5828 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j5039 
y: j5647 
=== Succesors ===
=== Usages ===
v5829 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5039 y: j5647  <|@  <|@
f <@~|@floating>@ <|@
tid v5829 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5828 
y: j5802 
=== Succesors ===
=== Usages ===
v5305 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5828 y: j5802  <|@  <|@
f <@*|@fixed>@ <|@
tid v5305 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5829 
=== Succesors ===
trueSuccessor: v5304 
falseSuccessor: v5303 
=== Usages ===
=== Predecessor ===
v5288 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5829 #trueSuccessor: v5304 #falseSuccessor: v5303  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5308 
=== Usages ===
=== Predecessor ===
v5305 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5308  <|@  <|@
f <@*|@fixed>@ <|@
tid v5308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5291 
=== Predecessor ===
v5304 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6121 
=== Usages ===
=== Predecessor ===
v5305 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6121  <|@  <|@
f <@~|@floating>@ <|@
tid v6347 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5789 
index: j5802 
=== Succesors ===
=== Usages ===
v6121 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5789 index: j5802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6121 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6347 
value: v6157 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5290 
=== Usages ===
=== Predecessor ===
v5303 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6347 value: v6157 stateAfter: - lastLocationAccess: - #next: v5290  <|@  <|@
f <@~|@floating>@ <|@
tid j5807 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5802 
y: j5619 
=== Succesors ===
=== Usages ===
j5796 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5802 y: j5619  <|@  <|@
f <@*|@fixed>@ <|@
tid v5290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5291 
=== Predecessor ===
v6121 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5796 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5291 
values: j5807 j5802 
=== Succesors ===
=== Usages ===
v6346 j5801 j5790 v5832 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5291 values: j5807 j5802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5290 v5308 
=== Succesors ===
next: v5311 
=== Usages ===
j5796 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5290 v5308 #next: v5311  <|@  <|@
f <@~|@floating>@ <|@
tid j5831 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j5039 
y: j5651 
=== Succesors ===
=== Usages ===
v5832 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5039 y: j5651  <|@  <|@
f <@~|@floating>@ <|@
tid v5832 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5831 
y: j5796 
=== Succesors ===
=== Usages ===
v5311 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5831 y: j5796  <|@  <|@
f <@*|@fixed>@ <|@
tid v5311 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5832 
=== Succesors ===
trueSuccessor: v5310 
falseSuccessor: v5309 
=== Usages ===
=== Predecessor ===
v5291 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5832 #trueSuccessor: v5310 #falseSuccessor: v5309  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5314 
=== Usages ===
=== Predecessor ===
v5311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5314  <|@  <|@
f <@*|@fixed>@ <|@
tid v5314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5294 
=== Predecessor ===
v5310 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6120 
=== Usages ===
=== Predecessor ===
v5311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6120  <|@  <|@
f <@~|@floating>@ <|@
tid v6346 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5789 
index: j5796 
=== Succesors ===
=== Usages ===
v6120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5789 index: j5796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6120 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6346 
value: v6156 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5293 
=== Usages ===
=== Predecessor ===
v5309 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6346 value: v6156 stateAfter: - lastLocationAccess: - #next: v5293  <|@  <|@
f <@~|@floating>@ <|@
tid j5801 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5796 
y: j4598 
=== Succesors ===
=== Usages ===
j5790 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5796 y: j4598  <|@  <|@
f <@*|@fixed>@ <|@
tid v5293 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5294 
=== Predecessor ===
v6120 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5790 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5294 
values: j5801 j5796 
=== Succesors ===
=== Usages ===
v6345 v5835 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5294 values: j5801 j5796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5294 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5293 v5314 
=== Succesors ===
next: v5317 
=== Usages ===
j5790 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5293 v5314 #next: v5317  <|@  <|@
f <@~|@floating>@ <|@
tid j5834 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j5039 
y: j5655 
=== Succesors ===
=== Usages ===
v5835 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5039 y: j5655  <|@  <|@
f <@~|@floating>@ <|@
tid v5835 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5834 
y: j5790 
=== Succesors ===
=== Usages ===
v5317 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5834 y: j5790  <|@  <|@
f <@*|@fixed>@ <|@
tid v5317 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5835 
=== Succesors ===
trueSuccessor: v5316 
falseSuccessor: v5315 
=== Usages ===
=== Predecessor ===
v5294 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5835 #trueSuccessor: v5316 #falseSuccessor: v5315  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5320 
=== Usages ===
=== Predecessor ===
v5317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5320  <|@  <|@
f <@*|@fixed>@ <|@
tid v5320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5281 
=== Predecessor ===
v5316 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6119 
=== Usages ===
=== Predecessor ===
v5317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6119  <|@  <|@
f <@~|@floating>@ <|@
tid v6345 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5789 
index: j5790 
=== Succesors ===
=== Usages ===
v6119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5789 index: j5790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6119 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6345 
value: i6155 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5296 
=== Usages ===
=== Predecessor ===
v5315 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6345 value: i6155 stateAfter: - lastLocationAccess: - #next: v5296  <|@  <|@
f <@*|@fixed>@ <|@
tid v5296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5281 
=== Predecessor ===
v6119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B66" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5273 
=== Usages ===
=== Predecessor ===
v5275 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5273  <|@  <|@
f <@*|@fixed>@ <|@
tid v5273 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v5269 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5274 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v5269  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B82" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5280 
=== Usages ===
=== Predecessor ===
v5264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5280  <|@  <|@
f <@*|@fixed>@ <|@
tid v5280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5281 
=== Predecessor ===
v5262 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B79" "B78" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5280 v5296 v5320 
=== Succesors ===
next: a4285 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5280 v5296 v5320 #next: a4285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4285 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a4654 
=== Succesors ===
next: v3523 
=== Usages ===
?4059 a3521 v6208 v6219 v6214 ?2217 
=== Predecessor ===
v5281 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a4654 #next: v3523  <|@  <|@
f <@~|@floating>@ <|@
tid v6206 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a4042 
index: - 
=== Succesors ===
=== Usages ===
v3523 v3783 a6172 a6181 v3674 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4042 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a3521 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a4285 
=== Succesors ===
=== Usages ===
v3523 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3523 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6206 
value: a3521 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j4681 
=== Usages ===
=== Predecessor ===
a4285 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6206 value: a3521 stateAfter: - lastLocationAccess: - #next: j4681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4681 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4042 
=== Succesors ===
next: v4687 
=== Usages ===
j4683 
=== Predecessor ===
v3523 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4042 #next: v4687  <|@  <|@
f <@~|@floating>@ <|@
tid i4682 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j4683 j4745 j4805 j4865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4683 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$152/1924078416@7040fbbc
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j4681 
y: i4682 
=== Succesors ===
=== Usages ===
v6255 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j4681 y: i4682  <|@  <|@
f <@~|@floating>@ <|@
tid j4686 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4270112768
stableDimension: 0
stamp: i64 [4270112768] ⇊00000000fe84c000 ⇈00000000fe84c000
stampKind: i64
value: long[4270112768|0xfe84c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6255 v6265 v6275 v6285 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6255 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4683 
index: j4686 
=== Succesors ===
=== Usages ===
v4687 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4683 index: j4686  <|@  <|@
f <@~|@floating>@ <|@
tid i4688 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4687 v4748 v4808 v4868 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4687 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6255 
value: i4688 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i6165 
=== Usages ===
=== Predecessor ===
j4681 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6255 value: i4688 stateAfter: - lastLocationAccess: - #next: i6165  <|@  <|@
f <@~|@floating>@ <|@
tid v6207 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4042 
index: - 
=== Succesors ===
=== Usages ===
i6165 v3578 i6171 v3593 i6179 v3604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6165 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6207 
=== Succesors ===
next: v3540 
=== Usages ===
j3562 i1296 v3534 v3553 i4000 
=== Predecessor ===
v4687 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6207 #next: v3540  <|@  <|@
f <@~|@floating>@ <|@
tid v3534 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6165 
y: i90 
=== Succesors ===
=== Usages ===
v3540 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6165 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v3540 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3534 
=== Succesors ===
trueSuccessor: v3539 
falseSuccessor: v3535 
=== Usages ===
=== Predecessor ===
i6165 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3534 #trueSuccessor: v3539 #falseSuccessor: v3535  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B86" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3539 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3538 
=== Usages ===
=== Predecessor ===
v3540 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3538  <|@  <|@
f <@*|@fixed>@ <|@
tid v3538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3537 
=== Predecessor ===
v3539 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B87" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3535 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3557 
=== Usages ===
=== Predecessor ===
v3540 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3557  <|@  <|@
f <@~|@floating>@ <|@
tid i3838 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3973 i3965 i3969 i3961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3969 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32
=== Inputs ===
x: i2191 
y: i3838 
=== Succesors ===
=== Usages ===
v3755 v3553 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2191 y: i3838  <|@  <|@
f <@~|@floating>@ <|@
tid v3553 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3969 
y: i6165 
=== Succesors ===
=== Usages ===
v3557 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3969 y: i6165  <|@  <|@
f <@*|@fixed>@ <|@
tid v3557 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3553 
=== Succesors ===
trueSuccessor: v3556 
falseSuccessor: v3554 
=== Usages ===
=== Predecessor ===
v3535 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3553 #trueSuccessor: v3556 #falseSuccessor: v3554  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3555 
=== Usages ===
=== Predecessor ===
v3557 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3555  <|@  <|@
f <@*|@fixed>@ <|@
tid v3555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3537 
=== Predecessor ===
v3556 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B83" "B85" 
    successors 
    xhandlers
    flags 
    probability 4581393005893843005
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3537 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3538 v3555 
=== Succesors ===
next: v3558 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3538 v3555 #next: v3558  <|@  <|@
tid ?2196 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?2199 
values: - - 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
v3558 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2199 values: - - virtualObjectMappings: ?2531  <|@  <|@
f <@*|@fixed>@ <|@
tid v3558 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?2196 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3537 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2196  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B88" "B91" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3573 
=== Usages ===
=== Predecessor ===
v3557 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3573  <|@  <|@
f <@~|@floating>@ <|@
tid j3562 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i6165 
=== Succesors ===
=== Usages ===
v6208 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i6165  <|@  <|@
f <@~|@floating>@ <|@
tid v6208 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a4285 
index: j3562 
=== Succesors ===
=== Usages ===
v3573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4285 index: j3562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3573 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6208 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3578 
=== Usages ===
=== Predecessor ===
v3554 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6208 value: i3844 stateAfter: - lastLocationAccess: - #next: v3578  <|@  <|@
f <@~|@floating>@ <|@
tid i1296 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32
=== Inputs ===
x: i6165 
y: i750 
=== Succesors ===
=== Usages ===
v3578 v3755 i4062 j3764 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i6165 y: i750  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3578 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6207 
value: i1296 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3584 
=== Usages ===
=== Predecessor ===
v3573 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6207 value: i1296 stateAfter: - lastLocationAccess: - #next: v3584  <|@  <|@
f <@~|@floating>@ <|@
tid v6209 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a4042 
index: - 
=== Succesors ===
=== Usages ===
v3584 v3595 a6180 v3618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4042 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a3957 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3584 v3595 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3584 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: StringBuffer.toStringCache
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6209 
value: a3957 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2213 
=== Usages ===
=== Predecessor ===
v3578 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6209 value: a3957 stateAfter: - lastLocationAccess: - #next: v2213  <|@  <|@
f <@~|@floating>@ <|@
tid i4000 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32
=== Inputs ===
x: i6165 
y: i3999 
=== Succesors ===
=== Usages ===
v3780 i2209 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i6165 y: i3999  <|@  <|@
f <@~|@floating>@ <|@
tid i2209 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$68/1668473261@10b940da
stamp: i32
=== Inputs ===
x: i4000 
y: i2191 
=== Succesors ===
=== Usages ===
v2210 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i4000 y: i2191  <|@  <|@
f <@~|@floating>@ <|@
tid v2210 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2209 
y: i750 
=== Succesors ===
=== Usages ===
v2213 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2209 y: i750  <|@  <|@
tid ?722 <|@
d <@d|@=== Debug Properties ===
bci: 241
code: ResolvedJavaMethodBytecode<StringOp.cont(StringBuffer)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 164
stackSize: 0
=== Inputs ===
outerFrameState: ?89 
values: - a92 
virtualObjectMappings: ?251 
=== Succesors ===
=== Usages ===
?1313 ?715 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?89 values: - a92 virtualObjectMappings: ?251  <|@  <|@
tid ?1313 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<StringBuffer.append(String)>
duringCall: true
localsSize: 2
locksSize: 1
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?722 
values: a92 - a92 
monitorIds: v698 
=== Succesors ===
=== Usages ===
?2224 ?2231 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?722 values: a92 - a92 monitorIds: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v2213 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9446261558763105
=== Inputs ===
condition: v2210 
=== Succesors ===
trueSuccessor: v2211 
falseSuccessor: v2212 
=== Usages ===
=== Predecessor ===
v3584 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2210 #trueSuccessor: v2211 #falseSuccessor: v2212  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606514337675950731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2211 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3759 
=== Usages ===
=== Predecessor ===
v2213 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3759  <|@  <|@
f <@~|@floating>@ <|@
tid v3755 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3969 
y: i1296 
=== Succesors ===
=== Usages ===
v3759 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3969 y: i1296  <|@  <|@
f <@*|@fixed>@ <|@
tid v3759 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v3755 
=== Succesors ===
trueSuccessor: v3758 
falseSuccessor: v3756 
=== Usages ===
=== Predecessor ===
v2211 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3755 #trueSuccessor: v3758 #falseSuccessor: v3756  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3760 
=== Usages ===
=== Predecessor ===
v3759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3760  <|@  <|@
tid ?715 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<StringBuffer.append(String)>
duringCall: false
localsSize: 2
locksSize: 1
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?722 
values: a92 a13 a92 
monitorIds: v698 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
v3760 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?722 values: a92 a13 a92 monitorIds: v698 virtualObjectMappings: ?2531  <|@  <|@
f <@*|@fixed>@ <|@
tid v3760 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?715 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3758 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?715  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B144" 
    xhandlers
    flags 
    probability 4606514337675950731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3775 
=== Usages ===
=== Predecessor ===
v3759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3775  <|@  <|@
f <@~|@floating>@ <|@
tid j3764 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1296 
=== Succesors ===
=== Usages ===
v6214 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1296  <|@  <|@
f <@~|@floating>@ <|@
tid v6214 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a4285 
index: j3764 
=== Succesors ===
=== Usages ===
v3775 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4285 index: j3764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3775 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6214 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2561 
=== Usages ===
=== Predecessor ===
v3756 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6214 value: i3844 stateAfter: - lastLocationAccess: - #next: v2561  <|@  <|@
f <@*|@fixed>@ <|@
tid v2561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2559 
=== Predecessor ===
v3775 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2212 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i2216 
=== Usages ===
=== Predecessor ===
v2213 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2216  <|@  <|@
tid v3780 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6b25af7f
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a4042 i4000 
=== Succesors ===
=== Usages ===
i2216 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a4042 i4000  <|@  <|@
tid ?2224 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?1313 
values: a92 a13 i750 
=== Succesors ===
=== Usages ===
?2217 ?2221 ?4059 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1313 values: a92 a13 i750  <|@  <|@
tid ?4059 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?2224 
values: - - a92 a4285 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
i2216 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2224 values: - - a92 a4285 virtualObjectMappings: ?2531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2216 <|@
d <@d|@=== Debug Properties ===
bci: 17
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3780 
stateDuring: ?4059 
=== Succesors ===
next: v4195 
=== Usages ===
?2217 v4698 i3973 j5041 i4691 v4732 a4713 i4266 v4203 v4189 
=== Predecessor ===
v2212 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3780 stateDuring: ?4059 #next: v4195  <|@  <|@
tid ?2217 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?2224 
values: - - a92 a4285 i2216 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
a4713 v4201 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2224 values: - - a92 a4285 i2216 virtualObjectMappings: ?2531  <|@  <|@
f <@~|@floating>@ <|@
tid v4189 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2216 
y: i90 
=== Succesors ===
=== Usages ===
v4195 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2216 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v4195 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v4189 
=== Succesors ===
trueSuccessor: v4194 
falseSuccessor: v4190 
=== Usages ===
=== Predecessor ===
i2216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4189 #trueSuccessor: v4194 #falseSuccessor: v4190  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4201 
=== Usages ===
=== Predecessor ===
v4195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4201  <|@  <|@
f <@*|@fixed>@ <|@
tid v4201 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?2217 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4194 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2217  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B97" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4693 
=== Usages ===
=== Predecessor ===
v4195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4693  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4693 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j4729 
=== Usages ===
v6256 v6257 
=== Predecessor ===
v4190 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j4729  <|@  <|@
f <@~|@floating>@ <|@
tid v6256 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j4693 
index: - 
=== Succesors ===
=== Usages ===
j4729 v4731 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4693 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4729 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6256 
=== Succesors ===
next: j4730 
=== Usages ===
j4697 v6258 v6259 a4712 v6264 v6260 v6261 v6262 v6263 
=== Predecessor ===
j4693 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6256 #next: j4730  <|@  <|@
f <@~|@floating>@ <|@
tid v6257 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j4693 
index: - 
=== Succesors ===
=== Usages ===
j4730 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4693 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4730 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6257 
=== Succesors ===
next: v4701 
=== Usages ===
v4702 
=== Predecessor ===
j4729 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6257 #next: v4701  <|@  <|@
f <@~|@floating>@ <|@
tid v4698 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2216 
y: i4418 
=== Succesors ===
=== Usages ===
v4701 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2216 y: i4418  <|@  <|@
f <@*|@fixed>@ <|@
tid v4701 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v4698 
=== Succesors ===
trueSuccessor: v4700 
falseSuccessor: v4699 
=== Usages ===
=== Predecessor ===
j4730 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4698 #trueSuccessor: v4700 #falseSuccessor: v4699  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4587200086203916006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4708 
=== Usages ===
=== Predecessor ===
v4701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4708  <|@  <|@
f <@~|@floating>@ <|@
tid i4691 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$11/1514064396@6c95a661
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i2216 
y: i750 
=== Succesors ===
=== Usages ===
i4720 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2216 y: i750  <|@  <|@
f <@~|@floating>@ <|@
tid i4720 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i4691 
y: i4441 
=== Succesors ===
=== Usages ===
i4692 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4691 y: i4441  <|@  <|@
f <@~|@floating>@ <|@
tid i4692 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$94/978859646@9756628
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i4720 
y: i4411 
=== Succesors ===
=== Usages ===
j4696 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i4720 y: i4411  <|@  <|@
f <@~|@floating>@ <|@
tid j4696 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i4692 
=== Succesors ===
=== Usages ===
j4697 v6260 v6261 v6262 v6263 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i4692  <|@  <|@
f <@~|@floating>@ <|@
tid j4697 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j4696 
y: j4729 
=== Succesors ===
=== Usages ===
v4702 v4731 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4696 y: j4729  <|@  <|@
f <@~|@floating>@ <|@
tid v4702 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4730 
y: j4697 
=== Succesors ===
=== Usages ===
v4708 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j4730 y: j4697  <|@  <|@
f <@*|@fixed>@ <|@
tid v4708 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v4702 
=== Succesors ===
trueSuccessor: v4707 
falseSuccessor: v4706 
=== Usages ===
=== Predecessor ===
v4700 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4702 #trueSuccessor: v4707 #falseSuccessor: v4706  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B98" 
    xhandlers
    flags 
    probability 4557644352979169267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4707 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4705 
=== Usages ===
=== Predecessor ===
v4708 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4705  <|@  <|@
f <@*|@fixed>@ <|@
tid v4705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4704 
=== Predecessor ===
v4707 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B99" 
    xhandlers
    flags 
    probability 4587129693552234790
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4731 
=== Usages ===
=== Predecessor ===
v4708 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4731 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6256 
value: j4697 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4722 
=== Usages ===
=== Predecessor ===
v4706 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6256 value: j4697 stateAfter: - lastLocationAccess: - #next: v4722  <|@  <|@
f <@~|@floating>@ <|@
tid v6260 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j4696 
index: j4729 
=== Succesors ===
=== Usages ===
v4722 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4696 index: j4729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6260 
=== Succesors ===
next: v4724 
=== Usages ===
=== Predecessor ===
v4731 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6260 #next: v4724  <|@  <|@
f <@~|@floating>@ <|@
tid v6261 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j4696 
index: j4729 
=== Succesors ===
=== Usages ===
v4724 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4696 index: j4729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6261 
=== Succesors ===
next: v4726 
=== Usages ===
=== Predecessor ===
v4722 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6261 #next: v4726  <|@  <|@
f <@~|@floating>@ <|@
tid v6262 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j4696 
index: j4729 
=== Succesors ===
=== Usages ===
v4726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4696 index: j4729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6262 
=== Succesors ===
next: v4728 
=== Usages ===
=== Predecessor ===
v4724 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6262 #next: v4728  <|@  <|@
f <@~|@floating>@ <|@
tid v6263 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j4696 
index: j4729 
=== Succesors ===
=== Usages ===
v4728 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4696 index: j4729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4728 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6263 
=== Succesors ===
next: v4732 
=== Usages ===
=== Predecessor ===
v4726 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6263 #next: v4732  <|@  <|@
f <@~|@floating>@ <|@
tid v6258 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j4729 
index: - 
=== Succesors ===
=== Usages ===
v4732 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4729 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4732 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6258 
value: i2216 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4733 
=== Usages ===
=== Predecessor ===
v4728 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6258 value: i2216 stateAfter: - lastLocationAccess: - #next: v4733  <|@  <|@
f <@~|@floating>@ <|@
tid v6259 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4729 
index: - 
=== Succesors ===
=== Usages ===
v4733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4729 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4733 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6259 
value: j4395 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4736 
=== Usages ===
=== Predecessor ===
v4732 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6259 value: j4395 stateAfter: - lastLocationAccess: - #next: v4736  <|@  <|@
f <@~|@floating>@ <|@
tid v6264 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j4729 
index: - 
=== Succesors ===
=== Usages ===
v4736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4729 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4736 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6264 
value: v4986 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4711 
=== Usages ===
=== Predecessor ===
v4733 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6264 value: v4986 stateAfter: - lastLocationAccess: - #next: v4711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4711 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a4712 
=== Usages ===
=== Predecessor ===
v4736 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a4712  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4712 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j4729 
=== Succesors ===
next: v4714 
=== Usages ===
a4717 
=== Predecessor ===
v4711 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j4729 #next: v4714  <|@  <|@
f <@*|@fixed>@ <|@
tid v4714 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4715 
=== Predecessor ===
a4712 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B98" 
    xhandlers
    flags 
    probability 4572907146747568786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4703 
=== Usages ===
=== Predecessor ===
v4701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4703  <|@  <|@
f <@*|@fixed>@ <|@
tid v4703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4704 
=== Predecessor ===
v4699 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B95" 
    successors "B99" 
    xhandlers
    flags 
    probability 4573470287961018512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4703 v4705 
=== Succesors ===
next: a4713 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4703 v4705 #next: a4713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4713 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2217 
arguments: v4394 i2216 i90 
=== Succesors ===
next: v4716 
=== Usages ===
a4717 
=== Predecessor ===
v4704 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2217 arguments: v4394 i2216 i90 #next: v4716  <|@  <|@
f <@*|@fixed>@ <|@
tid v4716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4715 
=== Predecessor ===
a4713 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B96" "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a4717 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v4715 
values: a4712 a4713 
=== Succesors ===
=== Usages ===
v6314 a4289 v6224 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v4715 values: a4712 a4713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4715 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4714 v4716 
=== Succesors ===
next: v5838 
=== Usages ===
a4717 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4714 v4716 #next: v5838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v5327 
=== Usages ===
j5839 j5841 
=== Predecessor ===
v4715 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v5327  <|@  <|@
f <@~|@floating>@ <|@
tid v4203 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2191 
y: i2216 
=== Succesors ===
=== Usages ===
i4266 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2191 y: i2216  <|@  <|@
f <@~|@floating>@ <|@
tid i4266 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v4203 
trueValue: i2191 
falseValue: i2216 
=== Succesors ===
=== Usages ===
j5042 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v4203 trueValue: i2191 falseValue: i2216  <|@  <|@
f <@~|@floating>@ <|@
tid j5042 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i4266 
=== Succesors ===
=== Usages ===
j5896 v6314 j5046 v5324 v5587 j5882 j5887 j5890 j5893 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i4266  <|@  <|@
f <@~|@floating>@ <|@
tid v5324 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5042 
y: j4395 
=== Succesors ===
=== Usages ===
v5327 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5042 y: j4395  <|@  <|@
f <@*|@fixed>@ <|@
tid v5327 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v5324 
=== Succesors ===
trueSuccessor: v5325 
falseSuccessor: v5326 
=== Usages ===
=== Predecessor ===
v5838 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5324 #trueSuccessor: v5325 #falseSuccessor: v5326  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B118" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5343 
=== Usages ===
=== Predecessor ===
v5327 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5343  <|@  <|@
f <@*|@fixed>@ <|@
tid v5343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5344 
=== Predecessor ===
v5325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5330 
=== Usages ===
=== Predecessor ===
v5327 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5330  <|@  <|@
f <@~|@floating>@ <|@
tid v6224 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a4717 
index: - 
=== Succesors ===
=== Usages ===
j5841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4717 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j5841 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5838 
address: v6224 
=== Succesors ===
=== Usages ===
v6350 v6352 v6354 v6356 v6358 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5838 address: v6224  <|@  <|@
f <@~|@floating>@ <|@
tid v6219 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a4285 
index: - 
=== Succesors ===
=== Usages ===
j5839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4285 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j5839 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5838 
address: v6219 
=== Succesors ===
=== Usages ===
v6351 v6353 v6355 v6357 v6359 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5838 address: v6219  <|@  <|@
f <@~|@floating>@ <|@
tid j5882 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j5042 
y: j5637 
=== Succesors ===
=== Usages ===
v5883 v5885 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5042 y: j5637  <|@  <|@
f <@~|@floating>@ <|@
tid v5883 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5882 
y: j4022 
=== Succesors ===
=== Usages ===
v5330 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5882 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v5330 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v5883 
=== Succesors ===
trueSuccessor: v5328 
falseSuccessor: v5329 
=== Usages ===
=== Predecessor ===
v5326 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5883 #trueSuccessor: v5328 #falseSuccessor: v5329  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B106" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5339 
=== Usages ===
=== Predecessor ===
v5330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5339  <|@  <|@
f <@*|@fixed>@ <|@
tid v5339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5340 
=== Predecessor ===
v5328 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5331 
=== Usages ===
=== Predecessor ===
v5330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5331  <|@  <|@
f <@*|@fixed>@ <|@
tid v5331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5332 
=== Predecessor ===
v5329 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B269" 
    successors "B105" "B269" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4583478627150781240
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5874 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5332 
values: j4022 j5881 
=== Succesors ===
=== Usages ===
v6359 j5881 v6358 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5332 values: j4022 j5881  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5332 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v5331 
=== Succesors ===
next: v6166 
=== Usages ===
v6166 v5335 v5336 j5874 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v5331 #next: v6166  <|@  <|@
f <@~|@floating>@ <|@
tid v6359 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5839 
index: j5874 
=== Succesors ===
=== Usages ===
v6166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5839 index: j5874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6166 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5332 
address: v6359 
=== Succesors ===
next: v6133 
=== Usages ===
v6133 
=== Predecessor ===
v5332 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5332 address: v6359 #next: v6133  <|@  <|@
f <@~|@floating>@ <|@
tid v6358 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5841 
index: j5874 
=== Succesors ===
=== Usages ===
v6133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5841 index: j5874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6133 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6358 
value: v6166 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5338 
=== Usages ===
=== Predecessor ===
v6166 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6358 value: v6166 stateAfter: - lastLocationAccess: - #next: v5338  <|@  <|@
f <@~|@floating>@ <|@
tid j5881 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5874 
y: j2615 
=== Succesors ===
=== Usages ===
j5866 j5874 v5885 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5874 y: j2615  <|@  <|@
f <@~|@floating>@ <|@
tid v5885 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5882 
y: j5881 
=== Succesors ===
=== Usages ===
v5338 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5882 y: j5881  <|@  <|@
f <@*|@fixed>@ <|@
tid v5338 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5885 
=== Succesors ===
trueSuccessor: v5335 
falseSuccessor: v5337 
=== Usages ===
=== Predecessor ===
v6133 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5885 #trueSuccessor: v5335 #falseSuccessor: v5337  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v5332 
=== Succesors ===
next: v5341 
=== Usages ===
=== Predecessor ===
v5338 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v5332 #next: v5341  <|@  <|@
f <@*|@fixed>@ <|@
tid v5341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5340 
=== Predecessor ===
v5335 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B102" "B105" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5866 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5340 
values: j4022 j5881 
=== Succesors ===
=== Usages ===
v6357 j5873 j5858 v5888 v6356 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5340 values: j4022 j5881  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5339 v5341 
=== Succesors ===
next: v5362 
=== Usages ===
j5866 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5339 v5341 #next: v5362  <|@  <|@
f <@~|@floating>@ <|@
tid j5887 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j5042 
y: j5643 
=== Succesors ===
=== Usages ===
v5888 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5042 y: j5643  <|@  <|@
f <@~|@floating>@ <|@
tid v5888 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5887 
y: j5866 
=== Succesors ===
=== Usages ===
v5362 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5887 y: j5866  <|@  <|@
f <@*|@fixed>@ <|@
tid v5362 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5888 
=== Succesors ===
trueSuccessor: v5361 
falseSuccessor: v5360 
=== Usages ===
=== Predecessor ===
v5340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5888 #trueSuccessor: v5361 #falseSuccessor: v5360  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5365 
=== Usages ===
=== Predecessor ===
v5362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5365  <|@  <|@
f <@*|@fixed>@ <|@
tid v5365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5351 
=== Predecessor ===
v5361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6167 
=== Usages ===
v6167 
=== Predecessor ===
v5362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6167  <|@  <|@
f <@~|@floating>@ <|@
tid v6357 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5839 
index: j5866 
=== Succesors ===
=== Usages ===
v6167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5839 index: j5866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6167 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5360 
address: v6357 
=== Succesors ===
next: v6131 
=== Usages ===
v6131 
=== Predecessor ===
v5360 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5360 address: v6357 #next: v6131  <|@  <|@
f <@~|@floating>@ <|@
tid v6356 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5841 
index: j5866 
=== Succesors ===
=== Usages ===
v6131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5841 index: j5866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6356 
value: v6167 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5350 
=== Usages ===
=== Predecessor ===
v6167 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6356 value: v6167 stateAfter: - lastLocationAccess: - #next: v5350  <|@  <|@
f <@~|@floating>@ <|@
tid j5873 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5866 
y: j4402 
=== Succesors ===
=== Usages ===
j5858 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5866 y: j4402  <|@  <|@
f <@*|@fixed>@ <|@
tid v5350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5351 
=== Predecessor ===
v6131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" "B107" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5858 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5351 
values: j5873 j5866 
=== Succesors ===
=== Usages ===
v6355 j5865 j5850 v5891 v6354 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5351 values: j5873 j5866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5350 v5365 
=== Succesors ===
next: v5368 
=== Usages ===
j5858 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5350 v5365 #next: v5368  <|@  <|@
f <@~|@floating>@ <|@
tid j5890 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j5042 
y: j5647 
=== Succesors ===
=== Usages ===
v5891 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5042 y: j5647  <|@  <|@
f <@~|@floating>@ <|@
tid v5891 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5890 
y: j5858 
=== Succesors ===
=== Usages ===
v5368 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5890 y: j5858  <|@  <|@
f <@*|@fixed>@ <|@
tid v5368 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5891 
=== Succesors ===
trueSuccessor: v5367 
falseSuccessor: v5366 
=== Usages ===
=== Predecessor ===
v5351 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5891 #trueSuccessor: v5367 #falseSuccessor: v5366  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5367 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5371 
=== Usages ===
=== Predecessor ===
v5368 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5371  <|@  <|@
f <@*|@fixed>@ <|@
tid v5371 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5354 
=== Predecessor ===
v5367 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6168 
=== Usages ===
v6168 
=== Predecessor ===
v5368 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6168  <|@  <|@
f <@~|@floating>@ <|@
tid v6355 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5839 
index: j5858 
=== Succesors ===
=== Usages ===
v6168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5839 index: j5858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6168 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5366 
address: v6355 
=== Succesors ===
next: v6129 
=== Usages ===
v6129 
=== Predecessor ===
v5366 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5366 address: v6355 #next: v6129  <|@  <|@
f <@~|@floating>@ <|@
tid v6354 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5841 
index: j5858 
=== Succesors ===
=== Usages ===
v6129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5841 index: j5858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6354 
value: v6168 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5353 
=== Usages ===
=== Predecessor ===
v6168 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6354 value: v6168 stateAfter: - lastLocationAccess: - #next: v5353  <|@  <|@
f <@~|@floating>@ <|@
tid j5865 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5858 
y: j5619 
=== Succesors ===
=== Usages ===
j5850 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5858 y: j5619  <|@  <|@
f <@*|@fixed>@ <|@
tid v5353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5354 
=== Predecessor ===
v6129 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5850 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5354 
values: j5865 j5858 
=== Succesors ===
=== Usages ===
v6353 j5857 j5842 v5894 v6352 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5354 values: j5865 j5858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5353 v5371 
=== Succesors ===
next: v5374 
=== Usages ===
j5850 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5353 v5371 #next: v5374  <|@  <|@
f <@~|@floating>@ <|@
tid j5893 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j5042 
y: j5651 
=== Succesors ===
=== Usages ===
v5894 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5042 y: j5651  <|@  <|@
f <@~|@floating>@ <|@
tid v5894 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5893 
y: j5850 
=== Succesors ===
=== Usages ===
v5374 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5893 y: j5850  <|@  <|@
f <@*|@fixed>@ <|@
tid v5374 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5894 
=== Succesors ===
trueSuccessor: v5373 
falseSuccessor: v5372 
=== Usages ===
=== Predecessor ===
v5354 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5894 #trueSuccessor: v5373 #falseSuccessor: v5372  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5373 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5377 
=== Usages ===
=== Predecessor ===
v5374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5377  <|@  <|@
f <@*|@fixed>@ <|@
tid v5377 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5357 
=== Predecessor ===
v5373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6169 
=== Usages ===
v6169 
=== Predecessor ===
v5374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6169  <|@  <|@
f <@~|@floating>@ <|@
tid v6353 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5839 
index: j5850 
=== Succesors ===
=== Usages ===
v6169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5839 index: j5850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6169 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5372 
address: v6353 
=== Succesors ===
next: v6127 
=== Usages ===
v6127 
=== Predecessor ===
v5372 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5372 address: v6353 #next: v6127  <|@  <|@
f <@~|@floating>@ <|@
tid v6352 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5841 
index: j5850 
=== Succesors ===
=== Usages ===
v6127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5841 index: j5850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6127 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6352 
value: v6169 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5356 
=== Usages ===
=== Predecessor ===
v6169 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6352 value: v6169 stateAfter: - lastLocationAccess: - #next: v5356  <|@  <|@
f <@~|@floating>@ <|@
tid j5857 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5850 
y: j4598 
=== Succesors ===
=== Usages ===
j5842 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5850 y: j4598  <|@  <|@
f <@*|@fixed>@ <|@
tid v5356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5357 
=== Predecessor ===
v6127 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5842 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5357 
values: j5857 j5850 
=== Succesors ===
=== Usages ===
v6351 v5897 v6350 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5357 values: j5857 j5850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5356 v5377 
=== Succesors ===
next: v5380 
=== Usages ===
j5842 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5356 v5377 #next: v5380  <|@  <|@
f <@~|@floating>@ <|@
tid j5896 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j5042 
y: j5655 
=== Succesors ===
=== Usages ===
v5897 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5042 y: j5655  <|@  <|@
f <@~|@floating>@ <|@
tid v5897 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5896 
y: j5842 
=== Succesors ===
=== Usages ===
v5380 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5896 y: j5842  <|@  <|@
f <@*|@fixed>@ <|@
tid v5380 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5897 
=== Succesors ===
trueSuccessor: v5379 
falseSuccessor: v5378 
=== Usages ===
=== Predecessor ===
v5357 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5897 #trueSuccessor: v5379 #falseSuccessor: v5378  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5383 
=== Usages ===
=== Predecessor ===
v5380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5383  <|@  <|@
f <@*|@fixed>@ <|@
tid v5383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5344 
=== Predecessor ===
v5379 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i6170 
=== Usages ===
i6170 
=== Predecessor ===
v5380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6170  <|@  <|@
f <@~|@floating>@ <|@
tid v6351 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5839 
index: j5842 
=== Succesors ===
=== Usages ===
i6170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5839 index: j5842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6170 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v5378 
address: v6351 
=== Succesors ===
next: v6125 
=== Usages ===
v6125 
=== Predecessor ===
v5378 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5378 address: v6351 #next: v6125  <|@  <|@
f <@~|@floating>@ <|@
tid v6350 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5841 
index: j5842 
=== Succesors ===
=== Usages ===
v6125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5841 index: j5842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6125 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6350 
value: i6170 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5359 
=== Usages ===
=== Predecessor ===
i6170 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6350 value: i6170 stateAfter: - lastLocationAccess: - #next: v5359  <|@  <|@
f <@*|@fixed>@ <|@
tid v5359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5344 
=== Predecessor ===
v6125 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B100" "B117" "B116" 
    successors "B119" "B137" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5343 v5359 v5383 
=== Succesors ===
next: v5900 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5343 v5359 v5383 #next: v5900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5900 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v5390 
=== Usages ===
j5902 
=== Predecessor ===
v5344 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v5390  <|@  <|@
f <@~|@floating>@ <|@
tid j5041 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2216 
=== Succesors ===
=== Usages ===
j5046 v5587 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2216  <|@  <|@
f <@~|@floating>@ <|@
tid v5587 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5042 
y: j5041 
=== Succesors ===
=== Usages ===
v5390 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5042 y: j5041  <|@  <|@
f <@*|@fixed>@ <|@
tid v5390 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v5587 
=== Succesors ===
trueSuccessor: v5389 
falseSuccessor: v5388 
=== Usages ===
=== Predecessor ===
v5900 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5587 #trueSuccessor: v5389 #falseSuccessor: v5388  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5393 
=== Usages ===
=== Predecessor ===
v5390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5393  <|@  <|@
f <@~|@floating>@ <|@
tid v6314 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a4717 
index: j5042 
=== Succesors ===
=== Usages ===
j5902 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4717 index: j5042  <|@  <|@
f <@~|@floating>@ <|@
tid j5902 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5900 
address: v6314 
=== Succesors ===
=== Usages ===
v6360 v6361 v6362 v6363 v6364 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5900 address: v6314  <|@  <|@
f <@~|@floating>@ <|@
tid j5046 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$68/1668473261@10b940da
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j5041 
y: j5042 
=== Succesors ===
=== Usages ===
j5947 j5933 j5938 j5941 j5944 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j5041 y: j5042  <|@  <|@
f <@~|@floating>@ <|@
tid j5933 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j5046 
y: j5637 
=== Succesors ===
=== Usages ===
v5934 v5936 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5046 y: j5637  <|@  <|@
f <@~|@floating>@ <|@
tid v5934 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5933 
y: j4022 
=== Succesors ===
=== Usages ===
v5393 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5933 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v5393 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v5934 
=== Succesors ===
trueSuccessor: v5391 
falseSuccessor: v5392 
=== Usages ===
=== Predecessor ===
v5389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5934 #trueSuccessor: v5391 #falseSuccessor: v5392  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B124" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5402 
=== Usages ===
=== Predecessor ===
v5393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5402  <|@  <|@
f <@*|@fixed>@ <|@
tid v5402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5403 
=== Predecessor ===
v5391 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5394 
=== Usages ===
=== Predecessor ===
v5393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5394  <|@  <|@
f <@*|@fixed>@ <|@
tid v5394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5395 
=== Predecessor ===
v5392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B136" 
    successors "B123" "B136" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4583478627150781240
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5927 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5395 
values: j4022 j5932 
=== Succesors ===
=== Usages ===
v6364 j5932 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5395 values: j4022 j5932  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5395 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v5394 
=== Succesors ===
next: v6138 
=== Usages ===
j5927 v5398 v5399 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v5394 #next: v6138  <|@  <|@
f <@~|@floating>@ <|@
tid v6364 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5902 
index: j5927 
=== Succesors ===
=== Usages ===
v6138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5902 index: j5927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6138 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6364 
value: v6154 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5401 
=== Usages ===
=== Predecessor ===
v5395 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6364 value: v6154 stateAfter: - lastLocationAccess: - #next: v5401  <|@  <|@
f <@~|@floating>@ <|@
tid j5932 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5927 
y: j2615 
=== Succesors ===
=== Usages ===
j5921 j5927 v5936 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5927 y: j2615  <|@  <|@
f <@~|@floating>@ <|@
tid v5936 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5933 
y: j5932 
=== Succesors ===
=== Usages ===
v5401 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5933 y: j5932  <|@  <|@
f <@*|@fixed>@ <|@
tid v5401 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5936 
=== Succesors ===
trueSuccessor: v5398 
falseSuccessor: v5400 
=== Usages ===
=== Predecessor ===
v6138 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5936 #trueSuccessor: v5398 #falseSuccessor: v5400  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v5395 
=== Succesors ===
next: v5404 
=== Usages ===
=== Predecessor ===
v5401 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v5395 #next: v5404  <|@  <|@
f <@*|@fixed>@ <|@
tid v5404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5403 
=== Predecessor ===
v5398 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B120" "B123" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5921 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5403 
values: j4022 j5932 
=== Succesors ===
=== Usages ===
v6363 j5926 j5915 v5939 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5403 values: j4022 j5932  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5402 v5404 
=== Succesors ===
next: v5425 
=== Usages ===
j5921 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5402 v5404 #next: v5425  <|@  <|@
f <@~|@floating>@ <|@
tid j5938 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j5046 
y: j5643 
=== Succesors ===
=== Usages ===
v5939 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5046 y: j5643  <|@  <|@
f <@~|@floating>@ <|@
tid v5939 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5938 
y: j5921 
=== Succesors ===
=== Usages ===
v5425 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5938 y: j5921  <|@  <|@
f <@*|@fixed>@ <|@
tid v5425 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5939 
=== Succesors ===
trueSuccessor: v5424 
falseSuccessor: v5423 
=== Usages ===
=== Predecessor ===
v5403 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5939 #trueSuccessor: v5424 #falseSuccessor: v5423  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5428 
=== Usages ===
=== Predecessor ===
v5425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5428  <|@  <|@
f <@*|@fixed>@ <|@
tid v5428 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5414 
=== Predecessor ===
v5424 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6137 
=== Usages ===
=== Predecessor ===
v5425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6137  <|@  <|@
f <@~|@floating>@ <|@
tid v6363 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5902 
index: j5921 
=== Succesors ===
=== Usages ===
v6137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5902 index: j5921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6363 
value: v6158 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5413 
=== Usages ===
=== Predecessor ===
v5423 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6363 value: v6158 stateAfter: - lastLocationAccess: - #next: v5413  <|@  <|@
f <@~|@floating>@ <|@
tid j5926 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5921 
y: j4402 
=== Succesors ===
=== Usages ===
j5915 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5921 y: j4402  <|@  <|@
f <@*|@fixed>@ <|@
tid v5413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5414 
=== Predecessor ===
v6137 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5915 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5414 
values: j5926 j5921 
=== Succesors ===
=== Usages ===
v6362 j5920 j5909 v5942 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5414 values: j5926 j5921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5413 v5428 
=== Succesors ===
next: v5431 
=== Usages ===
j5915 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5413 v5428 #next: v5431  <|@  <|@
f <@~|@floating>@ <|@
tid j5941 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j5046 
y: j5647 
=== Succesors ===
=== Usages ===
v5942 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5046 y: j5647  <|@  <|@
f <@~|@floating>@ <|@
tid v5942 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5941 
y: j5915 
=== Succesors ===
=== Usages ===
v5431 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5941 y: j5915  <|@  <|@
f <@*|@fixed>@ <|@
tid v5431 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5942 
=== Succesors ===
trueSuccessor: v5430 
falseSuccessor: v5429 
=== Usages ===
=== Predecessor ===
v5414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5942 #trueSuccessor: v5430 #falseSuccessor: v5429  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5434 
=== Usages ===
=== Predecessor ===
v5431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5434  <|@  <|@
f <@*|@fixed>@ <|@
tid v5434 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5417 
=== Predecessor ===
v5430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6136 
=== Usages ===
=== Predecessor ===
v5431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6136  <|@  <|@
f <@~|@floating>@ <|@
tid v6362 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5902 
index: j5915 
=== Succesors ===
=== Usages ===
v6136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5902 index: j5915  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6136 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6362 
value: v6157 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5416 
=== Usages ===
=== Predecessor ===
v5429 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6362 value: v6157 stateAfter: - lastLocationAccess: - #next: v5416  <|@  <|@
f <@~|@floating>@ <|@
tid j5920 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5915 
y: j5619 
=== Succesors ===
=== Usages ===
j5909 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5915 y: j5619  <|@  <|@
f <@*|@fixed>@ <|@
tid v5416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5417 
=== Predecessor ===
v6136 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5909 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5417 
values: j5920 j5915 
=== Succesors ===
=== Usages ===
v6361 j5914 j5903 v5945 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5417 values: j5920 j5915  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5416 v5434 
=== Succesors ===
next: v5437 
=== Usages ===
j5909 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5416 v5434 #next: v5437  <|@  <|@
f <@~|@floating>@ <|@
tid j5944 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j5046 
y: j5651 
=== Succesors ===
=== Usages ===
v5945 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5046 y: j5651  <|@  <|@
f <@~|@floating>@ <|@
tid v5945 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5944 
y: j5909 
=== Succesors ===
=== Usages ===
v5437 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5944 y: j5909  <|@  <|@
f <@*|@fixed>@ <|@
tid v5437 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5945 
=== Succesors ===
trueSuccessor: v5436 
falseSuccessor: v5435 
=== Usages ===
=== Predecessor ===
v5417 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5945 #trueSuccessor: v5436 #falseSuccessor: v5435  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5440 
=== Usages ===
=== Predecessor ===
v5437 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5440  <|@  <|@
f <@*|@fixed>@ <|@
tid v5440 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5420 
=== Predecessor ===
v5436 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6135 
=== Usages ===
=== Predecessor ===
v5437 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6135  <|@  <|@
f <@~|@floating>@ <|@
tid v6361 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5902 
index: j5909 
=== Succesors ===
=== Usages ===
v6135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5902 index: j5909  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6135 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6361 
value: v6156 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5419 
=== Usages ===
=== Predecessor ===
v5435 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6361 value: v6156 stateAfter: - lastLocationAccess: - #next: v5419  <|@  <|@
f <@~|@floating>@ <|@
tid j5914 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5909 
y: j4598 
=== Succesors ===
=== Usages ===
j5903 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5909 y: j4598  <|@  <|@
f <@*|@fixed>@ <|@
tid v5419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5420 
=== Predecessor ===
v6135 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B131" 
    successors "B134" "B135" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5903 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5420 
values: j5914 j5909 
=== Succesors ===
=== Usages ===
v6360 v5948 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5420 values: j5914 j5909  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5419 v5440 
=== Succesors ===
next: v5443 
=== Usages ===
j5903 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5419 v5440 #next: v5443  <|@  <|@
f <@~|@floating>@ <|@
tid j5947 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j5046 
y: j5655 
=== Succesors ===
=== Usages ===
v5948 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5046 y: j5655  <|@  <|@
f <@~|@floating>@ <|@
tid v5948 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5947 
y: j5903 
=== Succesors ===
=== Usages ===
v5443 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5947 y: j5903  <|@  <|@
f <@*|@fixed>@ <|@
tid v5443 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5948 
=== Succesors ===
trueSuccessor: v5442 
falseSuccessor: v5441 
=== Usages ===
=== Predecessor ===
v5420 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5948 #trueSuccessor: v5442 #falseSuccessor: v5441  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B138" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5446 
=== Usages ===
=== Predecessor ===
v5443 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5446  <|@  <|@
f <@*|@fixed>@ <|@
tid v5446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5407 
=== Predecessor ===
v5442 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B138" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6134 
=== Usages ===
=== Predecessor ===
v5443 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6134  <|@  <|@
f <@~|@floating>@ <|@
tid v6360 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5902 
index: j5903 
=== Succesors ===
=== Usages ===
v6134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5902 index: j5903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6360 
value: i6155 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5422 
=== Usages ===
=== Predecessor ===
v5441 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6360 value: i6155 stateAfter: - lastLocationAccess: - #next: v5422  <|@  <|@
f <@*|@fixed>@ <|@
tid v5422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5407 
=== Predecessor ===
v6134 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B122" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5399 
=== Usages ===
=== Predecessor ===
v5401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5399  <|@  <|@
f <@*|@fixed>@ <|@
tid v5399 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v5395 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5400 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v5395  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B138" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5406 
=== Usages ===
=== Predecessor ===
v5390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5406  <|@  <|@
f <@*|@fixed>@ <|@
tid v5406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5407 
=== Predecessor ===
v5388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" "B135" "B134" 
    successors "B139" "B140" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5406 v5422 v5446 
=== Succesors ===
next: a4289 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5406 v5422 v5446 #next: a4289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4289 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a4717 
=== Succesors ===
next: v3783 
=== Usages ===
v6215 a3782 
=== Predecessor ===
v5407 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a4717 #next: v3783  <|@  <|@
f <@~|@floating>@ <|@
tid a3782 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a4289 
=== Succesors ===
=== Usages ===
v3783 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3783 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6206 
value: a3782 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j4744 
=== Usages ===
=== Predecessor ===
a4289 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6206 value: a3782 stateAfter: - lastLocationAccess: - #next: j4744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4744 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4042 
=== Succesors ===
next: v4748 
=== Usages ===
j4745 
=== Predecessor ===
v3783 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4042 #next: v4748  <|@  <|@
f <@~|@floating>@ <|@
tid j4745 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$152/1924078416@7040fbbc
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j4744 
y: i4682 
=== Succesors ===
=== Usages ===
v6265 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j4744 y: i4682  <|@  <|@
f <@~|@floating>@ <|@
tid v6265 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4745 
index: j4686 
=== Succesors ===
=== Usages ===
v4748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4745 index: j4686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4748 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6265 
value: i4688 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i6171 
=== Usages ===
=== Predecessor ===
j4744 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6265 value: i4688 stateAfter: - lastLocationAccess: - #next: i6171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6171 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6207 
=== Succesors ===
next: v3799 
=== Usages ===
j3821 i4062 v3793 v3812 
=== Predecessor ===
v4748 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6207 #next: v3799  <|@  <|@
f <@~|@floating>@ <|@
tid v3793 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6171 
y: i90 
=== Succesors ===
=== Usages ===
v3799 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6171 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v3799 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3793 
=== Succesors ===
trueSuccessor: v3798 
falseSuccessor: v3794 
=== Usages ===
=== Predecessor ===
i6171 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3793 #trueSuccessor: v3798 #falseSuccessor: v3794  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B142" 
    xhandlers
    flags 
    probability 4558144922946680135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3798 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3797 
=== Usages ===
=== Predecessor ===
v3799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3797  <|@  <|@
f <@*|@fixed>@ <|@
tid v3797 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3796 
=== Predecessor ===
v3798 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" "B143" 
    xhandlers
    flags 
    probability 4587904012720728163
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3794 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3816 
=== Usages ===
=== Predecessor ===
v3799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3816  <|@  <|@
f <@~|@floating>@ <|@
tid i3973 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32
=== Inputs ===
x: i2216 
y: i3838 
=== Succesors ===
=== Usages ===
v3812 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2216 y: i3838  <|@  <|@
f <@~|@floating>@ <|@
tid v3812 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3973 
y: i6171 
=== Succesors ===
=== Usages ===
v3816 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3973 y: i6171  <|@  <|@
f <@*|@fixed>@ <|@
tid v3816 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3812 
=== Succesors ===
trueSuccessor: v3815 
falseSuccessor: v3813 
=== Usages ===
=== Predecessor ===
v3794 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3812 #trueSuccessor: v3815 #falseSuccessor: v3813  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" 
    xhandlers
    flags 
    probability 4558094865949929048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3815 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3814 
=== Usages ===
=== Predecessor ===
v3816 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3814  <|@  <|@
f <@*|@fixed>@ <|@
tid v3814 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3796 
=== Predecessor ===
v3815 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B139" "B141" 
    successors 
    xhandlers
    flags 
    probability 4562623494075675088
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3796 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3797 v3814 
=== Succesors ===
next: v3817 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3797 v3814 #next: v3817  <|@  <|@
tid ?2221 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?2224 
values: - - 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
v3817 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2224 values: - - virtualObjectMappings: ?2531  <|@  <|@
f <@*|@fixed>@ <|@
tid v3817 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?2221 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3796 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2221  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B144" 
    xhandlers
    flags 
    probability 4587826580803878826
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3813 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3832 
=== Usages ===
=== Predecessor ===
v3816 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3832  <|@  <|@
f <@~|@floating>@ <|@
tid j3821 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i6171 
=== Succesors ===
=== Usages ===
v6215 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i6171  <|@  <|@
f <@~|@floating>@ <|@
tid v6215 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a4289 
index: j3821 
=== Succesors ===
=== Usages ===
v3832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4289 index: j3821  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3832 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6215 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2558 
=== Usages ===
=== Predecessor ===
v3813 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6215 value: i3844 stateAfter: - lastLocationAccess: - #next: v2558  <|@  <|@
f <@*|@fixed>@ <|@
tid v2558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2559 
=== Predecessor ===
v3832 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" "B90" 
    successors "B145" "B148" 
    xhandlers
    flags 
    probability 4606993447661456006
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i4062 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v2559 
values: i6171 i1296 
=== Succesors ===
=== Usages ===
i4002 i1312 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2559 values: i6171 i1296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2558 v2561 
=== Succesors ===
next: a6172 
=== Usages ===
i4062 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2558 v2561 #next: a6172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6172 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v6206 
=== Succesors ===
next: i6173 
=== Usages ===
a3598 v6220 v6210 
=== Predecessor ===
v2559 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6206 #next: i6173  <|@  <|@
tid ?2231 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?1313 
values: a92 - i750 
=== Succesors ===
=== Usages ===
?2560 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1313 values: a92 - i750  <|@  <|@
tid ?2560 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<String.getChars(int, int, char[], int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 827
stackSize: 0
=== Inputs ===
outerFrameState: ?2231 
values: - - - - - 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
i6173 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2231 values: - - - - - virtualObjectMappings: ?2531  <|@  <|@
f <@~|@floating>@ <|@
tid v6210 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6172 
=== Succesors ===
=== Usages ===
i6173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6173 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2560 
guard: - 
address: v6210 
=== Succesors ===
next: v3593 
=== Usages ===
i2234 i4267 i3961 v4242 
=== Predecessor ===
a6172 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2560 guard: - address: v6210 #next: v3593  <|@  <|@
f <@~|@floating>@ <|@
tid i1312 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32
=== Inputs ===
x: i4062 
y: i750 
=== Succesors ===
=== Usages ===
v3593 v3646 i4065 j3655 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4062 y: i750  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3593 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6207 
value: i1312 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3595 
=== Usages ===
=== Predecessor ===
i6173 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6207 value: i1312 stateAfter: - lastLocationAccess: - #next: v3595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3595 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: StringBuffer.toStringCache
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6209 
value: a3957 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2238 
=== Usages ===
=== Predecessor ===
v3593 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6209 value: a3957 stateAfter: - lastLocationAccess: - #next: v2238  <|@  <|@
f <@~|@floating>@ <|@
tid i4002 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32
=== Inputs ===
x: i4062 
y: i3999 
=== Succesors ===
=== Usages ===
v3671 i2234 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4062 y: i3999  <|@  <|@
f <@~|@floating>@ <|@
tid i2234 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$68/1668473261@10b940da
stamp: i32
=== Inputs ===
x: i4002 
y: i6173 
=== Succesors ===
=== Usages ===
v2235 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i4002 y: i6173  <|@  <|@
f <@~|@floating>@ <|@
tid v2235 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2234 
y: i750 
=== Succesors ===
=== Usages ===
v2238 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2234 y: i750  <|@  <|@
f <@~|@floating>@ <|@
tid a3598 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a6172 
=== Succesors ===
=== Usages ===
v6212 ?4060 ?2242 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6172  <|@  <|@
tid ?735 <|@
d <@d|@=== Debug Properties ===
bci: 248
code: ResolvedJavaMethodBytecode<StringOp.cont(StringBuffer)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 165
stackSize: 0
=== Inputs ===
outerFrameState: ?89 
values: - a92 
virtualObjectMappings: ?251 
=== Succesors ===
=== Usages ===
?1329 ?728 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?89 values: - a92 virtualObjectMappings: ?251  <|@  <|@
tid ?1329 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<StringBuffer.append(String)>
duringCall: true
localsSize: 2
locksSize: 1
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?735 
values: a92 - a92 
monitorIds: v698 
=== Succesors ===
=== Usages ===
?2249 ?2256 ?1325 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?735 values: a92 - a92 monitorIds: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v2238 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9446261558763105
=== Inputs ===
condition: v2235 
=== Succesors ===
trueSuccessor: v2236 
falseSuccessor: v2237 
=== Usages ===
=== Predecessor ===
v3595 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2235 #trueSuccessor: v2236 #falseSuccessor: v2237  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4606505148472303541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3650 
=== Usages ===
=== Predecessor ===
v2238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3650  <|@  <|@
f <@~|@floating>@ <|@
tid i3961 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i6173 
y: i3838 
=== Succesors ===
=== Usages ===
v3646 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i6173 y: i3838  <|@  <|@
f <@~|@floating>@ <|@
tid v3646 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3961 
y: i1312 
=== Succesors ===
=== Usages ===
v3650 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3961 y: i1312  <|@  <|@
f <@*|@fixed>@ <|@
tid v3650 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v3646 
=== Succesors ===
trueSuccessor: v3649 
falseSuccessor: v3647 
=== Usages ===
=== Predecessor ===
v2236 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3646 #trueSuccessor: v3649 #falseSuccessor: v3647  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3651 
=== Usages ===
=== Predecessor ===
v3650 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3651  <|@  <|@
tid ?728 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<StringBuffer.append(String)>
duringCall: false
localsSize: 2
locksSize: 1
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?735 
values: a92 a13 a92 
monitorIds: v698 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
v3651 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?735 values: a92 a13 a92 monitorIds: v698 virtualObjectMappings: ?2531  <|@  <|@
f <@*|@fixed>@ <|@
tid v3651 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?728 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3649 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?728  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B201" 
    xhandlers
    flags 
    probability 4606505148472303541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3666 
=== Usages ===
=== Predecessor ===
v3650 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3666  <|@  <|@
f <@~|@floating>@ <|@
tid j3655 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1312 
=== Succesors ===
=== Usages ===
v6212 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1312  <|@  <|@
f <@~|@floating>@ <|@
tid v6212 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a3598 
index: j3655 
=== Succesors ===
=== Usages ===
v3666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3598 index: j3655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3666 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6212 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2568 
=== Usages ===
=== Predecessor ===
v3647 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6212 value: i3844 stateAfter: - lastLocationAccess: - #next: v2568  <|@  <|@
f <@*|@fixed>@ <|@
tid v2568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2566 
=== Predecessor ===
v3666 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4587973608062233869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2237 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i2241 
=== Usages ===
=== Predecessor ===
v2238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2241  <|@  <|@
tid v3671 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6f0a53f7
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a4042 i4002 
=== Succesors ===
=== Usages ===
i2241 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a4042 i4002  <|@  <|@
tid ?2249 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?1329 
values: a92 a13 i750 
=== Succesors ===
=== Usages ===
?2242 ?2246 ?4060 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1329 values: a92 a13 i750  <|@  <|@
tid ?4060 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?2249 
values: - - a92 a3598 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
i2241 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2249 values: - - a92 a3598 virtualObjectMappings: ?2531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2241 <|@
d <@d|@=== Debug Properties ===
bci: 17
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3671 
stateDuring: ?4060 
=== Succesors ===
next: v4234 
=== Usages ===
?2242 v4758 i3965 j5048 i4751 v4792 a4773 i4267 v4242 v4228 
=== Predecessor ===
v2237 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3671 stateDuring: ?4060 #next: v4234  <|@  <|@
tid ?2242 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?2249 
values: - - a92 a3598 i2241 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
a4773 v4240 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2249 values: - - a92 a3598 i2241 virtualObjectMappings: ?2531  <|@  <|@
f <@~|@floating>@ <|@
tid v4228 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2241 
y: i90 
=== Succesors ===
=== Usages ===
v4234 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2241 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v4234 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v4228 
=== Succesors ===
trueSuccessor: v4233 
falseSuccessor: v4229 
=== Usages ===
=== Predecessor ===
i2241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4228 #trueSuccessor: v4233 #falseSuccessor: v4229  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4233 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4240 
=== Usages ===
=== Predecessor ===
v4234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4240  <|@  <|@
f <@*|@fixed>@ <|@
tid v4240 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?2242 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4233 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2242  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" "B154" 
    xhandlers
    flags 
    probability 4587973608062233869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4753 
=== Usages ===
=== Predecessor ===
v4234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4753 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j4789 
=== Usages ===
v6266 v6267 
=== Predecessor ===
v4229 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j4789  <|@  <|@
f <@~|@floating>@ <|@
tid v6266 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j4753 
index: - 
=== Succesors ===
=== Usages ===
j4789 v4791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4753 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4789 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6266 
=== Succesors ===
next: j4790 
=== Usages ===
j4757 v6268 v6269 a4772 v6274 v6270 v6271 v6272 v6273 
=== Predecessor ===
j4753 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6266 #next: j4790  <|@  <|@
f <@~|@floating>@ <|@
tid v6267 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j4753 
index: - 
=== Succesors ===
=== Usages ===
j4790 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4753 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4790 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6267 
=== Succesors ===
next: v4761 
=== Usages ===
v4762 
=== Predecessor ===
j4789 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6267 #next: v4761  <|@  <|@
f <@~|@floating>@ <|@
tid v4758 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2241 
y: i4418 
=== Succesors ===
=== Usages ===
v4761 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2241 y: i4418  <|@  <|@
f <@*|@fixed>@ <|@
tid v4761 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v4758 
=== Succesors ===
trueSuccessor: v4760 
falseSuccessor: v4759 
=== Usages ===
=== Predecessor ===
j4790 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4758 #trueSuccessor: v4760 #falseSuccessor: v4759  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" "B153" 
    xhandlers
    flags 
    probability 4587192329359589925
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4768 
=== Usages ===
=== Predecessor ===
v4761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4768  <|@  <|@
f <@~|@floating>@ <|@
tid i4751 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$11/1514064396@6c95a661
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i2241 
y: i750 
=== Succesors ===
=== Usages ===
i4780 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2241 y: i750  <|@  <|@
f <@~|@floating>@ <|@
tid i4780 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i4751 
y: i4441 
=== Succesors ===
=== Usages ===
i4752 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4751 y: i4441  <|@  <|@
f <@~|@floating>@ <|@
tid i4752 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$94/978859646@9756628
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i4780 
y: i4411 
=== Succesors ===
=== Usages ===
j4756 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i4780 y: i4411  <|@  <|@
f <@~|@floating>@ <|@
tid j4756 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i4752 
=== Succesors ===
=== Usages ===
j4757 v6270 v6271 v6272 v6273 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i4752  <|@  <|@
f <@~|@floating>@ <|@
tid j4757 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j4756 
y: j4789 
=== Succesors ===
=== Usages ===
v4762 v4791 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4756 y: j4789  <|@  <|@
f <@~|@floating>@ <|@
tid v4762 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4790 
y: j4757 
=== Succesors ===
=== Usages ===
v4768 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j4790 y: j4757  <|@  <|@
f <@*|@fixed>@ <|@
tid v4768 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v4762 
=== Succesors ===
trueSuccessor: v4767 
falseSuccessor: v4766 
=== Usages ===
=== Predecessor ===
v4760 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4762 #trueSuccessor: v4767 #falseSuccessor: v4766  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B155" 
    xhandlers
    flags 
    probability 4557635954298659199
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4765 
=== Usages ===
=== Predecessor ===
v4768 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4765  <|@  <|@
f <@*|@fixed>@ <|@
tid v4765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4764 
=== Predecessor ===
v4767 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B156" 
    xhandlers
    flags 
    probability 4587122014276351970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4791 
=== Usages ===
=== Predecessor ===
v4768 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4791 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6266 
value: j4757 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4782 
=== Usages ===
=== Predecessor ===
v4766 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6266 value: j4757 stateAfter: - lastLocationAccess: - #next: v4782  <|@  <|@
f <@~|@floating>@ <|@
tid v6270 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j4756 
index: j4789 
=== Succesors ===
=== Usages ===
v4782 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4756 index: j4789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6270 
=== Succesors ===
next: v4784 
=== Usages ===
=== Predecessor ===
v4791 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6270 #next: v4784  <|@  <|@
f <@~|@floating>@ <|@
tid v6271 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j4756 
index: j4789 
=== Succesors ===
=== Usages ===
v4784 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4756 index: j4789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4784 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6271 
=== Succesors ===
next: v4786 
=== Usages ===
=== Predecessor ===
v4782 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6271 #next: v4786  <|@  <|@
f <@~|@floating>@ <|@
tid v6272 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j4756 
index: j4789 
=== Succesors ===
=== Usages ===
v4786 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4756 index: j4789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6272 
=== Succesors ===
next: v4788 
=== Usages ===
=== Predecessor ===
v4784 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6272 #next: v4788  <|@  <|@
f <@~|@floating>@ <|@
tid v6273 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j4756 
index: j4789 
=== Succesors ===
=== Usages ===
v4788 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4756 index: j4789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4788 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6273 
=== Succesors ===
next: v4792 
=== Usages ===
=== Predecessor ===
v4786 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6273 #next: v4792  <|@  <|@
f <@~|@floating>@ <|@
tid v6268 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j4789 
index: - 
=== Succesors ===
=== Usages ===
v4792 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4789 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4792 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6268 
value: i2241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4793 
=== Usages ===
=== Predecessor ===
v4788 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6268 value: i2241 stateAfter: - lastLocationAccess: - #next: v4793  <|@  <|@
f <@~|@floating>@ <|@
tid v6269 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4789 
index: - 
=== Succesors ===
=== Usages ===
v4793 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4789 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4793 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6269 
value: j4395 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4796 
=== Usages ===
=== Predecessor ===
v4792 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6269 value: j4395 stateAfter: - lastLocationAccess: - #next: v4796  <|@  <|@
f <@~|@floating>@ <|@
tid v6274 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j4789 
index: - 
=== Succesors ===
=== Usages ===
v4796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4789 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4796 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6274 
value: v4986 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4771 
=== Usages ===
=== Predecessor ===
v4793 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6274 value: v4986 stateAfter: - lastLocationAccess: - #next: v4771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4771 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a4772 
=== Usages ===
=== Predecessor ===
v4796 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a4772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4772 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j4789 
=== Succesors ===
next: v4774 
=== Usages ===
a4777 
=== Predecessor ===
v4771 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j4789 #next: v4774  <|@  <|@
f <@*|@fixed>@ <|@
tid v4774 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4775 
=== Predecessor ===
a4772 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B155" 
    xhandlers
    flags 
    probability 4572900251774834492
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4763 
=== Usages ===
=== Predecessor ===
v4761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4763  <|@  <|@
f <@*|@fixed>@ <|@
tid v4763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4764 
=== Predecessor ===
v4759 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" "B152" 
    successors "B156" 
    xhandlers
    flags 
    probability 4573462772440738132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4763 v4765 
=== Succesors ===
next: a4773 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4763 v4765 #next: a4773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4773 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2242 
arguments: v4394 i2241 i90 
=== Succesors ===
next: v4776 
=== Usages ===
a4777 
=== Predecessor ===
v4764 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2242 arguments: v4394 i2241 i90 #next: v4776  <|@  <|@
f <@*|@fixed>@ <|@
tid v4776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4775 
=== Predecessor ===
a4773 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B153" "B155" 
    successors "B157" "B158" 
    xhandlers
    flags 
    probability 4587973608062233868
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a4777 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v4775 
values: a4772 a4773 
=== Succesors ===
=== Usages ===
v6315 a4293 v6225 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v4775 values: a4772 a4773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4774 v4776 
=== Succesors ===
next: v5951 
=== Usages ===
a4777 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4774 v4776 #next: v5951  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5951 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v5453 
=== Usages ===
j5952 j5954 
=== Predecessor ===
v4775 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v5453  <|@  <|@
f <@~|@floating>@ <|@
tid v4242 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6173 
y: i2241 
=== Succesors ===
=== Usages ===
i4267 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6173 y: i2241  <|@  <|@
f <@~|@floating>@ <|@
tid i4267 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v4242 
trueValue: i6173 
falseValue: i2241 
=== Succesors ===
=== Usages ===
j5049 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v4242 trueValue: i6173 falseValue: i2241  <|@  <|@
f <@~|@floating>@ <|@
tid j5049 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i4267 
=== Succesors ===
=== Usages ===
j6009 v6315 j5053 v5450 v5589 j5995 j6000 j6003 j6006 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i4267  <|@  <|@
f <@~|@floating>@ <|@
tid v5450 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5049 
y: j4395 
=== Succesors ===
=== Usages ===
v5453 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5049 y: j4395  <|@  <|@
f <@*|@fixed>@ <|@
tid v5453 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v5450 
=== Succesors ===
trueSuccessor: v5451 
falseSuccessor: v5452 
=== Usages ===
=== Predecessor ===
v5951 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5450 #trueSuccessor: v5451 #falseSuccessor: v5452  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B175" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5469 
=== Usages ===
=== Predecessor ===
v5453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5469  <|@  <|@
f <@*|@fixed>@ <|@
tid v5469 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5470 
=== Predecessor ===
v5451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" "B160" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5452 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5456 
=== Usages ===
=== Predecessor ===
v5453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5456  <|@  <|@
f <@~|@floating>@ <|@
tid v6225 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a4777 
index: - 
=== Succesors ===
=== Usages ===
j5954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4777 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j5954 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5951 
address: v6225 
=== Succesors ===
=== Usages ===
v6365 v6367 v6369 v6371 v6373 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5951 address: v6225  <|@  <|@
f <@~|@floating>@ <|@
tid v6220 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6172 
=== Succesors ===
=== Usages ===
j5952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6172  <|@  <|@
f <@~|@floating>@ <|@
tid j5952 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5951 
address: v6220 
=== Succesors ===
=== Usages ===
v6366 v6368 v6370 v6372 v6374 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5951 address: v6220  <|@  <|@
f <@~|@floating>@ <|@
tid j5995 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j5049 
y: j5637 
=== Succesors ===
=== Usages ===
v5996 v5998 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5049 y: j5637  <|@  <|@
f <@~|@floating>@ <|@
tid v5996 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5995 
y: j4022 
=== Succesors ===
=== Usages ===
v5456 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5995 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v5456 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v5996 
=== Succesors ===
trueSuccessor: v5454 
falseSuccessor: v5455 
=== Usages ===
=== Predecessor ===
v5452 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5996 #trueSuccessor: v5454 #falseSuccessor: v5455  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B163" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5465 
=== Usages ===
=== Predecessor ===
v5456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5465  <|@  <|@
f <@*|@fixed>@ <|@
tid v5465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5466 
=== Predecessor ===
v5454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B161" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5457 
=== Usages ===
=== Predecessor ===
v5456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5457  <|@  <|@
f <@*|@fixed>@ <|@
tid v5457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5458 
=== Predecessor ===
v5455 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" "B268" 
    successors "B162" "B268" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4583470008434863372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5987 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5458 
values: j4022 j5994 
=== Succesors ===
=== Usages ===
v6374 j5994 v6373 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5458 values: j4022 j5994  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5458 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v5457 
=== Succesors ===
next: v6174 
=== Usages ===
v6174 v5461 v5462 j5987 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v5457 #next: v6174  <|@  <|@
f <@~|@floating>@ <|@
tid v6374 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5952 
index: j5987 
=== Succesors ===
=== Usages ===
v6174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5952 index: j5987  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6174 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5458 
address: v6374 
=== Succesors ===
next: v6148 
=== Usages ===
v6148 
=== Predecessor ===
v5458 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5458 address: v6374 #next: v6148  <|@  <|@
f <@~|@floating>@ <|@
tid v6373 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5954 
index: j5987 
=== Succesors ===
=== Usages ===
v6148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5954 index: j5987  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6148 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6373 
value: v6174 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5464 
=== Usages ===
=== Predecessor ===
v6174 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6373 value: v6174 stateAfter: - lastLocationAccess: - #next: v5464  <|@  <|@
f <@~|@floating>@ <|@
tid j5994 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5987 
y: j2615 
=== Succesors ===
=== Usages ===
j5979 j5987 v5998 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5987 y: j2615  <|@  <|@
f <@~|@floating>@ <|@
tid v5998 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5995 
y: j5994 
=== Succesors ===
=== Usages ===
v5464 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5995 y: j5994  <|@  <|@
f <@*|@fixed>@ <|@
tid v5464 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5998 
=== Succesors ===
trueSuccessor: v5461 
falseSuccessor: v5463 
=== Usages ===
=== Predecessor ===
v6148 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5998 #trueSuccessor: v5461 #falseSuccessor: v5463  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B163" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v5458 
=== Succesors ===
next: v5467 
=== Usages ===
=== Predecessor ===
v5464 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v5458 #next: v5467  <|@  <|@
f <@*|@fixed>@ <|@
tid v5467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5466 
=== Predecessor ===
v5461 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B159" "B162" 
    successors "B164" "B165" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5979 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5466 
values: j4022 j5994 
=== Succesors ===
=== Usages ===
v6372 j5986 j5971 v6001 v6371 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5466 values: j4022 j5994  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5466 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5465 v5467 
=== Succesors ===
next: v5488 
=== Usages ===
j5979 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5465 v5467 #next: v5488  <|@  <|@
f <@~|@floating>@ <|@
tid j6000 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j5049 
y: j5643 
=== Succesors ===
=== Usages ===
v6001 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5049 y: j5643  <|@  <|@
f <@~|@floating>@ <|@
tid v6001 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j6000 
y: j5979 
=== Succesors ===
=== Usages ===
v5488 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j6000 y: j5979  <|@  <|@
f <@*|@fixed>@ <|@
tid v5488 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v6001 
=== Succesors ===
trueSuccessor: v5487 
falseSuccessor: v5486 
=== Usages ===
=== Predecessor ===
v5466 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6001 #trueSuccessor: v5487 #falseSuccessor: v5486  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5491 
=== Usages ===
=== Predecessor ===
v5488 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5491  <|@  <|@
f <@*|@fixed>@ <|@
tid v5491 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5477 
=== Predecessor ===
v5487 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5486 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6175 
=== Usages ===
v6175 
=== Predecessor ===
v5488 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6372 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5952 
index: j5979 
=== Succesors ===
=== Usages ===
v6175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5952 index: j5979  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6175 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5486 
address: v6372 
=== Succesors ===
next: v6146 
=== Usages ===
v6146 
=== Predecessor ===
v5486 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5486 address: v6372 #next: v6146  <|@  <|@
f <@~|@floating>@ <|@
tid v6371 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5954 
index: j5979 
=== Succesors ===
=== Usages ===
v6146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5954 index: j5979  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6146 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6371 
value: v6175 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5476 
=== Usages ===
=== Predecessor ===
v6175 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6371 value: v6175 stateAfter: - lastLocationAccess: - #next: v5476  <|@  <|@
f <@~|@floating>@ <|@
tid j5986 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5979 
y: j4402 
=== Succesors ===
=== Usages ===
j5971 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5979 y: j4402  <|@  <|@
f <@*|@fixed>@ <|@
tid v5476 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5477 
=== Predecessor ===
v6146 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B164" 
    successors "B167" "B168" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5971 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5477 
values: j5986 j5979 
=== Succesors ===
=== Usages ===
v6370 j5978 j5963 v6004 v6369 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5477 values: j5986 j5979  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5476 v5491 
=== Succesors ===
next: v5494 
=== Usages ===
j5971 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5476 v5491 #next: v5494  <|@  <|@
f <@~|@floating>@ <|@
tid j6003 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j5049 
y: j5647 
=== Succesors ===
=== Usages ===
v6004 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5049 y: j5647  <|@  <|@
f <@~|@floating>@ <|@
tid v6004 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j6003 
y: j5971 
=== Succesors ===
=== Usages ===
v5494 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j6003 y: j5971  <|@  <|@
f <@*|@fixed>@ <|@
tid v5494 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v6004 
=== Succesors ===
trueSuccessor: v5493 
falseSuccessor: v5492 
=== Usages ===
=== Predecessor ===
v5477 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6004 #trueSuccessor: v5493 #falseSuccessor: v5492  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B169" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5497 
=== Usages ===
=== Predecessor ===
v5494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5497  <|@  <|@
f <@*|@fixed>@ <|@
tid v5497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5480 
=== Predecessor ===
v5493 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B169" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6176 
=== Usages ===
v6176 
=== Predecessor ===
v5494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6176  <|@  <|@
f <@~|@floating>@ <|@
tid v6370 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5952 
index: j5971 
=== Succesors ===
=== Usages ===
v6176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5952 index: j5971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6176 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5492 
address: v6370 
=== Succesors ===
next: v6144 
=== Usages ===
v6144 
=== Predecessor ===
v5492 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5492 address: v6370 #next: v6144  <|@  <|@
f <@~|@floating>@ <|@
tid v6369 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5954 
index: j5971 
=== Succesors ===
=== Usages ===
v6144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5954 index: j5971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6144 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6369 
value: v6176 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5479 
=== Usages ===
=== Predecessor ===
v6176 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6369 value: v6176 stateAfter: - lastLocationAccess: - #next: v5479  <|@  <|@
f <@~|@floating>@ <|@
tid j5978 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5971 
y: j5619 
=== Succesors ===
=== Usages ===
j5963 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5971 y: j5619  <|@  <|@
f <@*|@fixed>@ <|@
tid v5479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5480 
=== Predecessor ===
v6144 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" "B167" 
    successors "B170" "B171" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5963 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5480 
values: j5978 j5971 
=== Succesors ===
=== Usages ===
v6368 j5970 j5955 v6007 v6367 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5480 values: j5978 j5971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5479 v5497 
=== Succesors ===
next: v5500 
=== Usages ===
j5963 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5479 v5497 #next: v5500  <|@  <|@
f <@~|@floating>@ <|@
tid j6006 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j5049 
y: j5651 
=== Succesors ===
=== Usages ===
v6007 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5049 y: j5651  <|@  <|@
f <@~|@floating>@ <|@
tid v6007 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j6006 
y: j5963 
=== Succesors ===
=== Usages ===
v5500 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j6006 y: j5963  <|@  <|@
f <@*|@fixed>@ <|@
tid v5500 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v6007 
=== Succesors ===
trueSuccessor: v5499 
falseSuccessor: v5498 
=== Usages ===
=== Predecessor ===
v5480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6007 #trueSuccessor: v5499 #falseSuccessor: v5498  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5499 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5503 
=== Usages ===
=== Predecessor ===
v5500 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5503  <|@  <|@
f <@*|@fixed>@ <|@
tid v5503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5483 
=== Predecessor ===
v5499 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6177 
=== Usages ===
v6177 
=== Predecessor ===
v5500 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6177  <|@  <|@
f <@~|@floating>@ <|@
tid v6368 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5952 
index: j5963 
=== Succesors ===
=== Usages ===
v6177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5952 index: j5963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6177 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5498 
address: v6368 
=== Succesors ===
next: v6142 
=== Usages ===
v6142 
=== Predecessor ===
v5498 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5498 address: v6368 #next: v6142  <|@  <|@
f <@~|@floating>@ <|@
tid v6367 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5954 
index: j5963 
=== Succesors ===
=== Usages ===
v6142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5954 index: j5963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6142 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6367 
value: v6177 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5482 
=== Usages ===
=== Predecessor ===
v6177 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6367 value: v6177 stateAfter: - lastLocationAccess: - #next: v5482  <|@  <|@
f <@~|@floating>@ <|@
tid j5970 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5963 
y: j4598 
=== Succesors ===
=== Usages ===
j5955 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5963 y: j4598  <|@  <|@
f <@*|@fixed>@ <|@
tid v5482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5483 
=== Predecessor ===
v6142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" "B170" 
    successors "B173" "B174" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5955 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5483 
values: j5970 j5963 
=== Succesors ===
=== Usages ===
v6366 v6010 v6365 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5483 values: j5970 j5963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5482 v5503 
=== Succesors ===
next: v5506 
=== Usages ===
j5955 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5482 v5503 #next: v5506  <|@  <|@
f <@~|@floating>@ <|@
tid j6009 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j5049 
y: j5655 
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5049 y: j5655  <|@  <|@
f <@~|@floating>@ <|@
tid v6010 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j6009 
y: j5955 
=== Succesors ===
=== Usages ===
v5506 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j6009 y: j5955  <|@  <|@
f <@*|@fixed>@ <|@
tid v5506 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v6010 
=== Succesors ===
trueSuccessor: v5505 
falseSuccessor: v5504 
=== Usages ===
=== Predecessor ===
v5483 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6010 #trueSuccessor: v5505 #falseSuccessor: v5504  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5509 
=== Usages ===
=== Predecessor ===
v5506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5509  <|@  <|@
f <@*|@fixed>@ <|@
tid v5509 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5470 
=== Predecessor ===
v5505 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5504 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i6178 
=== Usages ===
i6178 
=== Predecessor ===
v5506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6178  <|@  <|@
f <@~|@floating>@ <|@
tid v6366 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5952 
index: j5955 
=== Succesors ===
=== Usages ===
i6178 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5952 index: j5955  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6178 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v5504 
address: v6366 
=== Succesors ===
next: v6140 
=== Usages ===
v6140 
=== Predecessor ===
v5504 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5504 address: v6366 #next: v6140  <|@  <|@
f <@~|@floating>@ <|@
tid v6365 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5954 
index: j5955 
=== Succesors ===
=== Usages ===
v6140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5954 index: j5955  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6140 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6365 
value: i6178 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5485 
=== Usages ===
=== Predecessor ===
i6178 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6365 value: i6178 stateAfter: - lastLocationAccess: - #next: v5485  <|@  <|@
f <@*|@fixed>@ <|@
tid v5485 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5470 
=== Predecessor ===
v6140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B157" "B174" "B173" 
    successors "B176" "B194" 
    xhandlers
    flags 
    probability 4587973608062233868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5469 v5485 v5509 
=== Succesors ===
next: v6013 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5469 v5485 v5509 #next: v6013  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6013 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v5516 
=== Usages ===
j6015 
=== Predecessor ===
v5470 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v5516  <|@  <|@
f <@~|@floating>@ <|@
tid j5048 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2241 
=== Succesors ===
=== Usages ===
j5053 v5589 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2241  <|@  <|@
f <@~|@floating>@ <|@
tid v5589 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5049 
y: j5048 
=== Succesors ===
=== Usages ===
v5516 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5049 y: j5048  <|@  <|@
f <@*|@fixed>@ <|@
tid v5516 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v5589 
=== Succesors ===
trueSuccessor: v5515 
falseSuccessor: v5514 
=== Usages ===
=== Predecessor ===
v6013 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5589 #trueSuccessor: v5515 #falseSuccessor: v5514  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B177" "B178" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5519 
=== Usages ===
=== Predecessor ===
v5516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5519  <|@  <|@
f <@~|@floating>@ <|@
tid v6315 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a4777 
index: j5049 
=== Succesors ===
=== Usages ===
j6015 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4777 index: j5049  <|@  <|@
f <@~|@floating>@ <|@
tid j6015 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v6013 
address: v6315 
=== Succesors ===
=== Usages ===
v6375 v6376 v6377 v6378 v6379 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v6013 address: v6315  <|@  <|@
f <@~|@floating>@ <|@
tid j5053 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$68/1668473261@10b940da
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j5048 
y: j5049 
=== Succesors ===
=== Usages ===
j6060 j6046 j6051 j6054 j6057 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j5048 y: j5049  <|@  <|@
f <@~|@floating>@ <|@
tid j6046 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j5053 
y: j5637 
=== Succesors ===
=== Usages ===
v6047 v6049 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5053 y: j5637  <|@  <|@
f <@~|@floating>@ <|@
tid v6047 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j6046 
y: j4022 
=== Succesors ===
=== Usages ===
v5519 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j6046 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v5519 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v6047 
=== Succesors ===
trueSuccessor: v5517 
falseSuccessor: v5518 
=== Usages ===
=== Predecessor ===
v5515 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6047 #trueSuccessor: v5517 #falseSuccessor: v5518  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B181" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5528 
=== Usages ===
=== Predecessor ===
v5519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5528  <|@  <|@
f <@*|@fixed>@ <|@
tid v5528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5529 
=== Predecessor ===
v5517 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B179" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5520 
=== Usages ===
=== Predecessor ===
v5519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5520  <|@  <|@
f <@*|@fixed>@ <|@
tid v5520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5521 
=== Predecessor ===
v5518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" "B193" 
    successors "B180" "B193" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4583470008434863372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j6040 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5521 
values: j4022 j6045 
=== Succesors ===
=== Usages ===
v6379 j6045 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5521 values: j4022 j6045  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5521 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v5520 
=== Succesors ===
next: v6153 
=== Usages ===
j6040 v5524 v5525 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v5520 #next: v6153  <|@  <|@
f <@~|@floating>@ <|@
tid v6379 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j6015 
index: j6040 
=== Succesors ===
=== Usages ===
v6153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j6015 index: j6040  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6153 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6379 
value: v6154 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5527 
=== Usages ===
=== Predecessor ===
v5521 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6379 value: v6154 stateAfter: - lastLocationAccess: - #next: v5527  <|@  <|@
f <@~|@floating>@ <|@
tid j6045 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j6040 
y: j2615 
=== Succesors ===
=== Usages ===
j6034 j6040 v6049 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j6040 y: j2615  <|@  <|@
f <@~|@floating>@ <|@
tid v6049 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j6046 
y: j6045 
=== Succesors ===
=== Usages ===
v5527 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j6046 y: j6045  <|@  <|@
f <@*|@fixed>@ <|@
tid v5527 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v6049 
=== Succesors ===
trueSuccessor: v5524 
falseSuccessor: v5526 
=== Usages ===
=== Predecessor ===
v6153 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6049 #trueSuccessor: v5524 #falseSuccessor: v5526  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B181" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5524 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v5521 
=== Succesors ===
next: v5530 
=== Usages ===
=== Predecessor ===
v5527 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v5521 #next: v5530  <|@  <|@
f <@*|@fixed>@ <|@
tid v5530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5529 
=== Predecessor ===
v5524 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B177" "B180" 
    successors "B182" "B183" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j6034 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5529 
values: j4022 j6045 
=== Succesors ===
=== Usages ===
v6378 j6039 j6028 v6052 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5529 values: j4022 j6045  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5528 v5530 
=== Succesors ===
next: v5551 
=== Usages ===
j6034 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5528 v5530 #next: v5551  <|@  <|@
f <@~|@floating>@ <|@
tid j6051 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j5053 
y: j5643 
=== Succesors ===
=== Usages ===
v6052 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5053 y: j5643  <|@  <|@
f <@~|@floating>@ <|@
tid v6052 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j6051 
y: j6034 
=== Succesors ===
=== Usages ===
v5551 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j6051 y: j6034  <|@  <|@
f <@*|@fixed>@ <|@
tid v5551 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v6052 
=== Succesors ===
trueSuccessor: v5550 
falseSuccessor: v5549 
=== Usages ===
=== Predecessor ===
v5529 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6052 #trueSuccessor: v5550 #falseSuccessor: v5549  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B184" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5554 
=== Usages ===
=== Predecessor ===
v5551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5554  <|@  <|@
f <@*|@fixed>@ <|@
tid v5554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5540 
=== Predecessor ===
v5550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B184" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6152 
=== Usages ===
=== Predecessor ===
v5551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6152  <|@  <|@
f <@~|@floating>@ <|@
tid v6378 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j6015 
index: j6034 
=== Succesors ===
=== Usages ===
v6152 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j6015 index: j6034  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6152 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6378 
value: v6158 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5539 
=== Usages ===
=== Predecessor ===
v5549 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6378 value: v6158 stateAfter: - lastLocationAccess: - #next: v5539  <|@  <|@
f <@~|@floating>@ <|@
tid j6039 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j6034 
y: j4402 
=== Succesors ===
=== Usages ===
j6028 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j6034 y: j4402  <|@  <|@
f <@*|@fixed>@ <|@
tid v5539 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5540 
=== Predecessor ===
v6152 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" "B182" 
    successors "B185" "B186" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j6028 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5540 
values: j6039 j6034 
=== Succesors ===
=== Usages ===
v6377 j6033 j6022 v6055 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5540 values: j6039 j6034  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5539 v5554 
=== Succesors ===
next: v5557 
=== Usages ===
j6028 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5539 v5554 #next: v5557  <|@  <|@
f <@~|@floating>@ <|@
tid j6054 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j5053 
y: j5647 
=== Succesors ===
=== Usages ===
v6055 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5053 y: j5647  <|@  <|@
f <@~|@floating>@ <|@
tid v6055 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j6054 
y: j6028 
=== Succesors ===
=== Usages ===
v5557 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j6054 y: j6028  <|@  <|@
f <@*|@fixed>@ <|@
tid v5557 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v6055 
=== Succesors ===
trueSuccessor: v5556 
falseSuccessor: v5555 
=== Usages ===
=== Predecessor ===
v5540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6055 #trueSuccessor: v5556 #falseSuccessor: v5555  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B187" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5560 
=== Usages ===
=== Predecessor ===
v5557 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5560  <|@  <|@
f <@*|@fixed>@ <|@
tid v5560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5543 
=== Predecessor ===
v5556 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B187" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6151 
=== Usages ===
=== Predecessor ===
v5557 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6151  <|@  <|@
f <@~|@floating>@ <|@
tid v6377 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j6015 
index: j6028 
=== Succesors ===
=== Usages ===
v6151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j6015 index: j6028  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6151 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6377 
value: v6157 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5542 
=== Usages ===
=== Predecessor ===
v5555 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6377 value: v6157 stateAfter: - lastLocationAccess: - #next: v5542  <|@  <|@
f <@~|@floating>@ <|@
tid j6033 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j6028 
y: j5619 
=== Succesors ===
=== Usages ===
j6022 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j6028 y: j5619  <|@  <|@
f <@*|@fixed>@ <|@
tid v5542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5543 
=== Predecessor ===
v6151 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" "B185" 
    successors "B188" "B189" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j6022 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5543 
values: j6033 j6028 
=== Succesors ===
=== Usages ===
v6376 j6027 j6016 v6058 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5543 values: j6033 j6028  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5543 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5542 v5560 
=== Succesors ===
next: v5563 
=== Usages ===
j6022 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5542 v5560 #next: v5563  <|@  <|@
f <@~|@floating>@ <|@
tid j6057 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j5053 
y: j5651 
=== Succesors ===
=== Usages ===
v6058 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5053 y: j5651  <|@  <|@
f <@~|@floating>@ <|@
tid v6058 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j6057 
y: j6022 
=== Succesors ===
=== Usages ===
v5563 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j6057 y: j6022  <|@  <|@
f <@*|@fixed>@ <|@
tid v5563 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v6058 
=== Succesors ===
trueSuccessor: v5562 
falseSuccessor: v5561 
=== Usages ===
=== Predecessor ===
v5543 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6058 #trueSuccessor: v5562 #falseSuccessor: v5561  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5562 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5566 
=== Usages ===
=== Predecessor ===
v5563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5566  <|@  <|@
f <@*|@fixed>@ <|@
tid v5566 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5546 
=== Predecessor ===
v5562 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6150 
=== Usages ===
=== Predecessor ===
v5563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6150  <|@  <|@
f <@~|@floating>@ <|@
tid v6376 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j6015 
index: j6022 
=== Succesors ===
=== Usages ===
v6150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j6015 index: j6022  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6376 
value: v6156 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5545 
=== Usages ===
=== Predecessor ===
v5561 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6376 value: v6156 stateAfter: - lastLocationAccess: - #next: v5545  <|@  <|@
f <@~|@floating>@ <|@
tid j6027 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j6022 
y: j4598 
=== Succesors ===
=== Usages ===
j6016 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j6022 y: j4598  <|@  <|@
f <@*|@fixed>@ <|@
tid v5545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5546 
=== Predecessor ===
v6150 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j6016 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5546 
values: j6027 j6022 
=== Succesors ===
=== Usages ===
v6375 v6061 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5546 values: j6027 j6022  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5545 v5566 
=== Succesors ===
next: v5569 
=== Usages ===
j6016 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5545 v5566 #next: v5569  <|@  <|@
f <@~|@floating>@ <|@
tid j6060 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j5053 
y: j5655 
=== Succesors ===
=== Usages ===
v6061 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5053 y: j5655  <|@  <|@
f <@~|@floating>@ <|@
tid v6061 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j6060 
y: j6016 
=== Succesors ===
=== Usages ===
v5569 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j6060 y: j6016  <|@  <|@
f <@*|@fixed>@ <|@
tid v5569 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v6061 
=== Succesors ===
trueSuccessor: v5568 
falseSuccessor: v5567 
=== Usages ===
=== Predecessor ===
v5546 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6061 #trueSuccessor: v5568 #falseSuccessor: v5567  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B195" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5572 
=== Usages ===
=== Predecessor ===
v5569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5572  <|@  <|@
f <@*|@fixed>@ <|@
tid v5572 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5533 
=== Predecessor ===
v5568 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B195" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5567 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6149 
=== Usages ===
=== Predecessor ===
v5569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6149  <|@  <|@
f <@~|@floating>@ <|@
tid v6375 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j6015 
index: j6016 
=== Succesors ===
=== Usages ===
v6149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j6015 index: j6016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6149 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6375 
value: i6155 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5548 
=== Usages ===
=== Predecessor ===
v5567 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6375 value: i6155 stateAfter: - lastLocationAccess: - #next: v5548  <|@  <|@
f <@*|@fixed>@ <|@
tid v5548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5533 
=== Predecessor ===
v6149 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B179" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5525 
=== Usages ===
=== Predecessor ===
v5527 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5525  <|@  <|@
f <@*|@fixed>@ <|@
tid v5525 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v5521 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5526 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v5521  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B195" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5514 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5532 
=== Usages ===
=== Predecessor ===
v5516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5532  <|@  <|@
f <@*|@fixed>@ <|@
tid v5532 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5533 
=== Predecessor ===
v5514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" "B192" "B191" 
    successors "B196" "B197" 
    xhandlers
    flags 
    probability 4587973608062233868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5532 v5548 v5572 
=== Succesors ===
next: a4293 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5532 v5548 v5572 #next: a4293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4293 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a4777 
=== Succesors ===
next: v3674 
=== Usages ===
v6213 a3673 
=== Predecessor ===
v5533 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a4777 #next: v3674  <|@  <|@
f <@~|@floating>@ <|@
tid a3673 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a4293 
=== Succesors ===
=== Usages ===
v3674 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3674 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6206 
value: a3673 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j4804 
=== Usages ===
=== Predecessor ===
a4293 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6206 value: a3673 stateAfter: - lastLocationAccess: - #next: j4804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4804 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4042 
=== Succesors ===
next: v4808 
=== Usages ===
j4805 
=== Predecessor ===
v3674 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4042 #next: v4808  <|@  <|@
f <@~|@floating>@ <|@
tid j4805 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$152/1924078416@7040fbbc
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j4804 
y: i4682 
=== Succesors ===
=== Usages ===
v6275 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j4804 y: i4682  <|@  <|@
f <@~|@floating>@ <|@
tid v6275 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4805 
index: j4686 
=== Succesors ===
=== Usages ===
v4808 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4805 index: j4686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4808 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6275 
value: i4688 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i6179 
=== Usages ===
=== Predecessor ===
j4804 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6275 value: i4688 stateAfter: - lastLocationAccess: - #next: i6179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6179 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6207 
=== Succesors ===
next: v3690 
=== Usages ===
j3712 i4065 v3684 v3703 
=== Predecessor ===
v4808 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6207 #next: v3690  <|@  <|@
f <@~|@floating>@ <|@
tid v3684 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6179 
y: i90 
=== Succesors ===
=== Usages ===
v3690 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6179 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v3690 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3684 
=== Succesors ===
trueSuccessor: v3689 
falseSuccessor: v3685 
=== Usages ===
=== Predecessor ===
i6179 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3684 #trueSuccessor: v3689 #falseSuccessor: v3685  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B199" 
    xhandlers
    flags 
    probability 4558139406968492699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3689 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3688 
=== Usages ===
=== Predecessor ===
v3690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3688  <|@  <|@
f <@*|@fixed>@ <|@
tid v3688 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3687 
=== Predecessor ===
v3689 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B198" "B200" 
    xhandlers
    flags 
    probability 4587895480191969474
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3707 
=== Usages ===
=== Predecessor ===
v3690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3707  <|@  <|@
f <@~|@floating>@ <|@
tid i3965 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32
=== Inputs ===
x: i2241 
y: i3838 
=== Succesors ===
=== Usages ===
v3703 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2241 y: i3838  <|@  <|@
f <@~|@floating>@ <|@
tid v3703 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3965 
y: i6179 
=== Succesors ===
=== Usages ===
v3707 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3965 y: i6179  <|@  <|@
f <@*|@fixed>@ <|@
tid v3707 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3703 
=== Succesors ===
trueSuccessor: v3706 
falseSuccessor: v3704 
=== Usages ===
=== Predecessor ===
v3685 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3703 #trueSuccessor: v3706 #falseSuccessor: v3704  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B199" 
    xhandlers
    flags 
    probability 4558089405131523487
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3705 
=== Usages ===
=== Predecessor ===
v3707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3705  <|@  <|@
f <@*|@fixed>@ <|@
tid v3705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3687 
=== Predecessor ===
v3706 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B196" "B198" 
    successors 
    xhandlers
    flags 
    probability 4562618005677378589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3688 v3705 
=== Succesors ===
next: v3708 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3688 v3705 #next: v3708  <|@  <|@
tid ?2246 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?2249 
values: - - 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
v3708 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2249 values: - - virtualObjectMappings: ?2531  <|@  <|@
f <@*|@fixed>@ <|@
tid v3708 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?2246 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3687 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2246  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B201" 
    xhandlers
    flags 
    probability 4587818133600407724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3723 
=== Usages ===
=== Predecessor ===
v3707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3723  <|@  <|@
f <@~|@floating>@ <|@
tid j3712 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i6179 
=== Succesors ===
=== Usages ===
v6213 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i6179  <|@  <|@
f <@~|@floating>@ <|@
tid v6213 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a4293 
index: j3712 
=== Succesors ===
=== Usages ===
v3723 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4293 index: j3712  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3723 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6213 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2565 
=== Usages ===
=== Predecessor ===
v3704 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6213 value: i3844 stateAfter: - lastLocationAccess: - #next: v2565  <|@  <|@
f <@*|@fixed>@ <|@
tid v2565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2566 
=== Predecessor ===
v3723 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" "B147" 
    successors "B202" "B267" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i4065 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v2566 
values: i6179 i1312 
=== Succesors ===
=== Usages ===
i1328 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2566 values: i6179 i1312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2566 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2565 v2568 
=== Succesors ===
next: a6180 
=== Usages ===
i4065 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2565 v2568 #next: a6180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6180 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StringBuffer.toStringCache
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v6209 
=== Succesors ===
next: v4016 
=== Usages ===
v3958 
=== Predecessor ===
v2566 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6209 #next: v4016  <|@  <|@
f <@~|@floating>@ <|@
tid v3958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a6180 
=== Succesors ===
=== Usages ===
v4016 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a6180  <|@  <|@
tid ?2256 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?1329 
values: a92 - i750 
=== Succesors ===
=== Usages ===
?2567 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1329 values: a92 - i750  <|@  <|@
tid ?2567 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<String.getChars(int, int, char[], int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 827
stackSize: 0
=== Inputs ===
outerFrameState: ?2256 
values: - - - - - 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
v4353 v6380 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2256 values: - - - - - virtualObjectMappings: ?2531  <|@  <|@
f <@*|@fixed>@ <|@
tid v4016 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3958 
=== Succesors ===
trueSuccessor: v4013 
falseSuccessor: v4015 
=== Usages ===
=== Predecessor ===
a6180 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3958 #trueSuccessor: v4013 #falseSuccessor: v4015  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B203" "B206" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4013 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a6181 
=== Usages ===
=== Predecessor ===
v4016 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v6206 
=== Succesors ===
next: v6380 
=== Usages ===
v6216 v6380 v6211 
=== Predecessor ===
v4013 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6206 #next: v6380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2567 
object: a6181 
=== Succesors ===
next: v3604 
=== Usages ===
=== Predecessor ===
a6181 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2567 object: a6181 #next: v3604  <|@  <|@
f <@~|@floating>@ <|@
tid i1328 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32
=== Inputs ===
x: i4065 
y: i750 
=== Succesors ===
=== Usages ===
v3604 j5021 v4818 v4085 i4263 a4833 v4852 i4811 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4065 y: i750  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3604 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6207 
value: i1328 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j4813 
=== Usages ===
=== Predecessor ===
v6380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6207 value: i1328 stateAfter: - lastLocationAccess: - #next: j4813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4813 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j4849 
=== Usages ===
v6276 v6277 
=== Predecessor ===
v3604 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j4849  <|@  <|@
f <@~|@floating>@ <|@
tid v6276 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j4813 
index: - 
=== Succesors ===
=== Usages ===
j4849 v4851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4849 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6276 
=== Succesors ===
next: j4850 
=== Usages ===
j4817 v6278 v6279 a4832 v6284 v6280 v6281 v6282 v6283 
=== Predecessor ===
j4813 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6276 #next: j4850  <|@  <|@
f <@~|@floating>@ <|@
tid v6277 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j4813 
index: - 
=== Succesors ===
=== Usages ===
j4850 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4850 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6277 
=== Succesors ===
next: v4821 
=== Usages ===
v4822 
=== Predecessor ===
j4849 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6277 #next: v4821  <|@  <|@
f <@~|@floating>@ <|@
tid v4818 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1328 
y: i4418 
=== Succesors ===
=== Usages ===
v4821 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1328 y: i4418  <|@  <|@
f <@*|@fixed>@ <|@
tid v4821 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v4818 
=== Succesors ===
trueSuccessor: v4820 
falseSuccessor: v4819 
=== Usages ===
=== Predecessor ===
j4850 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4818 #trueSuccessor: v4820 #falseSuccessor: v4819  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B204" "B205" 
    xhandlers
    flags 
    probability 4606102879411360327
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4820 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4828 
=== Usages ===
=== Predecessor ===
v4821 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4828  <|@  <|@
f <@~|@floating>@ <|@
tid i4811 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$11/1514064396@6c95a661
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1328 
y: i750 
=== Succesors ===
=== Usages ===
i4840 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1328 y: i750  <|@  <|@
f <@~|@floating>@ <|@
tid i4840 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i4811 
y: i4441 
=== Succesors ===
=== Usages ===
i4812 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4811 y: i4441  <|@  <|@
f <@~|@floating>@ <|@
tid i4812 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$94/978859646@9756628
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i4840 
y: i4411 
=== Succesors ===
=== Usages ===
j4816 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i4840 y: i4411  <|@  <|@
f <@~|@floating>@ <|@
tid j4816 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i4812 
=== Succesors ===
=== Usages ===
j4817 v6280 v6281 v6282 v6283 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i4812  <|@  <|@
f <@~|@floating>@ <|@
tid j4817 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j4816 
y: j4849 
=== Succesors ===
=== Usages ===
v4822 v4851 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4816 y: j4849  <|@  <|@
f <@~|@floating>@ <|@
tid v4822 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4850 
y: j4817 
=== Succesors ===
=== Usages ===
v4828 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j4850 y: j4817  <|@  <|@
f <@*|@fixed>@ <|@
tid v4828 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v4822 
=== Succesors ===
trueSuccessor: v4827 
falseSuccessor: v4826 
=== Usages ===
=== Predecessor ===
v4820 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4822 #trueSuccessor: v4827 #falseSuccessor: v4826  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B207" 
    xhandlers
    flags 
    probability 4576227324095347148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4827 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4825 
=== Usages ===
=== Predecessor ===
v4828 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4825  <|@  <|@
f <@*|@fixed>@ <|@
tid v4825 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4824 
=== Predecessor ===
v4827 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B208" 
    xhandlers
    flags 
    probability 4606023602812699488
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4826 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4851 
=== Usages ===
=== Predecessor ===
v4828 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4851  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4851 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6276 
value: j4817 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4842 
=== Usages ===
=== Predecessor ===
v4826 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6276 value: j4817 stateAfter: - lastLocationAccess: - #next: v4842  <|@  <|@
f <@~|@floating>@ <|@
tid v6280 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j4816 
index: j4849 
=== Succesors ===
=== Usages ===
v4842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4816 index: j4849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6280 
=== Succesors ===
next: v4844 
=== Usages ===
=== Predecessor ===
v4851 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6280 #next: v4844  <|@  <|@
f <@~|@floating>@ <|@
tid v6281 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j4816 
index: j4849 
=== Succesors ===
=== Usages ===
v4844 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4816 index: j4849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6281 
=== Succesors ===
next: v4846 
=== Usages ===
=== Predecessor ===
v4842 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6281 #next: v4846  <|@  <|@
f <@~|@floating>@ <|@
tid v6282 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j4816 
index: j4849 
=== Succesors ===
=== Usages ===
v4846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4816 index: j4849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6282 
=== Succesors ===
next: v4848 
=== Usages ===
=== Predecessor ===
v4844 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6282 #next: v4848  <|@  <|@
f <@~|@floating>@ <|@
tid v6283 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j4816 
index: j4849 
=== Succesors ===
=== Usages ===
v4848 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4816 index: j4849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4848 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6283 
=== Succesors ===
next: v4852 
=== Usages ===
=== Predecessor ===
v4846 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6283 #next: v4852  <|@  <|@
f <@~|@floating>@ <|@
tid v6278 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j4849 
index: - 
=== Succesors ===
=== Usages ===
v4852 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4849 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4852 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6278 
value: i1328 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4853 
=== Usages ===
=== Predecessor ===
v4848 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6278 value: i1328 stateAfter: - lastLocationAccess: - #next: v4853  <|@  <|@
f <@~|@floating>@ <|@
tid v6279 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4849 
index: - 
=== Succesors ===
=== Usages ===
v4853 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4849 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4853 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6279 
value: j4395 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4856 
=== Usages ===
=== Predecessor ===
v4852 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6279 value: j4395 stateAfter: - lastLocationAccess: - #next: v4856  <|@  <|@
f <@~|@floating>@ <|@
tid v6284 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j4849 
index: - 
=== Succesors ===
=== Usages ===
v4856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4849 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4856 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6284 
value: v4986 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4831 
=== Usages ===
=== Predecessor ===
v4853 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6284 value: v4986 stateAfter: - lastLocationAccess: - #next: v4831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4831 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a4832 
=== Usages ===
=== Predecessor ===
v4856 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a4832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4832 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j4849 
=== Succesors ===
next: v4834 
=== Usages ===
a4837 
=== Predecessor ===
v4831 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j4849 #next: v4834  <|@  <|@
f <@*|@fixed>@ <|@
tid v4834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4835 
=== Predecessor ===
a4832 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B207" 
    xhandlers
    flags 
    probability 4591711229433017291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4819 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4823 
=== Usages ===
=== Predecessor ===
v4821 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4823  <|@  <|@
f <@*|@fixed>@ <|@
tid v4823 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4824 
=== Predecessor ===
v4819 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" "B204" 
    successors "B208" 
    xhandlers
    flags 
    probability 4592345442222304004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4824 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4823 v4825 
=== Succesors ===
next: a4833 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4823 v4825 #next: a4833  <|@  <|@
tid ?1325 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 451
stackSize: 0
=== Inputs ===
outerFrameState: ?1329 
values: a92 - i750 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
a4833 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1329 values: a92 - i750 virtualObjectMappings: ?2531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4833 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?1325 
arguments: v4394 i1328 i90 
=== Succesors ===
next: v4836 
=== Usages ===
a4837 
=== Predecessor ===
v4824 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?1325 arguments: v4394 i1328 i90 #next: v4836  <|@  <|@
f <@*|@fixed>@ <|@
tid v4836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4835 
=== Predecessor ===
a4833 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B205" "B207" 
    successors "B209" "B210" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a4837 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v4835 
values: a4832 a4833 
=== Succesors ===
=== Usages ===
v6311 a4277 v6221 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v4835 values: a4832 a4833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4835 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4834 v4836 
=== Succesors ===
next: v5592 
=== Usages ===
a4837 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4834 v4836 #next: v5592  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5592 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: i6182 
=== Usages ===
j5593 j5595 
=== Predecessor ===
v4835 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: i6182  <|@  <|@
f <@~|@floating>@ <|@
tid v6211 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6181 
=== Succesors ===
=== Usages ===
i6182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v6211 
=== Succesors ===
next: v5061 
=== Usages ===
i4263 v4085 
=== Predecessor ===
v5592 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6211 #next: v5061  <|@  <|@
f <@~|@floating>@ <|@
tid v4085 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6182 
y: i1328 
=== Succesors ===
=== Usages ===
i4263 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6182 y: i1328  <|@  <|@
f <@~|@floating>@ <|@
tid i4263 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v4085 
trueValue: i6182 
falseValue: i1328 
=== Succesors ===
=== Usages ===
j5022 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v4085 trueValue: i6182 falseValue: i1328  <|@  <|@
f <@~|@floating>@ <|@
tid j5022 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i4263 
=== Succesors ===
=== Usages ===
j5656 v6311 j5026 v5058 v5583 j5638 j5644 j5648 j5652 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i4263  <|@  <|@
f <@~|@floating>@ <|@
tid v5058 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5022 
y: j4395 
=== Succesors ===
=== Usages ===
v5061 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5022 y: j4395  <|@  <|@
f <@*|@fixed>@ <|@
tid v5061 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v5058 
=== Succesors ===
trueSuccessor: v5059 
falseSuccessor: v5060 
=== Usages ===
=== Predecessor ===
i6182 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5058 #trueSuccessor: v5059 #falseSuccessor: v5060  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B227" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5059 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5077 
=== Usages ===
=== Predecessor ===
v5061 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5077  <|@  <|@
f <@*|@fixed>@ <|@
tid v5077 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5078 
=== Predecessor ===
v5059 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B211" "B212" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5060 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5064 
=== Usages ===
=== Predecessor ===
v5061 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5064  <|@  <|@
f <@~|@floating>@ <|@
tid j5638 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j5022 
y: j5637 
=== Succesors ===
=== Usages ===
v5639 v5641 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5022 y: j5637  <|@  <|@
f <@~|@floating>@ <|@
tid v5639 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5638 
y: j4022 
=== Succesors ===
=== Usages ===
v5064 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5638 y: j4022  <|@  <|@
f <@~|@floating>@ <|@
tid v6221 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a4837 
index: - 
=== Succesors ===
=== Usages ===
j5595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4837 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j5595 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5592 
address: v6221 
=== Succesors ===
=== Usages ===
v6316 v6318 v6320 v6322 v6324 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5592 address: v6221  <|@  <|@
f <@~|@floating>@ <|@
tid v6216 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6181 
=== Succesors ===
=== Usages ===
j5593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6181  <|@  <|@
f <@~|@floating>@ <|@
tid j5593 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5592 
address: v6216 
=== Succesors ===
=== Usages ===
v6317 v6319 v6321 v6323 v6325 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5592 address: v6216  <|@  <|@
f <@*|@fixed>@ <|@
tid v5064 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v5639 
=== Succesors ===
trueSuccessor: v5062 
falseSuccessor: v5063 
=== Usages ===
=== Predecessor ===
v5060 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5639 #trueSuccessor: v5062 #falseSuccessor: v5063  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B215" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5062 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5073 
=== Usages ===
=== Predecessor ===
v5064 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5073  <|@  <|@
f <@*|@fixed>@ <|@
tid v5073 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5074 
=== Predecessor ===
v5062 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B213" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5063 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5065 
=== Usages ===
=== Predecessor ===
v5064 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5065  <|@  <|@
f <@*|@fixed>@ <|@
tid v5065 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5066 
=== Predecessor ===
v5063 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" "B266" 
    successors "B214" "B266" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4602480130880221376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5629 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5066 
values: j4022 j5636 
=== Succesors ===
=== Usages ===
v6325 j5636 v6324 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5066 values: j4022 j5636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5066 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v5065 
=== Succesors ===
next: v6183 
=== Usages ===
v6183 v5069 v5070 j5629 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v5065 #next: v6183  <|@  <|@
f <@~|@floating>@ <|@
tid v6325 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5593 
index: j5629 
=== Succesors ===
=== Usages ===
v6183 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5593 index: j5629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6183 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5066 
address: v6325 
=== Succesors ===
next: v6094 
=== Usages ===
v6094 
=== Predecessor ===
v5066 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5066 address: v6325 #next: v6094  <|@  <|@
f <@~|@floating>@ <|@
tid v6324 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5595 
index: j5629 
=== Succesors ===
=== Usages ===
v6094 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5595 index: j5629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6094 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6324 
value: v6183 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5072 
=== Usages ===
=== Predecessor ===
v6183 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6324 value: v6183 stateAfter: - lastLocationAccess: - #next: v5072  <|@  <|@
f <@~|@floating>@ <|@
tid j5636 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5629 
y: j2615 
=== Succesors ===
=== Usages ===
j5621 j5629 v5641 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5629 y: j2615  <|@  <|@
f <@~|@floating>@ <|@
tid v5641 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5638 
y: j5636 
=== Succesors ===
=== Usages ===
v5072 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5638 y: j5636  <|@  <|@
f <@*|@fixed>@ <|@
tid v5072 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5641 
=== Succesors ===
trueSuccessor: v5069 
falseSuccessor: v5071 
=== Usages ===
=== Predecessor ===
v6094 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5641 #trueSuccessor: v5069 #falseSuccessor: v5071  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B215" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5069 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v5066 
=== Succesors ===
next: v5075 
=== Usages ===
=== Predecessor ===
v5072 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v5066 #next: v5075  <|@  <|@
f <@*|@fixed>@ <|@
tid v5075 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5074 
=== Predecessor ===
v5069 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B211" "B214" 
    successors "B216" "B217" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5621 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5074 
values: j4022 j5636 
=== Succesors ===
=== Usages ===
v6323 j5628 j5612 v5645 v6322 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5074 values: j4022 j5636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5074 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5073 v5075 
=== Succesors ===
next: v5097 
=== Usages ===
j5621 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5073 v5075 #next: v5097  <|@  <|@
f <@~|@floating>@ <|@
tid j5644 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j5022 
y: j5643 
=== Succesors ===
=== Usages ===
v5645 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5022 y: j5643  <|@  <|@
f <@~|@floating>@ <|@
tid v5645 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5644 
y: j5621 
=== Succesors ===
=== Usages ===
v5097 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5644 y: j5621  <|@  <|@
f <@*|@fixed>@ <|@
tid v5097 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5645 
=== Succesors ===
trueSuccessor: v5096 
falseSuccessor: v5095 
=== Usages ===
=== Predecessor ===
v5074 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5645 #trueSuccessor: v5096 #falseSuccessor: v5095  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B218" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5096 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5100 
=== Usages ===
=== Predecessor ===
v5097 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5100  <|@  <|@
f <@*|@fixed>@ <|@
tid v5100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5085 
=== Predecessor ===
v5096 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B218" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5095 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6184 
=== Usages ===
v6184 
=== Predecessor ===
v5097 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6184  <|@  <|@
f <@~|@floating>@ <|@
tid v6323 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5593 
index: j5621 
=== Succesors ===
=== Usages ===
v6184 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5593 index: j5621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6184 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5095 
address: v6323 
=== Succesors ===
next: v6092 
=== Usages ===
v6092 
=== Predecessor ===
v5095 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5095 address: v6323 #next: v6092  <|@  <|@
f <@~|@floating>@ <|@
tid v6322 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5595 
index: j5621 
=== Succesors ===
=== Usages ===
v6092 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5595 index: j5621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6092 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6322 
value: v6184 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5084 
=== Usages ===
=== Predecessor ===
v6184 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6322 value: v6184 stateAfter: - lastLocationAccess: - #next: v5084  <|@  <|@
f <@~|@floating>@ <|@
tid j5628 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5621 
y: j4402 
=== Succesors ===
=== Usages ===
j5612 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5621 y: j4402  <|@  <|@
f <@*|@fixed>@ <|@
tid v5084 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5085 
=== Predecessor ===
v6092 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" "B216" 
    successors "B219" "B220" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5612 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5085 
values: j5628 j5621 
=== Succesors ===
=== Usages ===
v6321 j5620 j5604 v5649 v6320 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5085 values: j5628 j5621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5085 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5084 v5100 
=== Succesors ===
next: v5103 
=== Usages ===
j5612 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5084 v5100 #next: v5103  <|@  <|@
f <@~|@floating>@ <|@
tid j5648 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j5022 
y: j5647 
=== Succesors ===
=== Usages ===
v5649 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5022 y: j5647  <|@  <|@
f <@~|@floating>@ <|@
tid v5649 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5648 
y: j5612 
=== Succesors ===
=== Usages ===
v5103 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5648 y: j5612  <|@  <|@
f <@*|@fixed>@ <|@
tid v5103 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5649 
=== Succesors ===
trueSuccessor: v5102 
falseSuccessor: v5101 
=== Usages ===
=== Predecessor ===
v5085 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5649 #trueSuccessor: v5102 #falseSuccessor: v5101  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5106 
=== Usages ===
=== Predecessor ===
v5103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5106  <|@  <|@
f <@*|@fixed>@ <|@
tid v5106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5089 
=== Predecessor ===
v5102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6185 
=== Usages ===
v6185 
=== Predecessor ===
v5103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6185  <|@  <|@
f <@~|@floating>@ <|@
tid v6321 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5593 
index: j5612 
=== Succesors ===
=== Usages ===
v6185 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5593 index: j5612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6185 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5101 
address: v6321 
=== Succesors ===
next: v6090 
=== Usages ===
v6090 
=== Predecessor ===
v5101 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5101 address: v6321 #next: v6090  <|@  <|@
f <@~|@floating>@ <|@
tid v6320 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5595 
index: j5612 
=== Succesors ===
=== Usages ===
v6090 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5595 index: j5612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6090 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6320 
value: v6185 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5088 
=== Usages ===
=== Predecessor ===
v6185 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6320 value: v6185 stateAfter: - lastLocationAccess: - #next: v5088  <|@  <|@
f <@~|@floating>@ <|@
tid j5620 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5612 
y: j5619 
=== Succesors ===
=== Usages ===
j5604 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5612 y: j5619  <|@  <|@
f <@*|@fixed>@ <|@
tid v5088 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5089 
=== Predecessor ===
v6090 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" "B219" 
    successors "B222" "B223" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5604 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5089 
values: j5620 j5612 
=== Succesors ===
=== Usages ===
v6319 j5611 j5596 v5653 v6318 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5089 values: j5620 j5612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5089 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5088 v5106 
=== Succesors ===
next: v5109 
=== Usages ===
j5604 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5088 v5106 #next: v5109  <|@  <|@
f <@~|@floating>@ <|@
tid j5652 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j5022 
y: j5651 
=== Succesors ===
=== Usages ===
v5653 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5022 y: j5651  <|@  <|@
f <@~|@floating>@ <|@
tid v5653 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5652 
y: j5604 
=== Succesors ===
=== Usages ===
v5109 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5652 y: j5604  <|@  <|@
f <@*|@fixed>@ <|@
tid v5109 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5653 
=== Succesors ===
trueSuccessor: v5108 
falseSuccessor: v5107 
=== Usages ===
=== Predecessor ===
v5089 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5653 #trueSuccessor: v5108 #falseSuccessor: v5107  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5112 
=== Usages ===
=== Predecessor ===
v5109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5112  <|@  <|@
f <@*|@fixed>@ <|@
tid v5112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5092 
=== Predecessor ===
v5108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6186 
=== Usages ===
v6186 
=== Predecessor ===
v5109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6186  <|@  <|@
f <@~|@floating>@ <|@
tid v6319 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5593 
index: j5604 
=== Succesors ===
=== Usages ===
v6186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5593 index: j5604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6186 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5107 
address: v6319 
=== Succesors ===
next: v6088 
=== Usages ===
v6088 
=== Predecessor ===
v5107 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5107 address: v6319 #next: v6088  <|@  <|@
f <@~|@floating>@ <|@
tid v6318 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5595 
index: j5604 
=== Succesors ===
=== Usages ===
v6088 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5595 index: j5604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6088 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6318 
value: v6186 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5091 
=== Usages ===
=== Predecessor ===
v6186 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6318 value: v6186 stateAfter: - lastLocationAccess: - #next: v5091  <|@  <|@
f <@~|@floating>@ <|@
tid j5611 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5604 
y: j4598 
=== Succesors ===
=== Usages ===
j5596 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5604 y: j4598  <|@  <|@
f <@*|@fixed>@ <|@
tid v5091 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5092 
=== Predecessor ===
v6088 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" "B222" 
    successors "B225" "B226" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5596 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5092 
values: j5611 j5604 
=== Succesors ===
=== Usages ===
v6317 v5657 v6316 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5092 values: j5611 j5604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5092 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5091 v5112 
=== Succesors ===
next: v5115 
=== Usages ===
j5596 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5091 v5112 #next: v5115  <|@  <|@
f <@~|@floating>@ <|@
tid j5656 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j5022 
y: j5655 
=== Succesors ===
=== Usages ===
v5657 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5022 y: j5655  <|@  <|@
f <@~|@floating>@ <|@
tid v5657 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5656 
y: j5596 
=== Succesors ===
=== Usages ===
v5115 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5656 y: j5596  <|@  <|@
f <@*|@fixed>@ <|@
tid v5115 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5657 
=== Succesors ===
trueSuccessor: v5114 
falseSuccessor: v5113 
=== Usages ===
=== Predecessor ===
v5092 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5657 #trueSuccessor: v5114 #falseSuccessor: v5113  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5118 
=== Usages ===
=== Predecessor ===
v5115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5118  <|@  <|@
f <@*|@fixed>@ <|@
tid v5118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5078 
=== Predecessor ===
v5114 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i6187 
=== Usages ===
i6187 
=== Predecessor ===
v5115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6187  <|@  <|@
f <@~|@floating>@ <|@
tid v6317 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5593 
index: j5596 
=== Succesors ===
=== Usages ===
i6187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5593 index: j5596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6187 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v5113 
address: v6317 
=== Succesors ===
next: v6086 
=== Usages ===
v6086 
=== Predecessor ===
v5113 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5113 address: v6317 #next: v6086  <|@  <|@
f <@~|@floating>@ <|@
tid v6316 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5595 
index: j5596 
=== Succesors ===
=== Usages ===
v6086 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5595 index: j5596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6086 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6316 
value: i6187 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5094 
=== Usages ===
=== Predecessor ===
i6187 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6316 value: i6187 stateAfter: - lastLocationAccess: - #next: v5094  <|@  <|@
f <@*|@fixed>@ <|@
tid v5094 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5078 
=== Predecessor ===
v6086 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B209" "B226" "B225" 
    successors "B228" "B246" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5078 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5077 v5094 v5118 
=== Succesors ===
next: v5660 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5077 v5094 v5118 #next: v5660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v5125 
=== Usages ===
j5662 
=== Predecessor ===
v5078 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v5125  <|@  <|@
f <@~|@floating>@ <|@
tid j5021 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1328 
=== Succesors ===
=== Usages ===
j5026 v5583 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1328  <|@  <|@
f <@~|@floating>@ <|@
tid v5583 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5022 
y: j5021 
=== Succesors ===
=== Usages ===
v5125 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5022 y: j5021  <|@  <|@
f <@*|@fixed>@ <|@
tid v5125 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v5583 
=== Succesors ===
trueSuccessor: v5124 
falseSuccessor: v5123 
=== Usages ===
=== Predecessor ===
v5660 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5583 #trueSuccessor: v5124 #falseSuccessor: v5123  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B229" "B230" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5124 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5128 
=== Usages ===
=== Predecessor ===
v5125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5128  <|@  <|@
f <@~|@floating>@ <|@
tid v6311 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a4837 
index: j5022 
=== Succesors ===
=== Usages ===
j5662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4837 index: j5022  <|@  <|@
f <@~|@floating>@ <|@
tid j5662 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5660 
address: v6311 
=== Succesors ===
=== Usages ===
v6326 v6327 v6328 v6329 v6330 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5660 address: v6311  <|@  <|@
f <@~|@floating>@ <|@
tid j5026 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$68/1668473261@10b940da
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j5021 
y: j5022 
=== Succesors ===
=== Usages ===
j5707 j5693 j5698 j5701 j5704 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j5021 y: j5022  <|@  <|@
f <@~|@floating>@ <|@
tid j5693 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j5026 
y: j5637 
=== Succesors ===
=== Usages ===
v5694 v5696 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5026 y: j5637  <|@  <|@
f <@~|@floating>@ <|@
tid v5694 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5693 
y: j4022 
=== Succesors ===
=== Usages ===
v5128 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5693 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v5128 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v5694 
=== Succesors ===
trueSuccessor: v5126 
falseSuccessor: v5127 
=== Usages ===
=== Predecessor ===
v5124 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5694 #trueSuccessor: v5126 #falseSuccessor: v5127  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B233" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5126 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5137 
=== Usages ===
=== Predecessor ===
v5128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5137  <|@  <|@
f <@*|@fixed>@ <|@
tid v5137 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5138 
=== Predecessor ===
v5126 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B231" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5129 
=== Usages ===
=== Predecessor ===
v5128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5129  <|@  <|@
f <@*|@fixed>@ <|@
tid v5129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5130 
=== Predecessor ===
v5127 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B230" "B245" 
    successors "B232" "B245" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4602480130880221376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5687 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5130 
values: j4022 j5692 
=== Succesors ===
=== Usages ===
v6330 j5692 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5130 values: j4022 j5692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5130 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v5129 
=== Succesors ===
next: v6104 
=== Usages ===
j5687 v5133 v5134 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v5129 #next: v6104  <|@  <|@
f <@~|@floating>@ <|@
tid v6330 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5662 
index: j5687 
=== Succesors ===
=== Usages ===
v6104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5662 index: j5687  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6104 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6330 
value: v6154 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5136 
=== Usages ===
=== Predecessor ===
v5130 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6330 value: v6154 stateAfter: - lastLocationAccess: - #next: v5136  <|@  <|@
f <@~|@floating>@ <|@
tid j5692 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5687 
y: j2615 
=== Succesors ===
=== Usages ===
j5681 j5687 v5696 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5687 y: j2615  <|@  <|@
f <@~|@floating>@ <|@
tid v5696 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5693 
y: j5692 
=== Succesors ===
=== Usages ===
v5136 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5693 y: j5692  <|@  <|@
f <@*|@fixed>@ <|@
tid v5136 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5696 
=== Succesors ===
trueSuccessor: v5133 
falseSuccessor: v5135 
=== Usages ===
=== Predecessor ===
v6104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5696 #trueSuccessor: v5133 #falseSuccessor: v5135  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B231" 
    successors "B233" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v5130 
=== Succesors ===
next: v5139 
=== Usages ===
=== Predecessor ===
v5136 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v5130 #next: v5139  <|@  <|@
f <@*|@fixed>@ <|@
tid v5139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5138 
=== Predecessor ===
v5133 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B229" "B232" 
    successors "B234" "B235" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5681 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5138 
values: j4022 j5692 
=== Succesors ===
=== Usages ===
v6329 j5686 j5675 v5699 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5138 values: j4022 j5692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5138 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5137 v5139 
=== Succesors ===
next: v5160 
=== Usages ===
j5681 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5137 v5139 #next: v5160  <|@  <|@
f <@~|@floating>@ <|@
tid j5698 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j5026 
y: j5643 
=== Succesors ===
=== Usages ===
v5699 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5026 y: j5643  <|@  <|@
f <@~|@floating>@ <|@
tid v5699 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5698 
y: j5681 
=== Succesors ===
=== Usages ===
v5160 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5698 y: j5681  <|@  <|@
f <@*|@fixed>@ <|@
tid v5160 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5699 
=== Succesors ===
trueSuccessor: v5159 
falseSuccessor: v5158 
=== Usages ===
=== Predecessor ===
v5138 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5699 #trueSuccessor: v5159 #falseSuccessor: v5158  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B233" 
    successors "B236" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5163 
=== Usages ===
=== Predecessor ===
v5160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5163  <|@  <|@
f <@*|@fixed>@ <|@
tid v5163 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5149 
=== Predecessor ===
v5159 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B233" 
    successors "B236" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6103 
=== Usages ===
=== Predecessor ===
v5160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6103  <|@  <|@
f <@~|@floating>@ <|@
tid v6329 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5662 
index: j5681 
=== Succesors ===
=== Usages ===
v6103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5662 index: j5681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6103 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6329 
value: v6158 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5148 
=== Usages ===
=== Predecessor ===
v5158 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6329 value: v6158 stateAfter: - lastLocationAccess: - #next: v5148  <|@  <|@
f <@~|@floating>@ <|@
tid j5686 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5681 
y: j4402 
=== Succesors ===
=== Usages ===
j5675 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5681 y: j4402  <|@  <|@
f <@*|@fixed>@ <|@
tid v5148 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5149 
=== Predecessor ===
v6103 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B235" "B234" 
    successors "B237" "B238" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5675 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5149 
values: j5686 j5681 
=== Succesors ===
=== Usages ===
v6328 j5680 j5669 v5702 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5149 values: j5686 j5681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5149 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5148 v5163 
=== Succesors ===
next: v5166 
=== Usages ===
j5675 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5148 v5163 #next: v5166  <|@  <|@
f <@~|@floating>@ <|@
tid j5701 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j5026 
y: j5647 
=== Succesors ===
=== Usages ===
v5702 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5026 y: j5647  <|@  <|@
f <@~|@floating>@ <|@
tid v5702 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5701 
y: j5675 
=== Succesors ===
=== Usages ===
v5166 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5701 y: j5675  <|@  <|@
f <@*|@fixed>@ <|@
tid v5166 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5702 
=== Succesors ===
trueSuccessor: v5165 
falseSuccessor: v5164 
=== Usages ===
=== Predecessor ===
v5149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5702 #trueSuccessor: v5165 #falseSuccessor: v5164  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B236" 
    successors "B239" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5169 
=== Usages ===
=== Predecessor ===
v5166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5169  <|@  <|@
f <@*|@fixed>@ <|@
tid v5169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5152 
=== Predecessor ===
v5165 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B236" 
    successors "B239" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6101 
=== Usages ===
=== Predecessor ===
v5166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6101  <|@  <|@
f <@~|@floating>@ <|@
tid v6328 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5662 
index: j5675 
=== Succesors ===
=== Usages ===
v6101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5662 index: j5675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6101 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6328 
value: v6157 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5151 
=== Usages ===
=== Predecessor ===
v5164 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6328 value: v6157 stateAfter: - lastLocationAccess: - #next: v5151  <|@  <|@
f <@~|@floating>@ <|@
tid j5680 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5675 
y: j5619 
=== Succesors ===
=== Usages ===
j5669 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5675 y: j5619  <|@  <|@
f <@*|@fixed>@ <|@
tid v5151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5152 
=== Predecessor ===
v6101 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" "B237" 
    successors "B240" "B241" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5669 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5152 
values: j5680 j5675 
=== Succesors ===
=== Usages ===
v6327 j5674 j5663 v5705 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5152 values: j5680 j5675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5151 v5169 
=== Succesors ===
next: v5172 
=== Usages ===
j5669 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5151 v5169 #next: v5172  <|@  <|@
f <@~|@floating>@ <|@
tid j5704 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j5026 
y: j5651 
=== Succesors ===
=== Usages ===
v5705 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5026 y: j5651  <|@  <|@
f <@~|@floating>@ <|@
tid v5705 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5704 
y: j5669 
=== Succesors ===
=== Usages ===
v5172 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5704 y: j5669  <|@  <|@
f <@*|@fixed>@ <|@
tid v5172 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5705 
=== Succesors ===
trueSuccessor: v5171 
falseSuccessor: v5170 
=== Usages ===
=== Predecessor ===
v5152 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5705 #trueSuccessor: v5171 #falseSuccessor: v5170  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B239" 
    successors "B242" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5175 
=== Usages ===
=== Predecessor ===
v5172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5175  <|@  <|@
f <@*|@fixed>@ <|@
tid v5175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5155 
=== Predecessor ===
v5171 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B239" 
    successors "B242" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5170 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6099 
=== Usages ===
=== Predecessor ===
v5172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6099  <|@  <|@
f <@~|@floating>@ <|@
tid v6327 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5662 
index: j5669 
=== Succesors ===
=== Usages ===
v6099 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5662 index: j5669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6099 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6327 
value: v6156 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5154 
=== Usages ===
=== Predecessor ===
v5170 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6327 value: v6156 stateAfter: - lastLocationAccess: - #next: v5154  <|@  <|@
f <@~|@floating>@ <|@
tid j5674 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5669 
y: j4598 
=== Succesors ===
=== Usages ===
j5663 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5669 y: j4598  <|@  <|@
f <@*|@fixed>@ <|@
tid v5154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5155 
=== Predecessor ===
v6099 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B241" "B240" 
    successors "B243" "B244" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5663 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5155 
values: j5674 j5669 
=== Succesors ===
=== Usages ===
v6326 v5708 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5155 values: j5674 j5669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5154 v5175 
=== Succesors ===
next: v5178 
=== Usages ===
j5663 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5154 v5175 #next: v5178  <|@  <|@
f <@~|@floating>@ <|@
tid j5707 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j5026 
y: j5655 
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5026 y: j5655  <|@  <|@
f <@~|@floating>@ <|@
tid v5708 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5707 
y: j5663 
=== Succesors ===
=== Usages ===
v5178 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5707 y: j5663  <|@  <|@
f <@*|@fixed>@ <|@
tid v5178 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5708 
=== Succesors ===
trueSuccessor: v5177 
falseSuccessor: v5176 
=== Usages ===
=== Predecessor ===
v5155 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5708 #trueSuccessor: v5177 #falseSuccessor: v5176  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B247" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5181 
=== Usages ===
=== Predecessor ===
v5178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5181  <|@  <|@
f <@*|@fixed>@ <|@
tid v5181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5142 
=== Predecessor ===
v5177 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B247" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6097 
=== Usages ===
=== Predecessor ===
v5178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6097  <|@  <|@
f <@~|@floating>@ <|@
tid v6326 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5662 
index: j5663 
=== Succesors ===
=== Usages ===
v6097 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5662 index: j5663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6097 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6326 
value: i6155 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5157 
=== Usages ===
=== Predecessor ===
v5176 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6326 value: i6155 stateAfter: - lastLocationAccess: - #next: v5157  <|@  <|@
f <@*|@fixed>@ <|@
tid v5157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5142 
=== Predecessor ===
v6097 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B231" 
    successors "B231" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5135 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5134 
=== Usages ===
=== Predecessor ===
v5136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5134  <|@  <|@
f <@*|@fixed>@ <|@
tid v5134 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v5130 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5135 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v5130  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B247" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5141 
=== Usages ===
=== Predecessor ===
v5125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5141  <|@  <|@
f <@*|@fixed>@ <|@
tid v5141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5142 
=== Predecessor ===
v5123 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B246" "B244" "B243" 
    successors "B248" "B249" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5141 v5157 v5181 
=== Succesors ===
next: a4277 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5141 v5157 v5181 #next: a4277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4277 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a4837 
=== Succesors ===
next: v3618 
=== Usages ===
?253 a3617 
=== Predecessor ===
v5142 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a4837 #next: v3618  <|@  <|@
f <@~|@floating>@ <|@
tid a3617 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a4277 
=== Succesors ===
=== Usages ===
v3618 v4978 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3618 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: StringBuffer.toStringCache
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6209 
value: a3617 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j4864 
=== Usages ===
=== Predecessor ===
a4277 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6209 value: a3617 stateAfter: - lastLocationAccess: - #next: j4864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4864 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4042 
=== Succesors ===
next: v4868 
=== Usages ===
j4865 
=== Predecessor ===
v3618 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4042 #next: v4868  <|@  <|@
f <@~|@floating>@ <|@
tid j4865 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$152/1924078416@7040fbbc
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j4864 
y: i4682 
=== Succesors ===
=== Usages ===
v6285 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j4864 y: i4682  <|@  <|@
f <@~|@floating>@ <|@
tid v6285 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4865 
index: j4686 
=== Succesors ===
=== Usages ===
v4868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4865 index: j4686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4868 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6285 
value: i4688 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j4925 
=== Usages ===
=== Predecessor ===
j4864 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6285 value: i4688 stateAfter: - lastLocationAccess: - #next: j4925  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4925 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6292 
=== Succesors ===
next: v4875 
=== Usages ===
j4871 v4917 v6288 v6289 v6290 v6291 
=== Predecessor ===
v4868 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6292 #next: v4875  <|@  <|@
f <@~|@floating>@ <|@
tid j4871 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$94/978859646@9756628
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j4925 
y: j4589 
=== Succesors ===
=== Usages ===
v4872 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j4925 y: j4589  <|@  <|@
f <@~|@floating>@ <|@
tid v4872 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4871 
y: j4592 
=== Succesors ===
=== Usages ===
v4875 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j4871 y: j4592  <|@  <|@
tid a252 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@4394170c
hasIdentity: true
objectId: 2
stamp: a!# Ljava/lang/String;
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?247 ?253 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?253 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a252 
values: a4277 - 
=== Succesors ===
=== Usages ===
?247 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a252 values: a4277 -  <|@  <|@
tid ?247 <|@
d <@d|@=== Debug Properties ===
bci: 256
code: ResolvedJavaMethodBytecode<StringOp.cont(StringBuffer)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 166
stackSize: 1
=== Inputs ===
outerFrameState: ?89 
values: - - a252 
virtualObjectMappings: ?253 
=== Succesors ===
=== Usages ===
v4931 a4949 v4902 i4908 v4914 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?89 values: - - a252 virtualObjectMappings: ?253  <|@  <|@
f <@*|@fixed>@ <|@
tid v4875 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v4872 
=== Succesors ===
trueSuccessor: v4874 
falseSuccessor: v4873 
=== Usages ===
=== Predecessor ===
j4925 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4872 #trueSuccessor: v4874 #falseSuccessor: v4873  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B262" 
    xhandlers
    flags 
    probability 4606102879411360327
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4874 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4876 
=== Usages ===
=== Predecessor ===
v4875 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4876  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4876 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v4933 
=== Usages ===
=== Predecessor ===
v4874 >@ <|@
instruction <@EndLockScope|@org.graalvm.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v4933  <|@  <|@
f <@*|@fixed>@ <|@
tid v4933 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4932 
=== Predecessor ===
v4876 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B250" "B251" 
    xhandlers
    flags 
    probability 4591711229433017291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4877 
=== Usages ===
=== Predecessor ===
v4875 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4877 <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
stamp: i64
=== Inputs ===
=== Succesors ===
next: j4926 
=== Usages ===
v6286 v4902 i4908 v4914 
=== Predecessor ===
v4873 >@ <|@
instruction <@CurrentLock|@org.graalvm.compiler.hotspot.nodes.CurrentLockNode>@ #next: j4926  <|@  <|@
f <@~|@floating>@ <|@
tid v6286 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4877 
index: - 
=== Succesors ===
=== Usages ===
j4926 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4877 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4926 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: DisplacedMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6286 
=== Succesors ===
next: v4882 
=== Usages ===
v4879 i4908 
=== Predecessor ===
j4877 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6286 #next: v4882  <|@  <|@
f <@~|@floating>@ <|@
tid v4879 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4926 
y: j4022 
=== Succesors ===
=== Usages ===
v4882 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j4926 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v4882 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v4879 
=== Succesors ===
trueSuccessor: v4881 
falseSuccessor: v4880 
=== Usages ===
=== Predecessor ===
j4926 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4879 #trueSuccessor: v4881 #falseSuccessor: v4880  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B261" 
    xhandlers
    flags 
    probability 4585798268051676323
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4881 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4903 
=== Usages ===
=== Predecessor ===
v4882 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4903  <|@  <|@
f <@*|@fixed>@ <|@
tid v4903 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4904 
=== Predecessor ===
v4881 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B252" "B255" 
    xhandlers
    flags 
    probability 4588616991559617267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4880 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4885 
=== Usages ===
=== Predecessor ===
v4882 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4885  <|@  <|@
f <@~|@floating>@ <|@
tid v4917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
x: j4925 
y: j4598 
=== Succesors ===
=== Usages ===
v4885 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j4925 y: j4598  <|@  <|@
f <@*|@fixed>@ <|@
tid v4885 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v4917 
=== Succesors ===
trueSuccessor: v4883 
falseSuccessor: v4884 
=== Usages ===
=== Predecessor ===
v4880 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4917 #trueSuccessor: v4883 #falseSuccessor: v4884  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B253" "B254" 
    xhandlers
    flags 
    probability 4588532429854379039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4906 
=== Usages ===
=== Predecessor ===
v4885 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4906 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4042 
=== Succesors ===
next: i4908 
=== Usages ===
v6287 
=== Predecessor ===
v4883 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4042 #next: i4908  <|@  <|@
f <@~|@floating>@ <|@
tid v6287 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4906 
index: - 
=== Succesors ===
=== Usages ===
i4908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4906 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4908 <|@
st <@st|@bench.StringOp.cont(Bench.scala:166) [bci: 256]
stack: a252 
locals: - - 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6287 
expectedValue: j4877 
newValue: j4926 
stateAfter: ?247 
=== Succesors ===
next: v4912 
=== Usages ===
v4909 
=== Predecessor ===
j4906 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v6287 expectedValue: j4877 newValue: j4926 stateAfter: ?247 #next: v4912  <|@  <|@
f <@~|@floating>@ <|@
tid v4909 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4908 
y: i90 
=== Succesors ===
=== Usages ===
v4912 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4908 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v4912 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v4909 
=== Succesors ===
trueSuccessor: v4910 
falseSuccessor: v4911 
=== Usages ===
=== Predecessor ===
i4908 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4909 #trueSuccessor: v4910 #falseSuccessor: v4911  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B252" 
    successors "B261" 
    xhandlers
    flags 
    probability 4543697352192320117
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4914 
=== Usages ===
=== Predecessor ===
v4912 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4914  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4914 <|@
st <@st|@bench.StringOp.cont(Bench.scala:166) [bci: 256]
stack: a252 
locals: - - 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorexit(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: void
=== Inputs ===
stateAfter: ?247 
stateDuring: - 
arguments: a4042 j4877 
=== Succesors ===
next: v4915 
=== Usages ===
=== Predecessor ===
v4910 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?247 stateDuring: - arguments: a4042 j4877 #next: v4915  <|@  <|@
f <@*|@fixed>@ <|@
tid v4915 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4904 
=== Predecessor ===
v4914 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B252" 
    successors "B261" 
    xhandlers
    flags 
    probability 4588524058245560454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4911 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4913 
=== Usages ===
=== Predecessor ===
v4912 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4913  <|@  <|@
f <@*|@fixed>@ <|@
tid v4913 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4904 
=== Predecessor ===
v4911 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B256" "B259" 
    xhandlers
    flags 
    probability 4558551172406818075
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4884 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4927 
=== Usages ===
=== Predecessor ===
v4885 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4927  <|@  <|@
f <@~|@floating>@ <|@
tid v6288 <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: j4925 
index: - 
=== Succesors ===
=== Usages ===
j4927 v4931 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4925 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4927 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_owner
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6288 
=== Succesors ===
next: j4928 
=== Usages ===
j4887 
=== Predecessor ===
v4884 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6288 #next: j4928  <|@  <|@
f <@~|@floating>@ <|@
tid v6289 <|@
d <@d|@=== Debug Properties ===
displacement: 38
scale: Times1
stamp: void*
=== Inputs ===
base: j4925 
index: - 
=== Succesors ===
=== Usages ===
j4928 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4925 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4928 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_recursions
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6289 
=== Succesors ===
next: j4886 
=== Usages ===
j4888 
=== Predecessor ===
j4927 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6289 #next: j4886  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4886 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v4892 
=== Usages ===
j4887 
=== Predecessor ===
j4928 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v4892  <|@  <|@
f <@~|@floating>@ <|@
tid j4887 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$95/254966325@645792aa
stamp: i64
=== Inputs ===
x: j4886 
y: j4927 
=== Succesors ===
=== Usages ===
j4888 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j4886 y: j4927  <|@  <|@
f <@~|@floating>@ <|@
tid j4888 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$92/1285640437@181e2e71
stamp: i64
=== Inputs ===
x: j4887 
y: j4928 
=== Succesors ===
=== Usages ===
v4889 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j4887 y: j4928  <|@  <|@
f <@~|@floating>@ <|@
tid v4889 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4888 
y: j4022 
=== Succesors ===
=== Usages ===
v4892 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j4888 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v4892 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v4889 
=== Succesors ===
trueSuccessor: v4891 
falseSuccessor: v4890 
=== Usages ===
=== Predecessor ===
j4886 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4889 #trueSuccessor: v4891 #falseSuccessor: v4890  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B257" "B258" 
    xhandlers
    flags 
    probability 4558497052915465609
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4891 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4929 
=== Usages ===
=== Predecessor ===
v4892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4929  <|@  <|@
f <@~|@floating>@ <|@
tid v6290 <|@
d <@d|@=== Debug Properties ===
displacement: 54
scale: Times1
stamp: void*
=== Inputs ===
base: j4925 
index: - 
=== Succesors ===
=== Usages ===
j4929 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4925 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4929 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_cxq
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6290 
=== Succesors ===
next: j4930 
=== Usages ===
j4893 
=== Predecessor ===
v4891 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6290 #next: j4930  <|@  <|@
f <@~|@floating>@ <|@
tid v6291 <|@
d <@d|@=== Debug Properties ===
displacement: 62
scale: Times1
stamp: void*
=== Inputs ===
base: j4925 
index: - 
=== Succesors ===
=== Usages ===
j4930 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4925 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4930 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_EntryList
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6291 
=== Succesors ===
next: v4900 
=== Usages ===
j4893 
=== Predecessor ===
j4929 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6291 #next: v4900  <|@  <|@
f <@~|@floating>@ <|@
tid j4893 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$92/1285640437@181e2e71
stamp: i64
=== Inputs ===
x: j4929 
y: j4930 
=== Succesors ===
=== Usages ===
v4894 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j4929 y: j4930  <|@  <|@
f <@~|@floating>@ <|@
tid v4894 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4893 
y: j4022 
=== Succesors ===
=== Usages ===
v4900 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j4893 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v4900 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v4894 
=== Succesors ===
trueSuccessor: v4898 
falseSuccessor: v4899 
=== Usages ===
=== Predecessor ===
j4930 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4894 #trueSuccessor: v4898 #falseSuccessor: v4899  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B261" 
    xhandlers
    flags 
    probability 4557961269951076194
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4901 
=== Usages ===
=== Predecessor ===
v4900 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4901 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v4931 
=== Usages ===
=== Predecessor ===
v4898 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v4931  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4931 <|@
st <@st|@bench.StringOp.cont(Bench.scala:166) [bci: 256]
stack: a252 
locals: - - 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ANY_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6288 
value: j4022 
stateAfter: ?247 
lastLocationAccess: - 
=== Succesors ===
next: v4905 
=== Usages ===
=== Predecessor ===
v4901 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6288 value: j4022 stateAfter: ?247 lastLocationAccess: - #next: v4905  <|@  <|@
f <@*|@fixed>@ <|@
tid v4905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4904 
=== Predecessor ===
v4931 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B260" 
    xhandlers
    flags 
    probability 4543697352192320115
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4899 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4897 
=== Usages ===
=== Predecessor ===
v4900 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4897  <|@  <|@
f <@*|@fixed>@ <|@
tid v4897 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4896 
=== Predecessor ===
v4899 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B260" 
    xhandlers
    flags 
    probability 4528541320773093662
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4890 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4895 
=== Usages ===
=== Predecessor ===
v4892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4895  <|@  <|@
f <@*|@fixed>@ <|@
tid v4895 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4896 
=== Predecessor ===
v4890 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B259" "B258" 
    successors "B261" 
    xhandlers
    flags 
    probability 4544347644035395019
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4896 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4895 v4897 
=== Succesors ===
next: v4902 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4895 v4897 #next: v4902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4902 <|@
st <@st|@bench.StringOp.cont(Bench.scala:166) [bci: 256]
stack: a252 
locals: - - 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorexit(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: void
=== Inputs ===
stateAfter: ?247 
stateDuring: - 
arguments: a4042 j4877 
=== Succesors ===
next: v4923 
=== Usages ===
=== Predecessor ===
v4896 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?247 stateDuring: - arguments: a4042 j4877 #next: v4923  <|@  <|@
f <@*|@fixed>@ <|@
tid v4923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4904 
=== Predecessor ===
v4902 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B250" "B257" "B254" "B253" "B260" 
    successors "B262" 
    xhandlers
    flags 
    probability 4591711229433017291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4904 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4903 v4905 v4913 v4915 v4923 
=== Succesors ===
next: v4916 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4903 v4905 v4913 v4915 v4923 #next: v4916  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v4934 
=== Usages ===
=== Predecessor ===
v4904 >@ <|@
instruction <@EndLockScope|@org.graalvm.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v4934  <|@  <|@
f <@*|@fixed>@ <|@
tid v4934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4932 
=== Predecessor ===
v4916 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B248" "B261" 
    successors "B263" "B264" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4932 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4933 v4934 
=== Succesors ===
next: j4938 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4933 v4934 #next: j4938  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4938 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j4953 
=== Usages ===
v6293 v6294 
=== Predecessor ===
v4932 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j4953  <|@  <|@
f <@~|@floating>@ <|@
tid v6293 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j4938 
index: - 
=== Succesors ===
=== Usages ===
j4953 v4955 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4938 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4953 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6293 
=== Succesors ===
next: j4954 
=== Usages ===
j4999 j4959 v6304 
=== Predecessor ===
j4938 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6293 #next: j4954  <|@  <|@
f <@~|@floating>@ <|@
tid v6294 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j4938 
index: - 
=== Succesors ===
=== Usages ===
j4954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4938 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4954 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6294 
=== Succesors ===
next: v4946 
=== Usages ===
v4943 
=== Predecessor ===
j4953 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6294 #next: v4946  <|@  <|@
f <@~|@floating>@ <|@
tid j4999 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j4953 
y: j4991 
=== Succesors ===
=== Usages ===
v4943 v4955 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4953 y: j4991  <|@  <|@
f <@~|@floating>@ <|@
tid v4943 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4954 
y: j4999 
=== Succesors ===
=== Usages ===
v4946 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j4954 y: j4999  <|@  <|@
f <@*|@fixed>@ <|@
tid v4946 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v4943 
=== Succesors ===
trueSuccessor: v4944 
falseSuccessor: v4945 
=== Usages ===
=== Predecessor ===
j4954 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4943 #trueSuccessor: v4944 #falseSuccessor: v4945  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B262" 
    successors "B265" 
    xhandlers
    flags 
    probability 4576791068796935337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4944 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a4949 
=== Usages ===
=== Predecessor ===
v4946 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4949 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?247 
arguments: v4361 i3999 i750 
=== Succesors ===
next: j4950 
=== Usages ===
j4950 
=== Predecessor ===
v4944 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?247 arguments: v4361 i3999 i750 #next: j4950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4950 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4949 
=== Succesors ===
next: v4960 
=== Usages ===
j4959 
=== Predecessor ===
a4949 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4949 #next: v4960  <|@  <|@
f <@*|@fixed>@ <|@
tid v4960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4957 
=== Predecessor ===
j4950 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B262" 
    successors "B265" 
    xhandlers
    flags 
    probability 4606895645397968717
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4945 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4955 
=== Usages ===
=== Predecessor ===
v4946 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4955  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4955 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6293 
value: j4999 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4952 
=== Usages ===
=== Predecessor ===
v4945 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6293 value: j4999 stateAfter: - lastLocationAccess: - #next: v4952  <|@  <|@
f <@~|@floating>@ <|@
tid v6304 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j4953 
index: - 
=== Succesors ===
=== Usages ===
v4952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4953 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4952 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6304 
=== Succesors ===
next: v4958 
=== Usages ===
=== Predecessor ===
v4955 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6304 #next: v4958  <|@  <|@
f <@*|@fixed>@ <|@
tid v4958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4957 
=== Predecessor ===
v4952 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B264" "B263" 
    successors 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4959 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v4957 
values: j4953 j4950 
=== Succesors ===
=== Usages ===
v6297 v6296 a4049 v6305 v6306 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v4957 values: j4953 j4950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4958 v4960 
=== Succesors ===
next: a4049 
=== Usages ===
j4959 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4958 v4960 #next: a4049  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4049 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j4959 
=== Succesors ===
next: j4970 
=== Usages ===
a4054 
=== Predecessor ===
v4957 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j4959 #next: j4970  <|@  <|@
f <@~|@floating>@ <|@
tid v4965 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j4966 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4966 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v4965 
=== Succesors ===
=== Usages ===
v6295 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v4965  <|@  <|@
f <@~|@floating>@ <|@
tid v6295 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j4966 
index: - 
=== Succesors ===
=== Usages ===
j4970 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4966 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4970 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6295 
=== Succesors ===
next: v4971 
=== Usages ===
v4971 
=== Predecessor ===
a4049 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6295 #next: v4971  <|@  <|@
f <@~|@floating>@ <|@
tid v6296 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4959 
index: - 
=== Succesors ===
=== Usages ===
v4971 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4959 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4971 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6296 
value: j4970 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4974 
=== Usages ===
=== Predecessor ===
j4970 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6296 value: j4970 stateAfter: - lastLocationAccess: - #next: v4974  <|@  <|@
f <@~|@floating>@ <|@
tid v6297 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j4959 
index: - 
=== Succesors ===
=== Usages ===
v4974 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4959 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v5001 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v4974 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4974 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6297 
value: v5001 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4978 
=== Usages ===
=== Predecessor ===
v4971 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6297 value: v5001 stateAfter: - lastLocationAccess: - #next: v4978  <|@  <|@
f <@~|@floating>@ <|@
tid v6305 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j4959 
index: - 
=== Succesors ===
=== Usages ===
v4978 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4959 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4978 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6305 
value: a3617 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4980 
=== Usages ===
=== Predecessor ===
v4974 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6305 value: a3617 stateAfter: - lastLocationAccess: - #next: v4980  <|@  <|@
f <@~|@floating>@ <|@
tid v6306 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j4959 
index: - 
=== Succesors ===
=== Usages ===
v4980 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4959 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4980 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6306 
value: i90 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a4054 
=== Usages ===
=== Predecessor ===
v4978 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6306 value: i90 stateAfter: - lastLocationAccess: - #next: a4054  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4054 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a4049 
=== Succesors ===
next: v4055 
=== Usages ===
v12 
=== Predecessor ===
v4980 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a4049 #next: v4055  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4055 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
a4054 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v12  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a4054 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4055 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a4054 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B213" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5071 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5070 
=== Usages ===
=== Predecessor ===
v5072 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5070  <|@  <|@
f <@*|@fixed>@ <|@
tid v5070 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v5066 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5071 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v5066  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4015 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4353 
=== Usages ===
=== Predecessor ===
v4016 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4353  <|@  <|@
f <@~|@floating>@ <|@
tid a4350 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4355 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -923667
stableDimension: 0
stamp: i32 [-923667] ⇊00000000fff1e7ed ⇈00000000fff1e7ed
stampKind: i32
value: int[-923667|0xfffffffffff1e7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v4353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2567 
actionAndReason: i4355 
speculation: a4350 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4015 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2567 actionAndReason: i4355 speculation: a4350  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B161" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5463 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5462 
=== Usages ===
=== Predecessor ===
v5464 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5462  <|@  <|@
f <@*|@fixed>@ <|@
tid v5462 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v5458 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5463 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v5458  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B104" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5336 
=== Usages ===
=== Predecessor ===
v5338 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5336  <|@  <|@
f <@*|@fixed>@ <|@
tid v5336 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v5332 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5337 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v5332  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5211 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5210 
=== Usages ===
=== Predecessor ===
v5212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5210  <|@  <|@
f <@*|@fixed>@ <|@
tid v5210 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v5206 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5211 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v5206  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j4363 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j4363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4363 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j4382 
=== Usages ===
v6226 v6227 
=== Predecessor ===
v0 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j4382  <|@  <|@
f <@~|@floating>@ <|@
tid v6226 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j4363 
index: - 
=== Succesors ===
=== Usages ===
j4382 v4384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4363 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4382 <|@
result v1|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6226 
=== Succesors ===
next: j4383 
=== Usages ===
j4981 j4388 v6298 
=== Predecessor ===
j4363 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6226 #next: j4383  <|@  <|@
f <@~|@floating>@ <|@
tid v6227 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j4363 
index: - 
=== Succesors ===
=== Usages ===
j4383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4363 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4383 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6227 
=== Succesors ===
next: v4371 
=== Usages ===
v4368 
=== Predecessor ===
j4382 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6227 #next: v4371  <|@  <|@
f <@~|@floating>@ <|@
tid j3843 <|@
result long[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j4981 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4981 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j4382 
y: j3843 
=== Succesors ===
=== Usages ===
v4368 v4384 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4382 y: j3843  <|@  <|@
f <@~|@floating>@ <|@
tid v4368 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4383 
y: j4981 
=== Succesors ===
=== Usages ===
v4371 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j4383 y: j4981  <|@  <|@
f <@~|@floating>@ <|@
tid i750 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2235 ?2224 ?1325 a4481 ?2199 i4751 ?2249 i1328 ?2256 i4691 ?2231 i1312 v2210 i4628 i1296 i4811 ?2181 a4375 a4949 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4361 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a4375 a4481 a4949 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Lbench/StringOp;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 124
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
a4375 a4434 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v4371 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v4368 
=== Succesors ===
trueSuccessor: v4369 
falseSuccessor: v4370 
=== Usages ===
=== Predecessor ===
j4383 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4368 #trueSuccessor: v4369 #falseSuccessor: v4370  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6c0249d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v1|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4369 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a4375 
=== Usages ===
=== Predecessor ===
v4371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4375  <|@  <|@
f <@~|@floating>@ <|@
tid i4983 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
a4375 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4375 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v4361 i4983 i750 
=== Succesors ===
next: j4376 
=== Usages ===
j4376 
=== Predecessor ===
v4369 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v4361 i4983 i750 #next: j4376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4376 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4375 
=== Succesors ===
next: v4389 
=== Usages ===
j4388 
=== Predecessor ===
a4375 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4375 #next: v4389  <|@  <|@
f <@*|@fixed>@ <|@
tid v4389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4386 
=== Predecessor ===
j4376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:124) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4384 
=== Usages ===
=== Predecessor ===
v4371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4384 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6226 
value: j4981 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4380 
=== Usages ===
=== Predecessor ===
v4370 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6226 value: j4981 stateAfter: - lastLocationAccess: - #next: v4380  <|@  <|@
f <@~|@floating>@ <|@
tid v6298 <|@
result [v1|QWORD + 240] <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j4382 
index: - 
=== Succesors ===
=== Usages ===
v4380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4382 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6298 
=== Succesors ===
next: v4387 
=== Usages ===
=== Predecessor ===
v4384 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6298 #next: v4387  <|@  <|@
f <@*|@fixed>@ <|@
tid v4387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4386 
=== Predecessor ===
v4380 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4388 <|@
result v6|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v4386 
values: j4382 j4376 
=== Succesors ===
=== Usages ===
v6230 v6229 a4024 v6228 v6299 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v4386 values: j4382 j4376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4387 v4389 
=== Succesors ===
next: a4024 
=== Usages ===
j4388 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4387 v4389 #next: a4024  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4024 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j4388 
=== Succesors ===
next: v4399 
=== Usages ===
a4031 
=== Predecessor ===
v4386 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j4388 #next: v4399  <|@  <|@
f <@~|@floating>@ <|@
tid v6228 <|@
result [v6|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j4388 
index: - 
=== Succesors ===
=== Usages ===
v4399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4388 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i2257 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6228 
value: i2257 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4400 
=== Usages ===
=== Predecessor ===
a4024 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6228 value: i2257 stateAfter: - lastLocationAccess: - #next: v4400  <|@  <|@
f <@~|@floating>@ <|@
tid v6229 <|@
result [v6|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4388 
index: - 
=== Succesors ===
=== Usages ===
v4400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4388 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j4395 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4400 v4458 j4571 v4670 v4733 v4793 v4853 v5058 v5324 v5198 v5450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4400 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6229 
value: j4395 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4404 
=== Usages ===
=== Predecessor ===
v4399 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6229 value: j4395 stateAfter: - lastLocationAccess: - #next: v4404  <|@  <|@
f <@~|@floating>@ <|@
tid v6230 <|@
result [v6|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j4388 
index: - 
=== Succesors ===
=== Usages ===
v4404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4388 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4986 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v4404 v4461 v4673 v4736 v4796 v4856 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4404 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6230 
value: v4986 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4409 
=== Usages ===
=== Predecessor ===
v4400 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6230 value: v4986 stateAfter: - lastLocationAccess: - #next: v4409  <|@  <|@
f <@~|@floating>@ <|@
tid v6299 <|@
result [v6|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j4388 
index: - 
=== Succesors ===
=== Usages ===
v4409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4388 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4407 <|@
result v8|V256_QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <27584968630861921,27584968630861922,27584968630861922,27584968630861922>
stableDimension: 0
stamp: <i64,i64,i64,i64>
stampKind: <i64,i64,i64,i64>
value: SIMD<27584968630861921,27584968630861922,27584968630861922,27584968630861922>
=== Inputs ===
=== Succesors ===
=== Usages ===
v4409 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4409 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6299 
value: v4407 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a4031 
=== Usages ===
=== Predecessor ===
v4404 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6299 value: v4407 stateAfter: - lastLocationAccess: - #next: a4031  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4031 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a4024 
=== Succesors ===
next: v4032 
=== Usages ===
v6217 
=== Predecessor ===
v4409 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a4024 #next: v4032  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4032 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j4413 
=== Usages ===
=== Predecessor ===
a4031 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j4413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4413 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j4454 
=== Usages ===
v6231 v6232 
=== Predecessor ===
v4032 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j4454  <|@  <|@
f <@~|@floating>@ <|@
tid v6231 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j4413 
index: - 
=== Succesors ===
=== Usages ===
j4454 v4456 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4413 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4454 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6231 
=== Succesors ===
next: j4455 
=== Usages ===
j5008 v6233 v6234 a4433 v6235 v6307 v6308 v6309 v6310 
=== Predecessor ===
j4413 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6231 #next: j4455  <|@  <|@
f <@~|@floating>@ <|@
tid v6232 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j4413 
index: - 
=== Succesors ===
=== Usages ===
j4455 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4413 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4455 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6232 
=== Succesors ===
next: v4429 
=== Usages ===
v4423 
=== Predecessor ===
j4454 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6232 #next: v4429  <|@  <|@
f <@~|@floating>@ <|@
tid j5007 <|@
result long[88|0x58] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 88
stableDimension: 0
stamp: i64 [88] ⇊0000000000000058 ⇈0000000000000058
stampKind: i64
value: long[88|0x58]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5008 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5008 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j4454 
y: j5007 
=== Succesors ===
=== Usages ===
v4423 v4456 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4454 y: j5007  <|@  <|@
f <@~|@floating>@ <|@
tid v4423 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4455 
y: j5008 
=== Succesors ===
=== Usages ===
v4429 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j4455 y: j5008  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3684 v4980 v4196 a4773 v4909 v4189 v3534 v3793 v4228 a4833 a4434 v4514 v4541 v4546 v4567 a4650 a4713 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2410 <|@
result int[34|0x22] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 34
stableDimension: 0
stamp: i32 [34] ⇊0000000000000022 ⇈0000000000000022
stampKind: i32
value: int[34|0x22]
=== Inputs ===
=== Succesors ===
=== Usages ===
a4434 i4272 v4510 v4457 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4394 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a4713 a4434 a4833 a4650 a4773 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v4429 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@6b4fc8c9 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v4423 
=== Succesors ===
trueSuccessor: v4428 
falseSuccessor: v4427 
=== Usages ===
=== Predecessor ===
j4455 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4423 #trueSuccessor: v4428 #falseSuccessor: v4427  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE v6|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v8|V256_QWORD = A od: SIMD<27584968630861921,27584968630861922,27584968630861922,27584968630861922> oe: QWORD <|@ <|@
      nr   -1  <|@ instruction J (address: [v6|QWORD[*] + 16], input: v8|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = LEA [v9|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4428 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a4434 
=== Usages ===
=== Predecessor ===
v4429 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4434 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v4394 i2410 i90 
=== Succesors ===
next: v4437 
=== Usages ===
a4438 
=== Predecessor ===
v4428 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v4394 i2410 i90 #next: v4437  <|@  <|@
f <@*|@fixed>@ <|@
tid v4437 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4436 
=== Predecessor ===
a4434 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[34|0x22] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:124) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD[.]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4456 
=== Usages ===
=== Predecessor ===
v4429 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4456 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6231 
value: j5008 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4444 
=== Usages ===
=== Predecessor ===
v4427 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6231 value: j5008 stateAfter: - lastLocationAccess: - #next: v4444  <|@  <|@
f <@~|@floating>@ <|@
tid v6307 <|@
result [v9|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j4454 
index: - 
=== Succesors ===
=== Usages ===
v4444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4454 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6307 
=== Succesors ===
next: v4446 
=== Usages ===
=== Predecessor ===
v4456 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6307 #next: v4446  <|@  <|@
f <@~|@floating>@ <|@
tid v6308 <|@
result [v9|QWORD + 344] <|@
d <@d|@=== Debug Properties ===
displacement: 344
scale: Times1
stamp: void*
=== Inputs ===
base: j4454 
index: - 
=== Succesors ===
=== Usages ===
v4446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4454 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6308 
=== Succesors ===
next: v4449 
=== Usages ===
=== Predecessor ===
v4444 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6308 #next: v4449  <|@  <|@
f <@~|@floating>@ <|@
tid v6309 <|@
result [v9|QWORD + 408] <|@
d <@d|@=== Debug Properties ===
displacement: 408
scale: Times1
stamp: void*
=== Inputs ===
base: j4454 
index: - 
=== Succesors ===
=== Usages ===
v4449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4454 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6309 
=== Succesors ===
next: v4452 
=== Usages ===
=== Predecessor ===
v4446 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6309 #next: v4452  <|@  <|@
f <@~|@floating>@ <|@
tid v6310 <|@
result [v9|QWORD + 472] <|@
d <@d|@=== Debug Properties ===
displacement: 472
scale: Times1
stamp: void*
=== Inputs ===
base: j4454 
index: - 
=== Succesors ===
=== Usages ===
v4452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4454 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4452 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6310 
=== Succesors ===
next: v4457 
=== Usages ===
=== Predecessor ===
v4449 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6310 #next: v4457  <|@  <|@
f <@~|@floating>@ <|@
tid v6233 <|@
result [v9|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j4454 
index: - 
=== Succesors ===
=== Usages ===
v4457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4454 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4457 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6233 
value: i2410 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4458 
=== Usages ===
=== Predecessor ===
v4452 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6233 value: i2410 stateAfter: - lastLocationAccess: - #next: v4458  <|@  <|@
f <@~|@floating>@ <|@
tid v6234 <|@
result [v9|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4454 
index: - 
=== Succesors ===
=== Usages ===
v4458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4454 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6234 
value: j4395 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4461 
=== Usages ===
=== Predecessor ===
v4457 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6234 value: j4395 stateAfter: - lastLocationAccess: - #next: v4461  <|@  <|@
f <@~|@floating>@ <|@
tid v6235 <|@
result [v9|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j4454 
index: - 
=== Succesors ===
=== Usages ===
v4461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4454 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4461 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6235 
value: v4986 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4432 
=== Usages ===
=== Predecessor ===
v4458 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6235 value: v4986 stateAfter: - lastLocationAccess: - #next: v4432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4432 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a4433 
=== Usages ===
=== Predecessor ===
v4461 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a4433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4433 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j4454 
=== Succesors ===
next: v4435 
=== Usages ===
a4438 
=== Predecessor ===
v4432 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j4454 #next: v4435  <|@  <|@
f <@*|@fixed>@ <|@
tid v4435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4436 
=== Predecessor ===
a4433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + 344] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + 408] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + 472] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD + 12] y: 34 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a4438 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v4436 
values: a4433 a4434 
=== Succesors ===
=== Usages ===
v6312 a4281 v6222 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v4436 values: a4433 a4434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4435 v4437 
=== Succesors ===
next: v5710 
=== Usages ===
a4438 v6159 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4435 v4437 #next: v5710  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v6159 
=== Usages ===
j5711 j5712 
=== Predecessor ===
v4436 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v6159  <|@  <|@
f <@~|@floating>@ <|@
tid v6217 <|@
result [v7|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a4031 
index: - 
=== Succesors ===
=== Usages ===
j5711 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4031 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j5711 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5710 
address: v6217 
=== Succesors ===
=== Usages ===
v6332 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5710 address: v6217  <|@  <|@
f <@~|@floating>@ <|@
tid v6332 <|@
result [v15|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j5711 
index: - 
=== Succesors ===
=== Usages ===
v6159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5711 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6159 <|@
result v16|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v4436 
address: v6332 
=== Succesors ===
next: v6106 
=== Usages ===
v6106 
=== Predecessor ===
v5710 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4436 address: v6332 #next: v6106  <|@  <|@
f <@~|@floating>@ <|@
tid v6222 <|@
result [v14|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a4438 
index: - 
=== Succesors ===
=== Usages ===
j5712 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4438 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j5712 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5710 
address: v6222 
=== Succesors ===
=== Usages ===
v6331 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5710 address: v6222  <|@  <|@
f <@~|@floating>@ <|@
tid v6331 <|@
result [v17|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j5712 
index: - 
=== Succesors ===
=== Usages ===
v6106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5712 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6106 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6331 
value: v6159 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5717 
=== Usages ===
=== Predecessor ===
v6159 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6331 value: v6159 stateAfter: - lastLocationAccess: - #next: v5717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v6107 
=== Usages ===
j5718 
=== Predecessor ===
v6106 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v6107  <|@  <|@
f <@~|@floating>@ <|@
tid v6312 <|@
result [v14|QWORD[.] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: a4438 
index: - 
=== Succesors ===
=== Usages ===
j5718 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4438 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j5718 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5717 
address: v6312 
=== Succesors ===
=== Usages ===
v6333 v6334 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5717 address: v6312  <|@  <|@
f <@~|@floating>@ <|@
tid v6333 <|@
result [v18|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j5718 
index: - 
=== Succesors ===
=== Usages ===
v6107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5718 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v6154 <|@
result v19|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v6123 v6138 v6107 v6104 v6153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6107 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6333 
value: v6154 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v6108 
=== Usages ===
=== Predecessor ===
v5717 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6333 value: v6154 stateAfter: - lastLocationAccess: - #next: v6108  <|@  <|@
f <@~|@floating>@ <|@
tid v6334 <|@
result [v18|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j5718 
index: - 
=== Succesors ===
=== Usages ===
v6108 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5718 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v6156 <|@
result v20|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v6099 v6108 v6120 v6135 v6150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6108 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6334 
value: v6156 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a4281 
=== Usages ===
=== Predecessor ===
v6107 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6334 value: v6156 stateAfter: - lastLocationAccess: - #next: a4281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4281 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a4438 
=== Succesors ===
next: v2631 
=== Usages ===
v6218 v6188 a4038 ?4058 v6198 v6203 v6197 v6200 v6196 v6204 v6195 v6202 v6194 v6205 v6193 v6199 v6192 ?2192 v6191 v6201 v6190 ?2524 v6189 
=== Predecessor ===
v6108 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a4438 #next: v2631  <|@  <|@
f <@~|@floating>@ <|@
tid v6188 <|@
result [v14|QWORD[.] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v2631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i3844 <|@
result int[98|0x62] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 98
stableDimension: 0
stamp: i16 [98] ⇊0000000000000062 ⇈0000000000000062
stampKind: i16
value: int[98|0x62]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2631 v2683 v2735 v2787 v2839 v2891 v2943 v2995 v3047 v3099 v3151 v3203 v3255 v3307 v3359 v3411 v3463 v3515 v3573 v3666 v3723 v3775 v3832 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2631 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6188 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2683 
=== Usages ===
=== Predecessor ===
a4281 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6188 value: i3844 stateAfter: - lastLocationAccess: - #next: v2683  <|@  <|@
f <@~|@floating>@ <|@
tid v6189 <|@
result [v14|QWORD[.] + 50] <|@
d <@d|@=== Debug Properties ===
displacement: 50
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v2683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2683 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6189 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2735 
=== Usages ===
=== Predecessor ===
v2631 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6189 value: i3844 stateAfter: - lastLocationAccess: - #next: v2735  <|@  <|@
f <@~|@floating>@ <|@
tid v6190 <|@
result [v14|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v2735 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2735 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6190 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2787 
=== Usages ===
=== Predecessor ===
v2683 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6190 value: i3844 stateAfter: - lastLocationAccess: - #next: v2787  <|@  <|@
f <@~|@floating>@ <|@
tid v6191 <|@
result [v14|QWORD[.] + 54] <|@
d <@d|@=== Debug Properties ===
displacement: 54
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v2787 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2787 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6191 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2839 
=== Usages ===
=== Predecessor ===
v2735 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6191 value: i3844 stateAfter: - lastLocationAccess: - #next: v2839  <|@  <|@
f <@~|@floating>@ <|@
tid v6192 <|@
result [v14|QWORD[.] + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v2839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6192 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2891 
=== Usages ===
=== Predecessor ===
v2787 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6192 value: i3844 stateAfter: - lastLocationAccess: - #next: v2891  <|@  <|@
f <@~|@floating>@ <|@
tid v6193 <|@
result [v14|QWORD[.] + 58] <|@
d <@d|@=== Debug Properties ===
displacement: 58
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v2891 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2891 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6193 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2943 
=== Usages ===
=== Predecessor ===
v2839 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6193 value: i3844 stateAfter: - lastLocationAccess: - #next: v2943  <|@  <|@
f <@~|@floating>@ <|@
tid v6194 <|@
result [v14|QWORD[.] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v2943 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2943 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6194 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2995 
=== Usages ===
=== Predecessor ===
v2891 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6194 value: i3844 stateAfter: - lastLocationAccess: - #next: v2995  <|@  <|@
f <@~|@floating>@ <|@
tid v6195 <|@
result [v14|QWORD[.] + 62] <|@
d <@d|@=== Debug Properties ===
displacement: 62
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v2995 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2995 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6195 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3047 
=== Usages ===
=== Predecessor ===
v2943 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6195 value: i3844 stateAfter: - lastLocationAccess: - #next: v3047  <|@  <|@
f <@~|@floating>@ <|@
tid v6196 <|@
result [v14|QWORD[.] + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v3047 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3047 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6196 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3099 
=== Usages ===
=== Predecessor ===
v2995 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6196 value: i3844 stateAfter: - lastLocationAccess: - #next: v3099  <|@  <|@
f <@~|@floating>@ <|@
tid v6197 <|@
result [v14|QWORD[.] + 66] <|@
d <@d|@=== Debug Properties ===
displacement: 66
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v3099 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3099 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6197 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3151 
=== Usages ===
=== Predecessor ===
v3047 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6197 value: i3844 stateAfter: - lastLocationAccess: - #next: v3151  <|@  <|@
f <@~|@floating>@ <|@
tid v6198 <|@
result [v14|QWORD[.] + 68] <|@
d <@d|@=== Debug Properties ===
displacement: 68
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v3151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3151 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6198 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3203 
=== Usages ===
=== Predecessor ===
v3099 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6198 value: i3844 stateAfter: - lastLocationAccess: - #next: v3203  <|@  <|@
f <@~|@floating>@ <|@
tid v6199 <|@
result [v14|QWORD[.] + 70] <|@
d <@d|@=== Debug Properties ===
displacement: 70
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v3203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6199 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3255 
=== Usages ===
=== Predecessor ===
v3151 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6199 value: i3844 stateAfter: - lastLocationAccess: - #next: v3255  <|@  <|@
f <@~|@floating>@ <|@
tid v6200 <|@
result [v14|QWORD[.] + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v3255 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3255 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6200 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3307 
=== Usages ===
=== Predecessor ===
v3203 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6200 value: i3844 stateAfter: - lastLocationAccess: - #next: v3307  <|@  <|@
f <@~|@floating>@ <|@
tid v6201 <|@
result [v14|QWORD[.] + 74] <|@
d <@d|@=== Debug Properties ===
displacement: 74
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v3307 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3307 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6201 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3359 
=== Usages ===
=== Predecessor ===
v3255 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6201 value: i3844 stateAfter: - lastLocationAccess: - #next: v3359  <|@  <|@
f <@~|@floating>@ <|@
tid v6202 <|@
result [v14|QWORD[.] + 76] <|@
d <@d|@=== Debug Properties ===
displacement: 76
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v3359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3359 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6202 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3411 
=== Usages ===
=== Predecessor ===
v3307 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6202 value: i3844 stateAfter: - lastLocationAccess: - #next: v3411  <|@  <|@
f <@~|@floating>@ <|@
tid v6203 <|@
result [v14|QWORD[.] + 78] <|@
d <@d|@=== Debug Properties ===
displacement: 78
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v3411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3411 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6203 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3463 
=== Usages ===
=== Predecessor ===
v3359 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6203 value: i3844 stateAfter: - lastLocationAccess: - #next: v3463  <|@  <|@
f <@~|@floating>@ <|@
tid v6204 <|@
result [v14|QWORD[.] + 80] <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v3463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3463 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6204 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3515 
=== Usages ===
=== Predecessor ===
v3411 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6204 value: i3844 stateAfter: - lastLocationAccess: - #next: v3515  <|@  <|@
f <@~|@floating>@ <|@
tid v6205 <|@
result [v14|QWORD[.] + 82] <|@
d <@d|@=== Debug Properties ===
displacement: 82
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
v3515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3515 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6205 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j4470 
=== Usages ===
=== Predecessor ===
v3463 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6205 value: i3844 stateAfter: - lastLocationAccess: - #next: j4470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4470 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j4485 
=== Usages ===
v6236 v6237 
=== Predecessor ===
v3515 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j4485  <|@  <|@
f <@~|@floating>@ <|@
tid v6236 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j4470 
index: - 
=== Succesors ===
=== Usages ===
j4485 v4487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4470 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4485 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6236 
=== Succesors ===
next: j4486 
=== Usages ===
j4992 j4491 v6300 
=== Predecessor ===
j4470 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6236 #next: j4486  <|@  <|@
f <@~|@floating>@ <|@
tid v6237 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j4470 
index: - 
=== Succesors ===
=== Usages ===
j4486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4470 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4486 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6237 
=== Succesors ===
next: v4478 
=== Usages ===
v4475 
=== Predecessor ===
j4485 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6237 #next: v4478  <|@  <|@
f <@~|@floating>@ <|@
tid j4991 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j4992 j4999 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4992 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j4485 
y: j4991 
=== Succesors ===
=== Usages ===
v4475 v4487 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4485 y: j4991  <|@  <|@
f <@~|@floating>@ <|@
tid v4475 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4486 
y: j4992 
=== Succesors ===
=== Usages ===
v4478 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j4486 y: j4992  <|@  <|@
tid ?89 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
?247 ?709 ?722 ?696 ?735 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
tid a92 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@67a97361
hasIdentity: true
objectId: 1
stamp: a!# Ljava/lang/StringBuffer;
type: HotSpotType<Ljava/lang/StringBuffer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?1313 ?715 ?715 ?2249 ?2181 ?2531 ?709 ?2224 ?1297 ?722 ?1313 ?251 ?4059 ?2192 ?728 ?4058 ?2231 ?2256 ?735 ?251 ?1329 ?1329 ?1297 ?728 ?696 ?1325 ?2524 ?2217 ?4060 ?1281 ?2199 ?2242 ?1281 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?251 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a92 
materializedValue: a92 
=== Succesors ===
=== Usages ===
?722 ?735 ?696 ?709 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a92 materializedValue: a92  <|@  <|@
tid ?696 <|@
d <@d|@=== Debug Properties ===
bci: 227
code: ResolvedJavaMethodBytecode<StringOp.cont(StringBuffer)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 162
stackSize: 0
=== Inputs ===
outerFrameState: ?89 
values: - a92 
virtualObjectMappings: ?251 
=== Succesors ===
=== Usages ===
?1281 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?89 values: - a92 virtualObjectMappings: ?251  <|@  <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
eliminated: false
lockDepth: 0
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
?1281 
=== Predecessor ===
- >@ <|@
instruction <@MonitorId|@org.graalvm.compiler.nodes.java.MonitorIdNode>@  <|@  <|@
tid ?1281 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<StringBuffer.append(String)>
duringCall: true
localsSize: 2
locksSize: 1
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?696 
values: a92 - a92 
monitorIds: v685 
=== Succesors ===
=== Usages ===
?2181 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?696 values: a92 - a92 monitorIds: v685  <|@  <|@
tid ?2181 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?1281 
values: a92 - i750 
=== Succesors ===
=== Usages ===
?2179 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1281 values: a92 - i750  <|@  <|@
f <@~|@floating>@ <|@
tid i2517 <|@
result int[33|0x21] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 33
stableDimension: 0
stamp: i32 [33] ⇊0000000000000021 ⇈0000000000000021
stampKind: i32
value: int[33|0x21]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2524 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?2524 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a92 
values: i2517 a4281 - 
=== Succesors ===
=== Usages ===
?2179 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a92 values: i2517 a4281 -  <|@  <|@
tid ?2179 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<String.getChars(int, int, char[], int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 827
stackSize: 0
=== Inputs ===
outerFrameState: ?2181 
values: - - - - - 
virtualObjectMappings: ?2524 
=== Succesors ===
=== Usages ===
a4481 v4588 v4553 i4540 i4545 v4553 j4554 i4566 j4574 v4588 v4608 v4609 v4610 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2181 values: - - - - - virtualObjectMappings: ?2524  <|@  <|@
f <@~|@floating>@ <|@
tid i3999 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i4000 i4002 a4949 a4481 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v4478 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v4475 
=== Succesors ===
trueSuccessor: v4476 
falseSuccessor: v4477 
=== Usages ===
=== Predecessor ===
j4486 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4475 #trueSuccessor: v4476 #falseSuccessor: v4477  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = LEA [v7|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|V256_WORD = H [v15|QWORD[.]] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = LEA [v14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction J (address: [v17|QWORD[.]], input: v16|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = LEA [v14|QWORD[.] + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v18|QWORD[.]], input: v19|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v20|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v18|QWORD[.] + 32], input: v20|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 48] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 50] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 52] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 54] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 56] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 58] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 60] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 62] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 64] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 66] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 68] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 70] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 72] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 74] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 76] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 78] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 80] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 82] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA [v21|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4476 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a4481 
=== Usages ===
=== Predecessor ===
v4478 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4481 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2179 
arguments: v4361 i3999 i750 
=== Succesors ===
next: j4482 
=== Usages ===
j4482 
=== Predecessor ===
v4476 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2179 arguments: v4361 i3999 i750 #next: j4482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4482 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4481 
=== Succesors ===
next: v4492 
=== Usages ===
j4491 
=== Predecessor ===
a4481 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4481 #next: v4492  <|@  <|@
f <@*|@fixed>@ <|@
tid v4492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4489 
=== Predecessor ===
j4482 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]}, vstack:0|QWORD, eliminated] 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} Ljava/lang/StringBuffer; int[33|0x21] v14|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 7, 227, 17] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4487 
=== Usages ===
=== Predecessor ===
v4478 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4487 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6236 
value: j4992 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4484 
=== Usages ===
=== Predecessor ===
v4477 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6236 value: j4992 stateAfter: - lastLocationAccess: - #next: v4484  <|@  <|@
f <@~|@floating>@ <|@
tid v6300 <|@
result [v21|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j4485 
index: - 
=== Succesors ===
=== Usages ===
v4484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4485 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6300 
=== Succesors ===
next: v4490 
=== Usages ===
=== Predecessor ===
v4487 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6300 #next: v4490  <|@  <|@
f <@*|@fixed>@ <|@
tid v4490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4489 
=== Predecessor ===
v4484 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4491 <|@
result v25|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v4489 
values: j4485 j4482 
=== Succesors ===
=== Usages ===
v6240 v6239 a4035 v6301 v6302 v6303 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v4489 values: j4485 j4482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4490 v4492 
=== Succesors ===
next: a4035 
=== Usages ===
j4491 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4490 v4492 #next: a4035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4035 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j4491 
=== Succesors ===
next: j4502 
=== Usages ===
a4042 
=== Predecessor ===
v4489 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j4491 #next: j4502  <|@  <|@
f <@~|@floating>@ <|@
tid v4044 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6241 j4497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4497 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v4044 
=== Succesors ===
=== Usages ===
v6238 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v4044  <|@  <|@
f <@~|@floating>@ <|@
tid v6238 <|@
result [v27|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j4497 
index: - 
=== Succesors ===
=== Usages ===
j4502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4497 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4502 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6238 
=== Succesors ===
next: v4503 
=== Usages ===
v4503 
=== Predecessor ===
a4035 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6238 #next: v4503  <|@  <|@
f <@~|@floating>@ <|@
tid v6239 <|@
result [v25|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4491 
index: - 
=== Succesors ===
=== Usages ===
v4503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4491 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4503 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6239 
value: j4502 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4506 
=== Usages ===
=== Predecessor ===
j4502 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6239 value: j4502 stateAfter: - lastLocationAccess: - #next: v4506  <|@  <|@
f <@~|@floating>@ <|@
tid v6240 <|@
result [v25|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j4491 
index: - 
=== Succesors ===
=== Usages ===
v4506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4491 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4995 <|@
result meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v4506 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4506 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6240 
value: v4995 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4510 
=== Usages ===
=== Predecessor ===
v4503 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6240 value: v4995 stateAfter: - lastLocationAccess: - #next: v4510  <|@  <|@
f <@~|@floating>@ <|@
tid v6301 <|@
result [v25|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j4491 
index: - 
=== Succesors ===
=== Usages ===
v4510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4491 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4510 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6301 
value: i2410 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4512 
=== Usages ===
=== Predecessor ===
v4506 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6301 value: i2410 stateAfter: - lastLocationAccess: - #next: v4512  <|@  <|@
f <@~|@floating>@ <|@
tid v6302 <|@
result [v25|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j4491 
index: - 
=== Succesors ===
=== Usages ===
v4512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4491 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a4038 <|@
result v29|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a4281 
=== Succesors ===
=== Usages ===
v4512 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4512 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6302 
value: a4038 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4514 
=== Usages ===
=== Predecessor ===
v4510 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6302 value: a4038 stateAfter: - lastLocationAccess: - #next: v4514  <|@  <|@
f <@~|@floating>@ <|@
tid v6303 <|@
result [v25|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j4491 
index: - 
=== Succesors ===
=== Usages ===
v4514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4491 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6303 
value: i90 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a4042 
=== Usages ===
=== Predecessor ===
v4512 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6303 value: i90 stateAfter: - lastLocationAccess: - #next: a4042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4042 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a4035 
=== Succesors ===
next: j4606 
=== Usages ===
v4914 v3520 ?2531 v6206 v6209 v6207 v3671 v3780 v6292 j4516 v4525 j4530 v4553 v4579 v4588 j4681 j4744 j4804 j4864 v4902 j4906 
=== Predecessor ===
v4514 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a4035 #next: j4606  <|@  <|@
f <@~|@floating>@ <|@
tid v6292 <|@
result [v26|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a4042 
index: - 
=== Succesors ===
=== Usages ===
j4925 j4606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4606 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6292 
=== Succesors ===
next: j4515 
=== Usages ===
j4517 j4521 j4537 i4545 j4554 j4571 v4599 v6245 
=== Predecessor ===
a4042 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6292 #next: j4515  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4515 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
stamp: i64
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j4516 
=== Usages ===
v4553 v6243 j4574 v4588 v4610 
=== Predecessor ===
j4606 >@ <|@
instruction <@BeginLockScope|@org.graalvm.compiler.hotspot.nodes.BeginLockScopeNode>@ stateAfter: - #next: j4516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4516 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4042 
=== Succesors ===
next: j4607 
=== Usages ===
v6244 
=== Predecessor ===
j4515 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4042 #next: j4607  <|@  <|@
f <@~|@floating>@ <|@
tid v6241 <|@
result [v27|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: v4044 
index: - 
=== Succesors ===
=== Usages ===
j4607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v4044 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4607 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6241 
=== Succesors ===
next: j4519 
=== Usages ===
j4520 j4554 
=== Predecessor ===
j4516 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6241 #next: j4519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4519 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v4524 
=== Usages ===
j4520 j4538 
=== Predecessor ===
j4607 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v4524  <|@  <|@
f <@~|@floating>@ <|@
tid j4520 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$92/1285640437@181e2e71
stamp: i64
=== Inputs ===
x: j4519 
y: j4607 
=== Succesors ===
=== Usages ===
j4521 i4545 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j4519 y: j4607  <|@  <|@
f <@~|@floating>@ <|@
tid j4521 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$95/254966325@645792aa
stamp: i64
=== Inputs ===
x: j4520 
y: j4606 
=== Succesors ===
=== Usages ===
v4591 v4593 v4595 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j4520 y: j4606  <|@  <|@
f <@~|@floating>@ <|@
tid j4590 <|@
result long[-121|0xffffffffffffff87] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -121
stableDimension: 0
stamp: i64 [-121] ⇊ffffffffffffff87 ⇈ffffffffffffff87
stampKind: i64
value: long[-121|0xffffffffffffff87]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4591 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4591 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
x: j4521 
y: j4590 
=== Succesors ===
=== Usages ===
v4524 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j4521 y: j4590  <|@  <|@
f <@~|@floating>@ <|@
tid j4022 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5808 v5770 v4931 i4566 v5934 j5927 j5921 j5987 v4561 v5883 j5979 v4609 j5874 j5866 v5996 v5821 j5814 v4879 v4889 v4894 v6047 j5621 j5629 v5639 j6040 j5681 j5687 v5694 j5761 j5753 j6034 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4598 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4599 v4917 j5611 j5674 j5744 j5801 j5857 j5914 j5970 j6027 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4589 <|@
result long[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j4517 v4593 j4871 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4592 <|@
result long[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 5
stableDimension: 0
stamp: i64 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i64
value: long[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4526 v4872 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v4524 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v4591 
=== Succesors ===
trueSuccessor: v4523 
falseSuccessor: v4522 
=== Usages ===
=== Predecessor ===
j4519 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4591 #trueSuccessor: v4523 #falseSuccessor: v4522  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE v25|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [v27|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[*]], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v25|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v25|QWORD[*] + 12] y: 34 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[.] = COMPRESSPOINTER (input: v14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[*] + 16], y: v29|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [v26|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = STACKLEA vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [v27|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = OR (x: r15|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = XOR (x: v33|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v34|QWORD y: -121 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B35" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4525 
=== Usages ===
=== Predecessor ===
v4524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4525 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
object: a4042 
=== Succesors ===
next: v4618 
=== Usages ===
=== Predecessor ===
v4523 >@ <|@
instruction <@FastAcquireBiasedLock|@org.graalvm.compiler.hotspot.nodes.FastAcquireBiasedLockNode>@ object: a4042 #next: v4618  <|@  <|@
f <@*|@fixed>@ <|@
tid v4618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4613 
=== Predecessor ===
v4525 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4522 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4529 
=== Usages ===
=== Predecessor ===
v4524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4529  <|@  <|@
f <@~|@floating>@ <|@
tid j4517 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$94/978859646@9756628
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j4606 
y: j4589 
=== Succesors ===
=== Usages ===
v4526 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j4606 y: j4589  <|@  <|@
f <@~|@floating>@ <|@
tid v4526 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4517 
y: j4592 
=== Succesors ===
=== Usages ===
v4529 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j4517 y: j4592  <|@  <|@
f <@*|@fixed>@ <|@
tid v4529 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v4526 
=== Succesors ===
trueSuccessor: v4528 
falseSuccessor: v4527 
=== Usages ===
=== Predecessor ===
v4522 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4526 #trueSuccessor: v4528 #falseSuccessor: v4527  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = AND v30|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v35|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B21" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4530 
=== Usages ===
=== Predecessor ===
v4529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4530 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4042 
=== Succesors ===
next: v4533 
=== Usages ===
v6242 
=== Predecessor ===
v4528 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4042 #next: v4533  <|@  <|@
f <@~|@floating>@ <|@
tid v6242 <|@
result [v26|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4530 
index: - 
=== Succesors ===
=== Usages ===
i4540 i4545 j4554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4530 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
x: j4521 
y: j4589 
=== Succesors ===
=== Usages ===
v4533 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j4521 y: j4589  <|@  <|@
f <@*|@fixed>@ <|@
tid v4533 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v4593 
=== Succesors ===
trueSuccessor: v4532 
falseSuccessor: v4531 
=== Usages ===
=== Predecessor ===
j4530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4593 #trueSuccessor: v4532 #falseSuccessor: v4531  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v34|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4532 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4536 
=== Usages ===
=== Predecessor ===
v4533 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4536  <|@  <|@
f <@~|@floating>@ <|@
tid j4594 <|@
result long[768|0x300] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 768
stableDimension: 0
stamp: i64 [768] ⇊0000000000000300 ⇈0000000000000300
stampKind: i64
value: long[768|0x300]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4595 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
x: j4521 
y: j4594 
=== Succesors ===
=== Usages ===
v4536 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j4521 y: j4594  <|@  <|@
f <@*|@fixed>@ <|@
tid v4536 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v4595 
=== Succesors ===
trueSuccessor: v4535 
falseSuccessor: v4534 
=== Usages ===
=== Predecessor ===
v4532 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4595 #trueSuccessor: v4535 #falseSuccessor: v4534  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v34|QWORD y: 768 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4535 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i4540 
=== Usages ===
=== Predecessor ===
v4536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4540  <|@  <|@
f <@~|@floating>@ <|@
tid j4596 <|@
result long[895|0x37f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 895
stableDimension: 0
stamp: i64 [895] ⇊000000000000037f ⇈000000000000037f
stampKind: i64
value: long[895|0x37f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j4537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4537 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$94/978859646@9756628
stamp: i64 [0 - 895] ⇈000000000000037f
=== Inputs ===
x: j4606 
y: j4596 
=== Succesors ===
=== Usages ===
j4538 i4540 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j4606 y: j4596  <|@  <|@
f <@~|@floating>@ <|@
tid j4538 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$92/1285640437@181e2e71
stamp: i64
=== Inputs ===
x: j4519 
y: j4537 
=== Succesors ===
=== Usages ===
i4540 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j4519 y: j4537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4540 <|@
result INTERIOR_MATCH <|@
st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
locks: 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: a92 - i750: int[1|0x1] 
locks: 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: a92 - 
locks: a92 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - a92 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6242 
expectedValue: j4537 
newValue: j4538 
stateAfter: ?2179 
=== Succesors ===
next: v4544 
=== Usages ===
v4541 
=== Predecessor ===
v4535 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v6242 expectedValue: j4537 newValue: j4538 stateAfter: ?2179 #next: v4544  <|@  <|@
f <@~|@floating>@ <|@
tid v4541 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4540 
y: i90 
=== Succesors ===
=== Usages ===
v4544 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4540 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v4544 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@6b4fc8c9 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v4541 
=== Succesors ===
trueSuccessor: v4542 
falseSuccessor: v4543 
=== Usages ===
=== Predecessor ===
i4540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4541 #trueSuccessor: v4542 #falseSuccessor: v4543  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = AND v30|QWORD y: 895 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = OR (x: r15|QWORD, y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v26|QWORD[.]], cmpValue: rax|QWORD, newValue: v37|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4515753460700115334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4550 
=== Usages ===
=== Predecessor ===
v4544 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4550  <|@  <|@
f <@*|@fixed>@ <|@
tid v4550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4551 
=== Predecessor ===
v4542 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B35" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4543 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4619 
=== Usages ===
=== Predecessor ===
v4544 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4619  <|@  <|@
f <@*|@fixed>@ <|@
tid v4619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4613 
=== Predecessor ===
v4543 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i4545 
=== Usages ===
=== Predecessor ===
v4536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i4545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4545 <|@
result INTERIOR_MATCH <|@
st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
locks: 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: a92 - i750: int[1|0x1] 
locks: 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: a92 - 
locks: a92 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - a92 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6242 
expectedValue: j4606 
newValue: j4520 
stateAfter: ?2179 
=== Succesors ===
next: v4549 
=== Usages ===
v4546 
=== Predecessor ===
v4534 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v6242 expectedValue: j4606 newValue: j4520 stateAfter: ?2179 #next: v4549  <|@  <|@
f <@~|@floating>@ <|@
tid v4546 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4545 
y: i90 
=== Succesors ===
=== Usages ===
v4549 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4545 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v4549 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@6b4fc8c9 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v4546 
=== Succesors ===
trueSuccessor: v4547 
falseSuccessor: v4548 
=== Usages ===
=== Predecessor ===
i4545 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4546 #trueSuccessor: v4547 #falseSuccessor: v4548  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v26|QWORD[.]], cmpValue: rax|QWORD, newValue: v33|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B17 -> B18 falseDestination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4501392635851087307
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4552 
=== Usages ===
=== Predecessor ===
v4549 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4552  <|@  <|@
f <@*|@fixed>@ <|@
tid v4552 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4551 
=== Predecessor ===
v4547 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B35" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4551 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4550 v4552 
=== Succesors ===
next: v4553 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4550 v4552 #next: v4553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4553 <|@
st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
locks: 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: a92 - i750: int[1|0x1] 
locks: 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: a92 - 
locks: a92 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - a92 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorenter(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: void
=== Inputs ===
stateAfter: ?2179 
stateDuring: ?2179 
arguments: a4042 j4515 
=== Succesors ===
next: v4621 
=== Usages ===
=== Predecessor ===
v4551 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?2179 stateDuring: ?2179 arguments: a4042 j4515 #next: v4621  <|@  <|@
f <@*|@fixed>@ <|@
tid v4621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4613 
=== Predecessor ===
v4553 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]}, vstack:0|QWORD, eliminated] 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} Ljava/lang/StringBuffer; int[33|0x21] v14|QWORD[.] Object[null] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x10acd9b20:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:61, 35, 7, 227, 17] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B35" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4620 
=== Usages ===
=== Predecessor ===
v4549 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4620  <|@  <|@
f <@*|@fixed>@ <|@
tid v4620 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4613 
=== Predecessor ===
v4548 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4554 
=== Usages ===
=== Predecessor ===
v4533 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4554 <|@
result v38|QWORD <|@
st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
locks: 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: a92 - i750: int[1|0x1] 
locks: 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: a92 - 
locks: a92 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - a92 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6242 
expectedValue: j4606 
newValue: j4607 
stateAfter: ?2179 
=== Succesors ===
next: v4555 
=== Usages ===
=== Predecessor ===
v4531 >@ <|@
instruction <@ValueCompareAndSwap|@org.graalvm.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v6242 expectedValue: j4606 newValue: j4607 stateAfter: ?2179 #next: v4555  <|@  <|@
f <@*|@fixed>@ <|@
tid v4555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4597 
=== Predecessor ===
j4554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v26|QWORD[.]], cmpValue: rax|QWORD, newValue: v32|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4527 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4556 
=== Usages ===
=== Predecessor ===
v4529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4556  <|@  <|@
f <@*|@fixed>@ <|@
tid v4556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4597 
=== Predecessor ===
v4527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B29" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4597 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4555 v4556 
=== Succesors ===
next: v4559 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4555 v4556 #next: v4559  <|@  <|@
f <@~|@floating>@ <|@
tid v6243 <|@
result [v31|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4515 
index: - 
=== Succesors ===
=== Usages ===
v4608 v4609 v4610 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4515 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v4599 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
x: j4606 
y: j4598 
=== Succesors ===
=== Usages ===
v4559 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j4606 y: j4598  <|@  <|@
f <@*|@fixed>@ <|@
tid v4559 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v4599 
=== Succesors ===
trueSuccessor: v4557 
falseSuccessor: v4558 
=== Usages ===
=== Predecessor ===
v4597 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4599 #trueSuccessor: v4557 #falseSuccessor: v4558  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v30|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4608 
=== Usages ===
=== Predecessor ===
v4559 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4608  <|@  <|@
f <@~|@floating>@ <|@
tid j4571 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$92/1285640437@181e2e71
stamp: i64 [-9223372036854775807 - 9223372036854775807] ⇊0000000000000001
=== Inputs ===
x: j4606 
y: j4395 
=== Succesors ===
=== Usages ===
j4574 v4575 v4608 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j4606 y: j4395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4608 <|@
st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
locks: 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: a92 - i750: int[1|0x1] 
locks: 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: a92 - 
locks: a92 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - a92 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6243 
value: j4571 
stateAfter: ?2179 
lastLocationAccess: - 
=== Succesors ===
next: v4572 
=== Usages ===
=== Predecessor ===
v4557 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6243 value: j4571 stateAfter: ?2179 lastLocationAccess: - #next: v4572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4572 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j4574 
=== Usages ===
=== Predecessor ===
v4608 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j4574  <|@  <|@
f <@~|@floating>@ <|@
tid v6244 <|@
result [v26|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4516 
index: - 
=== Succesors ===
=== Usages ===
j4574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4516 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4574 <|@
result v40|QWORD <|@
st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
locks: 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: a92 - i750: int[1|0x1] 
locks: 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: a92 - 
locks: a92 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - a92 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6244 
expectedValue: j4571 
newValue: j4515 
stateAfter: ?2179 
=== Succesors ===
next: v4578 
=== Usages ===
v4575 j4581 
=== Predecessor ===
v4572 >@ <|@
instruction <@ValueCompareAndSwap|@org.graalvm.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v6244 expectedValue: j4571 newValue: j4515 stateAfter: ?2179 #next: v4578  <|@  <|@
f <@~|@floating>@ <|@
tid v4575 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4571 
y: j4574 
=== Succesors ===
=== Usages ===
v4578 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j4571 y: j4574  <|@  <|@
f <@*|@fixed>@ <|@
tid v4578 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v4575 
=== Succesors ===
trueSuccessor: v4577 
falseSuccessor: v4576 
=== Usages ===
=== Predecessor ===
j4574 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4575 #trueSuccessor: v4577 #falseSuccessor: v4576  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = OR v30|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v26|QWORD[.]], cmpValue: rax|QWORD, newValue: v31|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B35" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4577 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4579 
=== Usages ===
=== Predecessor ===
v4578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4579  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4579 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
object: a4042 
=== Succesors ===
next: v4615 
=== Usages ===
=== Predecessor ===
v4577 >@ <|@
instruction <@AcquiredCASLock|@org.graalvm.compiler.hotspot.nodes.AcquiredCASLockNode>@ object: a4042 #next: v4615  <|@  <|@
f <@*|@fixed>@ <|@
tid v4615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4613 
=== Predecessor ===
v4579 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4580 
=== Usages ===
=== Predecessor ===
v4578 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4580  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4580 <|@
result rsp|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: rsp
stamp: i64
=== Inputs ===
=== Succesors ===
next: v4584 
=== Usages ===
j4581 
=== Predecessor ===
v4576 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v4584  <|@  <|@
f <@~|@floating>@ <|@
tid j4581 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$68/1668473261@10b940da
stamp: i64
=== Inputs ===
x: j4574 
y: j4580 
=== Succesors ===
=== Usages ===
v4602 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j4574 y: j4580  <|@  <|@
f <@~|@floating>@ <|@
tid j4601 <|@
result long[-4089|0xfffffffffffff007] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4089
stableDimension: 0
stamp: i64 [-4089] ⇊fffffffffffff007 ⇈fffffffffffff007
stampKind: i64
value: long[-4089|0xfffffffffffff007]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4602 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
x: j4581 
y: j4601 
=== Succesors ===
=== Usages ===
v4584 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j4581 y: j4601  <|@  <|@
f <@*|@fixed>@ <|@
tid v4584 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v4602 
=== Succesors ===
trueSuccessor: v4583 
falseSuccessor: v4582 
=== Usages ===
=== Predecessor ===
j4580 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4602 #trueSuccessor: v4583 #falseSuccessor: v4582  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = SUB (x: v40|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v41|QWORD y: -4089 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4609 
=== Usages ===
=== Predecessor ===
v4584 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4609  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4609 <|@
st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
locks: 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: a92 - i750: int[1|0x1] 
locks: 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: a92 - 
locks: a92 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - a92 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6243 
value: j4022 
stateAfter: ?2179 
lastLocationAccess: - 
=== Succesors ===
next: v4616 
=== Usages ===
=== Predecessor ===
v4583 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6243 value: j4022 stateAfter: ?2179 lastLocationAccess: - #next: v4616  <|@  <|@
f <@*|@fixed>@ <|@
tid v4616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4613 
=== Predecessor ===
v4609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4516611986926701044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4582 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4587 
=== Usages ===
=== Predecessor ===
v4584 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4587  <|@  <|@
f <@*|@fixed>@ <|@
tid v4587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4586 
=== Predecessor ===
v4582 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4610 
=== Usages ===
=== Predecessor ===
v4559 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4610 <|@
st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
locks: 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: a92 - i750: int[1|0x1] 
locks: 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: a92 - 
locks: a92 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - a92 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: DisplacedMarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6243 
value: j4515 
stateAfter: ?2179 
lastLocationAccess: - 
=== Succesors ===
next: j4611 
=== Usages ===
=== Predecessor ===
v4558 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6243 value: j4515 stateAfter: ?2179 lastLocationAccess: - #next: j4611  <|@  <|@
f <@~|@floating>@ <|@
tid v6245 <|@
result [v30|QWORD + 22] <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: j4606 
index: - 
=== Succesors ===
=== Usages ===
i4566 j4611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4606 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4611 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_owner
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6245 
=== Succesors ===
next: v4564 
=== Usages ===
v4561 
=== Predecessor ===
v4610 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6245 #next: v4564  <|@  <|@
f <@~|@floating>@ <|@
tid v4561 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4611 
y: j4022 
=== Succesors ===
=== Usages ===
v4564 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j4611 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v4564 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@6b4fc8c9 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v4561 
=== Succesors ===
trueSuccessor: v4563 
falseSuccessor: v4562 
=== Usages ===
=== Predecessor ===
j4611 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4561 #trueSuccessor: v4563 #falseSuccessor: v4562  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v30|QWORD + 22] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4565 
=== Usages ===
=== Predecessor ===
v4564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4565  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4565 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: i4566 
=== Usages ===
i4566 
=== Predecessor ===
v4563 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: i4566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4566 <|@
result INTERIOR_MATCH <|@
st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
locks: 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: a92 - i750: int[1|0x1] 
locks: 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: a92 - 
locks: a92 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - a92 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ObjectMonitor::_owner
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6245 
expectedValue: j4022 
newValue: j4565 
stateAfter: ?2179 
=== Succesors ===
next: v4570 
=== Usages ===
v4567 
=== Predecessor ===
j4565 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v6245 expectedValue: j4022 newValue: j4565 stateAfter: ?2179 #next: v4570  <|@  <|@
f <@~|@floating>@ <|@
tid v4567 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4566 
y: i90 
=== Succesors ===
=== Usages ===
v4570 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4566 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v4570 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@6b4fc8c9 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v4567 
=== Succesors ===
trueSuccessor: v4568 
falseSuccessor: v4569 
=== Usages ===
=== Predecessor ===
i4566 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4567 #trueSuccessor: v4568 #falseSuccessor: v4569  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v30|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4530952148194186286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4585 
=== Usages ===
=== Predecessor ===
v4570 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4585  <|@  <|@
f <@*|@fixed>@ <|@
tid v4585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4586 
=== Predecessor ===
v4568 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4569 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4614 
=== Usages ===
=== Predecessor ===
v4570 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4614  <|@  <|@
f <@*|@fixed>@ <|@
tid v4614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4613 
=== Predecessor ===
v4569 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4531489317381612709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4562 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4604 
=== Usages ===
=== Predecessor ===
v4564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4604  <|@  <|@
f <@*|@fixed>@ <|@
tid v4604 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4586 
=== Predecessor ===
v4562 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B28" "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4585 v4587 v4604 
=== Succesors ===
next: v4588 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4585 v4587 v4604 #next: v4588  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4588 <|@
st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
locks: 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: a92 - i750: int[1|0x1] 
locks: 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: a92 - 
locks: a92 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - a92 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorenter(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: void
=== Inputs ===
stateAfter: ?2179 
stateDuring: ?2179 
arguments: a4042 j4515 
=== Succesors ===
next: v4617 
=== Usages ===
=== Predecessor ===
v4586 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?2179 stateDuring: ?2179 arguments: a4042 j4515 #next: v4617  <|@  <|@
f <@*|@fixed>@ <|@
tid v4617 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4613 
=== Predecessor ===
v4588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]}, vstack:0|QWORD, eliminated] 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} Ljava/lang/StringBuffer; int[33|0x21] v14|QWORD[.] Object[null] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x10acd9b20:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:61, 35, 7, 227, 17] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B25" "B27" "B34" "B10" "B16" "B20" "B19" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4614 v4615 v4616 v4617 v4618 v4619 v4620 v4621 
=== Succesors ===
next: v4046 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4614 v4615 v4616 v4617 v4618 v4619 v4620 v4621 #next: v4046  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4046 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: i2191 
=== Usages ===
=== Predecessor ===
v4613 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i2191  <|@  <|@
f <@~|@floating>@ <|@
tid i2525 <|@
result int[35|0x23] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 35
stableDimension: 0
stamp: i32 [35] ⇊0000000000000023 ⇈0000000000000023
stampKind: i32
value: int[35|0x23]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3520 v4270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v3520 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@5dc4b896
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a4042 i2525 
=== Succesors ===
=== Usages ===
i2191 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a4042 i2525  <|@  <|@
tid ?709 <|@
d <@d|@=== Debug Properties ===
bci: 234
code: ResolvedJavaMethodBytecode<StringOp.cont(StringBuffer)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 163
stackSize: 0
=== Inputs ===
outerFrameState: ?89 
values: - a92 
virtualObjectMappings: ?251 
=== Succesors ===
=== Usages ===
?1297 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?89 values: - a92 virtualObjectMappings: ?251  <|@  <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
eliminated: false
lockDepth: 0
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
?715 ?1329 ?1297 ?1313 ?728 
=== Predecessor ===
- >@ <|@
instruction <@MonitorId|@org.graalvm.compiler.nodes.java.MonitorIdNode>@  <|@  <|@
tid ?1297 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<StringBuffer.append(String)>
duringCall: true
localsSize: 2
locksSize: 1
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?709 
values: a92 - a92 
monitorIds: v698 
=== Succesors ===
=== Usages ===
?2199 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?709 values: a92 - a92 monitorIds: v698  <|@  <|@
f <@~|@floating>@ <|@
tid a13 <|@
result Object[String:"b"] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: "b"
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object[String:"b"]
=== Inputs ===
=== Succesors ===
=== Usages ===
?715 ?2249 ?728 ?2224 ?2199 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?2199 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?1297 
values: a92 a13 i750 
=== Succesors ===
=== Usages ===
?2192 ?2196 ?4058 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1297 values: a92 a13 i750  <|@  <|@
tid ?2531 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a92 
materializedValue: a4042 
=== Succesors ===
=== Usages ===
?2192 ?2196 ?1325 ?4058 ?4060 ?2242 ?728 ?715 ?2217 ?2221 ?2560 ?2567 ?4059 ?2246 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a92 materializedValue: a4042  <|@  <|@
tid ?4058 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?2199 
values: - - a92 a4281 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
i2191 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2199 values: - - a92 a4281 virtualObjectMappings: ?2531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2191 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 17
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3520 
stateDuring: ?4058 
=== Succesors ===
next: v4156 
=== Usages ===
?2192 v4635 i3969 j5034 i4628 v4669 v4203 a4650 i4272 i2209 i4266 v4196 v4270 
=== Predecessor ===
v4046 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3520 stateDuring: ?4058 #next: v4156  <|@  <|@
tid ?2192 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?2199 
values: - - a92 a4281 i2191 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
a4650 v4162 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2199 values: - - a92 a4281 i2191 virtualObjectMappings: ?2531  <|@  <|@
f <@~|@floating>@ <|@
tid v4196 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2191 
y: i90 
=== Succesors ===
=== Usages ===
v4156 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2191 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v4156 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v4196 
=== Succesors ===
trueSuccessor: v4155 
falseSuccessor: v4151 
=== Usages ===
=== Predecessor ===
i2191 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4196 #trueSuccessor: v4155 #falseSuccessor: v4151  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[35|0x23] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v26|QWORD[.] v14|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:163) [bci: 234]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad state [bci:17, 21, 7, 234, 17] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4162 
=== Usages ===
=== Predecessor ===
v4156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4162  <|@  <|@
f <@*|@fixed>@ <|@
tid v4162 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?2192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4155 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -1065569 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v26|QWORD[.] v14|QWORD[.] v42|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:163) [bci: 234]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:20, 21, 7, 234, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4630 
=== Usages ===
=== Predecessor ===
v4156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4630 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j4666 
=== Usages ===
v6246 v6247 
=== Predecessor ===
v4151 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j4666  <|@  <|@
f <@~|@floating>@ <|@
tid v6246 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j4630 
index: - 
=== Succesors ===
=== Usages ===
j4666 v4668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4630 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4666 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6246 
=== Succesors ===
next: j4667 
=== Usages ===
j4634 v6248 v6249 a4649 v6254 v6250 v6251 v6252 v6253 
=== Predecessor ===
j4630 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6246 #next: j4667  <|@  <|@
f <@~|@floating>@ <|@
tid v6247 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j4630 
index: - 
=== Succesors ===
=== Usages ===
j4667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4630 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4667 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6247 
=== Succesors ===
next: v4638 
=== Usages ===
v4639 
=== Predecessor ===
j4666 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6247 #next: v4638  <|@  <|@
f <@~|@floating>@ <|@
tid i4418 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4818 v4635 v4698 v4758 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4635 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2191 
y: i4418 
=== Succesors ===
=== Usages ===
v4638 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2191 y: i4418  <|@  <|@
f <@~|@floating>@ <|@
tid i4441 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i4840 i4657 i4720 i4780 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4411 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i4812 i4629 i4692 i4752 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v4638 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v4635 
=== Succesors ===
trueSuccessor: v4637 
falseSuccessor: v4636 
=== Usages ===
=== Predecessor ===
j4667 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4635 #trueSuccessor: v4637 #falseSuccessor: v4636  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v42|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4637 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4645 
=== Usages ===
=== Predecessor ===
v4638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4645  <|@  <|@
f <@~|@floating>@ <|@
tid i4628 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$11/1514064396@6c95a661
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i2191 
y: i750 
=== Succesors ===
=== Usages ===
i4657 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2191 y: i750  <|@  <|@
f <@~|@floating>@ <|@
tid i4657 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i4628 
y: i4441 
=== Succesors ===
=== Usages ===
i4629 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4628 y: i4441  <|@  <|@
f <@~|@floating>@ <|@
tid i4629 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$94/978859646@9756628
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i4657 
y: i4411 
=== Succesors ===
=== Usages ===
j4633 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i4657 y: i4411  <|@  <|@
f <@~|@floating>@ <|@
tid j4633 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i4629 
=== Succesors ===
=== Usages ===
j4634 v6250 v6251 v6252 v6253 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i4629  <|@  <|@
f <@~|@floating>@ <|@
tid j4634 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j4633 
y: j4666 
=== Succesors ===
=== Usages ===
v4639 v4668 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4633 y: j4666  <|@  <|@
f <@~|@floating>@ <|@
tid v4639 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4667 
y: j4634 
=== Succesors ===
=== Usages ===
v4645 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j4667 y: j4634  <|@  <|@
f <@*|@fixed>@ <|@
tid v4645 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v4639 
=== Succesors ===
trueSuccessor: v4644 
falseSuccessor: v4643 
=== Usages ===
=== Predecessor ===
v4637 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4639 #trueSuccessor: v4644 #falseSuccessor: v4643  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = SHL v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = LEA [v45|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = AND v46|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVSXD v47|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = ADD (x: v48|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4642 
=== Usages ===
=== Predecessor ===
v4645 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4642  <|@  <|@
f <@*|@fixed>@ <|@
tid v4642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4641 
=== Predecessor ===
v4644 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4668 
=== Usages ===
=== Predecessor ===
v4645 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4668 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6246 
value: j4634 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4659 
=== Usages ===
=== Predecessor ===
v4643 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6246 value: j4634 stateAfter: - lastLocationAccess: - #next: v4659  <|@  <|@
f <@~|@floating>@ <|@
tid v6250 <|@
result [v48|QWORD + v43|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j4633 
index: j4666 
=== Succesors ===
=== Usages ===
v4659 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4633 index: j4666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6250 
=== Succesors ===
next: v4661 
=== Usages ===
=== Predecessor ===
v4668 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6250 #next: v4661  <|@  <|@
f <@~|@floating>@ <|@
tid v6251 <|@
result [v48|QWORD + v43|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j4633 
index: j4666 
=== Succesors ===
=== Usages ===
v4661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4633 index: j4666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4661 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6251 
=== Succesors ===
next: v4663 
=== Usages ===
=== Predecessor ===
v4659 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6251 #next: v4663  <|@  <|@
f <@~|@floating>@ <|@
tid v6252 <|@
result [v48|QWORD + v43|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j4633 
index: j4666 
=== Succesors ===
=== Usages ===
v4663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4633 index: j4666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6252 
=== Succesors ===
next: v4665 
=== Usages ===
=== Predecessor ===
v4661 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6252 #next: v4665  <|@  <|@
f <@~|@floating>@ <|@
tid v6253 <|@
result [v48|QWORD + v43|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j4633 
index: j4666 
=== Succesors ===
=== Usages ===
v4665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4633 index: j4666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6253 
=== Succesors ===
next: v4669 
=== Usages ===
=== Predecessor ===
v4663 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6253 #next: v4669  <|@  <|@
f <@~|@floating>@ <|@
tid v6248 <|@
result [v43|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j4666 
index: - 
=== Succesors ===
=== Usages ===
v4669 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4666 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4669 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6248 
value: i2191 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4670 
=== Usages ===
=== Predecessor ===
v4665 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6248 value: i2191 stateAfter: - lastLocationAccess: - #next: v4670  <|@  <|@
f <@~|@floating>@ <|@
tid v6249 <|@
result [v43|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4666 
index: - 
=== Succesors ===
=== Usages ===
v4670 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4666 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4670 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6249 
value: j4395 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4673 
=== Usages ===
=== Predecessor ===
v4669 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6249 value: j4395 stateAfter: - lastLocationAccess: - #next: v4673  <|@  <|@
f <@~|@floating>@ <|@
tid v6254 <|@
result [v43|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j4666 
index: - 
=== Succesors ===
=== Usages ===
v4673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4666 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4673 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6254 
value: v4986 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4648 
=== Usages ===
=== Predecessor ===
v4670 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6254 value: v4986 stateAfter: - lastLocationAccess: - #next: v4648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4648 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a4649 
=== Usages ===
=== Predecessor ===
v4673 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a4649  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4649 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j4666 
=== Succesors ===
next: v4651 
=== Usages ===
a4654 
=== Predecessor ===
v4648 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j4666 #next: v4651  <|@  <|@
f <@*|@fixed>@ <|@
tid v4651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4652 
=== Predecessor ===
a4649 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v48|QWORD + v43|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v48|QWORD + v43|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v48|QWORD + v43|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v48|QWORD + v43|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|QWORD + 12], y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD[.]] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4640 
=== Usages ===
=== Predecessor ===
v4638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4640  <|@  <|@
f <@*|@fixed>@ <|@
tid v4640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4641 
=== Predecessor ===
v4636 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B39" 
    successors "B43" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4640 v4642 
=== Succesors ===
next: a4650 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4640 v4642 #next: a4650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4650 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2192 
arguments: v4394 i2191 i90 
=== Succesors ===
next: v4653 
=== Usages ===
a4654 
=== Predecessor ===
v4641 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2192 arguments: v4394 i2191 i90 #next: v4653  <|@  <|@
f <@*|@fixed>@ <|@
tid v4653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4652 
=== Predecessor ===
a4650 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v42|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v26|QWORD[.] v14|QWORD[.] v42|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:163) [bci: 234]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 7, 234, 17] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a4654 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v4652 
values: a4649 a4650 
=== Succesors ===
=== Usages ===
v6313 a4285 v6223 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v4652 values: a4649 a4650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4651 v4653 
=== Succesors ===
next: v5725 
=== Usages ===
a4654 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4651 v4653 #next: v5725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v5201 
=== Usages ===
j5726 j5728 
=== Predecessor ===
v4652 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v5201  <|@  <|@
f <@~|@floating>@ <|@
tid v4270 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2191 
y: i2525 
=== Succesors ===
=== Usages ===
i4272 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2191 y: i2525  <|@  <|@
f <@~|@floating>@ <|@
tid i4272 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v4270 
trueValue: i2191 
falseValue: i2410 
=== Succesors ===
=== Usages ===
j5035 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v4270 trueValue: i2191 falseValue: i2410  <|@  <|@
f <@~|@floating>@ <|@
tid j5035 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i4272 
=== Succesors ===
=== Usages ===
j5783 v6313 j5039 v5198 v5585 j5769 j5774 j5777 j5780 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i4272  <|@  <|@
f <@~|@floating>@ <|@
tid v5198 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5035 
y: j4395 
=== Succesors ===
=== Usages ===
v5201 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5035 y: j4395  <|@  <|@
f <@~|@floating>@ <|@
tid j5655 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5656 j5707 j5783 j5834 j5896 j5947 j6009 j6060 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5651 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5652 j5704 j5780 j5831 j5893 j5944 j6006 j6057 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5619 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5620 j5680 j5752 j5807 j5865 j5920 j5978 j6033 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5647 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5648 j5701 j5777 j5828 j5890 j5941 j6003 j6054 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4402 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j6039 j5986 j5926 j5873 j5813 j5760 j5686 j5628 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5643 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5644 j5698 j5774 j5825 j5887 j5938 j6000 j6051 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2615 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5881 j5692 j5768 j5994 j5819 j5932 j5636 j6045 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j5637 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j5638 j5693 j5769 j5820 j5882 j5933 j5995 j6046 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5201 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v5198 
=== Succesors ===
trueSuccessor: v5199 
falseSuccessor: v5200 
=== Usages ===
=== Predecessor ===
v5725 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5198 #trueSuccessor: v5199 #falseSuccessor: v5200  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v42|DWORD y: 35 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = CMOVE (falseValue: int[34|0x22], ~trueValue: v42|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVSXD v53|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v54|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B62" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5217 
=== Usages ===
=== Predecessor ===
v5201 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5217  <|@  <|@
f <@*|@fixed>@ <|@
tid v5217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5218 
=== Predecessor ===
v5199 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5204 
=== Usages ===
=== Predecessor ===
v5201 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5204  <|@  <|@
f <@~|@floating>@ <|@
tid v6223 <|@
result [v52|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a4654 
index: - 
=== Succesors ===
=== Usages ===
j5728 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4654 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j5728 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5725 
address: v6223 
=== Succesors ===
=== Usages ===
v6335 v6337 v6339 v6341 v6343 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5725 address: v6223  <|@  <|@
f <@~|@floating>@ <|@
tid v6218 <|@
result [v14|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a4281 
index: - 
=== Succesors ===
=== Usages ===
j5726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4281 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j5726 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5725 
address: v6218 
=== Succesors ===
=== Usages ===
v6336 v6338 v6340 v6342 v6344 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5725 address: v6218  <|@  <|@
f <@~|@floating>@ <|@
tid j5769 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j5035 
y: j5637 
=== Succesors ===
=== Usages ===
v5770 v5772 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5035 y: j5637  <|@  <|@
f <@~|@floating>@ <|@
tid v5770 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5769 
y: j4022 
=== Succesors ===
=== Usages ===
v5204 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5769 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v5204 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v5770 
=== Succesors ===
trueSuccessor: v5202 
falseSuccessor: v5203 
=== Usages ===
=== Predecessor ===
v5200 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5770 #trueSuccessor: v5202 #falseSuccessor: v5203  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = LEA [v52|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = LEA [v14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v54|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v57|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5213 
=== Usages ===
=== Predecessor ===
v5204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5213  <|@  <|@
f <@*|@fixed>@ <|@
tid v5213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5214 
=== Predecessor ===
v5202 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5205 
=== Usages ===
=== Predecessor ===
v5204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5205  <|@  <|@
f <@*|@fixed>@ <|@
tid v5205 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5206 
=== Predecessor ===
v5203 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B270" 
    successors "B49" "B270" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5761 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5206 
values: j4022 j5768 
=== Succesors ===
=== Usages ===
v6344 j5768 v6343 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5206 values: j4022 j5768  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5206 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v5205 
=== Succesors ===
next: v6160 
=== Usages ===
v6160 v5209 v5210 j5761 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v5205 #next: v6160  <|@  <|@
f <@~|@floating>@ <|@
tid v6344 <|@
result [v56|QWORD[.] + v58|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5726 
index: j5761 
=== Succesors ===
=== Usages ===
v6160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5726 index: j5761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6160 <|@
result v59|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5206 
address: v6344 
=== Succesors ===
next: v6118 
=== Usages ===
v6118 
=== Predecessor ===
v5206 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5206 address: v6344 #next: v6118  <|@  <|@
f <@~|@floating>@ <|@
tid v6343 <|@
result [v55|QWORD[.] + v58|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5728 
index: j5761 
=== Succesors ===
=== Usages ===
v6118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5728 index: j5761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6118 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6343 
value: v6160 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5212 
=== Usages ===
=== Predecessor ===
v6160 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6343 value: v6160 stateAfter: - lastLocationAccess: - #next: v5212  <|@  <|@
f <@~|@floating>@ <|@
tid j5768 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5761 
y: j2615 
=== Succesors ===
=== Usages ===
j5753 j5761 v5772 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5761 y: j2615  <|@  <|@
f <@~|@floating>@ <|@
tid v5772 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5769 
y: j5768 
=== Succesors ===
=== Usages ===
v5212 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5769 y: j5768  <|@  <|@
f <@*|@fixed>@ <|@
tid v5212 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5772 
=== Succesors ===
trueSuccessor: v5209 
falseSuccessor: v5211 
=== Usages ===
=== Predecessor ===
v6118 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5772 #trueSuccessor: v5209 #falseSuccessor: v5211  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|V256_WORD = H [v56|QWORD[.] + v58|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v55|QWORD[.] + v58|QWORD * 2], input: v59|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v58|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v5206 
=== Succesors ===
next: v5215 
=== Usages ===
=== Predecessor ===
v5212 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v5206 #next: v5215  <|@  <|@
f <@*|@fixed>@ <|@
tid v5215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5214 
=== Predecessor ===
v5209 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5753 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5214 
values: j4022 j5768 
=== Succesors ===
=== Usages ===
v6342 j5760 j5745 v5775 v6341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5214 values: j4022 j5768  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5213 v5215 
=== Succesors ===
next: v5236 
=== Usages ===
j5753 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5213 v5215 #next: v5236  <|@  <|@
f <@~|@floating>@ <|@
tid j5774 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j5035 
y: j5643 
=== Succesors ===
=== Usages ===
v5775 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5035 y: j5643  <|@  <|@
f <@~|@floating>@ <|@
tid v5775 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5774 
y: j5753 
=== Succesors ===
=== Usages ===
v5236 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5774 y: j5753  <|@  <|@
f <@*|@fixed>@ <|@
tid v5236 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5775 
=== Succesors ===
trueSuccessor: v5235 
falseSuccessor: v5234 
=== Usages ===
=== Predecessor ===
v5214 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5775 #trueSuccessor: v5235 #falseSuccessor: v5234  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v54|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5235 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5239 
=== Usages ===
=== Predecessor ===
v5236 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5239  <|@  <|@
f <@*|@fixed>@ <|@
tid v5239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5225 
=== Predecessor ===
v5235 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5234 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6161 
=== Usages ===
v6161 
=== Predecessor ===
v5236 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6161  <|@  <|@
f <@~|@floating>@ <|@
tid v6342 <|@
result [v56|QWORD[.] + v61|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5726 
index: j5753 
=== Succesors ===
=== Usages ===
v6161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5726 index: j5753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6161 <|@
result v63|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5234 
address: v6342 
=== Succesors ===
next: v6116 
=== Usages ===
v6116 
=== Predecessor ===
v5234 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5234 address: v6342 #next: v6116  <|@  <|@
f <@~|@floating>@ <|@
tid v6341 <|@
result [v55|QWORD[.] + v61|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5728 
index: j5753 
=== Succesors ===
=== Usages ===
v6116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5728 index: j5753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6116 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6341 
value: v6161 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5224 
=== Usages ===
=== Predecessor ===
v6161 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6341 value: v6161 stateAfter: - lastLocationAccess: - #next: v5224  <|@  <|@
f <@~|@floating>@ <|@
tid j5760 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5753 
y: j4402 
=== Succesors ===
=== Usages ===
j5745 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5753 y: j4402  <|@  <|@
f <@*|@fixed>@ <|@
tid v5224 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5225 
=== Predecessor ===
v6116 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|V128_WORD = H [v56|QWORD[.] + v61|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v55|QWORD[.] + v61|QWORD * 2], input: v63|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v61|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5745 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5225 
values: j5760 j5753 
=== Succesors ===
=== Usages ===
v6340 j5752 j5737 v5778 v6339 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5225 values: j5760 j5753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5225 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5224 v5239 
=== Succesors ===
next: v5242 
=== Usages ===
j5745 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5224 v5239 #next: v5242  <|@  <|@
f <@~|@floating>@ <|@
tid j5777 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j5035 
y: j5647 
=== Succesors ===
=== Usages ===
v5778 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5035 y: j5647  <|@  <|@
f <@~|@floating>@ <|@
tid v5778 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5777 
y: j5745 
=== Succesors ===
=== Usages ===
v5242 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5777 y: j5745  <|@  <|@
f <@*|@fixed>@ <|@
tid v5242 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5778 
=== Succesors ===
trueSuccessor: v5241 
falseSuccessor: v5240 
=== Usages ===
=== Predecessor ===
v5225 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5778 #trueSuccessor: v5241 #falseSuccessor: v5240  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v54|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5245 
=== Usages ===
=== Predecessor ===
v5242 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5245  <|@  <|@
f <@*|@fixed>@ <|@
tid v5245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5228 
=== Predecessor ===
v5241 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6162 
=== Usages ===
v6162 
=== Predecessor ===
v5242 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6162  <|@  <|@
f <@~|@floating>@ <|@
tid v6340 <|@
result [v56|QWORD[.] + v65|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5726 
index: j5745 
=== Succesors ===
=== Usages ===
v6162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5726 index: j5745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6162 <|@
result v67|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5240 
address: v6340 
=== Succesors ===
next: v6114 
=== Usages ===
v6114 
=== Predecessor ===
v5240 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5240 address: v6340 #next: v6114  <|@  <|@
f <@~|@floating>@ <|@
tid v6339 <|@
result [v55|QWORD[.] + v65|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5728 
index: j5745 
=== Succesors ===
=== Usages ===
v6114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5728 index: j5745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6114 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6339 
value: v6162 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5227 
=== Usages ===
=== Predecessor ===
v6162 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6339 value: v6162 stateAfter: - lastLocationAccess: - #next: v5227  <|@  <|@
f <@~|@floating>@ <|@
tid j5752 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5745 
y: j5619 
=== Succesors ===
=== Usages ===
j5737 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5745 y: j5619  <|@  <|@
f <@*|@fixed>@ <|@
tid v5227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5228 
=== Predecessor ===
v6114 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|V64_WORD = H [v56|QWORD[.] + v65|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v55|QWORD[.] + v65|QWORD * 2], input: v67|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v65|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5737 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5228 
values: j5752 j5745 
=== Succesors ===
=== Usages ===
v6338 j5744 j5729 v5781 v6337 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5228 values: j5752 j5745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5227 v5245 
=== Succesors ===
next: v5248 
=== Usages ===
j5737 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5227 v5245 #next: v5248  <|@  <|@
f <@~|@floating>@ <|@
tid j5780 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j5035 
y: j5651 
=== Succesors ===
=== Usages ===
v5781 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5035 y: j5651  <|@  <|@
f <@~|@floating>@ <|@
tid v5781 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5780 
y: j5737 
=== Succesors ===
=== Usages ===
v5248 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5780 y: j5737  <|@  <|@
f <@*|@fixed>@ <|@
tid v5248 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5781 
=== Succesors ===
trueSuccessor: v5247 
falseSuccessor: v5246 
=== Usages ===
=== Predecessor ===
v5228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5781 #trueSuccessor: v5247 #falseSuccessor: v5246  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v54|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|QWORD, y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5251 
=== Usages ===
=== Predecessor ===
v5248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5251  <|@  <|@
f <@*|@fixed>@ <|@
tid v5251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5231 
=== Predecessor ===
v5247 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6163 
=== Usages ===
v6163 
=== Predecessor ===
v5248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6163  <|@  <|@
f <@~|@floating>@ <|@
tid v6338 <|@
result [v56|QWORD[.] + v69|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5726 
index: j5737 
=== Succesors ===
=== Usages ===
v6163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5726 index: j5737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6163 <|@
result v71|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5246 
address: v6338 
=== Succesors ===
next: v6112 
=== Usages ===
v6112 
=== Predecessor ===
v5246 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5246 address: v6338 #next: v6112  <|@  <|@
f <@~|@floating>@ <|@
tid v6337 <|@
result [v55|QWORD[.] + v69|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5728 
index: j5737 
=== Succesors ===
=== Usages ===
v6112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5728 index: j5737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6112 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6337 
value: v6163 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5230 
=== Usages ===
=== Predecessor ===
v6163 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6337 value: v6163 stateAfter: - lastLocationAccess: - #next: v5230  <|@  <|@
f <@~|@floating>@ <|@
tid j5744 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5737 
y: j4598 
=== Succesors ===
=== Usages ===
j5729 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5737 y: j4598  <|@  <|@
f <@*|@fixed>@ <|@
tid v5230 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5231 
=== Predecessor ===
v6112 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|V32_WORD = H [v56|QWORD[.] + v69|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v55|QWORD[.] + v69|QWORD * 2], input: v71|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v69|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5729 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5231 
values: j5744 j5737 
=== Succesors ===
=== Usages ===
v6336 v5784 v6335 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5231 values: j5744 j5737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5230 v5251 
=== Succesors ===
next: v5254 
=== Usages ===
j5729 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5230 v5251 #next: v5254  <|@  <|@
f <@~|@floating>@ <|@
tid j5783 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j5035 
y: j5655 
=== Succesors ===
=== Usages ===
v5784 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5035 y: j5655  <|@  <|@
f <@~|@floating>@ <|@
tid v5784 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5783 
y: j5729 
=== Succesors ===
=== Usages ===
v5254 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5783 y: j5729  <|@  <|@
f <@*|@fixed>@ <|@
tid v5254 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5784 
=== Succesors ===
trueSuccessor: v5253 
falseSuccessor: v5252 
=== Usages ===
=== Predecessor ===
v5231 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5784 #trueSuccessor: v5253 #falseSuccessor: v5252  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = DEC v54|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v73|QWORD, y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5257 
=== Usages ===
=== Predecessor ===
v5254 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5257  <|@  <|@
f <@*|@fixed>@ <|@
tid v5257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5218 
=== Predecessor ===
v5253 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5252 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i6164 
=== Usages ===
i6164 
=== Predecessor ===
v5254 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6164  <|@  <|@
f <@~|@floating>@ <|@
tid v6336 <|@
result [v56|QWORD[.] + v73|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5726 
index: j5729 
=== Succesors ===
=== Usages ===
i6164 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5726 index: j5729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6164 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v5252 
address: v6336 
=== Succesors ===
next: v6110 
=== Usages ===
v6110 
=== Predecessor ===
v5252 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5252 address: v6336 #next: v6110  <|@  <|@
f <@~|@floating>@ <|@
tid v6335 <|@
result [v55|QWORD[.] + v73|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5728 
index: j5729 
=== Succesors ===
=== Usages ===
v6110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5728 index: j5729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6110 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6335 
value: i6164 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5233 
=== Usages ===
=== Predecessor ===
i6164 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6335 value: i6164 stateAfter: - lastLocationAccess: - #next: v5233  <|@  <|@
f <@*|@fixed>@ <|@
tid v5233 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5218 
=== Predecessor ===
v6110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVSX [v56|QWORD[.] + v73|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[.] + v73|QWORD * 2], y: v75|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B44" "B61" "B60" 
    successors "B63" "B81" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5218 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5217 v5233 v5257 
=== Succesors ===
next: v5787 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5217 v5233 v5257 #next: v5787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5787 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v5264 
=== Usages ===
j5789 
=== Predecessor ===
v5218 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v5264  <|@  <|@
f <@~|@floating>@ <|@
tid j5034 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2191 
=== Succesors ===
=== Usages ===
j5039 v5585 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2191  <|@  <|@
f <@~|@floating>@ <|@
tid v5585 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5035 
y: j5034 
=== Succesors ===
=== Usages ===
v5264 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5035 y: j5034  <|@  <|@
f <@~|@floating>@ <|@
tid i6155 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6097 v6119 v6134 v6149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6157 <|@
result v77|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v6101 v6121 v6136 v6151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6158 <|@
result v78|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v6103 v6122 v6137 v6152 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5264 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v5585 
=== Succesors ===
trueSuccessor: v5263 
falseSuccessor: v5262 
=== Usages ===
=== Predecessor ===
v5787 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5585 #trueSuccessor: v5263 #falseSuccessor: v5262  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOVSXD v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v78|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction CMP (x: v76|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5267 
=== Usages ===
=== Predecessor ===
v5264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5267  <|@  <|@
f <@~|@floating>@ <|@
tid v6313 <|@
result [v52|QWORD[.] + v54|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a4654 
index: j5035 
=== Succesors ===
=== Usages ===
j5789 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4654 index: j5035  <|@  <|@
f <@~|@floating>@ <|@
tid j5789 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5787 
address: v6313 
=== Succesors ===
=== Usages ===
v6345 v6346 v6347 v6348 v6349 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5787 address: v6313  <|@  <|@
f <@~|@floating>@ <|@
tid j5039 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$68/1668473261@10b940da
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j5034 
y: j5035 
=== Succesors ===
=== Usages ===
j5834 j5820 j5825 j5828 j5831 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j5034 y: j5035  <|@  <|@
f <@~|@floating>@ <|@
tid j5820 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j5039 
y: j5637 
=== Succesors ===
=== Usages ===
v5821 v5823 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5039 y: j5637  <|@  <|@
f <@~|@floating>@ <|@
tid v5821 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5820 
y: j4022 
=== Succesors ===
=== Usages ===
v5267 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5820 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v5267 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v5821 
=== Succesors ===
trueSuccessor: v5265 
falseSuccessor: v5266 
=== Usages ===
=== Predecessor ===
v5263 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5821 #trueSuccessor: v5265 #falseSuccessor: v5266  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = LEA [v52|QWORD[.] + v54|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = SUB (x: v76|QWORD, ~y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = LEA [v80|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|QWORD, y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5265 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5276 
=== Usages ===
=== Predecessor ===
v5267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5276  <|@  <|@
f <@*|@fixed>@ <|@
tid v5276 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5277 
=== Predecessor ===
v5265 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B64 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5268 
=== Usages ===
=== Predecessor ===
v5267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5268  <|@  <|@
f <@*|@fixed>@ <|@
tid v5268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5269 
=== Predecessor ===
v5266 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B80" 
    successors "B67" "B80" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5814 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5269 
values: j4022 j5819 
=== Succesors ===
=== Usages ===
v6349 j5819 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5269 values: j4022 j5819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5269 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v5268 
=== Succesors ===
next: v6123 
=== Usages ===
j5814 v5272 v5273 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v5268 #next: v6123  <|@  <|@
f <@~|@floating>@ <|@
tid v6349 <|@
result [v79|QWORD[.] + v82|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5789 
index: j5814 
=== Succesors ===
=== Usages ===
v6123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5789 index: j5814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6123 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6349 
value: v6154 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5275 
=== Usages ===
=== Predecessor ===
v5269 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6349 value: v6154 stateAfter: - lastLocationAccess: - #next: v5275  <|@  <|@
f <@~|@floating>@ <|@
tid j5819 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5814 
y: j2615 
=== Succesors ===
=== Usages ===
j5808 j5814 v5823 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5814 y: j2615  <|@  <|@
f <@~|@floating>@ <|@
tid v5823 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5820 
y: j5819 
=== Succesors ===
=== Usages ===
v5275 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5820 y: j5819  <|@  <|@
f <@*|@fixed>@ <|@
tid v5275 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5823 
=== Succesors ===
trueSuccessor: v5272 
falseSuccessor: v5274 
=== Usages ===
=== Predecessor ===
v6123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5823 #trueSuccessor: v5272 #falseSuccessor: v5274  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v79|QWORD[.] + v82|QWORD * 2], input: v19|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA [v82|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|QWORD, y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v5269 
=== Succesors ===
next: v5278 
=== Usages ===
=== Predecessor ===
v5275 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v5269 #next: v5278  <|@  <|@
f <@*|@fixed>@ <|@
tid v5278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5277 
=== Predecessor ===
v5272 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" "B67" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5808 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5277 
values: j4022 j5819 
=== Succesors ===
=== Usages ===
v6348 j5813 j5802 v5826 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5277 values: j4022 j5819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5276 v5278 
=== Succesors ===
next: v5299 
=== Usages ===
j5808 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5276 v5278 #next: v5299  <|@  <|@
f <@~|@floating>@ <|@
tid j5825 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j5039 
y: j5643 
=== Succesors ===
=== Usages ===
v5826 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5039 y: j5643  <|@  <|@
f <@~|@floating>@ <|@
tid v5826 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5825 
y: j5808 
=== Succesors ===
=== Usages ===
v5299 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5825 y: j5808  <|@  <|@
f <@*|@fixed>@ <|@
tid v5299 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5826 
=== Succesors ===
trueSuccessor: v5298 
falseSuccessor: v5297 
=== Usages ===
=== Predecessor ===
v5277 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5826 #trueSuccessor: v5298 #falseSuccessor: v5297  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = LEA [v80|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v84|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5302 
=== Usages ===
=== Predecessor ===
v5299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5302  <|@  <|@
f <@*|@fixed>@ <|@
tid v5302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5288 
=== Predecessor ===
v5298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6122 
=== Usages ===
=== Predecessor ===
v5299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6122  <|@  <|@
f <@~|@floating>@ <|@
tid v6348 <|@
result [v79|QWORD[.] + v84|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5789 
index: j5808 
=== Succesors ===
=== Usages ===
v6122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5789 index: j5808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6122 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6348 
value: v6158 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5287 
=== Usages ===
=== Predecessor ===
v5297 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6348 value: v6158 stateAfter: - lastLocationAccess: - #next: v5287  <|@  <|@
f <@~|@floating>@ <|@
tid j5813 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5808 
y: j4402 
=== Succesors ===
=== Usages ===
j5802 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5808 y: j4402  <|@  <|@
f <@*|@fixed>@ <|@
tid v5287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5288 
=== Predecessor ===
v6122 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v79|QWORD[.] + v84|QWORD * 2], input: v78|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v84|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|QWORD] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5802 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5288 
values: j5813 j5808 
=== Succesors ===
=== Usages ===
v6347 j5807 j5796 v5829 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5288 values: j5813 j5808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5287 v5302 
=== Succesors ===
next: v5305 
=== Usages ===
j5802 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5287 v5302 #next: v5305  <|@  <|@
f <@~|@floating>@ <|@
tid j5828 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j5039 
y: j5647 
=== Succesors ===
=== Usages ===
v5829 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5039 y: j5647  <|@  <|@
f <@~|@floating>@ <|@
tid v5829 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5828 
y: j5802 
=== Succesors ===
=== Usages ===
v5305 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5828 y: j5802  <|@  <|@
f <@*|@fixed>@ <|@
tid v5305 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5829 
=== Succesors ===
trueSuccessor: v5304 
falseSuccessor: v5303 
=== Usages ===
=== Predecessor ===
v5288 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5829 #trueSuccessor: v5304 #falseSuccessor: v5303  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = LEA [v80|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5308 
=== Usages ===
=== Predecessor ===
v5305 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5308  <|@  <|@
f <@*|@fixed>@ <|@
tid v5308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5291 
=== Predecessor ===
v5304 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6121 
=== Usages ===
=== Predecessor ===
v5305 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6121  <|@  <|@
f <@~|@floating>@ <|@
tid v6347 <|@
result [v79|QWORD[.] + v87|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5789 
index: j5802 
=== Succesors ===
=== Usages ===
v6121 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5789 index: j5802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6121 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6347 
value: v6157 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5290 
=== Usages ===
=== Predecessor ===
v5303 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6347 value: v6157 stateAfter: - lastLocationAccess: - #next: v5290  <|@  <|@
f <@~|@floating>@ <|@
tid j5807 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5802 
y: j5619 
=== Succesors ===
=== Usages ===
j5796 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5802 y: j5619  <|@  <|@
f <@*|@fixed>@ <|@
tid v5290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5291 
=== Predecessor ===
v6121 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v79|QWORD[.] + v87|QWORD * 2], input: v77|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = LEA [v87|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v89|QWORD] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5796 <|@
result v90|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5291 
values: j5807 j5802 
=== Succesors ===
=== Usages ===
v6346 j5801 j5790 v5832 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5291 values: j5807 j5802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5290 v5308 
=== Succesors ===
next: v5311 
=== Usages ===
j5796 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5290 v5308 #next: v5311  <|@  <|@
f <@~|@floating>@ <|@
tid j5831 <|@
result v91|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j5039 
y: j5651 
=== Succesors ===
=== Usages ===
v5832 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5039 y: j5651  <|@  <|@
f <@~|@floating>@ <|@
tid v5832 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5831 
y: j5796 
=== Succesors ===
=== Usages ===
v5311 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5831 y: j5796  <|@  <|@
f <@*|@fixed>@ <|@
tid v5311 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5832 
=== Succesors ===
trueSuccessor: v5310 
falseSuccessor: v5309 
=== Usages ===
=== Predecessor ===
v5291 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5832 #trueSuccessor: v5310 #falseSuccessor: v5309  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = LEA [v80|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v90|QWORD, y: v91|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5314 
=== Usages ===
=== Predecessor ===
v5311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5314  <|@  <|@
f <@*|@fixed>@ <|@
tid v5314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5294 
=== Predecessor ===
v5310 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v90|QWORD] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6120 
=== Usages ===
=== Predecessor ===
v5311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6120  <|@  <|@
f <@~|@floating>@ <|@
tid v6346 <|@
result [v79|QWORD[.] + v90|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5789 
index: j5796 
=== Succesors ===
=== Usages ===
v6120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5789 index: j5796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6120 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6346 
value: v6156 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5293 
=== Usages ===
=== Predecessor ===
v5309 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6346 value: v6156 stateAfter: - lastLocationAccess: - #next: v5293  <|@  <|@
f <@~|@floating>@ <|@
tid j5801 <|@
result v92|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5796 
y: j4598 
=== Succesors ===
=== Usages ===
j5790 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5796 y: j4598  <|@  <|@
f <@*|@fixed>@ <|@
tid v5293 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5294 
=== Predecessor ===
v6120 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v79|QWORD[.] + v90|QWORD * 2], input: v20|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA [v90|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|QWORD] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5790 <|@
result v93|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5294 
values: j5801 j5796 
=== Succesors ===
=== Usages ===
v6345 v5835 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5294 values: j5801 j5796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5294 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5293 v5314 
=== Succesors ===
next: v5317 
=== Usages ===
j5790 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5293 v5314 #next: v5317  <|@  <|@
f <@~|@floating>@ <|@
tid j5834 <|@
result v94|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j5039 
y: j5655 
=== Succesors ===
=== Usages ===
v5835 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5039 y: j5655  <|@  <|@
f <@~|@floating>@ <|@
tid v5835 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5834 
y: j5790 
=== Succesors ===
=== Usages ===
v5317 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5834 y: j5790  <|@  <|@
f <@*|@fixed>@ <|@
tid v5317 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5835 
=== Succesors ===
trueSuccessor: v5316 
falseSuccessor: v5315 
=== Usages ===
=== Predecessor ===
v5294 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5835 #trueSuccessor: v5316 #falseSuccessor: v5315  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = DEC v80|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v93|QWORD, y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5320 
=== Usages ===
=== Predecessor ===
v5317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5320  <|@  <|@
f <@*|@fixed>@ <|@
tid v5320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5281 
=== Predecessor ===
v5316 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B78 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6119 
=== Usages ===
=== Predecessor ===
v5317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6119  <|@  <|@
f <@~|@floating>@ <|@
tid v6345 <|@
result [v79|QWORD[.] + v93|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5789 
index: j5790 
=== Succesors ===
=== Usages ===
v6119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5789 index: j5790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6119 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6345 
value: i6155 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5296 
=== Usages ===
=== Predecessor ===
v5315 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6345 value: i6155 stateAfter: - lastLocationAccess: - #next: v5296  <|@  <|@
f <@*|@fixed>@ <|@
tid v5296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5281 
=== Predecessor ===
v6119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD[.] + v93|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B66" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5273 
=== Usages ===
=== Predecessor ===
v5275 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5273  <|@  <|@
f <@*|@fixed>@ <|@
tid v5273 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v5269 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5274 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v5269  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD] destination: B80 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B82" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5280 
=== Usages ===
=== Predecessor ===
v5264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5280  <|@  <|@
f <@*|@fixed>@ <|@
tid v5280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5281 
=== Predecessor ===
v5262 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B79" "B78" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5280 v5296 v5320 
=== Succesors ===
next: a4285 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5280 v5296 v5320 #next: a4285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4285 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a4654 
=== Succesors ===
next: v3523 
=== Usages ===
?4059 a3521 v6208 v6219 v6214 ?2217 
=== Predecessor ===
v5281 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a4654 #next: v3523  <|@  <|@
f <@~|@floating>@ <|@
tid v6206 <|@
result [v26|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a4042 
index: - 
=== Succesors ===
=== Usages ===
v3523 v3783 a6172 a6181 v3674 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4042 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a3521 <|@
result v95|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a4285 
=== Succesors ===
=== Usages ===
v3523 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3523 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6206 
value: a3521 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j4681 
=== Usages ===
=== Predecessor ===
a4285 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6206 value: a3521 stateAfter: - lastLocationAccess: - #next: j4681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4681 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4042 
=== Succesors ===
next: v4687 
=== Usages ===
j4683 
=== Predecessor ===
v3523 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4042 #next: v4687  <|@  <|@
f <@~|@floating>@ <|@
tid i4682 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j4683 j4745 j4805 j4865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4683 <|@
result v96|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$152/1924078416@7040fbbc
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j4681 
y: i4682 
=== Succesors ===
=== Usages ===
v6255 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j4681 y: i4682  <|@  <|@
f <@~|@floating>@ <|@
tid j4686 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4270112768
stableDimension: 0
stamp: i64 [4270112768] ⇊00000000fe84c000 ⇈00000000fe84c000
stampKind: i64
value: long[4270112768|0xfe84c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6255 v6265 v6275 v6285 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6255 <|@
result [v96|QWORD[*] + v97|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4683 
index: j4686 
=== Succesors ===
=== Usages ===
v4687 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4683 index: j4686  <|@  <|@
f <@~|@floating>@ <|@
tid i4688 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4687 v4748 v4808 v4868 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4687 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6255 
value: i4688 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i6165 
=== Usages ===
=== Predecessor ===
j4681 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6255 value: i4688 stateAfter: - lastLocationAccess: - #next: i6165  <|@  <|@
f <@~|@floating>@ <|@
tid v6207 <|@
result [v26|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4042 
index: - 
=== Succesors ===
=== Usages ===
i6165 v3578 i6171 v3593 i6179 v3604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6165 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6207 
=== Succesors ===
next: v3540 
=== Usages ===
j3562 i1296 v3534 v3553 i4000 
=== Predecessor ===
v4687 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6207 #next: v3540  <|@  <|@
f <@~|@floating>@ <|@
tid v3534 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6165 
y: i90 
=== Succesors ===
=== Usages ===
v3540 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6165 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v3540 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3534 
=== Succesors ===
trueSuccessor: v3539 
falseSuccessor: v3535 
=== Usages ===
=== Predecessor ===
i6165 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3534 #trueSuccessor: v3539 #falseSuccessor: v3535  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[.] = COMPRESSPOINTER (input: v52|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + 16], y: v95|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[*] = SHR v26|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOVE input: long[4270112768|0xfe84c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v96|QWORD[*] + v97|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOV [v26|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v98|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B86" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3539 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3538 
=== Usages ===
=== Predecessor ===
v3540 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3538  <|@  <|@
f <@*|@fixed>@ <|@
tid v3538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3537 
=== Predecessor ===
v3539 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B87" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3535 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3557 
=== Usages ===
=== Predecessor ===
v3540 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3557  <|@  <|@
f <@~|@floating>@ <|@
tid i3838 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i3973 i3965 i3969 i3961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3969 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32
=== Inputs ===
x: i2191 
y: i3838 
=== Succesors ===
=== Usages ===
v3755 v3553 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2191 y: i3838  <|@  <|@
f <@~|@floating>@ <|@
tid v3553 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3969 
y: i6165 
=== Succesors ===
=== Usages ===
v3557 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3969 y: i6165  <|@  <|@
f <@*|@fixed>@ <|@
tid v3557 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3553 
=== Succesors ===
trueSuccessor: v3556 
falseSuccessor: v3554 
=== Usages ===
=== Predecessor ===
v3535 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3553 #trueSuccessor: v3556 #falseSuccessor: v3554  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = DEC v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v98|DWORD, y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3555 
=== Usages ===
=== Predecessor ===
v3557 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3555  <|@  <|@
f <@*|@fixed>@ <|@
tid v3555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3537 
=== Predecessor ===
v3556 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B83" "B85" 
    successors 
    xhandlers
    flags 
    probability 4581393005893843005
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3537 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3538 v3555 
=== Succesors ===
next: v3558 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3538 v3555 #next: v3558  <|@  <|@
tid ?2196 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?2199 
values: - - 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
v3558 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2199 values: - - virtualObjectMappings: ?2531  <|@  <|@
f <@*|@fixed>@ <|@
tid v3558 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?2196 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3537 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2196  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -910945 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:163) [bci: 234]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 7, 234, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B88" "B91" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3573 
=== Usages ===
=== Predecessor ===
v3557 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3573  <|@  <|@
f <@~|@floating>@ <|@
tid j3562 <|@
result v100|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i6165 
=== Succesors ===
=== Usages ===
v6208 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i6165  <|@  <|@
f <@~|@floating>@ <|@
tid v6208 <|@
result [v52|QWORD[.] + v100|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a4285 
index: j3562 
=== Succesors ===
=== Usages ===
v3573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4285 index: j3562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3573 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6208 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3578 
=== Usages ===
=== Predecessor ===
v3554 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6208 value: i3844 stateAfter: - lastLocationAccess: - #next: v3578  <|@  <|@
f <@~|@floating>@ <|@
tid i1296 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32
=== Inputs ===
x: i6165 
y: i750 
=== Succesors ===
=== Usages ===
v3578 v3755 i4062 j3764 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i6165 y: i750  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3578 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6207 
value: i1296 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3584 
=== Usages ===
=== Predecessor ===
v3573 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6207 value: i1296 stateAfter: - lastLocationAccess: - #next: v3584  <|@  <|@
f <@~|@floating>@ <|@
tid v6209 <|@
result [v26|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a4042 
index: - 
=== Succesors ===
=== Usages ===
v3584 v3595 a6180 v3618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4042 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a3957 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3584 v3595 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3584 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: StringBuffer.toStringCache
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6209 
value: a3957 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2213 
=== Usages ===
=== Predecessor ===
v3578 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6209 value: a3957 stateAfter: - lastLocationAccess: - #next: v2213  <|@  <|@
f <@~|@floating>@ <|@
tid i4000 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32
=== Inputs ===
x: i6165 
y: i3999 
=== Succesors ===
=== Usages ===
v3780 i2209 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i6165 y: i3999  <|@  <|@
f <@~|@floating>@ <|@
tid i2209 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$68/1668473261@10b940da
stamp: i32
=== Inputs ===
x: i4000 
y: i2191 
=== Succesors ===
=== Usages ===
v2210 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i4000 y: i2191  <|@  <|@
f <@~|@floating>@ <|@
tid v2210 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2209 
y: i750 
=== Succesors ===
=== Usages ===
v2213 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2209 y: i750  <|@  <|@
tid ?722 <|@
d <@d|@=== Debug Properties ===
bci: 241
code: ResolvedJavaMethodBytecode<StringOp.cont(StringBuffer)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 164
stackSize: 0
=== Inputs ===
outerFrameState: ?89 
values: - a92 
virtualObjectMappings: ?251 
=== Succesors ===
=== Usages ===
?1313 ?715 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?89 values: - a92 virtualObjectMappings: ?251  <|@  <|@
tid ?1313 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<StringBuffer.append(String)>
duringCall: true
localsSize: 2
locksSize: 1
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?722 
values: a92 - a92 
monitorIds: v698 
=== Succesors ===
=== Usages ===
?2224 ?2231 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?722 values: a92 - a92 monitorIds: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v2213 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9446261558763105
=== Inputs ===
condition: v2210 
=== Succesors ===
trueSuccessor: v2211 
falseSuccessor: v2212 
=== Usages ===
=== Predecessor ===
v3584 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2210 #trueSuccessor: v2211 #falseSuccessor: v2212  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = MOVSXD v98|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v52|QWORD[.] + v100|QWORD * 2 + 16] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = INC v98|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + 12], y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = LEA [v98|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = SUB (x: v102|DWORD, ~y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v103|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9446261558763105 condition: < trueDestination: B87 -> B88 falseDestination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606514337675950731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2211 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3759 
=== Usages ===
=== Predecessor ===
v2213 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3759  <|@  <|@
f <@~|@floating>@ <|@
tid v3755 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3969 
y: i1296 
=== Succesors ===
=== Usages ===
v3759 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3969 y: i1296  <|@  <|@
f <@*|@fixed>@ <|@
tid v3759 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v3755 
=== Succesors ===
trueSuccessor: v3758 
falseSuccessor: v3756 
=== Usages ===
=== Predecessor ===
v2211 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3755 #trueSuccessor: v3758 #falseSuccessor: v3756  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|DWORD, y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3760 
=== Usages ===
=== Predecessor ===
v3759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3760  <|@  <|@
tid ?715 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<StringBuffer.append(String)>
duringCall: false
localsSize: 2
locksSize: 1
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?722 
values: a92 a13 a92 
monitorIds: v698 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
v3760 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?722 values: a92 a13 a92 monitorIds: v698 virtualObjectMappings: ?2531  <|@  <|@
f <@*|@fixed>@ <|@
tid v3760 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?715 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3758 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?715  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -962657 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5]
locals: v26|QWORD[.] Object[String:"b"] 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:5, 241, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B144" 
    xhandlers
    flags 
    probability 4606514337675950731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3775 
=== Usages ===
=== Predecessor ===
v3759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3775  <|@  <|@
f <@~|@floating>@ <|@
tid j3764 <|@
result v104|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1296 
=== Succesors ===
=== Usages ===
v6214 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1296  <|@  <|@
f <@~|@floating>@ <|@
tid v6214 <|@
result [v52|QWORD[.] + v104|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a4285 
index: j3764 
=== Succesors ===
=== Usages ===
v3775 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4285 index: j3764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3775 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6214 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2561 
=== Usages ===
=== Predecessor ===
v3756 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6214 value: i3844 stateAfter: - lastLocationAccess: - #next: v2561  <|@  <|@
f <@*|@fixed>@ <|@
tid v2561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2559 
=== Predecessor ===
v3775 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = MOVSXD v101|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v52|QWORD[.] + v104|QWORD * 2 + 16] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v101|DWORD] destination: B90 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2212 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i2216 
=== Usages ===
=== Predecessor ===
v2213 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2216  <|@  <|@
tid v3780 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6b25af7f
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a4042 i4000 
=== Succesors ===
=== Usages ===
i2216 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a4042 i4000  <|@  <|@
tid ?2224 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?1313 
values: a92 a13 i750 
=== Succesors ===
=== Usages ===
?2217 ?2221 ?4059 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1313 values: a92 a13 i750  <|@  <|@
tid ?4059 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?2224 
values: - - a92 a4285 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
i2216 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2224 values: - - a92 a4285 virtualObjectMappings: ?2531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2216 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 17
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3780 
stateDuring: ?4059 
=== Succesors ===
next: v4195 
=== Usages ===
?2217 v4698 i3973 j5041 i4691 v4732 a4713 i4266 v4203 v4189 
=== Predecessor ===
v2212 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3780 stateDuring: ?4059 #next: v4195  <|@  <|@
tid ?2217 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?2224 
values: - - a92 a4285 i2216 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
a4713 v4201 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2224 values: - - a92 a4285 i2216 virtualObjectMappings: ?2531  <|@  <|@
f <@~|@floating>@ <|@
tid v4189 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2216 
y: i90 
=== Succesors ===
=== Usages ===
v4195 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2216 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v4195 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v4189 
=== Succesors ===
trueSuccessor: v4194 
falseSuccessor: v4190 
=== Usages ===
=== Predecessor ===
i2216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4189 #trueSuccessor: v4194 #falseSuccessor: v4190  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v26|QWORD[.] v52|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad state [bci:17, 21, 7, 241, 17] <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v105|DWORD, y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4201 
=== Usages ===
=== Predecessor ===
v4195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4201  <|@  <|@
f <@*|@fixed>@ <|@
tid v4201 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?2217 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4194 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2217  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -1075553 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v26|QWORD[.] v52|QWORD[.] v105|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:20, 21, 7, 241, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B97" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4693 
=== Usages ===
=== Predecessor ===
v4195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4693  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4693 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j4729 
=== Usages ===
v6256 v6257 
=== Predecessor ===
v4190 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j4729  <|@  <|@
f <@~|@floating>@ <|@
tid v6256 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j4693 
index: - 
=== Succesors ===
=== Usages ===
j4729 v4731 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4693 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4729 <|@
result v106|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6256 
=== Succesors ===
next: j4730 
=== Usages ===
j4697 v6258 v6259 a4712 v6264 v6260 v6261 v6262 v6263 
=== Predecessor ===
j4693 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6256 #next: j4730  <|@  <|@
f <@~|@floating>@ <|@
tid v6257 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j4693 
index: - 
=== Succesors ===
=== Usages ===
j4730 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4693 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4730 <|@
result v107|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6257 
=== Succesors ===
next: v4701 
=== Usages ===
v4702 
=== Predecessor ===
j4729 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6257 #next: v4701  <|@  <|@
f <@~|@floating>@ <|@
tid v4698 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2216 
y: i4418 
=== Succesors ===
=== Usages ===
v4701 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2216 y: i4418  <|@  <|@
f <@*|@fixed>@ <|@
tid v4701 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v4698 
=== Succesors ===
trueSuccessor: v4700 
falseSuccessor: v4699 
=== Usages ===
=== Predecessor ===
j4730 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4698 #trueSuccessor: v4700 #falseSuccessor: v4699  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v105|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B93 -> B94 falseDestination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4587200086203916006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4708 
=== Usages ===
=== Predecessor ===
v4701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4708  <|@  <|@
f <@~|@floating>@ <|@
tid i4691 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$11/1514064396@6c95a661
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i2216 
y: i750 
=== Succesors ===
=== Usages ===
i4720 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2216 y: i750  <|@  <|@
f <@~|@floating>@ <|@
tid i4720 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i4691 
y: i4441 
=== Succesors ===
=== Usages ===
i4692 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4691 y: i4441  <|@  <|@
f <@~|@floating>@ <|@
tid i4692 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$94/978859646@9756628
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i4720 
y: i4411 
=== Succesors ===
=== Usages ===
j4696 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i4720 y: i4411  <|@  <|@
f <@~|@floating>@ <|@
tid j4696 <|@
result v111|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i4692 
=== Succesors ===
=== Usages ===
j4697 v6260 v6261 v6262 v6263 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i4692  <|@  <|@
f <@~|@floating>@ <|@
tid j4697 <|@
result v112|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j4696 
y: j4729 
=== Succesors ===
=== Usages ===
v4702 v4731 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4696 y: j4729  <|@  <|@
f <@~|@floating>@ <|@
tid v4702 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4730 
y: j4697 
=== Succesors ===
=== Usages ===
v4708 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j4730 y: j4697  <|@  <|@
f <@*|@fixed>@ <|@
tid v4708 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v4702 
=== Succesors ===
trueSuccessor: v4707 
falseSuccessor: v4706 
=== Usages ===
=== Predecessor ===
v4700 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4702 #trueSuccessor: v4707 #falseSuccessor: v4706  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = SHL v105|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = LEA [v108|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = AND v109|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVSXD v110|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = ADD (x: v111|QWORD, y: v106|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v112|QWORD, y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B98" 
    xhandlers
    flags 
    probability 4557644352979169267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4707 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4705 
=== Usages ===
=== Predecessor ===
v4708 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4705  <|@  <|@
f <@*|@fixed>@ <|@
tid v4705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4704 
=== Predecessor ===
v4707 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B99" 
    xhandlers
    flags 
    probability 4587129693552234790
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4731 
=== Usages ===
=== Predecessor ===
v4708 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4731 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6256 
value: j4697 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4722 
=== Usages ===
=== Predecessor ===
v4706 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6256 value: j4697 stateAfter: - lastLocationAccess: - #next: v4722  <|@  <|@
f <@~|@floating>@ <|@
tid v6260 <|@
result [v111|QWORD + v106|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j4696 
index: j4729 
=== Succesors ===
=== Usages ===
v4722 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4696 index: j4729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6260 
=== Succesors ===
next: v4724 
=== Usages ===
=== Predecessor ===
v4731 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6260 #next: v4724  <|@  <|@
f <@~|@floating>@ <|@
tid v6261 <|@
result [v111|QWORD + v106|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j4696 
index: j4729 
=== Succesors ===
=== Usages ===
v4724 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4696 index: j4729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6261 
=== Succesors ===
next: v4726 
=== Usages ===
=== Predecessor ===
v4722 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6261 #next: v4726  <|@  <|@
f <@~|@floating>@ <|@
tid v6262 <|@
result [v111|QWORD + v106|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j4696 
index: j4729 
=== Succesors ===
=== Usages ===
v4726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4696 index: j4729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6262 
=== Succesors ===
next: v4728 
=== Usages ===
=== Predecessor ===
v4724 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6262 #next: v4728  <|@  <|@
f <@~|@floating>@ <|@
tid v6263 <|@
result [v111|QWORD + v106|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j4696 
index: j4729 
=== Succesors ===
=== Usages ===
v4728 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4696 index: j4729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4728 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6263 
=== Succesors ===
next: v4732 
=== Usages ===
=== Predecessor ===
v4726 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6263 #next: v4732  <|@  <|@
f <@~|@floating>@ <|@
tid v6258 <|@
result [v106|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j4729 
index: - 
=== Succesors ===
=== Usages ===
v4732 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4729 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4732 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6258 
value: i2216 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4733 
=== Usages ===
=== Predecessor ===
v4728 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6258 value: i2216 stateAfter: - lastLocationAccess: - #next: v4733  <|@  <|@
f <@~|@floating>@ <|@
tid v6259 <|@
result [v106|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4729 
index: - 
=== Succesors ===
=== Usages ===
v4733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4729 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4733 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6259 
value: j4395 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4736 
=== Usages ===
=== Predecessor ===
v4732 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6259 value: j4395 stateAfter: - lastLocationAccess: - #next: v4736  <|@  <|@
f <@~|@floating>@ <|@
tid v6264 <|@
result [v106|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j4729 
index: - 
=== Succesors ===
=== Usages ===
v4736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4729 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4736 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6264 
value: v4986 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4711 
=== Usages ===
=== Predecessor ===
v4733 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6264 value: v4986 stateAfter: - lastLocationAccess: - #next: v4711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4711 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a4712 
=== Usages ===
=== Predecessor ===
v4736 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a4712  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4712 <|@
result v113|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j4729 
=== Succesors ===
next: v4714 
=== Usages ===
a4717 
=== Predecessor ===
v4711 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j4729 #next: v4714  <|@  <|@
f <@*|@fixed>@ <|@
tid v4714 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4715 
=== Predecessor ===
a4712 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v112|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v111|QWORD + v106|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v111|QWORD + v106|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v111|QWORD + v106|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v111|QWORD + v106|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v106|QWORD + 12], y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v106|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v106|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE v106|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|QWORD[.]] destination: B96 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B98" 
    xhandlers
    flags 
    probability 4572907146747568786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4703 
=== Usages ===
=== Predecessor ===
v4701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4703  <|@  <|@
f <@*|@fixed>@ <|@
tid v4703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4704 
=== Predecessor ===
v4699 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B95" 
    successors "B99" 
    xhandlers
    flags 
    probability 4573470287961018512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4703 v4705 
=== Succesors ===
next: a4713 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4703 v4705 #next: a4713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4713 <|@
result v114|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2217 
arguments: v4394 i2216 i90 
=== Succesors ===
next: v4716 
=== Usages ===
a4717 
=== Predecessor ===
v4704 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2217 arguments: v4394 i2216 i90 #next: v4716  <|@  <|@
f <@*|@fixed>@ <|@
tid v4716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4715 
=== Predecessor ===
a4713 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v105|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v26|QWORD[.] v52|QWORD[.] v105|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 7, 241, 17] <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v114|QWORD[.]] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B96" "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a4717 <|@
result v115|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v4715 
values: a4712 a4713 
=== Succesors ===
=== Usages ===
v6314 a4289 v6224 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v4715 values: a4712 a4713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4715 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4714 v4716 
=== Succesors ===
next: v5838 
=== Usages ===
a4717 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4714 v4716 #next: v5838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v5327 
=== Usages ===
j5839 j5841 
=== Predecessor ===
v4715 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v5327  <|@  <|@
f <@~|@floating>@ <|@
tid v4203 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2191 
y: i2216 
=== Succesors ===
=== Usages ===
i4266 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2191 y: i2216  <|@  <|@
f <@~|@floating>@ <|@
tid i4266 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v4203 
trueValue: i2191 
falseValue: i2216 
=== Succesors ===
=== Usages ===
j5042 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v4203 trueValue: i2191 falseValue: i2216  <|@  <|@
f <@~|@floating>@ <|@
tid j5042 <|@
result v117|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i4266 
=== Succesors ===
=== Usages ===
j5896 v6314 j5046 v5324 v5587 j5882 j5887 j5890 j5893 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i4266  <|@  <|@
f <@~|@floating>@ <|@
tid v5324 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5042 
y: j4395 
=== Succesors ===
=== Usages ===
v5327 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5042 y: j4395  <|@  <|@
f <@*|@fixed>@ <|@
tid v5327 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v5324 
=== Succesors ===
trueSuccessor: v5325 
falseSuccessor: v5326 
=== Usages ===
=== Predecessor ===
v5838 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5324 #trueSuccessor: v5325 #falseSuccessor: v5326  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v105|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = CMOVE (falseValue: v105|DWORD, ~trueValue: v42|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOVSXD v116|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v117|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B118" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5343 
=== Usages ===
=== Predecessor ===
v5327 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5343  <|@  <|@
f <@*|@fixed>@ <|@
tid v5343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5344 
=== Predecessor ===
v5325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5330 
=== Usages ===
=== Predecessor ===
v5327 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5330  <|@  <|@
f <@~|@floating>@ <|@
tid v6224 <|@
result [v115|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a4717 
index: - 
=== Succesors ===
=== Usages ===
j5841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4717 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j5841 <|@
result v118|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5838 
address: v6224 
=== Succesors ===
=== Usages ===
v6350 v6352 v6354 v6356 v6358 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5838 address: v6224  <|@  <|@
f <@~|@floating>@ <|@
tid v6219 <|@
result [v52|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a4285 
index: - 
=== Succesors ===
=== Usages ===
j5839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4285 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j5839 <|@
result v119|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5838 
address: v6219 
=== Succesors ===
=== Usages ===
v6351 v6353 v6355 v6357 v6359 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5838 address: v6219  <|@  <|@
f <@~|@floating>@ <|@
tid j5882 <|@
result v120|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j5042 
y: j5637 
=== Succesors ===
=== Usages ===
v5883 v5885 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5042 y: j5637  <|@  <|@
f <@~|@floating>@ <|@
tid v5883 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5882 
y: j4022 
=== Succesors ===
=== Usages ===
v5330 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5882 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v5330 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v5883 
=== Succesors ===
trueSuccessor: v5328 
falseSuccessor: v5329 
=== Usages ===
=== Predecessor ===
v5326 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5883 #trueSuccessor: v5328 #falseSuccessor: v5329  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = LEA [v115|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = LEA [v52|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = LEA [v117|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v120|QWORD, y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B106" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5339 
=== Usages ===
=== Predecessor ===
v5330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5339  <|@  <|@
f <@*|@fixed>@ <|@
tid v5339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5340 
=== Predecessor ===
v5328 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B102 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5331 
=== Usages ===
=== Predecessor ===
v5330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5331  <|@  <|@
f <@*|@fixed>@ <|@
tid v5331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5332 
=== Predecessor ===
v5329 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B269" 
    successors "B105" "B269" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4583478627150781240
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5874 <|@
result v121|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5332 
values: j4022 j5881 
=== Succesors ===
=== Usages ===
v6359 j5881 v6358 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5332 values: j4022 j5881  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5332 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v5331 
=== Succesors ===
next: v6166 
=== Usages ===
v6166 v5335 v5336 j5874 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v5331 #next: v6166  <|@  <|@
f <@~|@floating>@ <|@
tid v6359 <|@
result [v119|QWORD[.] + v121|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5839 
index: j5874 
=== Succesors ===
=== Usages ===
v6166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5839 index: j5874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6166 <|@
result v122|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5332 
address: v6359 
=== Succesors ===
next: v6133 
=== Usages ===
v6133 
=== Predecessor ===
v5332 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5332 address: v6359 #next: v6133  <|@  <|@
f <@~|@floating>@ <|@
tid v6358 <|@
result [v118|QWORD[.] + v121|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5841 
index: j5874 
=== Succesors ===
=== Usages ===
v6133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5841 index: j5874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6133 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6358 
value: v6166 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5338 
=== Usages ===
=== Predecessor ===
v6166 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6358 value: v6166 stateAfter: - lastLocationAccess: - #next: v5338  <|@  <|@
f <@~|@floating>@ <|@
tid j5881 <|@
result v123|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5874 
y: j2615 
=== Succesors ===
=== Usages ===
j5866 j5874 v5885 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5874 y: j2615  <|@  <|@
f <@~|@floating>@ <|@
tid v5885 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5882 
y: j5881 
=== Succesors ===
=== Usages ===
v5338 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5882 y: j5881  <|@  <|@
f <@*|@fixed>@ <|@
tid v5338 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5885 
=== Succesors ===
trueSuccessor: v5335 
falseSuccessor: v5337 
=== Usages ===
=== Predecessor ===
v6133 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5885 #trueSuccessor: v5335 #falseSuccessor: v5337  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|V256_WORD = H [v119|QWORD[.] + v121|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v121|QWORD * 2], input: v122|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = LEA [v121|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v123|QWORD, y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B104 -> B105 falseDestination: B104 -> B269 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v5332 
=== Succesors ===
next: v5341 
=== Usages ===
=== Predecessor ===
v5338 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v5332 #next: v5341  <|@  <|@
f <@*|@fixed>@ <|@
tid v5341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5340 
=== Predecessor ===
v5335 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v123|QWORD] destination: B105 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B102" "B105" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5866 <|@
result v124|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5340 
values: j4022 j5881 
=== Succesors ===
=== Usages ===
v6357 j5873 j5858 v5888 v6356 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5340 values: j4022 j5881  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5339 v5341 
=== Succesors ===
next: v5362 
=== Usages ===
j5866 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5339 v5341 #next: v5362  <|@  <|@
f <@~|@floating>@ <|@
tid j5887 <|@
result v125|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j5042 
y: j5643 
=== Succesors ===
=== Usages ===
v5888 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5042 y: j5643  <|@  <|@
f <@~|@floating>@ <|@
tid v5888 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5887 
y: j5866 
=== Succesors ===
=== Usages ===
v5362 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5887 y: j5866  <|@  <|@
f <@*|@fixed>@ <|@
tid v5362 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5888 
=== Succesors ===
trueSuccessor: v5361 
falseSuccessor: v5360 
=== Usages ===
=== Predecessor ===
v5340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5888 #trueSuccessor: v5361 #falseSuccessor: v5360  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v124|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = LEA [v117|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v124|QWORD, y: v125|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5365 
=== Usages ===
=== Predecessor ===
v5362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5365  <|@  <|@
f <@*|@fixed>@ <|@
tid v5365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5351 
=== Predecessor ===
v5361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|QWORD] destination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6167 
=== Usages ===
v6167 
=== Predecessor ===
v5362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6167  <|@  <|@
f <@~|@floating>@ <|@
tid v6357 <|@
result [v119|QWORD[.] + v124|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5839 
index: j5866 
=== Succesors ===
=== Usages ===
v6167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5839 index: j5866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6167 <|@
result v126|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5360 
address: v6357 
=== Succesors ===
next: v6131 
=== Usages ===
v6131 
=== Predecessor ===
v5360 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5360 address: v6357 #next: v6131  <|@  <|@
f <@~|@floating>@ <|@
tid v6356 <|@
result [v118|QWORD[.] + v124|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5841 
index: j5866 
=== Succesors ===
=== Usages ===
v6131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5841 index: j5866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6356 
value: v6167 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5350 
=== Usages ===
=== Predecessor ===
v6167 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6356 value: v6167 stateAfter: - lastLocationAccess: - #next: v5350  <|@  <|@
f <@~|@floating>@ <|@
tid j5873 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5866 
y: j4402 
=== Succesors ===
=== Usages ===
j5858 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5866 y: j4402  <|@  <|@
f <@*|@fixed>@ <|@
tid v5350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5351 
=== Predecessor ===
v6131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v126|V128_WORD = H [v119|QWORD[.] + v124|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v124|QWORD * 2], input: v126|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = LEA [v124|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v127|QWORD] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" "B107" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5858 <|@
result v128|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5351 
values: j5873 j5866 
=== Succesors ===
=== Usages ===
v6355 j5865 j5850 v5891 v6354 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5351 values: j5873 j5866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5350 v5365 
=== Succesors ===
next: v5368 
=== Usages ===
j5858 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5350 v5365 #next: v5368  <|@  <|@
f <@~|@floating>@ <|@
tid j5890 <|@
result v129|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j5042 
y: j5647 
=== Succesors ===
=== Usages ===
v5891 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5042 y: j5647  <|@  <|@
f <@~|@floating>@ <|@
tid v5891 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5890 
y: j5858 
=== Succesors ===
=== Usages ===
v5368 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5890 y: j5858  <|@  <|@
f <@*|@fixed>@ <|@
tid v5368 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5891 
=== Succesors ===
trueSuccessor: v5367 
falseSuccessor: v5366 
=== Usages ===
=== Predecessor ===
v5351 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5891 #trueSuccessor: v5367 #falseSuccessor: v5366  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v128|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD = LEA [v117|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v128|QWORD, y: v129|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5367 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5371 
=== Usages ===
=== Predecessor ===
v5368 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5371  <|@  <|@
f <@*|@fixed>@ <|@
tid v5371 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5354 
=== Predecessor ===
v5367 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v128|QWORD] destination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6168 
=== Usages ===
v6168 
=== Predecessor ===
v5368 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6168  <|@  <|@
f <@~|@floating>@ <|@
tid v6355 <|@
result [v119|QWORD[.] + v128|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5839 
index: j5858 
=== Succesors ===
=== Usages ===
v6168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5839 index: j5858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6168 <|@
result v130|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5366 
address: v6355 
=== Succesors ===
next: v6129 
=== Usages ===
v6129 
=== Predecessor ===
v5366 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5366 address: v6355 #next: v6129  <|@  <|@
f <@~|@floating>@ <|@
tid v6354 <|@
result [v118|QWORD[.] + v128|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5841 
index: j5858 
=== Succesors ===
=== Usages ===
v6129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5841 index: j5858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6354 
value: v6168 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5353 
=== Usages ===
=== Predecessor ===
v6168 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6354 value: v6168 stateAfter: - lastLocationAccess: - #next: v5353  <|@  <|@
f <@~|@floating>@ <|@
tid j5865 <|@
result v131|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5858 
y: j5619 
=== Succesors ===
=== Usages ===
j5850 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5858 y: j5619  <|@  <|@
f <@*|@fixed>@ <|@
tid v5353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5354 
=== Predecessor ===
v6129 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v130|V64_WORD = H [v119|QWORD[.] + v128|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v128|QWORD * 2], input: v130|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = LEA [v128|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v131|QWORD] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5850 <|@
result v132|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5354 
values: j5865 j5858 
=== Succesors ===
=== Usages ===
v6353 j5857 j5842 v5894 v6352 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5354 values: j5865 j5858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5353 v5371 
=== Succesors ===
next: v5374 
=== Usages ===
j5850 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5353 v5371 #next: v5374  <|@  <|@
f <@~|@floating>@ <|@
tid j5893 <|@
result v133|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j5042 
y: j5651 
=== Succesors ===
=== Usages ===
v5894 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5042 y: j5651  <|@  <|@
f <@~|@floating>@ <|@
tid v5894 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5893 
y: j5850 
=== Succesors ===
=== Usages ===
v5374 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5893 y: j5850  <|@  <|@
f <@*|@fixed>@ <|@
tid v5374 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5894 
=== Succesors ===
trueSuccessor: v5373 
falseSuccessor: v5372 
=== Usages ===
=== Predecessor ===
v5354 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5894 #trueSuccessor: v5373 #falseSuccessor: v5372  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v132|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = LEA [v117|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v132|QWORD, y: v133|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5373 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5377 
=== Usages ===
=== Predecessor ===
v5374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5377  <|@  <|@
f <@*|@fixed>@ <|@
tid v5377 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5357 
=== Predecessor ===
v5373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v132|QWORD] destination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6169 
=== Usages ===
v6169 
=== Predecessor ===
v5374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6169  <|@  <|@
f <@~|@floating>@ <|@
tid v6353 <|@
result [v119|QWORD[.] + v132|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5839 
index: j5850 
=== Succesors ===
=== Usages ===
v6169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5839 index: j5850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6169 <|@
result v134|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5372 
address: v6353 
=== Succesors ===
next: v6127 
=== Usages ===
v6127 
=== Predecessor ===
v5372 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5372 address: v6353 #next: v6127  <|@  <|@
f <@~|@floating>@ <|@
tid v6352 <|@
result [v118|QWORD[.] + v132|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5841 
index: j5850 
=== Succesors ===
=== Usages ===
v6127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5841 index: j5850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6127 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6352 
value: v6169 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5356 
=== Usages ===
=== Predecessor ===
v6169 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6352 value: v6169 stateAfter: - lastLocationAccess: - #next: v5356  <|@  <|@
f <@~|@floating>@ <|@
tid j5857 <|@
result v135|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5850 
y: j4598 
=== Succesors ===
=== Usages ===
j5842 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5850 y: j4598  <|@  <|@
f <@*|@fixed>@ <|@
tid v5356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5357 
=== Predecessor ===
v6127 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v134|V32_WORD = H [v119|QWORD[.] + v132|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v132|QWORD * 2], input: v134|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = LEA [v132|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v135|QWORD] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5842 <|@
result v136|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5357 
values: j5857 j5850 
=== Succesors ===
=== Usages ===
v6351 v5897 v6350 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5357 values: j5857 j5850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5356 v5377 
=== Succesors ===
next: v5380 
=== Usages ===
j5842 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5356 v5377 #next: v5380  <|@  <|@
f <@~|@floating>@ <|@
tid j5896 <|@
result v137|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j5042 
y: j5655 
=== Succesors ===
=== Usages ===
v5897 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5042 y: j5655  <|@  <|@
f <@~|@floating>@ <|@
tid v5897 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5896 
y: j5842 
=== Succesors ===
=== Usages ===
v5380 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5896 y: j5842  <|@  <|@
f <@*|@fixed>@ <|@
tid v5380 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5897 
=== Succesors ===
trueSuccessor: v5379 
falseSuccessor: v5378 
=== Usages ===
=== Predecessor ===
v5357 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5897 #trueSuccessor: v5379 #falseSuccessor: v5378  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v136|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v137|QWORD = DEC v117|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v136|QWORD, y: v137|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5383 
=== Usages ===
=== Predecessor ===
v5380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5383  <|@  <|@
f <@*|@fixed>@ <|@
tid v5383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5344 
=== Predecessor ===
v5379 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i6170 
=== Usages ===
i6170 
=== Predecessor ===
v5380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6170  <|@  <|@
f <@~|@floating>@ <|@
tid v6351 <|@
result [v119|QWORD[.] + v136|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5839 
index: j5842 
=== Succesors ===
=== Usages ===
i6170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5839 index: j5842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6170 <|@
result v138|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v5378 
address: v6351 
=== Succesors ===
next: v6125 
=== Usages ===
v6125 
=== Predecessor ===
v5378 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5378 address: v6351 #next: v6125  <|@  <|@
f <@~|@floating>@ <|@
tid v6350 <|@
result [v118|QWORD[.] + v136|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5841 
index: j5842 
=== Succesors ===
=== Usages ===
v6125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5841 index: j5842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6125 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6350 
value: i6170 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5359 
=== Usages ===
=== Predecessor ===
i6170 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6350 value: i6170 stateAfter: - lastLocationAccess: - #next: v5359  <|@  <|@
f <@*|@fixed>@ <|@
tid v5359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5344 
=== Predecessor ===
v6125 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVSX [v119|QWORD[.] + v136|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v118|QWORD[.] + v136|QWORD * 2], y: v138|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B100" "B117" "B116" 
    successors "B119" "B137" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5343 v5359 v5383 
=== Succesors ===
next: v5900 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5343 v5359 v5383 #next: v5900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5900 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v5390 
=== Usages ===
j5902 
=== Predecessor ===
v5344 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v5390  <|@  <|@
f <@~|@floating>@ <|@
tid j5041 <|@
result v139|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2216 
=== Succesors ===
=== Usages ===
j5046 v5587 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2216  <|@  <|@
f <@~|@floating>@ <|@
tid v5587 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5042 
y: j5041 
=== Succesors ===
=== Usages ===
v5390 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5042 y: j5041  <|@  <|@
f <@*|@fixed>@ <|@
tid v5390 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v5587 
=== Succesors ===
trueSuccessor: v5389 
falseSuccessor: v5388 
=== Usages ===
=== Predecessor ===
v5900 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5587 #trueSuccessor: v5389 #falseSuccessor: v5388  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = MOVSXD v105|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v139|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B118 -> B119 falseDestination: B118 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5393 
=== Usages ===
=== Predecessor ===
v5390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5393  <|@  <|@
f <@~|@floating>@ <|@
tid v6314 <|@
result [v115|QWORD[.] + v117|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a4717 
index: j5042 
=== Succesors ===
=== Usages ===
j5902 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4717 index: j5042  <|@  <|@
f <@~|@floating>@ <|@
tid j5902 <|@
result v140|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5900 
address: v6314 
=== Succesors ===
=== Usages ===
v6360 v6361 v6362 v6363 v6364 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5900 address: v6314  <|@  <|@
f <@~|@floating>@ <|@
tid j5046 <|@
result v141|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$68/1668473261@10b940da
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j5041 
y: j5042 
=== Succesors ===
=== Usages ===
j5947 j5933 j5938 j5941 j5944 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j5041 y: j5042  <|@  <|@
f <@~|@floating>@ <|@
tid j5933 <|@
result v142|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j5046 
y: j5637 
=== Succesors ===
=== Usages ===
v5934 v5936 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5046 y: j5637  <|@  <|@
f <@~|@floating>@ <|@
tid v5934 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5933 
y: j4022 
=== Succesors ===
=== Usages ===
v5393 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5933 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v5393 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v5934 
=== Succesors ===
trueSuccessor: v5391 
falseSuccessor: v5392 
=== Usages ===
=== Predecessor ===
v5389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5934 #trueSuccessor: v5391 #falseSuccessor: v5392  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = LEA [v115|QWORD[.] + v117|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = SUB (x: v139|QWORD, ~y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = LEA [v141|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v142|QWORD, y: v142|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B124" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5402 
=== Usages ===
=== Predecessor ===
v5393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5402  <|@  <|@
f <@*|@fixed>@ <|@
tid v5402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5403 
=== Predecessor ===
v5391 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B120 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5394 
=== Usages ===
=== Predecessor ===
v5393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5394  <|@  <|@
f <@*|@fixed>@ <|@
tid v5394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5395 
=== Predecessor ===
v5392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B136" 
    successors "B123" "B136" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4583478627150781240
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5927 <|@
result v143|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5395 
values: j4022 j5932 
=== Succesors ===
=== Usages ===
v6364 j5932 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5395 values: j4022 j5932  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5395 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v5394 
=== Succesors ===
next: v6138 
=== Usages ===
j5927 v5398 v5399 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v5394 #next: v6138  <|@  <|@
f <@~|@floating>@ <|@
tid v6364 <|@
result [v140|QWORD[.] + v143|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5902 
index: j5927 
=== Succesors ===
=== Usages ===
v6138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5902 index: j5927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6138 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6364 
value: v6154 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5401 
=== Usages ===
=== Predecessor ===
v5395 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6364 value: v6154 stateAfter: - lastLocationAccess: - #next: v5401  <|@  <|@
f <@~|@floating>@ <|@
tid j5932 <|@
result v144|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5927 
y: j2615 
=== Succesors ===
=== Usages ===
j5921 j5927 v5936 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5927 y: j2615  <|@  <|@
f <@~|@floating>@ <|@
tid v5936 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5933 
y: j5932 
=== Succesors ===
=== Usages ===
v5401 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5933 y: j5932  <|@  <|@
f <@*|@fixed>@ <|@
tid v5401 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5936 
=== Succesors ===
trueSuccessor: v5398 
falseSuccessor: v5400 
=== Usages ===
=== Predecessor ===
v6138 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5936 #trueSuccessor: v5398 #falseSuccessor: v5400  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v143|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v140|QWORD[.] + v143|QWORD * 2], input: v19|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = LEA [v143|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|QWORD, y: v142|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B122 -> B123 falseDestination: B122 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v5395 
=== Succesors ===
next: v5404 
=== Usages ===
=== Predecessor ===
v5401 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v5395 #next: v5404  <|@  <|@
f <@*|@fixed>@ <|@
tid v5404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5403 
=== Predecessor ===
v5398 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v144|QWORD] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B120" "B123" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5921 <|@
result v145|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5403 
values: j4022 j5932 
=== Succesors ===
=== Usages ===
v6363 j5926 j5915 v5939 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5403 values: j4022 j5932  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5402 v5404 
=== Succesors ===
next: v5425 
=== Usages ===
j5921 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5402 v5404 #next: v5425  <|@  <|@
f <@~|@floating>@ <|@
tid j5938 <|@
result v146|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j5046 
y: j5643 
=== Succesors ===
=== Usages ===
v5939 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5046 y: j5643  <|@  <|@
f <@~|@floating>@ <|@
tid v5939 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5938 
y: j5921 
=== Succesors ===
=== Usages ===
v5425 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5938 y: j5921  <|@  <|@
f <@*|@fixed>@ <|@
tid v5425 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5939 
=== Succesors ===
trueSuccessor: v5424 
falseSuccessor: v5423 
=== Usages ===
=== Predecessor ===
v5403 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5939 #trueSuccessor: v5424 #falseSuccessor: v5423  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v145|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = LEA [v141|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v145|QWORD, y: v146|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B124 -> B125 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5428 
=== Usages ===
=== Predecessor ===
v5425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5428  <|@  <|@
f <@*|@fixed>@ <|@
tid v5428 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5414 
=== Predecessor ===
v5424 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v145|QWORD] destination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6137 
=== Usages ===
=== Predecessor ===
v5425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6137  <|@  <|@
f <@~|@floating>@ <|@
tid v6363 <|@
result [v140|QWORD[.] + v145|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5902 
index: j5921 
=== Succesors ===
=== Usages ===
v6137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5902 index: j5921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6363 
value: v6158 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5413 
=== Usages ===
=== Predecessor ===
v5423 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6363 value: v6158 stateAfter: - lastLocationAccess: - #next: v5413  <|@  <|@
f <@~|@floating>@ <|@
tid j5926 <|@
result v147|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5921 
y: j4402 
=== Succesors ===
=== Usages ===
j5915 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5921 y: j4402  <|@  <|@
f <@*|@fixed>@ <|@
tid v5413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5414 
=== Predecessor ===
v6137 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v140|QWORD[.] + v145|QWORD * 2], input: v78|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v147|QWORD = LEA [v145|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v147|QWORD] destination: B126 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5915 <|@
result v148|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5414 
values: j5926 j5921 
=== Succesors ===
=== Usages ===
v6362 j5920 j5909 v5942 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5414 values: j5926 j5921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5413 v5428 
=== Succesors ===
next: v5431 
=== Usages ===
j5915 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5413 v5428 #next: v5431  <|@  <|@
f <@~|@floating>@ <|@
tid j5941 <|@
result v149|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j5046 
y: j5647 
=== Succesors ===
=== Usages ===
v5942 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5046 y: j5647  <|@  <|@
f <@~|@floating>@ <|@
tid v5942 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5941 
y: j5915 
=== Succesors ===
=== Usages ===
v5431 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5941 y: j5915  <|@  <|@
f <@*|@fixed>@ <|@
tid v5431 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5942 
=== Succesors ===
trueSuccessor: v5430 
falseSuccessor: v5429 
=== Usages ===
=== Predecessor ===
v5414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5942 #trueSuccessor: v5430 #falseSuccessor: v5429  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v148|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = LEA [v141|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v148|QWORD, y: v149|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5434 
=== Usages ===
=== Predecessor ===
v5431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5434  <|@  <|@
f <@*|@fixed>@ <|@
tid v5434 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5417 
=== Predecessor ===
v5430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v148|QWORD] destination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6136 
=== Usages ===
=== Predecessor ===
v5431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6136  <|@  <|@
f <@~|@floating>@ <|@
tid v6362 <|@
result [v140|QWORD[.] + v148|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5902 
index: j5915 
=== Succesors ===
=== Usages ===
v6136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5902 index: j5915  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6136 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6362 
value: v6157 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5416 
=== Usages ===
=== Predecessor ===
v5429 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6362 value: v6157 stateAfter: - lastLocationAccess: - #next: v5416  <|@  <|@
f <@~|@floating>@ <|@
tid j5920 <|@
result v150|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5915 
y: j5619 
=== Succesors ===
=== Usages ===
j5909 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5915 y: j5619  <|@  <|@
f <@*|@fixed>@ <|@
tid v5416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5417 
=== Predecessor ===
v6136 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v140|QWORD[.] + v148|QWORD * 2], input: v77|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v150|QWORD = LEA [v148|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v150|QWORD] destination: B129 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5909 <|@
result v151|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5417 
values: j5920 j5915 
=== Succesors ===
=== Usages ===
v6361 j5914 j5903 v5945 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5417 values: j5920 j5915  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5416 v5434 
=== Succesors ===
next: v5437 
=== Usages ===
j5909 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5416 v5434 #next: v5437  <|@  <|@
f <@~|@floating>@ <|@
tid j5944 <|@
result v152|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j5046 
y: j5651 
=== Succesors ===
=== Usages ===
v5945 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5046 y: j5651  <|@  <|@
f <@~|@floating>@ <|@
tid v5945 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5944 
y: j5909 
=== Succesors ===
=== Usages ===
v5437 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5944 y: j5909  <|@  <|@
f <@*|@fixed>@ <|@
tid v5437 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5945 
=== Succesors ===
trueSuccessor: v5436 
falseSuccessor: v5435 
=== Usages ===
=== Predecessor ===
v5417 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5945 #trueSuccessor: v5436 #falseSuccessor: v5435  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v151|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = LEA [v141|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v151|QWORD, y: v152|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B130 -> B131 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5440 
=== Usages ===
=== Predecessor ===
v5437 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5440  <|@  <|@
f <@*|@fixed>@ <|@
tid v5440 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5420 
=== Predecessor ===
v5436 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v151|QWORD] destination: B131 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6135 
=== Usages ===
=== Predecessor ===
v5437 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6135  <|@  <|@
f <@~|@floating>@ <|@
tid v6361 <|@
result [v140|QWORD[.] + v151|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5902 
index: j5909 
=== Succesors ===
=== Usages ===
v6135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5902 index: j5909  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6135 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6361 
value: v6156 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5419 
=== Usages ===
=== Predecessor ===
v5435 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6361 value: v6156 stateAfter: - lastLocationAccess: - #next: v5419  <|@  <|@
f <@~|@floating>@ <|@
tid j5914 <|@
result v153|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5909 
y: j4598 
=== Succesors ===
=== Usages ===
j5903 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5909 y: j4598  <|@  <|@
f <@*|@fixed>@ <|@
tid v5419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5420 
=== Predecessor ===
v6135 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v140|QWORD[.] + v151|QWORD * 2], input: v20|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = LEA [v151|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v153|QWORD] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B131" 
    successors "B134" "B135" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5903 <|@
result v154|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5420 
values: j5914 j5909 
=== Succesors ===
=== Usages ===
v6360 v5948 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5420 values: j5914 j5909  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5419 v5440 
=== Succesors ===
next: v5443 
=== Usages ===
j5903 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5419 v5440 #next: v5443  <|@  <|@
f <@~|@floating>@ <|@
tid j5947 <|@
result v155|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j5046 
y: j5655 
=== Succesors ===
=== Usages ===
v5948 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5046 y: j5655  <|@  <|@
f <@~|@floating>@ <|@
tid v5948 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5947 
y: j5903 
=== Succesors ===
=== Usages ===
v5443 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5947 y: j5903  <|@  <|@
f <@*|@fixed>@ <|@
tid v5443 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5948 
=== Succesors ===
trueSuccessor: v5442 
falseSuccessor: v5441 
=== Usages ===
=== Predecessor ===
v5420 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5948 #trueSuccessor: v5442 #falseSuccessor: v5441  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v154|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = DEC v141|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|QWORD, y: v155|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B133 -> B134 falseDestination: B133 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B138" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5446 
=== Usages ===
=== Predecessor ===
v5443 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5446  <|@  <|@
f <@*|@fixed>@ <|@
tid v5446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5407 
=== Predecessor ===
v5442 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B134 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B138" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6134 
=== Usages ===
=== Predecessor ===
v5443 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6134  <|@  <|@
f <@~|@floating>@ <|@
tid v6360 <|@
result [v140|QWORD[.] + v154|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5902 
index: j5903 
=== Succesors ===
=== Usages ===
v6134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5902 index: j5903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6360 
value: i6155 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5422 
=== Usages ===
=== Predecessor ===
v5441 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6360 value: i6155 stateAfter: - lastLocationAccess: - #next: v5422  <|@  <|@
f <@*|@fixed>@ <|@
tid v5422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5407 
=== Predecessor ===
v6134 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v140|QWORD[.] + v154|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B122" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5399 
=== Usages ===
=== Predecessor ===
v5401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5399  <|@  <|@
f <@*|@fixed>@ <|@
tid v5399 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v5395 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5400 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v5395  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v144|QWORD] destination: B136 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B138" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5406 
=== Usages ===
=== Predecessor ===
v5390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5406  <|@  <|@
f <@*|@fixed>@ <|@
tid v5406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5407 
=== Predecessor ===
v5388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" "B135" "B134" 
    successors "B139" "B140" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5406 v5422 v5446 
=== Succesors ===
next: a4289 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5406 v5422 v5446 #next: a4289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4289 <|@
result v115|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a4717 
=== Succesors ===
next: v3783 
=== Usages ===
v6215 a3782 
=== Predecessor ===
v5407 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a4717 #next: v3783  <|@  <|@
f <@~|@floating>@ <|@
tid a3782 <|@
result v156|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a4289 
=== Succesors ===
=== Usages ===
v3783 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3783 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6206 
value: a3782 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j4744 
=== Usages ===
=== Predecessor ===
a4289 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6206 value: a3782 stateAfter: - lastLocationAccess: - #next: j4744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4744 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4042 
=== Succesors ===
next: v4748 
=== Usages ===
j4745 
=== Predecessor ===
v3783 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4042 #next: v4748  <|@  <|@
f <@~|@floating>@ <|@
tid j4745 <|@
result v157|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$152/1924078416@7040fbbc
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j4744 
y: i4682 
=== Succesors ===
=== Usages ===
v6265 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j4744 y: i4682  <|@  <|@
f <@~|@floating>@ <|@
tid v6265 <|@
result [v157|QWORD[*] + v97|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4745 
index: j4686 
=== Succesors ===
=== Usages ===
v4748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4745 index: j4686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4748 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6265 
value: i4688 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i6171 
=== Usages ===
=== Predecessor ===
j4744 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6265 value: i4688 stateAfter: - lastLocationAccess: - #next: i6171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6171 <|@
result v158|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6207 
=== Succesors ===
next: v3799 
=== Usages ===
j3821 i4062 v3793 v3812 
=== Predecessor ===
v4748 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6207 #next: v3799  <|@  <|@
f <@~|@floating>@ <|@
tid v3793 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6171 
y: i90 
=== Succesors ===
=== Usages ===
v3799 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6171 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v3799 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3793 
=== Succesors ===
trueSuccessor: v3798 
falseSuccessor: v3794 
=== Usages ===
=== Predecessor ===
i6171 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3793 #trueSuccessor: v3798 #falseSuccessor: v3794  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|DWORD[.] = COMPRESSPOINTER (input: v115|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + 16], y: v156|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[*] = SHR v26|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v157|QWORD[*] + v97|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = MOV [v26|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v158|DWORD, y: v158|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B138 -> B139 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B142" 
    xhandlers
    flags 
    probability 4558144922946680135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3798 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3797 
=== Usages ===
=== Predecessor ===
v3799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3797  <|@  <|@
f <@*|@fixed>@ <|@
tid v3797 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3796 
=== Predecessor ===
v3798 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B139 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" "B143" 
    xhandlers
    flags 
    probability 4587904012720728163
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3794 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3816 
=== Usages ===
=== Predecessor ===
v3799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3816  <|@  <|@
f <@~|@floating>@ <|@
tid i3973 <|@
result v159|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32
=== Inputs ===
x: i2216 
y: i3838 
=== Succesors ===
=== Usages ===
v3812 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2216 y: i3838  <|@  <|@
f <@~|@floating>@ <|@
tid v3812 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3973 
y: i6171 
=== Succesors ===
=== Usages ===
v3816 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3973 y: i6171  <|@  <|@
f <@*|@fixed>@ <|@
tid v3816 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3812 
=== Succesors ===
trueSuccessor: v3815 
falseSuccessor: v3813 
=== Usages ===
=== Predecessor ===
v3794 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3812 #trueSuccessor: v3815 #falseSuccessor: v3813  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = DEC v105|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v158|DWORD, y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B140 -> B141 falseDestination: B140 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" 
    xhandlers
    flags 
    probability 4558094865949929048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3815 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3814 
=== Usages ===
=== Predecessor ===
v3816 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3814  <|@  <|@
f <@*|@fixed>@ <|@
tid v3814 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3796 
=== Predecessor ===
v3815 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B139" "B141" 
    successors 
    xhandlers
    flags 
    probability 4562623494075675088
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3796 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3797 v3814 
=== Succesors ===
next: v3817 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3797 v3814 #next: v3817  <|@  <|@
tid ?2221 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?2224 
values: - - 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
v3817 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2224 values: - - virtualObjectMappings: ?2531  <|@  <|@
f <@*|@fixed>@ <|@
tid v3817 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?2221 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3796 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2221  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -977249 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 7, 241, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B144" 
    xhandlers
    flags 
    probability 4587826580803878826
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3813 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3832 
=== Usages ===
=== Predecessor ===
v3816 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3832  <|@  <|@
f <@~|@floating>@ <|@
tid j3821 <|@
result v160|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i6171 
=== Succesors ===
=== Usages ===
v6215 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i6171  <|@  <|@
f <@~|@floating>@ <|@
tid v6215 <|@
result [v115|QWORD[.] + v160|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a4289 
index: j3821 
=== Succesors ===
=== Usages ===
v3832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4289 index: j3821  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3832 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6215 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2558 
=== Usages ===
=== Predecessor ===
v3813 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6215 value: i3844 stateAfter: - lastLocationAccess: - #next: v2558  <|@  <|@
f <@*|@fixed>@ <|@
tid v2558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2559 
=== Predecessor ===
v3832 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = MOVSXD v158|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v115|QWORD[.] + v160|QWORD * 2 + 16] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v158|DWORD] destination: B143 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" "B90" 
    successors "B145" "B148" 
    xhandlers
    flags 
    probability 4606993447661456006
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i4062 <|@
result v161|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v2559 
values: i6171 i1296 
=== Succesors ===
=== Usages ===
i4002 i1312 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2559 values: i6171 i1296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2558 v2561 
=== Succesors ===
next: a6172 
=== Usages ===
i4062 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2558 v2561 #next: a6172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6172 <|@
result v162|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v6206 
=== Succesors ===
next: i6173 
=== Usages ===
a3598 v6220 v6210 
=== Predecessor ===
v2559 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6206 #next: i6173  <|@  <|@
tid ?2231 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?1313 
values: a92 - i750 
=== Succesors ===
=== Usages ===
?2560 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1313 values: a92 - i750  <|@  <|@
tid ?2560 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<String.getChars(int, int, char[], int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 827
stackSize: 0
=== Inputs ===
outerFrameState: ?2231 
values: - - - - - 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
i6173 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2231 values: - - - - - virtualObjectMappings: ?2531  <|@  <|@
f <@~|@floating>@ <|@
tid v6210 <|@
result [v162|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6172 
=== Succesors ===
=== Usages ===
i6173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6173 <|@
result v163|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2560 
guard: - 
address: v6210 
=== Succesors ===
next: v3593 
=== Usages ===
i2234 i4267 i3961 v4242 
=== Predecessor ===
a6172 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2560 guard: - address: v6210 #next: v3593  <|@  <|@
f <@~|@floating>@ <|@
tid i1312 <|@
result v164|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32
=== Inputs ===
x: i4062 
y: i750 
=== Succesors ===
=== Usages ===
v3593 v3646 i4065 j3655 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4062 y: i750  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3593 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6207 
value: i1312 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3595 
=== Usages ===
=== Predecessor ===
i6173 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6207 value: i1312 stateAfter: - lastLocationAccess: - #next: v3595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3595 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: StringBuffer.toStringCache
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6209 
value: a3957 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2238 
=== Usages ===
=== Predecessor ===
v3593 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6209 value: a3957 stateAfter: - lastLocationAccess: - #next: v2238  <|@  <|@
f <@~|@floating>@ <|@
tid i4002 <|@
result v165|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32
=== Inputs ===
x: i4062 
y: i3999 
=== Succesors ===
=== Usages ===
v3671 i2234 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4062 y: i3999  <|@  <|@
f <@~|@floating>@ <|@
tid i2234 <|@
result v166|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$68/1668473261@10b940da
stamp: i32
=== Inputs ===
x: i4002 
y: i6173 
=== Succesors ===
=== Usages ===
v2235 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i4002 y: i6173  <|@  <|@
f <@~|@floating>@ <|@
tid v2235 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2234 
y: i750 
=== Succesors ===
=== Usages ===
v2238 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2234 y: i750  <|@  <|@
f <@~|@floating>@ <|@
tid a3598 <|@
result v167|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a6172 
=== Succesors ===
=== Usages ===
v6212 ?4060 ?2242 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6172  <|@  <|@
tid ?735 <|@
d <@d|@=== Debug Properties ===
bci: 248
code: ResolvedJavaMethodBytecode<StringOp.cont(StringBuffer)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 165
stackSize: 0
=== Inputs ===
outerFrameState: ?89 
values: - a92 
virtualObjectMappings: ?251 
=== Succesors ===
=== Usages ===
?1329 ?728 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?89 values: - a92 virtualObjectMappings: ?251  <|@  <|@
tid ?1329 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<StringBuffer.append(String)>
duringCall: true
localsSize: 2
locksSize: 1
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?735 
values: a92 - a92 
monitorIds: v698 
=== Succesors ===
=== Usages ===
?2249 ?2256 ?1325 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?735 values: a92 - a92 monitorIds: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v2238 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9446261558763105
=== Inputs ===
condition: v2235 
=== Succesors ===
trueSuccessor: v2236 
falseSuccessor: v2237 
=== Usages ===
=== Predecessor ===
v3595 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2235 #trueSuccessor: v2236 #falseSuccessor: v2237  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v161|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v162|DWORD[.] = MOV [v26|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: v26|QWORD[.] - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction v163|DWORD = MOV [v162|DWORD[.] * 8 + 12] size: DWORD state [bci:61, 35, 7, 241, 17] <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = INC v161|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + 12], y: v164|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v165|DWORD = LEA [v161|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = SUB (x: v165|DWORD, ~y: v163|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = UNCOMPRESSPOINTER (input: v162|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v166|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9446261558763105 condition: < trueDestination: B144 -> B145 falseDestination: B144 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4606505148472303541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3650 
=== Usages ===
=== Predecessor ===
v2238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3650  <|@  <|@
f <@~|@floating>@ <|@
tid i3961 <|@
result v168|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i6173 
y: i3838 
=== Succesors ===
=== Usages ===
v3646 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i6173 y: i3838  <|@  <|@
f <@~|@floating>@ <|@
tid v3646 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3961 
y: i1312 
=== Succesors ===
=== Usages ===
v3650 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3961 y: i1312  <|@  <|@
f <@*|@fixed>@ <|@
tid v3650 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v3646 
=== Succesors ===
trueSuccessor: v3649 
falseSuccessor: v3647 
=== Usages ===
=== Predecessor ===
v2236 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3646 #trueSuccessor: v3649 #falseSuccessor: v3647  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = DEC v163|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v164|DWORD, y: v168|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B145 -> B146 falseDestination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3651 
=== Usages ===
=== Predecessor ===
v3650 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3651  <|@  <|@
tid ?728 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<StringBuffer.append(String)>
duringCall: false
localsSize: 2
locksSize: 1
rethrowException: false
sourceFile: StringBuffer.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?735 
values: a92 a13 a92 
monitorIds: v698 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
v3651 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?735 values: a92 a13 a92 monitorIds: v698 virtualObjectMappings: ?2531  <|@  <|@
f <@*|@fixed>@ <|@
tid v3651 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?728 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3649 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?728  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -934753 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5]
locals: v26|QWORD[.] Object[String:"b"] 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:5, 248, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B201" 
    xhandlers
    flags 
    probability 4606505148472303541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3666 
=== Usages ===
=== Predecessor ===
v3650 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3666  <|@  <|@
f <@~|@floating>@ <|@
tid j3655 <|@
result v169|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1312 
=== Succesors ===
=== Usages ===
v6212 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1312  <|@  <|@
f <@~|@floating>@ <|@
tid v6212 <|@
result [v167|QWORD[.] + v169|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a3598 
index: j3655 
=== Succesors ===
=== Usages ===
v3666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3598 index: j3655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3666 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6212 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2568 
=== Usages ===
=== Predecessor ===
v3647 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6212 value: i3844 stateAfter: - lastLocationAccess: - #next: v2568  <|@  <|@
f <@*|@fixed>@ <|@
tid v2568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2566 
=== Predecessor ===
v3666 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v169|QWORD = MOVSXD v164|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v167|QWORD[.] + v169|QWORD * 2 + 16] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v164|DWORD] destination: B147 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4587973608062233869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2237 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i2241 
=== Usages ===
=== Predecessor ===
v2238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2241  <|@  <|@
tid v3671 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6f0a53f7
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a4042 i4002 
=== Succesors ===
=== Usages ===
i2241 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a4042 i4002  <|@  <|@
tid ?2249 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?1329 
values: a92 a13 i750 
=== Succesors ===
=== Usages ===
?2242 ?2246 ?4060 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1329 values: a92 a13 i750  <|@  <|@
tid ?4060 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?2249 
values: - - a92 a3598 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
i2241 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2249 values: - - a92 a3598 virtualObjectMappings: ?2531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2241 <|@
result v170|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 17
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3671 
stateDuring: ?4060 
=== Succesors ===
next: v4234 
=== Usages ===
?2242 v4758 i3965 j5048 i4751 v4792 a4773 i4267 v4242 v4228 
=== Predecessor ===
v2237 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3671 stateDuring: ?4060 #next: v4234  <|@  <|@
tid ?2242 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?2249 
values: - - a92 a3598 i2241 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
a4773 v4240 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2249 values: - - a92 a3598 i2241 virtualObjectMappings: ?2531  <|@  <|@
f <@~|@floating>@ <|@
tid v4228 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2241 
y: i90 
=== Succesors ===
=== Usages ===
v4234 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2241 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v4234 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v4228 
=== Succesors ===
trueSuccessor: v4233 
falseSuccessor: v4229 
=== Usages ===
=== Predecessor ===
i2241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4228 #trueSuccessor: v4233 #falseSuccessor: v4229  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v165|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v26|QWORD[.] v167|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad state [bci:17, 21, 7, 248, 17] <|@ <|@
      nr   -1  <|@ instruction v170|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v170|DWORD, y: v170|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4233 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4240 
=== Usages ===
=== Predecessor ===
v4234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4240  <|@  <|@
f <@*|@fixed>@ <|@
tid v4240 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?2242 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4233 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2242  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -1085537 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v26|QWORD[.] v167|QWORD[.] v170|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:20, 21, 7, 248, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" "B154" 
    xhandlers
    flags 
    probability 4587973608062233869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4753 
=== Usages ===
=== Predecessor ===
v4234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4753 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j4789 
=== Usages ===
v6266 v6267 
=== Predecessor ===
v4229 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j4789  <|@  <|@
f <@~|@floating>@ <|@
tid v6266 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j4753 
index: - 
=== Succesors ===
=== Usages ===
j4789 v4791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4753 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4789 <|@
result v171|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6266 
=== Succesors ===
next: j4790 
=== Usages ===
j4757 v6268 v6269 a4772 v6274 v6270 v6271 v6272 v6273 
=== Predecessor ===
j4753 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6266 #next: j4790  <|@  <|@
f <@~|@floating>@ <|@
tid v6267 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j4753 
index: - 
=== Succesors ===
=== Usages ===
j4790 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4753 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4790 <|@
result v172|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6267 
=== Succesors ===
next: v4761 
=== Usages ===
v4762 
=== Predecessor ===
j4789 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6267 #next: v4761  <|@  <|@
f <@~|@floating>@ <|@
tid v4758 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2241 
y: i4418 
=== Succesors ===
=== Usages ===
v4761 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2241 y: i4418  <|@  <|@
f <@*|@fixed>@ <|@
tid v4761 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v4758 
=== Succesors ===
trueSuccessor: v4760 
falseSuccessor: v4759 
=== Usages ===
=== Predecessor ===
j4790 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4758 #trueSuccessor: v4760 #falseSuccessor: v4759  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v170|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B150 -> B151 falseDestination: B150 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" "B153" 
    xhandlers
    flags 
    probability 4587192329359589925
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4768 
=== Usages ===
=== Predecessor ===
v4761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4768  <|@  <|@
f <@~|@floating>@ <|@
tid i4751 <|@
result v173|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$11/1514064396@6c95a661
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i2241 
y: i750 
=== Succesors ===
=== Usages ===
i4780 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2241 y: i750  <|@  <|@
f <@~|@floating>@ <|@
tid i4780 <|@
result v174|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i4751 
y: i4441 
=== Succesors ===
=== Usages ===
i4752 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4751 y: i4441  <|@  <|@
f <@~|@floating>@ <|@
tid i4752 <|@
result v175|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$94/978859646@9756628
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i4780 
y: i4411 
=== Succesors ===
=== Usages ===
j4756 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i4780 y: i4411  <|@  <|@
f <@~|@floating>@ <|@
tid j4756 <|@
result v176|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i4752 
=== Succesors ===
=== Usages ===
j4757 v6270 v6271 v6272 v6273 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i4752  <|@  <|@
f <@~|@floating>@ <|@
tid j4757 <|@
result v177|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j4756 
y: j4789 
=== Succesors ===
=== Usages ===
v4762 v4791 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4756 y: j4789  <|@  <|@
f <@~|@floating>@ <|@
tid v4762 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4790 
y: j4757 
=== Succesors ===
=== Usages ===
v4768 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j4790 y: j4757  <|@  <|@
f <@*|@fixed>@ <|@
tid v4768 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v4762 
=== Succesors ===
trueSuccessor: v4767 
falseSuccessor: v4766 
=== Usages ===
=== Predecessor ===
v4760 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4762 #trueSuccessor: v4767 #falseSuccessor: v4766  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = SHL v170|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = LEA [v173|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = AND v174|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v176|QWORD = MOVSXD v175|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v177|QWORD = ADD (x: v176|QWORD, y: v171|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v177|QWORD, y: v172|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B151 -> B152 falseDestination: B151 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B155" 
    xhandlers
    flags 
    probability 4557635954298659199
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4765 
=== Usages ===
=== Predecessor ===
v4768 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4765  <|@  <|@
f <@*|@fixed>@ <|@
tid v4765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4764 
=== Predecessor ===
v4767 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B152 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B156" 
    xhandlers
    flags 
    probability 4587122014276351970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4791 
=== Usages ===
=== Predecessor ===
v4768 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4791 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6266 
value: j4757 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4782 
=== Usages ===
=== Predecessor ===
v4766 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6266 value: j4757 stateAfter: - lastLocationAccess: - #next: v4782  <|@  <|@
f <@~|@floating>@ <|@
tid v6270 <|@
result [v176|QWORD + v171|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j4756 
index: j4789 
=== Succesors ===
=== Usages ===
v4782 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4756 index: j4789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6270 
=== Succesors ===
next: v4784 
=== Usages ===
=== Predecessor ===
v4791 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6270 #next: v4784  <|@  <|@
f <@~|@floating>@ <|@
tid v6271 <|@
result [v176|QWORD + v171|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j4756 
index: j4789 
=== Succesors ===
=== Usages ===
v4784 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4756 index: j4789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4784 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6271 
=== Succesors ===
next: v4786 
=== Usages ===
=== Predecessor ===
v4782 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6271 #next: v4786  <|@  <|@
f <@~|@floating>@ <|@
tid v6272 <|@
result [v176|QWORD + v171|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j4756 
index: j4789 
=== Succesors ===
=== Usages ===
v4786 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4756 index: j4789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6272 
=== Succesors ===
next: v4788 
=== Usages ===
=== Predecessor ===
v4784 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6272 #next: v4788  <|@  <|@
f <@~|@floating>@ <|@
tid v6273 <|@
result [v176|QWORD + v171|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j4756 
index: j4789 
=== Succesors ===
=== Usages ===
v4788 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4756 index: j4789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4788 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6273 
=== Succesors ===
next: v4792 
=== Usages ===
=== Predecessor ===
v4786 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6273 #next: v4792  <|@  <|@
f <@~|@floating>@ <|@
tid v6268 <|@
result [v171|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j4789 
index: - 
=== Succesors ===
=== Usages ===
v4792 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4789 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4792 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6268 
value: i2241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4793 
=== Usages ===
=== Predecessor ===
v4788 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6268 value: i2241 stateAfter: - lastLocationAccess: - #next: v4793  <|@  <|@
f <@~|@floating>@ <|@
tid v6269 <|@
result [v171|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4789 
index: - 
=== Succesors ===
=== Usages ===
v4793 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4789 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4793 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6269 
value: j4395 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4796 
=== Usages ===
=== Predecessor ===
v4792 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6269 value: j4395 stateAfter: - lastLocationAccess: - #next: v4796  <|@  <|@
f <@~|@floating>@ <|@
tid v6274 <|@
result [v171|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j4789 
index: - 
=== Succesors ===
=== Usages ===
v4796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4789 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4796 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6274 
value: v4986 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4771 
=== Usages ===
=== Predecessor ===
v4793 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6274 value: v4986 stateAfter: - lastLocationAccess: - #next: v4771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4771 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a4772 
=== Usages ===
=== Predecessor ===
v4796 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a4772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4772 <|@
result v178|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j4789 
=== Succesors ===
next: v4774 
=== Usages ===
a4777 
=== Predecessor ===
v4771 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j4789 #next: v4774  <|@  <|@
f <@*|@fixed>@ <|@
tid v4774 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4775 
=== Predecessor ===
a4772 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v177|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v176|QWORD + v171|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v176|QWORD + v171|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v176|QWORD + v171|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v176|QWORD + v171|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v171|QWORD + 12], y: v170|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v171|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v171|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE v171|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v178|QWORD[.]] destination: B153 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B155" 
    xhandlers
    flags 
    probability 4572900251774834492
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4763 
=== Usages ===
=== Predecessor ===
v4761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4763  <|@  <|@
f <@*|@fixed>@ <|@
tid v4763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4764 
=== Predecessor ===
v4759 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" "B152" 
    successors "B156" 
    xhandlers
    flags 
    probability 4573462772440738132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4763 v4765 
=== Succesors ===
next: a4773 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4763 v4765 #next: a4773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4773 <|@
result v179|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2242 
arguments: v4394 i2241 i90 
=== Succesors ===
next: v4776 
=== Usages ===
a4777 
=== Predecessor ===
v4764 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2242 arguments: v4394 i2241 i90 #next: v4776  <|@  <|@
f <@*|@fixed>@ <|@
tid v4776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4775 
=== Predecessor ===
a4773 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v170|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v26|QWORD[.] v167|QWORD[.] v170|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 7, 248, 17] <|@ <|@
      nr   -1  <|@ instruction v179|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v179|QWORD[.]] destination: B155 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B153" "B155" 
    successors "B157" "B158" 
    xhandlers
    flags 
    probability 4587973608062233868
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a4777 <|@
result v180|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v4775 
values: a4772 a4773 
=== Succesors ===
=== Usages ===
v6315 a4293 v6225 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v4775 values: a4772 a4773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4774 v4776 
=== Succesors ===
next: v5951 
=== Usages ===
a4777 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4774 v4776 #next: v5951  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5951 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v5453 
=== Usages ===
j5952 j5954 
=== Predecessor ===
v4775 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v5453  <|@  <|@
f <@~|@floating>@ <|@
tid v4242 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6173 
y: i2241 
=== Succesors ===
=== Usages ===
i4267 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6173 y: i2241  <|@  <|@
f <@~|@floating>@ <|@
tid i4267 <|@
result v181|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v4242 
trueValue: i6173 
falseValue: i2241 
=== Succesors ===
=== Usages ===
j5049 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v4242 trueValue: i6173 falseValue: i2241  <|@  <|@
f <@~|@floating>@ <|@
tid j5049 <|@
result v182|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i4267 
=== Succesors ===
=== Usages ===
j6009 v6315 j5053 v5450 v5589 j5995 j6000 j6003 j6006 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i4267  <|@  <|@
f <@~|@floating>@ <|@
tid v5450 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5049 
y: j4395 
=== Succesors ===
=== Usages ===
v5453 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5049 y: j4395  <|@  <|@
f <@*|@fixed>@ <|@
tid v5453 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v5450 
=== Succesors ===
trueSuccessor: v5451 
falseSuccessor: v5452 
=== Usages ===
=== Predecessor ===
v5951 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5450 #trueSuccessor: v5451 #falseSuccessor: v5452  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v180|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v170|DWORD, y: v163|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v181|DWORD = CMOVE (falseValue: v170|DWORD, ~trueValue: v163|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v182|QWORD = MOVSXD v181|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v182|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B156 -> B157 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B175" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5469 
=== Usages ===
=== Predecessor ===
v5453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5469  <|@  <|@
f <@*|@fixed>@ <|@
tid v5469 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5470 
=== Predecessor ===
v5451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B157 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" "B160" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5452 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5456 
=== Usages ===
=== Predecessor ===
v5453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5456  <|@  <|@
f <@~|@floating>@ <|@
tid v6225 <|@
result [v180|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a4777 
index: - 
=== Succesors ===
=== Usages ===
j5954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4777 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j5954 <|@
result v183|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5951 
address: v6225 
=== Succesors ===
=== Usages ===
v6365 v6367 v6369 v6371 v6373 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5951 address: v6225  <|@  <|@
f <@~|@floating>@ <|@
tid v6220 <|@
result [v162|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6172 
=== Succesors ===
=== Usages ===
j5952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6172  <|@  <|@
f <@~|@floating>@ <|@
tid j5952 <|@
result v184|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5951 
address: v6220 
=== Succesors ===
=== Usages ===
v6366 v6368 v6370 v6372 v6374 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5951 address: v6220  <|@  <|@
f <@~|@floating>@ <|@
tid j5995 <|@
result v185|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j5049 
y: j5637 
=== Succesors ===
=== Usages ===
v5996 v5998 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5049 y: j5637  <|@  <|@
f <@~|@floating>@ <|@
tid v5996 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5995 
y: j4022 
=== Succesors ===
=== Usages ===
v5456 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5995 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v5456 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v5996 
=== Succesors ===
trueSuccessor: v5454 
falseSuccessor: v5455 
=== Usages ===
=== Predecessor ===
v5452 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5996 #trueSuccessor: v5454 #falseSuccessor: v5455  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v183|QWORD[.] = LEA [v180|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v184|QWORD[*] = LEA [v162|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v185|QWORD = LEA [v182|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v185|QWORD, y: v185|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B158 -> B159 falseDestination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B163" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5465 
=== Usages ===
=== Predecessor ===
v5456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5465  <|@  <|@
f <@*|@fixed>@ <|@
tid v5465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5466 
=== Predecessor ===
v5454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B159 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B161" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5457 
=== Usages ===
=== Predecessor ===
v5456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5457  <|@  <|@
f <@*|@fixed>@ <|@
tid v5457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5458 
=== Predecessor ===
v5455 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B160 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" "B268" 
    successors "B162" "B268" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4583470008434863372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5987 <|@
result v186|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5458 
values: j4022 j5994 
=== Succesors ===
=== Usages ===
v6374 j5994 v6373 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5458 values: j4022 j5994  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5458 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v5457 
=== Succesors ===
next: v6174 
=== Usages ===
v6174 v5461 v5462 j5987 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v5457 #next: v6174  <|@  <|@
f <@~|@floating>@ <|@
tid v6374 <|@
result [v184|QWORD[*] + v186|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5952 
index: j5987 
=== Succesors ===
=== Usages ===
v6174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5952 index: j5987  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6174 <|@
result v187|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5458 
address: v6374 
=== Succesors ===
next: v6148 
=== Usages ===
v6148 
=== Predecessor ===
v5458 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5458 address: v6374 #next: v6148  <|@  <|@
f <@~|@floating>@ <|@
tid v6373 <|@
result [v183|QWORD[.] + v186|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5954 
index: j5987 
=== Succesors ===
=== Usages ===
v6148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5954 index: j5987  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6148 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6373 
value: v6174 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5464 
=== Usages ===
=== Predecessor ===
v6174 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6373 value: v6174 stateAfter: - lastLocationAccess: - #next: v5464  <|@  <|@
f <@~|@floating>@ <|@
tid j5994 <|@
result v188|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5987 
y: j2615 
=== Succesors ===
=== Usages ===
j5979 j5987 v5998 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5987 y: j2615  <|@  <|@
f <@~|@floating>@ <|@
tid v5998 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5995 
y: j5994 
=== Succesors ===
=== Usages ===
v5464 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5995 y: j5994  <|@  <|@
f <@*|@fixed>@ <|@
tid v5464 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5998 
=== Succesors ===
trueSuccessor: v5461 
falseSuccessor: v5463 
=== Usages ===
=== Predecessor ===
v6148 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5998 #trueSuccessor: v5461 #falseSuccessor: v5463  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v186|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v187|V256_WORD = H [v184|QWORD[*] + v186|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v183|QWORD[.] + v186|QWORD * 2], input: v187|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v188|QWORD = LEA [v186|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v188|QWORD, y: v185|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B161 -> B162 falseDestination: B161 -> B268 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B163" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v5458 
=== Succesors ===
next: v5467 
=== Usages ===
=== Predecessor ===
v5464 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v5458 #next: v5467  <|@  <|@
f <@*|@fixed>@ <|@
tid v5467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5466 
=== Predecessor ===
v5461 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v188|QWORD] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B159" "B162" 
    successors "B164" "B165" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5979 <|@
result v189|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5466 
values: j4022 j5994 
=== Succesors ===
=== Usages ===
v6372 j5986 j5971 v6001 v6371 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5466 values: j4022 j5994  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5466 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5465 v5467 
=== Succesors ===
next: v5488 
=== Usages ===
j5979 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5465 v5467 #next: v5488  <|@  <|@
f <@~|@floating>@ <|@
tid j6000 <|@
result v190|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j5049 
y: j5643 
=== Succesors ===
=== Usages ===
v6001 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5049 y: j5643  <|@  <|@
f <@~|@floating>@ <|@
tid v6001 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j6000 
y: j5979 
=== Succesors ===
=== Usages ===
v5488 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j6000 y: j5979  <|@  <|@
f <@*|@fixed>@ <|@
tid v5488 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v6001 
=== Succesors ===
trueSuccessor: v5487 
falseSuccessor: v5486 
=== Usages ===
=== Predecessor ===
v5466 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6001 #trueSuccessor: v5487 #falseSuccessor: v5486  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v189|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v190|QWORD = LEA [v182|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v189|QWORD, y: v190|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B163 -> B164 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5491 
=== Usages ===
=== Predecessor ===
v5488 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5491  <|@  <|@
f <@*|@fixed>@ <|@
tid v5491 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5477 
=== Predecessor ===
v5487 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v189|QWORD] destination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5486 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6175 
=== Usages ===
v6175 
=== Predecessor ===
v5488 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6372 <|@
result [v184|QWORD[*] + v189|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5952 
index: j5979 
=== Succesors ===
=== Usages ===
v6175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5952 index: j5979  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6175 <|@
result v191|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5486 
address: v6372 
=== Succesors ===
next: v6146 
=== Usages ===
v6146 
=== Predecessor ===
v5486 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5486 address: v6372 #next: v6146  <|@  <|@
f <@~|@floating>@ <|@
tid v6371 <|@
result [v183|QWORD[.] + v189|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5954 
index: j5979 
=== Succesors ===
=== Usages ===
v6146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5954 index: j5979  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6146 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6371 
value: v6175 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5476 
=== Usages ===
=== Predecessor ===
v6175 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6371 value: v6175 stateAfter: - lastLocationAccess: - #next: v5476  <|@  <|@
f <@~|@floating>@ <|@
tid j5986 <|@
result v192|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5979 
y: j4402 
=== Succesors ===
=== Usages ===
j5971 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5979 y: j4402  <|@  <|@
f <@*|@fixed>@ <|@
tid v5476 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5477 
=== Predecessor ===
v6146 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v191|V128_WORD = H [v184|QWORD[*] + v189|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v183|QWORD[.] + v189|QWORD * 2], input: v191|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v192|QWORD = LEA [v189|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v192|QWORD] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B164" 
    successors "B167" "B168" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5971 <|@
result v193|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5477 
values: j5986 j5979 
=== Succesors ===
=== Usages ===
v6370 j5978 j5963 v6004 v6369 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5477 values: j5986 j5979  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5476 v5491 
=== Succesors ===
next: v5494 
=== Usages ===
j5971 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5476 v5491 #next: v5494  <|@  <|@
f <@~|@floating>@ <|@
tid j6003 <|@
result v194|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j5049 
y: j5647 
=== Succesors ===
=== Usages ===
v6004 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5049 y: j5647  <|@  <|@
f <@~|@floating>@ <|@
tid v6004 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j6003 
y: j5971 
=== Succesors ===
=== Usages ===
v5494 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j6003 y: j5971  <|@  <|@
f <@*|@fixed>@ <|@
tid v5494 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v6004 
=== Succesors ===
trueSuccessor: v5493 
falseSuccessor: v5492 
=== Usages ===
=== Predecessor ===
v5477 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6004 #trueSuccessor: v5493 #falseSuccessor: v5492  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v193|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v194|QWORD = LEA [v182|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v193|QWORD, y: v194|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B167 falseDestination: B166 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B169" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5497 
=== Usages ===
=== Predecessor ===
v5494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5497  <|@  <|@
f <@*|@fixed>@ <|@
tid v5497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5480 
=== Predecessor ===
v5493 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v193|QWORD] destination: B167 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B169" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6176 
=== Usages ===
v6176 
=== Predecessor ===
v5494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6176  <|@  <|@
f <@~|@floating>@ <|@
tid v6370 <|@
result [v184|QWORD[*] + v193|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5952 
index: j5971 
=== Succesors ===
=== Usages ===
v6176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5952 index: j5971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6176 <|@
result v195|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5492 
address: v6370 
=== Succesors ===
next: v6144 
=== Usages ===
v6144 
=== Predecessor ===
v5492 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5492 address: v6370 #next: v6144  <|@  <|@
f <@~|@floating>@ <|@
tid v6369 <|@
result [v183|QWORD[.] + v193|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5954 
index: j5971 
=== Succesors ===
=== Usages ===
v6144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5954 index: j5971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6144 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6369 
value: v6176 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5479 
=== Usages ===
=== Predecessor ===
v6176 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6369 value: v6176 stateAfter: - lastLocationAccess: - #next: v5479  <|@  <|@
f <@~|@floating>@ <|@
tid j5978 <|@
result v196|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5971 
y: j5619 
=== Succesors ===
=== Usages ===
j5963 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5971 y: j5619  <|@  <|@
f <@*|@fixed>@ <|@
tid v5479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5480 
=== Predecessor ===
v6144 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v195|V64_WORD = H [v184|QWORD[*] + v193|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v183|QWORD[.] + v193|QWORD * 2], input: v195|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v196|QWORD = LEA [v193|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v196|QWORD] destination: B168 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" "B167" 
    successors "B170" "B171" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5963 <|@
result v197|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5480 
values: j5978 j5971 
=== Succesors ===
=== Usages ===
v6368 j5970 j5955 v6007 v6367 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5480 values: j5978 j5971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5479 v5497 
=== Succesors ===
next: v5500 
=== Usages ===
j5963 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5479 v5497 #next: v5500  <|@  <|@
f <@~|@floating>@ <|@
tid j6006 <|@
result v198|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j5049 
y: j5651 
=== Succesors ===
=== Usages ===
v6007 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5049 y: j5651  <|@  <|@
f <@~|@floating>@ <|@
tid v6007 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j6006 
y: j5963 
=== Succesors ===
=== Usages ===
v5500 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j6006 y: j5963  <|@  <|@
f <@*|@fixed>@ <|@
tid v5500 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v6007 
=== Succesors ===
trueSuccessor: v5499 
falseSuccessor: v5498 
=== Usages ===
=== Predecessor ===
v5480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6007 #trueSuccessor: v5499 #falseSuccessor: v5498  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v197|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v198|QWORD = LEA [v182|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v197|QWORD, y: v198|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B169 -> B170 falseDestination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5499 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5503 
=== Usages ===
=== Predecessor ===
v5500 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5503  <|@  <|@
f <@*|@fixed>@ <|@
tid v5503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5483 
=== Predecessor ===
v5499 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v197|QWORD] destination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6177 
=== Usages ===
v6177 
=== Predecessor ===
v5500 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6177  <|@  <|@
f <@~|@floating>@ <|@
tid v6368 <|@
result [v184|QWORD[*] + v197|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5952 
index: j5963 
=== Succesors ===
=== Usages ===
v6177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5952 index: j5963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6177 <|@
result v199|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5498 
address: v6368 
=== Succesors ===
next: v6142 
=== Usages ===
v6142 
=== Predecessor ===
v5498 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5498 address: v6368 #next: v6142  <|@  <|@
f <@~|@floating>@ <|@
tid v6367 <|@
result [v183|QWORD[.] + v197|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5954 
index: j5963 
=== Succesors ===
=== Usages ===
v6142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5954 index: j5963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6142 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6367 
value: v6177 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5482 
=== Usages ===
=== Predecessor ===
v6177 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6367 value: v6177 stateAfter: - lastLocationAccess: - #next: v5482  <|@  <|@
f <@~|@floating>@ <|@
tid j5970 <|@
result v200|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5963 
y: j4598 
=== Succesors ===
=== Usages ===
j5955 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5963 y: j4598  <|@  <|@
f <@*|@fixed>@ <|@
tid v5482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5483 
=== Predecessor ===
v6142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v199|V32_WORD = H [v184|QWORD[*] + v197|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v183|QWORD[.] + v197|QWORD * 2], input: v199|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v200|QWORD = LEA [v197|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v200|QWORD] destination: B171 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" "B170" 
    successors "B173" "B174" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5955 <|@
result v201|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5483 
values: j5970 j5963 
=== Succesors ===
=== Usages ===
v6366 v6010 v6365 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5483 values: j5970 j5963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5482 v5503 
=== Succesors ===
next: v5506 
=== Usages ===
j5955 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5482 v5503 #next: v5506  <|@  <|@
f <@~|@floating>@ <|@
tid j6009 <|@
result v202|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j5049 
y: j5655 
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5049 y: j5655  <|@  <|@
f <@~|@floating>@ <|@
tid v6010 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j6009 
y: j5955 
=== Succesors ===
=== Usages ===
v5506 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j6009 y: j5955  <|@  <|@
f <@*|@fixed>@ <|@
tid v5506 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v6010 
=== Succesors ===
trueSuccessor: v5505 
falseSuccessor: v5504 
=== Usages ===
=== Predecessor ===
v5483 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6010 #trueSuccessor: v5505 #falseSuccessor: v5504  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v201|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v202|QWORD = DEC v182|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v201|QWORD, y: v202|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B172 -> B173 falseDestination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5509 
=== Usages ===
=== Predecessor ===
v5506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5509  <|@  <|@
f <@*|@fixed>@ <|@
tid v5509 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5470 
=== Predecessor ===
v5505 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B173 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5504 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i6178 
=== Usages ===
i6178 
=== Predecessor ===
v5506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6178  <|@  <|@
f <@~|@floating>@ <|@
tid v6366 <|@
result [v184|QWORD[*] + v201|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5952 
index: j5955 
=== Succesors ===
=== Usages ===
i6178 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5952 index: j5955  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6178 <|@
result v203|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v5504 
address: v6366 
=== Succesors ===
next: v6140 
=== Usages ===
v6140 
=== Predecessor ===
v5504 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5504 address: v6366 #next: v6140  <|@  <|@
f <@~|@floating>@ <|@
tid v6365 <|@
result [v183|QWORD[.] + v201|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5954 
index: j5955 
=== Succesors ===
=== Usages ===
v6140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5954 index: j5955  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6140 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6365 
value: i6178 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5485 
=== Usages ===
=== Predecessor ===
i6178 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6365 value: i6178 stateAfter: - lastLocationAccess: - #next: v5485  <|@  <|@
f <@*|@fixed>@ <|@
tid v5485 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5470 
=== Predecessor ===
v6140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v203|DWORD = MOVSX [v184|QWORD[*] + v201|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v183|QWORD[.] + v201|QWORD * 2], y: v203|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B174 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B157" "B174" "B173" 
    successors "B176" "B194" 
    xhandlers
    flags 
    probability 4587973608062233868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5469 v5485 v5509 
=== Succesors ===
next: v6013 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5469 v5485 v5509 #next: v6013  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6013 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v5516 
=== Usages ===
j6015 
=== Predecessor ===
v5470 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v5516  <|@  <|@
f <@~|@floating>@ <|@
tid j5048 <|@
result v204|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2241 
=== Succesors ===
=== Usages ===
j5053 v5589 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2241  <|@  <|@
f <@~|@floating>@ <|@
tid v5589 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5049 
y: j5048 
=== Succesors ===
=== Usages ===
v5516 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5049 y: j5048  <|@  <|@
f <@*|@fixed>@ <|@
tid v5516 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v5589 
=== Succesors ===
trueSuccessor: v5515 
falseSuccessor: v5514 
=== Usages ===
=== Predecessor ===
v6013 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5589 #trueSuccessor: v5515 #falseSuccessor: v5514  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v204|QWORD = MOVSXD v170|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v204|QWORD, y: v182|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B175 -> B176 falseDestination: B175 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B177" "B178" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5519 
=== Usages ===
=== Predecessor ===
v5516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5519  <|@  <|@
f <@~|@floating>@ <|@
tid v6315 <|@
result [v180|QWORD[.] + v182|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a4777 
index: j5049 
=== Succesors ===
=== Usages ===
j6015 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4777 index: j5049  <|@  <|@
f <@~|@floating>@ <|@
tid j6015 <|@
result v205|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v6013 
address: v6315 
=== Succesors ===
=== Usages ===
v6375 v6376 v6377 v6378 v6379 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v6013 address: v6315  <|@  <|@
f <@~|@floating>@ <|@
tid j5053 <|@
result v206|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$68/1668473261@10b940da
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j5048 
y: j5049 
=== Succesors ===
=== Usages ===
j6060 j6046 j6051 j6054 j6057 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j5048 y: j5049  <|@  <|@
f <@~|@floating>@ <|@
tid j6046 <|@
result v207|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j5053 
y: j5637 
=== Succesors ===
=== Usages ===
v6047 v6049 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5053 y: j5637  <|@  <|@
f <@~|@floating>@ <|@
tid v6047 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j6046 
y: j4022 
=== Succesors ===
=== Usages ===
v5519 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j6046 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v5519 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v6047 
=== Succesors ===
trueSuccessor: v5517 
falseSuccessor: v5518 
=== Usages ===
=== Predecessor ===
v5515 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6047 #trueSuccessor: v5517 #falseSuccessor: v5518  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v205|QWORD[.] = LEA [v180|QWORD[.] + v182|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v206|QWORD = SUB (x: v204|QWORD, ~y: v182|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v207|QWORD = LEA [v206|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v207|QWORD, y: v207|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B176 -> B177 falseDestination: B176 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B181" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5528 
=== Usages ===
=== Predecessor ===
v5519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5528  <|@  <|@
f <@*|@fixed>@ <|@
tid v5528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5529 
=== Predecessor ===
v5517 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B177 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B179" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5520 
=== Usages ===
=== Predecessor ===
v5519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5520  <|@  <|@
f <@*|@fixed>@ <|@
tid v5520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5521 
=== Predecessor ===
v5518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B178 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" "B193" 
    successors "B180" "B193" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4583470008434863372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j6040 <|@
result v208|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5521 
values: j4022 j6045 
=== Succesors ===
=== Usages ===
v6379 j6045 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5521 values: j4022 j6045  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5521 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v5520 
=== Succesors ===
next: v6153 
=== Usages ===
j6040 v5524 v5525 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v5520 #next: v6153  <|@  <|@
f <@~|@floating>@ <|@
tid v6379 <|@
result [v205|QWORD[.] + v208|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j6015 
index: j6040 
=== Succesors ===
=== Usages ===
v6153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j6015 index: j6040  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6153 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6379 
value: v6154 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5527 
=== Usages ===
=== Predecessor ===
v5521 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6379 value: v6154 stateAfter: - lastLocationAccess: - #next: v5527  <|@  <|@
f <@~|@floating>@ <|@
tid j6045 <|@
result v209|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j6040 
y: j2615 
=== Succesors ===
=== Usages ===
j6034 j6040 v6049 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j6040 y: j2615  <|@  <|@
f <@~|@floating>@ <|@
tid v6049 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j6046 
y: j6045 
=== Succesors ===
=== Usages ===
v5527 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j6046 y: j6045  <|@  <|@
f <@*|@fixed>@ <|@
tid v5527 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v6049 
=== Succesors ===
trueSuccessor: v5524 
falseSuccessor: v5526 
=== Usages ===
=== Predecessor ===
v6153 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6049 #trueSuccessor: v5524 #falseSuccessor: v5526  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v208|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v205|QWORD[.] + v208|QWORD * 2], input: v19|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v209|QWORD = LEA [v208|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v209|QWORD, y: v207|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B179 -> B180 falseDestination: B179 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B181" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5524 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v5521 
=== Succesors ===
next: v5530 
=== Usages ===
=== Predecessor ===
v5527 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v5521 #next: v5530  <|@  <|@
f <@*|@fixed>@ <|@
tid v5530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5529 
=== Predecessor ===
v5524 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v209|QWORD] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B177" "B180" 
    successors "B182" "B183" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j6034 <|@
result v210|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5529 
values: j4022 j6045 
=== Succesors ===
=== Usages ===
v6378 j6039 j6028 v6052 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5529 values: j4022 j6045  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5528 v5530 
=== Succesors ===
next: v5551 
=== Usages ===
j6034 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5528 v5530 #next: v5551  <|@  <|@
f <@~|@floating>@ <|@
tid j6051 <|@
result v211|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j5053 
y: j5643 
=== Succesors ===
=== Usages ===
v6052 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5053 y: j5643  <|@  <|@
f <@~|@floating>@ <|@
tid v6052 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j6051 
y: j6034 
=== Succesors ===
=== Usages ===
v5551 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j6051 y: j6034  <|@  <|@
f <@*|@fixed>@ <|@
tid v5551 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v6052 
=== Succesors ===
trueSuccessor: v5550 
falseSuccessor: v5549 
=== Usages ===
=== Predecessor ===
v5529 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6052 #trueSuccessor: v5550 #falseSuccessor: v5549  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v210|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v211|QWORD = LEA [v206|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v210|QWORD, y: v211|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B181 -> B182 falseDestination: B181 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B184" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5554 
=== Usages ===
=== Predecessor ===
v5551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5554  <|@  <|@
f <@*|@fixed>@ <|@
tid v5554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5540 
=== Predecessor ===
v5550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v210|QWORD] destination: B182 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B184" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6152 
=== Usages ===
=== Predecessor ===
v5551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6152  <|@  <|@
f <@~|@floating>@ <|@
tid v6378 <|@
result [v205|QWORD[.] + v210|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j6015 
index: j6034 
=== Succesors ===
=== Usages ===
v6152 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j6015 index: j6034  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6152 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6378 
value: v6158 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5539 
=== Usages ===
=== Predecessor ===
v5549 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6378 value: v6158 stateAfter: - lastLocationAccess: - #next: v5539  <|@  <|@
f <@~|@floating>@ <|@
tid j6039 <|@
result v212|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j6034 
y: j4402 
=== Succesors ===
=== Usages ===
j6028 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j6034 y: j4402  <|@  <|@
f <@*|@fixed>@ <|@
tid v5539 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5540 
=== Predecessor ===
v6152 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v205|QWORD[.] + v210|QWORD * 2], input: v78|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v212|QWORD = LEA [v210|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v212|QWORD] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" "B182" 
    successors "B185" "B186" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j6028 <|@
result v213|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5540 
values: j6039 j6034 
=== Succesors ===
=== Usages ===
v6377 j6033 j6022 v6055 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5540 values: j6039 j6034  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5539 v5554 
=== Succesors ===
next: v5557 
=== Usages ===
j6028 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5539 v5554 #next: v5557  <|@  <|@
f <@~|@floating>@ <|@
tid j6054 <|@
result v214|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j5053 
y: j5647 
=== Succesors ===
=== Usages ===
v6055 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5053 y: j5647  <|@  <|@
f <@~|@floating>@ <|@
tid v6055 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j6054 
y: j6028 
=== Succesors ===
=== Usages ===
v5557 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j6054 y: j6028  <|@  <|@
f <@*|@fixed>@ <|@
tid v5557 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v6055 
=== Succesors ===
trueSuccessor: v5556 
falseSuccessor: v5555 
=== Usages ===
=== Predecessor ===
v5540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6055 #trueSuccessor: v5556 #falseSuccessor: v5555  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v213|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v214|QWORD = LEA [v206|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v213|QWORD, y: v214|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B184 -> B185 falseDestination: B184 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B187" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5560 
=== Usages ===
=== Predecessor ===
v5557 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5560  <|@  <|@
f <@*|@fixed>@ <|@
tid v5560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5543 
=== Predecessor ===
v5556 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v213|QWORD] destination: B185 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B187" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6151 
=== Usages ===
=== Predecessor ===
v5557 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6151  <|@  <|@
f <@~|@floating>@ <|@
tid v6377 <|@
result [v205|QWORD[.] + v213|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j6015 
index: j6028 
=== Succesors ===
=== Usages ===
v6151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j6015 index: j6028  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6151 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6377 
value: v6157 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5542 
=== Usages ===
=== Predecessor ===
v5555 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6377 value: v6157 stateAfter: - lastLocationAccess: - #next: v5542  <|@  <|@
f <@~|@floating>@ <|@
tid j6033 <|@
result v215|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j6028 
y: j5619 
=== Succesors ===
=== Usages ===
j6022 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j6028 y: j5619  <|@  <|@
f <@*|@fixed>@ <|@
tid v5542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5543 
=== Predecessor ===
v6151 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v205|QWORD[.] + v213|QWORD * 2], input: v77|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v215|QWORD = LEA [v213|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v215|QWORD] destination: B186 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" "B185" 
    successors "B188" "B189" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j6022 <|@
result v216|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5543 
values: j6033 j6028 
=== Succesors ===
=== Usages ===
v6376 j6027 j6016 v6058 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5543 values: j6033 j6028  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5543 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5542 v5560 
=== Succesors ===
next: v5563 
=== Usages ===
j6022 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5542 v5560 #next: v5563  <|@  <|@
f <@~|@floating>@ <|@
tid j6057 <|@
result v217|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j5053 
y: j5651 
=== Succesors ===
=== Usages ===
v6058 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5053 y: j5651  <|@  <|@
f <@~|@floating>@ <|@
tid v6058 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j6057 
y: j6022 
=== Succesors ===
=== Usages ===
v5563 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j6057 y: j6022  <|@  <|@
f <@*|@fixed>@ <|@
tid v5563 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v6058 
=== Succesors ===
trueSuccessor: v5562 
falseSuccessor: v5561 
=== Usages ===
=== Predecessor ===
v5543 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6058 #trueSuccessor: v5562 #falseSuccessor: v5561  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v216|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v217|QWORD = LEA [v206|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v216|QWORD, y: v217|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B187 -> B188 falseDestination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5562 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5566 
=== Usages ===
=== Predecessor ===
v5563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5566  <|@  <|@
f <@*|@fixed>@ <|@
tid v5566 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5546 
=== Predecessor ===
v5562 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v216|QWORD] destination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6150 
=== Usages ===
=== Predecessor ===
v5563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6150  <|@  <|@
f <@~|@floating>@ <|@
tid v6376 <|@
result [v205|QWORD[.] + v216|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j6015 
index: j6022 
=== Succesors ===
=== Usages ===
v6150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j6015 index: j6022  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6376 
value: v6156 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5545 
=== Usages ===
=== Predecessor ===
v5561 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6376 value: v6156 stateAfter: - lastLocationAccess: - #next: v5545  <|@  <|@
f <@~|@floating>@ <|@
tid j6027 <|@
result v218|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j6022 
y: j4598 
=== Succesors ===
=== Usages ===
j6016 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j6022 y: j4598  <|@  <|@
f <@*|@fixed>@ <|@
tid v5545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5546 
=== Predecessor ===
v6150 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v205|QWORD[.] + v216|QWORD * 2], input: v20|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v218|QWORD = LEA [v216|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v218|QWORD] destination: B189 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j6016 <|@
result v219|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5546 
values: j6027 j6022 
=== Succesors ===
=== Usages ===
v6375 v6061 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5546 values: j6027 j6022  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5545 v5566 
=== Succesors ===
next: v5569 
=== Usages ===
j6016 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5545 v5566 #next: v5569  <|@  <|@
f <@~|@floating>@ <|@
tid j6060 <|@
result v220|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j5053 
y: j5655 
=== Succesors ===
=== Usages ===
v6061 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5053 y: j5655  <|@  <|@
f <@~|@floating>@ <|@
tid v6061 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j6060 
y: j6016 
=== Succesors ===
=== Usages ===
v5569 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j6060 y: j6016  <|@  <|@
f <@*|@fixed>@ <|@
tid v5569 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v6061 
=== Succesors ===
trueSuccessor: v5568 
falseSuccessor: v5567 
=== Usages ===
=== Predecessor ===
v5546 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6061 #trueSuccessor: v5568 #falseSuccessor: v5567  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v219|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v220|QWORD = DEC v206|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v219|QWORD, y: v220|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B195" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5572 
=== Usages ===
=== Predecessor ===
v5569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5572  <|@  <|@
f <@*|@fixed>@ <|@
tid v5572 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5533 
=== Predecessor ===
v5568 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B191 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B195" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5567 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6149 
=== Usages ===
=== Predecessor ===
v5569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6149  <|@  <|@
f <@~|@floating>@ <|@
tid v6375 <|@
result [v205|QWORD[.] + v219|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j6015 
index: j6016 
=== Succesors ===
=== Usages ===
v6149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j6015 index: j6016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6149 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6375 
value: i6155 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5548 
=== Usages ===
=== Predecessor ===
v5567 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6375 value: i6155 stateAfter: - lastLocationAccess: - #next: v5548  <|@  <|@
f <@*|@fixed>@ <|@
tid v5548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5533 
=== Predecessor ===
v6149 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v205|QWORD[.] + v219|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B192 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B179" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5525 
=== Usages ===
=== Predecessor ===
v5527 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5525  <|@  <|@
f <@*|@fixed>@ <|@
tid v5525 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v5521 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5526 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v5521  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v209|QWORD] destination: B193 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B195" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5514 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5532 
=== Usages ===
=== Predecessor ===
v5516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5532  <|@  <|@
f <@*|@fixed>@ <|@
tid v5532 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5533 
=== Predecessor ===
v5514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B194 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" "B192" "B191" 
    successors "B196" "B197" 
    xhandlers
    flags 
    probability 4587973608062233868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5532 v5548 v5572 
=== Succesors ===
next: a4293 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5532 v5548 v5572 #next: a4293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4293 <|@
result v180|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a4777 
=== Succesors ===
next: v3674 
=== Usages ===
v6213 a3673 
=== Predecessor ===
v5533 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a4777 #next: v3674  <|@  <|@
f <@~|@floating>@ <|@
tid a3673 <|@
result v221|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a4293 
=== Succesors ===
=== Usages ===
v3674 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3674 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6206 
value: a3673 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j4804 
=== Usages ===
=== Predecessor ===
a4293 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6206 value: a3673 stateAfter: - lastLocationAccess: - #next: j4804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4804 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4042 
=== Succesors ===
next: v4808 
=== Usages ===
j4805 
=== Predecessor ===
v3674 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4042 #next: v4808  <|@  <|@
f <@~|@floating>@ <|@
tid j4805 <|@
result v222|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$152/1924078416@7040fbbc
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j4804 
y: i4682 
=== Succesors ===
=== Usages ===
v6275 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j4804 y: i4682  <|@  <|@
f <@~|@floating>@ <|@
tid v6275 <|@
result [v222|QWORD[*] + v97|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4805 
index: j4686 
=== Succesors ===
=== Usages ===
v4808 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4805 index: j4686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4808 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6275 
value: i4688 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i6179 
=== Usages ===
=== Predecessor ===
j4804 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6275 value: i4688 stateAfter: - lastLocationAccess: - #next: i6179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6179 <|@
result v223|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6207 
=== Succesors ===
next: v3690 
=== Usages ===
j3712 i4065 v3684 v3703 
=== Predecessor ===
v4808 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6207 #next: v3690  <|@  <|@
f <@~|@floating>@ <|@
tid v3684 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6179 
y: i90 
=== Succesors ===
=== Usages ===
v3690 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6179 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v3690 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3684 
=== Succesors ===
trueSuccessor: v3689 
falseSuccessor: v3685 
=== Usages ===
=== Predecessor ===
i6179 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3684 #trueSuccessor: v3689 #falseSuccessor: v3685  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v221|DWORD[.] = COMPRESSPOINTER (input: v180|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + 16], y: v221|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v222|QWORD[*] = SHR v26|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v222|QWORD[*] + v97|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v223|DWORD = MOV [v26|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v223|DWORD, y: v223|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B195 -> B196 falseDestination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B199" 
    xhandlers
    flags 
    probability 4558139406968492699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3689 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3688 
=== Usages ===
=== Predecessor ===
v3690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3688  <|@  <|@
f <@*|@fixed>@ <|@
tid v3688 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3687 
=== Predecessor ===
v3689 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B196 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B198" "B200" 
    xhandlers
    flags 
    probability 4587895480191969474
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3707 
=== Usages ===
=== Predecessor ===
v3690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3707  <|@  <|@
f <@~|@floating>@ <|@
tid i3965 <|@
result v224|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32
=== Inputs ===
x: i2241 
y: i3838 
=== Succesors ===
=== Usages ===
v3703 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2241 y: i3838  <|@  <|@
f <@~|@floating>@ <|@
tid v3703 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3965 
y: i6179 
=== Succesors ===
=== Usages ===
v3707 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3965 y: i6179  <|@  <|@
f <@*|@fixed>@ <|@
tid v3707 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3703 
=== Succesors ===
trueSuccessor: v3706 
falseSuccessor: v3704 
=== Usages ===
=== Predecessor ===
v3685 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3703 #trueSuccessor: v3706 #falseSuccessor: v3704  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v224|DWORD = DEC v170|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v223|DWORD, y: v224|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B197 -> B198 falseDestination: B197 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B199" 
    xhandlers
    flags 
    probability 4558089405131523487
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3705 
=== Usages ===
=== Predecessor ===
v3707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3705  <|@  <|@
f <@*|@fixed>@ <|@
tid v3705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3687 
=== Predecessor ===
v3706 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B198 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B196" "B198" 
    successors 
    xhandlers
    flags 
    probability 4562618005677378589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3688 v3705 
=== Succesors ===
next: v3708 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3688 v3705 #next: v3708  <|@  <|@
tid ?2246 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?2249 
values: - - 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
v3708 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2249 values: - - virtualObjectMappings: ?2531  <|@  <|@
f <@*|@fixed>@ <|@
tid v3708 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?2246 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3687 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2246  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -949345 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 7, 248, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B201" 
    xhandlers
    flags 
    probability 4587818133600407724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3723 
=== Usages ===
=== Predecessor ===
v3707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3723  <|@  <|@
f <@~|@floating>@ <|@
tid j3712 <|@
result v225|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i6179 
=== Succesors ===
=== Usages ===
v6213 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i6179  <|@  <|@
f <@~|@floating>@ <|@
tid v6213 <|@
result [v180|QWORD[.] + v225|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a4293 
index: j3712 
=== Succesors ===
=== Usages ===
v3723 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4293 index: j3712  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3723 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6213 
value: i3844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2565 
=== Usages ===
=== Predecessor ===
v3704 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6213 value: i3844 stateAfter: - lastLocationAccess: - #next: v2565  <|@  <|@
f <@*|@fixed>@ <|@
tid v2565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2566 
=== Predecessor ===
v3723 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v225|QWORD = MOVSXD v223|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v180|QWORD[.] + v225|QWORD * 2 + 16] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v223|DWORD] destination: B200 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" "B147" 
    successors "B202" "B267" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i4065 <|@
result v226|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v2566 
values: i6179 i1312 
=== Succesors ===
=== Usages ===
i1328 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2566 values: i6179 i1312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2566 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2565 v2568 
=== Succesors ===
next: a6180 
=== Usages ===
i4065 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2565 v2568 #next: a6180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6180 <|@
result v227|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StringBuffer.toStringCache
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v6209 
=== Succesors ===
next: v4016 
=== Usages ===
v3958 
=== Predecessor ===
v2566 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6209 #next: v4016  <|@  <|@
f <@~|@floating>@ <|@
tid v3958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a6180 
=== Succesors ===
=== Usages ===
v4016 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a6180  <|@  <|@
tid ?2256 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?1329 
values: a92 - i750 
=== Succesors ===
=== Usages ===
?2567 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1329 values: a92 - i750  <|@  <|@
tid ?2567 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<String.getChars(int, int, char[], int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 827
stackSize: 0
=== Inputs ===
outerFrameState: ?2256 
values: - - - - - 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
v4353 v6380 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?2256 values: - - - - - virtualObjectMappings: ?2531  <|@  <|@
f <@*|@fixed>@ <|@
tid v4016 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3958 
=== Succesors ===
trueSuccessor: v4013 
falseSuccessor: v4015 
=== Usages ===
=== Predecessor ===
a6180 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3958 #trueSuccessor: v4013 #falseSuccessor: v4015  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v226|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v227|DWORD[.] = MOV [v26|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v227|DWORD[.], y: v227|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B201 -> B202 falseDestination: B201 -> B267 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B203" "B206" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4013 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a6181 
=== Usages ===
=== Predecessor ===
v4016 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6181 <|@
result v228|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v6206 
=== Succesors ===
next: v6380 
=== Usages ===
v6216 v6380 v6211 
=== Predecessor ===
v4013 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6206 #next: v6380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2567 
object: a6181 
=== Succesors ===
next: v3604 
=== Usages ===
=== Predecessor ===
a6181 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2567 object: a6181 #next: v3604  <|@  <|@
f <@~|@floating>@ <|@
tid i1328 <|@
result v229|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32
=== Inputs ===
x: i4065 
y: i750 
=== Succesors ===
=== Usages ===
v3604 j5021 v4818 v4085 i4263 a4833 v4852 i4811 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4065 y: i750  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3604 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6207 
value: i1328 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j4813 
=== Usages ===
=== Predecessor ===
v6380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6207 value: i1328 stateAfter: - lastLocationAccess: - #next: j4813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4813 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j4849 
=== Usages ===
v6276 v6277 
=== Predecessor ===
v3604 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j4849  <|@  <|@
f <@~|@floating>@ <|@
tid v6276 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j4813 
index: - 
=== Succesors ===
=== Usages ===
j4849 v4851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4849 <|@
result v230|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6276 
=== Succesors ===
next: j4850 
=== Usages ===
j4817 v6278 v6279 a4832 v6284 v6280 v6281 v6282 v6283 
=== Predecessor ===
j4813 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6276 #next: j4850  <|@  <|@
f <@~|@floating>@ <|@
tid v6277 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j4813 
index: - 
=== Succesors ===
=== Usages ===
j4850 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4850 <|@
result v231|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6277 
=== Succesors ===
next: v4821 
=== Usages ===
v4822 
=== Predecessor ===
j4849 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6277 #next: v4821  <|@  <|@
f <@~|@floating>@ <|@
tid v4818 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1328 
y: i4418 
=== Succesors ===
=== Usages ===
v4821 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1328 y: i4418  <|@  <|@
f <@*|@fixed>@ <|@
tid v4821 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v4818 
=== Succesors ===
trueSuccessor: v4820 
falseSuccessor: v4819 
=== Usages ===
=== Predecessor ===
j4850 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4818 #trueSuccessor: v4820 #falseSuccessor: v4819  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v228|DWORD[.] = MOV [v26|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: v26|QWORD[.] - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v228|DWORD[.] * 8] state [bci:61, 35, 7, 248, 17] <|@ <|@
      nr   -1  <|@ instruction v229|DWORD = INC v226|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + 12], y: v229|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v230|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v231|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v229|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B202 -> B203 falseDestination: B202 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B204" "B205" 
    xhandlers
    flags 
    probability 4606102879411360327
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4820 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4828 
=== Usages ===
=== Predecessor ===
v4821 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4828  <|@  <|@
f <@~|@floating>@ <|@
tid i4811 <|@
result v232|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$11/1514064396@6c95a661
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1328 
y: i750 
=== Succesors ===
=== Usages ===
i4840 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1328 y: i750  <|@  <|@
f <@~|@floating>@ <|@
tid i4840 <|@
result v233|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i4811 
y: i4441 
=== Succesors ===
=== Usages ===
i4812 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4811 y: i4441  <|@  <|@
f <@~|@floating>@ <|@
tid i4812 <|@
result v234|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$94/978859646@9756628
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i4840 
y: i4411 
=== Succesors ===
=== Usages ===
j4816 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i4840 y: i4411  <|@  <|@
f <@~|@floating>@ <|@
tid j4816 <|@
result v235|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i4812 
=== Succesors ===
=== Usages ===
j4817 v6280 v6281 v6282 v6283 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i4812  <|@  <|@
f <@~|@floating>@ <|@
tid j4817 <|@
result v236|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j4816 
y: j4849 
=== Succesors ===
=== Usages ===
v4822 v4851 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4816 y: j4849  <|@  <|@
f <@~|@floating>@ <|@
tid v4822 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4850 
y: j4817 
=== Succesors ===
=== Usages ===
v4828 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j4850 y: j4817  <|@  <|@
f <@*|@fixed>@ <|@
tid v4828 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v4822 
=== Succesors ===
trueSuccessor: v4827 
falseSuccessor: v4826 
=== Usages ===
=== Predecessor ===
v4820 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4822 #trueSuccessor: v4827 #falseSuccessor: v4826  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v232|DWORD = SHL v229|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v233|DWORD = LEA [v232|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v234|DWORD = AND v233|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v235|QWORD = MOVSXD v234|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v236|QWORD = ADD (x: v235|QWORD, y: v230|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v236|QWORD, y: v231|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B203 -> B204 falseDestination: B203 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B207" 
    xhandlers
    flags 
    probability 4576227324095347148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4827 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4825 
=== Usages ===
=== Predecessor ===
v4828 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4825  <|@  <|@
f <@*|@fixed>@ <|@
tid v4825 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4824 
=== Predecessor ===
v4827 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B204 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B208" 
    xhandlers
    flags 
    probability 4606023602812699488
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4826 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4851 
=== Usages ===
=== Predecessor ===
v4828 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4851  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4851 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6276 
value: j4817 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4842 
=== Usages ===
=== Predecessor ===
v4826 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6276 value: j4817 stateAfter: - lastLocationAccess: - #next: v4842  <|@  <|@
f <@~|@floating>@ <|@
tid v6280 <|@
result [v235|QWORD + v230|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j4816 
index: j4849 
=== Succesors ===
=== Usages ===
v4842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4816 index: j4849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6280 
=== Succesors ===
next: v4844 
=== Usages ===
=== Predecessor ===
v4851 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6280 #next: v4844  <|@  <|@
f <@~|@floating>@ <|@
tid v6281 <|@
result [v235|QWORD + v230|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j4816 
index: j4849 
=== Succesors ===
=== Usages ===
v4844 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4816 index: j4849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6281 
=== Succesors ===
next: v4846 
=== Usages ===
=== Predecessor ===
v4842 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6281 #next: v4846  <|@  <|@
f <@~|@floating>@ <|@
tid v6282 <|@
result [v235|QWORD + v230|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j4816 
index: j4849 
=== Succesors ===
=== Usages ===
v4846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4816 index: j4849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6282 
=== Succesors ===
next: v4848 
=== Usages ===
=== Predecessor ===
v4844 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6282 #next: v4848  <|@  <|@
f <@~|@floating>@ <|@
tid v6283 <|@
result [v235|QWORD + v230|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j4816 
index: j4849 
=== Succesors ===
=== Usages ===
v4848 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4816 index: j4849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4848 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6283 
=== Succesors ===
next: v4852 
=== Usages ===
=== Predecessor ===
v4846 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6283 #next: v4852  <|@  <|@
f <@~|@floating>@ <|@
tid v6278 <|@
result [v230|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j4849 
index: - 
=== Succesors ===
=== Usages ===
v4852 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4849 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4852 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6278 
value: i1328 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4853 
=== Usages ===
=== Predecessor ===
v4848 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6278 value: i1328 stateAfter: - lastLocationAccess: - #next: v4853  <|@  <|@
f <@~|@floating>@ <|@
tid v6279 <|@
result [v230|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4849 
index: - 
=== Succesors ===
=== Usages ===
v4853 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4849 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4853 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6279 
value: j4395 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4856 
=== Usages ===
=== Predecessor ===
v4852 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6279 value: j4395 stateAfter: - lastLocationAccess: - #next: v4856  <|@  <|@
f <@~|@floating>@ <|@
tid v6284 <|@
result [v230|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j4849 
index: - 
=== Succesors ===
=== Usages ===
v4856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4849 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4856 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6284 
value: v4986 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4831 
=== Usages ===
=== Predecessor ===
v4853 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6284 value: v4986 stateAfter: - lastLocationAccess: - #next: v4831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4831 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a4832 
=== Usages ===
=== Predecessor ===
v4856 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a4832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4832 <|@
result v237|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j4849 
=== Succesors ===
next: v4834 
=== Usages ===
a4837 
=== Predecessor ===
v4831 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j4849 #next: v4834  <|@  <|@
f <@*|@fixed>@ <|@
tid v4834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4835 
=== Predecessor ===
a4832 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v236|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v235|QWORD + v230|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v235|QWORD + v230|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v235|QWORD + v230|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v235|QWORD + v230|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v230|QWORD + 12], y: v229|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v230|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v230|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v237|QWORD[.] = MOVE v230|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v237|QWORD[.]] destination: B205 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B207" 
    xhandlers
    flags 
    probability 4591711229433017291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4819 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4823 
=== Usages ===
=== Predecessor ===
v4821 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4823  <|@  <|@
f <@*|@fixed>@ <|@
tid v4823 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4824 
=== Predecessor ===
v4819 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B206 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" "B204" 
    successors "B208" 
    xhandlers
    flags 
    probability 4592345442222304004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4824 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4823 v4825 
=== Succesors ===
next: a4833 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4823 v4825 #next: a4833  <|@  <|@
tid ?1325 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 451
stackSize: 0
=== Inputs ===
outerFrameState: ?1329 
values: a92 - i750 
virtualObjectMappings: ?2531 
=== Succesors ===
=== Usages ===
a4833 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1329 values: a92 - i750 virtualObjectMappings: ?2531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4833 <|@
result v238|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?1325 
arguments: v4394 i1328 i90 
=== Succesors ===
next: v4836 
=== Usages ===
a4837 
=== Predecessor ===
v4824 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?1325 arguments: v4394 i1328 i90 #next: v4836  <|@  <|@
f <@*|@fixed>@ <|@
tid v4836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4835 
=== Predecessor ===
a4833 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v229|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: v26|QWORD[.] - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 7, 248, 17] <|@ <|@
      nr   -1  <|@ instruction v238|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v238|QWORD[.]] destination: B207 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B205" "B207" 
    successors "B209" "B210" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a4837 <|@
result v239|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v4835 
values: a4832 a4833 
=== Succesors ===
=== Usages ===
v6311 a4277 v6221 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v4835 values: a4832 a4833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4835 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4834 v4836 
=== Succesors ===
next: v5592 
=== Usages ===
a4837 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4834 v4836 #next: v5592  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5592 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: i6182 
=== Usages ===
j5593 j5595 
=== Predecessor ===
v4835 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: i6182  <|@  <|@
f <@~|@floating>@ <|@
tid v6211 <|@
result [v228|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6181 
=== Succesors ===
=== Usages ===
i6182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6182 <|@
result v240|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v6211 
=== Succesors ===
next: v5061 
=== Usages ===
i4263 v4085 
=== Predecessor ===
v5592 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6211 #next: v5061  <|@  <|@
f <@~|@floating>@ <|@
tid v4085 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6182 
y: i1328 
=== Succesors ===
=== Usages ===
i4263 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6182 y: i1328  <|@  <|@
f <@~|@floating>@ <|@
tid i4263 <|@
result v241|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v4085 
trueValue: i6182 
falseValue: i1328 
=== Succesors ===
=== Usages ===
j5022 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v4085 trueValue: i6182 falseValue: i1328  <|@  <|@
f <@~|@floating>@ <|@
tid j5022 <|@
result v242|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i4263 
=== Succesors ===
=== Usages ===
j5656 v6311 j5026 v5058 v5583 j5638 j5644 j5648 j5652 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i4263  <|@  <|@
f <@~|@floating>@ <|@
tid v5058 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5022 
y: j4395 
=== Succesors ===
=== Usages ===
v5061 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5022 y: j4395  <|@  <|@
f <@*|@fixed>@ <|@
tid v5061 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v5058 
=== Succesors ===
trueSuccessor: v5059 
falseSuccessor: v5060 
=== Usages ===
=== Predecessor ===
i6182 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5058 #trueSuccessor: v5059 #falseSuccessor: v5060  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v239|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v240|DWORD = MOV [v228|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v229|DWORD, y: v240|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v241|DWORD = CMOVE (falseValue: v229|DWORD, ~trueValue: v240|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v242|QWORD = MOVSXD v241|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v242|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B208 -> B209 falseDestination: B208 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B227" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5059 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5077 
=== Usages ===
=== Predecessor ===
v5061 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5077  <|@  <|@
f <@*|@fixed>@ <|@
tid v5077 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5078 
=== Predecessor ===
v5059 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B209 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B211" "B212" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5060 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5064 
=== Usages ===
=== Predecessor ===
v5061 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5064  <|@  <|@
f <@~|@floating>@ <|@
tid j5638 <|@
result v243|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j5022 
y: j5637 
=== Succesors ===
=== Usages ===
v5639 v5641 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5022 y: j5637  <|@  <|@
f <@~|@floating>@ <|@
tid v5639 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5638 
y: j4022 
=== Succesors ===
=== Usages ===
v5064 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5638 y: j4022  <|@  <|@
f <@~|@floating>@ <|@
tid v6221 <|@
result [v239|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a4837 
index: - 
=== Succesors ===
=== Usages ===
j5595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4837 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j5595 <|@
result v244|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5592 
address: v6221 
=== Succesors ===
=== Usages ===
v6316 v6318 v6320 v6322 v6324 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5592 address: v6221  <|@  <|@
f <@~|@floating>@ <|@
tid v6216 <|@
result [v228|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6181 
=== Succesors ===
=== Usages ===
j5593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6181  <|@  <|@
f <@~|@floating>@ <|@
tid j5593 <|@
result v245|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5592 
address: v6216 
=== Succesors ===
=== Usages ===
v6317 v6319 v6321 v6323 v6325 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5592 address: v6216  <|@  <|@
f <@*|@fixed>@ <|@
tid v5064 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v5639 
=== Succesors ===
trueSuccessor: v5062 
falseSuccessor: v5063 
=== Usages ===
=== Predecessor ===
v5060 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5639 #trueSuccessor: v5062 #falseSuccessor: v5063  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v243|QWORD = LEA [v242|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v244|QWORD[.] = LEA [v239|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v245|QWORD[*] = LEA [v228|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v243|QWORD, y: v243|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B210 -> B211 falseDestination: B210 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B215" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5062 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5073 
=== Usages ===
=== Predecessor ===
v5064 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5073  <|@  <|@
f <@*|@fixed>@ <|@
tid v5073 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5074 
=== Predecessor ===
v5062 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B211 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B213" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5063 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5065 
=== Usages ===
=== Predecessor ===
v5064 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5065  <|@  <|@
f <@*|@fixed>@ <|@
tid v5065 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5066 
=== Predecessor ===
v5063 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B212 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" "B266" 
    successors "B214" "B266" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4602480130880221376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5629 <|@
result v246|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5066 
values: j4022 j5636 
=== Succesors ===
=== Usages ===
v6325 j5636 v6324 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5066 values: j4022 j5636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5066 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v5065 
=== Succesors ===
next: v6183 
=== Usages ===
v6183 v5069 v5070 j5629 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v5065 #next: v6183  <|@  <|@
f <@~|@floating>@ <|@
tid v6325 <|@
result [v245|QWORD[*] + v246|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5593 
index: j5629 
=== Succesors ===
=== Usages ===
v6183 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5593 index: j5629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6183 <|@
result v247|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5066 
address: v6325 
=== Succesors ===
next: v6094 
=== Usages ===
v6094 
=== Predecessor ===
v5066 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5066 address: v6325 #next: v6094  <|@  <|@
f <@~|@floating>@ <|@
tid v6324 <|@
result [v244|QWORD[.] + v246|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5595 
index: j5629 
=== Succesors ===
=== Usages ===
v6094 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5595 index: j5629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6094 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6324 
value: v6183 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5072 
=== Usages ===
=== Predecessor ===
v6183 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6324 value: v6183 stateAfter: - lastLocationAccess: - #next: v5072  <|@  <|@
f <@~|@floating>@ <|@
tid j5636 <|@
result v248|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5629 
y: j2615 
=== Succesors ===
=== Usages ===
j5621 j5629 v5641 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5629 y: j2615  <|@  <|@
f <@~|@floating>@ <|@
tid v5641 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5638 
y: j5636 
=== Succesors ===
=== Usages ===
v5072 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5638 y: j5636  <|@  <|@
f <@*|@fixed>@ <|@
tid v5072 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5641 
=== Succesors ===
trueSuccessor: v5069 
falseSuccessor: v5071 
=== Usages ===
=== Predecessor ===
v6094 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5641 #trueSuccessor: v5069 #falseSuccessor: v5071  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v246|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v247|V256_WORD = H [v245|QWORD[*] + v246|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v244|QWORD[.] + v246|QWORD * 2], input: v247|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v248|QWORD = LEA [v246|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v248|QWORD, y: v243|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B213 -> B214 falseDestination: B213 -> B266 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B215" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5069 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v5066 
=== Succesors ===
next: v5075 
=== Usages ===
=== Predecessor ===
v5072 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v5066 #next: v5075  <|@  <|@
f <@*|@fixed>@ <|@
tid v5075 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5074 
=== Predecessor ===
v5069 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v248|QWORD] destination: B214 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B211" "B214" 
    successors "B216" "B217" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5621 <|@
result v249|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5074 
values: j4022 j5636 
=== Succesors ===
=== Usages ===
v6323 j5628 j5612 v5645 v6322 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5074 values: j4022 j5636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5074 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5073 v5075 
=== Succesors ===
next: v5097 
=== Usages ===
j5621 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5073 v5075 #next: v5097  <|@  <|@
f <@~|@floating>@ <|@
tid j5644 <|@
result v250|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j5022 
y: j5643 
=== Succesors ===
=== Usages ===
v5645 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5022 y: j5643  <|@  <|@
f <@~|@floating>@ <|@
tid v5645 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5644 
y: j5621 
=== Succesors ===
=== Usages ===
v5097 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5644 y: j5621  <|@  <|@
f <@*|@fixed>@ <|@
tid v5097 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5645 
=== Succesors ===
trueSuccessor: v5096 
falseSuccessor: v5095 
=== Usages ===
=== Predecessor ===
v5074 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5645 #trueSuccessor: v5096 #falseSuccessor: v5095  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v249|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v250|QWORD = LEA [v242|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v249|QWORD, y: v250|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B215 -> B216 falseDestination: B215 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B218" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5096 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5100 
=== Usages ===
=== Predecessor ===
v5097 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5100  <|@  <|@
f <@*|@fixed>@ <|@
tid v5100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5085 
=== Predecessor ===
v5096 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v249|QWORD] destination: B216 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B218" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5095 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6184 
=== Usages ===
v6184 
=== Predecessor ===
v5097 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6184  <|@  <|@
f <@~|@floating>@ <|@
tid v6323 <|@
result [v245|QWORD[*] + v249|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5593 
index: j5621 
=== Succesors ===
=== Usages ===
v6184 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5593 index: j5621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6184 <|@
result v251|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5095 
address: v6323 
=== Succesors ===
next: v6092 
=== Usages ===
v6092 
=== Predecessor ===
v5095 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5095 address: v6323 #next: v6092  <|@  <|@
f <@~|@floating>@ <|@
tid v6322 <|@
result [v244|QWORD[.] + v249|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5595 
index: j5621 
=== Succesors ===
=== Usages ===
v6092 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5595 index: j5621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6092 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6322 
value: v6184 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5084 
=== Usages ===
=== Predecessor ===
v6184 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6322 value: v6184 stateAfter: - lastLocationAccess: - #next: v5084  <|@  <|@
f <@~|@floating>@ <|@
tid j5628 <|@
result v252|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5621 
y: j4402 
=== Succesors ===
=== Usages ===
j5612 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5621 y: j4402  <|@  <|@
f <@*|@fixed>@ <|@
tid v5084 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5085 
=== Predecessor ===
v6092 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v251|V128_WORD = H [v245|QWORD[*] + v249|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v244|QWORD[.] + v249|QWORD * 2], input: v251|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v252|QWORD = LEA [v249|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v252|QWORD] destination: B217 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" "B216" 
    successors "B219" "B220" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5612 <|@
result v253|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5085 
values: j5628 j5621 
=== Succesors ===
=== Usages ===
v6321 j5620 j5604 v5649 v6320 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5085 values: j5628 j5621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5085 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5084 v5100 
=== Succesors ===
next: v5103 
=== Usages ===
j5612 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5084 v5100 #next: v5103  <|@  <|@
f <@~|@floating>@ <|@
tid j5648 <|@
result v254|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j5022 
y: j5647 
=== Succesors ===
=== Usages ===
v5649 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5022 y: j5647  <|@  <|@
f <@~|@floating>@ <|@
tid v5649 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5648 
y: j5612 
=== Succesors ===
=== Usages ===
v5103 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5648 y: j5612  <|@  <|@
f <@*|@fixed>@ <|@
tid v5103 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5649 
=== Succesors ===
trueSuccessor: v5102 
falseSuccessor: v5101 
=== Usages ===
=== Predecessor ===
v5085 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5649 #trueSuccessor: v5102 #falseSuccessor: v5101  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v253|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v254|QWORD = LEA [v242|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v253|QWORD, y: v254|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B218 -> B219 falseDestination: B218 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5106 
=== Usages ===
=== Predecessor ===
v5103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5106  <|@  <|@
f <@*|@fixed>@ <|@
tid v5106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5089 
=== Predecessor ===
v5102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v253|QWORD] destination: B219 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6185 
=== Usages ===
v6185 
=== Predecessor ===
v5103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6185  <|@  <|@
f <@~|@floating>@ <|@
tid v6321 <|@
result [v245|QWORD[*] + v253|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5593 
index: j5612 
=== Succesors ===
=== Usages ===
v6185 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5593 index: j5612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6185 <|@
result v255|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5101 
address: v6321 
=== Succesors ===
next: v6090 
=== Usages ===
v6090 
=== Predecessor ===
v5101 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5101 address: v6321 #next: v6090  <|@  <|@
f <@~|@floating>@ <|@
tid v6320 <|@
result [v244|QWORD[.] + v253|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5595 
index: j5612 
=== Succesors ===
=== Usages ===
v6090 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5595 index: j5612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6090 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6320 
value: v6185 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5088 
=== Usages ===
=== Predecessor ===
v6185 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6320 value: v6185 stateAfter: - lastLocationAccess: - #next: v5088  <|@  <|@
f <@~|@floating>@ <|@
tid j5620 <|@
result v256|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5612 
y: j5619 
=== Succesors ===
=== Usages ===
j5604 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5612 y: j5619  <|@  <|@
f <@*|@fixed>@ <|@
tid v5088 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5089 
=== Predecessor ===
v6090 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v255|V64_WORD = H [v245|QWORD[*] + v253|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v244|QWORD[.] + v253|QWORD * 2], input: v255|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v256|QWORD = LEA [v253|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v256|QWORD] destination: B220 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" "B219" 
    successors "B222" "B223" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5604 <|@
result v257|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5089 
values: j5620 j5612 
=== Succesors ===
=== Usages ===
v6319 j5611 j5596 v5653 v6318 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5089 values: j5620 j5612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5089 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5088 v5106 
=== Succesors ===
next: v5109 
=== Usages ===
j5604 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5088 v5106 #next: v5109  <|@  <|@
f <@~|@floating>@ <|@
tid j5652 <|@
result v258|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j5022 
y: j5651 
=== Succesors ===
=== Usages ===
v5653 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5022 y: j5651  <|@  <|@
f <@~|@floating>@ <|@
tid v5653 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5652 
y: j5604 
=== Succesors ===
=== Usages ===
v5109 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5652 y: j5604  <|@  <|@
f <@*|@fixed>@ <|@
tid v5109 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5653 
=== Succesors ===
trueSuccessor: v5108 
falseSuccessor: v5107 
=== Usages ===
=== Predecessor ===
v5089 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5653 #trueSuccessor: v5108 #falseSuccessor: v5107  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v257|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v258|QWORD = LEA [v242|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v257|QWORD, y: v258|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B221 -> B222 falseDestination: B221 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5112 
=== Usages ===
=== Predecessor ===
v5109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5112  <|@  <|@
f <@*|@fixed>@ <|@
tid v5112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5092 
=== Predecessor ===
v5108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v257|QWORD] destination: B222 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6186 
=== Usages ===
v6186 
=== Predecessor ===
v5109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6186  <|@  <|@
f <@~|@floating>@ <|@
tid v6319 <|@
result [v245|QWORD[*] + v257|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5593 
index: j5604 
=== Succesors ===
=== Usages ===
v6186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5593 index: j5604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6186 <|@
result v259|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v5107 
address: v6319 
=== Succesors ===
next: v6088 
=== Usages ===
v6088 
=== Predecessor ===
v5107 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5107 address: v6319 #next: v6088  <|@  <|@
f <@~|@floating>@ <|@
tid v6318 <|@
result [v244|QWORD[.] + v257|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5595 
index: j5604 
=== Succesors ===
=== Usages ===
v6088 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5595 index: j5604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6088 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6318 
value: v6186 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5091 
=== Usages ===
=== Predecessor ===
v6186 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6318 value: v6186 stateAfter: - lastLocationAccess: - #next: v5091  <|@  <|@
f <@~|@floating>@ <|@
tid j5611 <|@
result v260|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5604 
y: j4598 
=== Succesors ===
=== Usages ===
j5596 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5604 y: j4598  <|@  <|@
f <@*|@fixed>@ <|@
tid v5091 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5092 
=== Predecessor ===
v6088 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v259|V32_WORD = H [v245|QWORD[*] + v257|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v244|QWORD[.] + v257|QWORD * 2], input: v259|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v260|QWORD = LEA [v257|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v260|QWORD] destination: B223 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" "B222" 
    successors "B225" "B226" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5596 <|@
result v261|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5092 
values: j5611 j5604 
=== Succesors ===
=== Usages ===
v6317 v5657 v6316 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5092 values: j5611 j5604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5092 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5091 v5112 
=== Succesors ===
next: v5115 
=== Usages ===
j5596 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5091 v5112 #next: v5115  <|@  <|@
f <@~|@floating>@ <|@
tid j5656 <|@
result v262|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j5022 
y: j5655 
=== Succesors ===
=== Usages ===
v5657 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5022 y: j5655  <|@  <|@
f <@~|@floating>@ <|@
tid v5657 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5656 
y: j5596 
=== Succesors ===
=== Usages ===
v5115 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5656 y: j5596  <|@  <|@
f <@*|@fixed>@ <|@
tid v5115 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5657 
=== Succesors ===
trueSuccessor: v5114 
falseSuccessor: v5113 
=== Usages ===
=== Predecessor ===
v5092 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5657 #trueSuccessor: v5114 #falseSuccessor: v5113  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v261|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v262|QWORD = DEC v242|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v261|QWORD, y: v262|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B224 -> B225 falseDestination: B224 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5118 
=== Usages ===
=== Predecessor ===
v5115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5118  <|@  <|@
f <@*|@fixed>@ <|@
tid v5118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5078 
=== Predecessor ===
v5114 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B225 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i6187 
=== Usages ===
i6187 
=== Predecessor ===
v5115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6187  <|@  <|@
f <@~|@floating>@ <|@
tid v6317 <|@
result [v245|QWORD[*] + v261|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5593 
index: j5596 
=== Succesors ===
=== Usages ===
i6187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5593 index: j5596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6187 <|@
result v263|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v5113 
address: v6317 
=== Succesors ===
next: v6086 
=== Usages ===
v6086 
=== Predecessor ===
v5113 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v5113 address: v6317 #next: v6086  <|@  <|@
f <@~|@floating>@ <|@
tid v6316 <|@
result [v244|QWORD[.] + v261|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5595 
index: j5596 
=== Succesors ===
=== Usages ===
v6086 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5595 index: j5596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6086 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6316 
value: i6187 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5094 
=== Usages ===
=== Predecessor ===
i6187 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6316 value: i6187 stateAfter: - lastLocationAccess: - #next: v5094  <|@  <|@
f <@*|@fixed>@ <|@
tid v5094 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5078 
=== Predecessor ===
v6086 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v263|DWORD = MOVSX [v245|QWORD[*] + v261|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v244|QWORD[.] + v261|QWORD * 2], y: v263|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B226 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B209" "B226" "B225" 
    successors "B228" "B246" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5078 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5077 v5094 v5118 
=== Succesors ===
next: v5660 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5077 v5094 v5118 #next: v5660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v5125 
=== Usages ===
j5662 
=== Predecessor ===
v5078 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v5125  <|@  <|@
f <@~|@floating>@ <|@
tid j5021 <|@
result v264|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$9/1544482839@31ebcc0a
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/835899795@254f094f
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1328 
=== Succesors ===
=== Usages ===
j5026 v5583 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1328  <|@  <|@
f <@~|@floating>@ <|@
tid v5583 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5022 
y: j5021 
=== Succesors ===
=== Usages ===
v5125 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5022 y: j5021  <|@  <|@
f <@*|@fixed>@ <|@
tid v5125 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v5583 
=== Succesors ===
trueSuccessor: v5124 
falseSuccessor: v5123 
=== Usages ===
=== Predecessor ===
v5660 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5583 #trueSuccessor: v5124 #falseSuccessor: v5123  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v264|QWORD = MOVSXD v229|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v264|QWORD, y: v242|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B227 -> B228 falseDestination: B227 -> B246 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B229" "B230" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5124 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5128 
=== Usages ===
=== Predecessor ===
v5125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5128  <|@  <|@
f <@~|@floating>@ <|@
tid v6311 <|@
result [v239|QWORD[.] + v242|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a4837 
index: j5022 
=== Succesors ===
=== Usages ===
j5662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4837 index: j5022  <|@  <|@
f <@~|@floating>@ <|@
tid j5662 <|@
result v265|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v5660 
address: v6311 
=== Succesors ===
=== Usages ===
v6326 v6327 v6328 v6329 v6330 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v5660 address: v6311  <|@  <|@
f <@~|@floating>@ <|@
tid j5026 <|@
result v266|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$68/1668473261@10b940da
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j5021 
y: j5022 
=== Succesors ===
=== Usages ===
j5707 j5693 j5698 j5701 j5704 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j5021 y: j5022  <|@  <|@
f <@~|@floating>@ <|@
tid j5693 <|@
result v267|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j5026 
y: j5637 
=== Succesors ===
=== Usages ===
v5694 v5696 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5026 y: j5637  <|@  <|@
f <@~|@floating>@ <|@
tid v5694 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5693 
y: j4022 
=== Succesors ===
=== Usages ===
v5128 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5693 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v5128 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v5694 
=== Succesors ===
trueSuccessor: v5126 
falseSuccessor: v5127 
=== Usages ===
=== Predecessor ===
v5124 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5694 #trueSuccessor: v5126 #falseSuccessor: v5127  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v265|QWORD[.] = LEA [v239|QWORD[.] + v242|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v266|QWORD = SUB (x: v264|QWORD, ~y: v242|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v267|QWORD = LEA [v266|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v267|QWORD, y: v267|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B228 -> B229 falseDestination: B228 -> B230 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B233" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5126 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5137 
=== Usages ===
=== Predecessor ===
v5128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5137  <|@  <|@
f <@*|@fixed>@ <|@
tid v5137 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5138 
=== Predecessor ===
v5126 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B229 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B231" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5129 
=== Usages ===
=== Predecessor ===
v5128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5129  <|@  <|@
f <@*|@fixed>@ <|@
tid v5129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5130 
=== Predecessor ===
v5127 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B230 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B230" "B245" 
    successors "B232" "B245" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4602480130880221376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5687 <|@
result v268|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5130 
values: j4022 j5692 
=== Succesors ===
=== Usages ===
v6330 j5692 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5130 values: j4022 j5692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5130 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v5129 
=== Succesors ===
next: v6104 
=== Usages ===
j5687 v5133 v5134 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v5129 #next: v6104  <|@  <|@
f <@~|@floating>@ <|@
tid v6330 <|@
result [v265|QWORD[.] + v268|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5662 
index: j5687 
=== Succesors ===
=== Usages ===
v6104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5662 index: j5687  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6104 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6330 
value: v6154 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5136 
=== Usages ===
=== Predecessor ===
v5130 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6330 value: v6154 stateAfter: - lastLocationAccess: - #next: v5136  <|@  <|@
f <@~|@floating>@ <|@
tid j5692 <|@
result v269|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5687 
y: j2615 
=== Succesors ===
=== Usages ===
j5681 j5687 v5696 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5687 y: j2615  <|@  <|@
f <@~|@floating>@ <|@
tid v5696 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5693 
y: j5692 
=== Succesors ===
=== Usages ===
v5136 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5693 y: j5692  <|@  <|@
f <@*|@fixed>@ <|@
tid v5136 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5696 
=== Succesors ===
trueSuccessor: v5133 
falseSuccessor: v5135 
=== Usages ===
=== Predecessor ===
v6104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5696 #trueSuccessor: v5133 #falseSuccessor: v5135  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v268|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v265|QWORD[.] + v268|QWORD * 2], input: v19|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v269|QWORD = LEA [v268|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v269|QWORD, y: v267|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B231 -> B232 falseDestination: B231 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B231" 
    successors "B233" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v5130 
=== Succesors ===
next: v5139 
=== Usages ===
=== Predecessor ===
v5136 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v5130 #next: v5139  <|@  <|@
f <@*|@fixed>@ <|@
tid v5139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5138 
=== Predecessor ===
v5133 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v269|QWORD] destination: B232 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B229" "B232" 
    successors "B234" "B235" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5681 <|@
result v270|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5138 
values: j4022 j5692 
=== Succesors ===
=== Usages ===
v6329 j5686 j5675 v5699 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5138 values: j4022 j5692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5138 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5137 v5139 
=== Succesors ===
next: v5160 
=== Usages ===
j5681 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5137 v5139 #next: v5160  <|@  <|@
f <@~|@floating>@ <|@
tid j5698 <|@
result v271|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j5026 
y: j5643 
=== Succesors ===
=== Usages ===
v5699 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5026 y: j5643  <|@  <|@
f <@~|@floating>@ <|@
tid v5699 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5698 
y: j5681 
=== Succesors ===
=== Usages ===
v5160 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5698 y: j5681  <|@  <|@
f <@*|@fixed>@ <|@
tid v5160 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5699 
=== Succesors ===
trueSuccessor: v5159 
falseSuccessor: v5158 
=== Usages ===
=== Predecessor ===
v5138 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5699 #trueSuccessor: v5159 #falseSuccessor: v5158  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v270|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v271|QWORD = LEA [v266|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v270|QWORD, y: v271|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B233 -> B234 falseDestination: B233 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B233" 
    successors "B236" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5163 
=== Usages ===
=== Predecessor ===
v5160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5163  <|@  <|@
f <@*|@fixed>@ <|@
tid v5163 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5149 
=== Predecessor ===
v5159 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v270|QWORD] destination: B234 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B233" 
    successors "B236" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6103 
=== Usages ===
=== Predecessor ===
v5160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6103  <|@  <|@
f <@~|@floating>@ <|@
tid v6329 <|@
result [v265|QWORD[.] + v270|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5662 
index: j5681 
=== Succesors ===
=== Usages ===
v6103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5662 index: j5681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6103 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6329 
value: v6158 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5148 
=== Usages ===
=== Predecessor ===
v5158 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6329 value: v6158 stateAfter: - lastLocationAccess: - #next: v5148  <|@  <|@
f <@~|@floating>@ <|@
tid j5686 <|@
result v272|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5681 
y: j4402 
=== Succesors ===
=== Usages ===
j5675 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5681 y: j4402  <|@  <|@
f <@*|@fixed>@ <|@
tid v5148 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5149 
=== Predecessor ===
v6103 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v265|QWORD[.] + v270|QWORD * 2], input: v78|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v272|QWORD = LEA [v270|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v272|QWORD] destination: B235 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B235" "B234" 
    successors "B237" "B238" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5675 <|@
result v273|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5149 
values: j5686 j5681 
=== Succesors ===
=== Usages ===
v6328 j5680 j5669 v5702 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5149 values: j5686 j5681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5149 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5148 v5163 
=== Succesors ===
next: v5166 
=== Usages ===
j5675 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5148 v5163 #next: v5166  <|@  <|@
f <@~|@floating>@ <|@
tid j5701 <|@
result v274|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j5026 
y: j5647 
=== Succesors ===
=== Usages ===
v5702 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5026 y: j5647  <|@  <|@
f <@~|@floating>@ <|@
tid v5702 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5701 
y: j5675 
=== Succesors ===
=== Usages ===
v5166 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5701 y: j5675  <|@  <|@
f <@*|@fixed>@ <|@
tid v5166 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5702 
=== Succesors ===
trueSuccessor: v5165 
falseSuccessor: v5164 
=== Usages ===
=== Predecessor ===
v5149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5702 #trueSuccessor: v5165 #falseSuccessor: v5164  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v273|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v274|QWORD = LEA [v266|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v273|QWORD, y: v274|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B236 -> B237 falseDestination: B236 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B236" 
    successors "B239" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5169 
=== Usages ===
=== Predecessor ===
v5166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5169  <|@  <|@
f <@*|@fixed>@ <|@
tid v5169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5152 
=== Predecessor ===
v5165 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v273|QWORD] destination: B237 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B236" 
    successors "B239" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6101 
=== Usages ===
=== Predecessor ===
v5166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6101  <|@  <|@
f <@~|@floating>@ <|@
tid v6328 <|@
result [v265|QWORD[.] + v273|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5662 
index: j5675 
=== Succesors ===
=== Usages ===
v6101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5662 index: j5675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6101 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6328 
value: v6157 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5151 
=== Usages ===
=== Predecessor ===
v5164 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6328 value: v6157 stateAfter: - lastLocationAccess: - #next: v5151  <|@  <|@
f <@~|@floating>@ <|@
tid j5680 <|@
result v275|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5675 
y: j5619 
=== Succesors ===
=== Usages ===
j5669 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5675 y: j5619  <|@  <|@
f <@*|@fixed>@ <|@
tid v5151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5152 
=== Predecessor ===
v6101 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v265|QWORD[.] + v273|QWORD * 2], input: v77|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v275|QWORD = LEA [v273|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v275|QWORD] destination: B238 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" "B237" 
    successors "B240" "B241" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5669 <|@
result v276|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5152 
values: j5680 j5675 
=== Succesors ===
=== Usages ===
v6327 j5674 j5663 v5705 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5152 values: j5680 j5675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5151 v5169 
=== Succesors ===
next: v5172 
=== Usages ===
j5669 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5151 v5169 #next: v5172  <|@  <|@
f <@~|@floating>@ <|@
tid j5704 <|@
result v277|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j5026 
y: j5651 
=== Succesors ===
=== Usages ===
v5705 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5026 y: j5651  <|@  <|@
f <@~|@floating>@ <|@
tid v5705 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5704 
y: j5669 
=== Succesors ===
=== Usages ===
v5172 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5704 y: j5669  <|@  <|@
f <@*|@fixed>@ <|@
tid v5172 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5705 
=== Succesors ===
trueSuccessor: v5171 
falseSuccessor: v5170 
=== Usages ===
=== Predecessor ===
v5152 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5705 #trueSuccessor: v5171 #falseSuccessor: v5170  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v276|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v277|QWORD = LEA [v266|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v276|QWORD, y: v277|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B239 -> B240 falseDestination: B239 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B239" 
    successors "B242" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5175 
=== Usages ===
=== Predecessor ===
v5172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5175  <|@  <|@
f <@*|@fixed>@ <|@
tid v5175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5155 
=== Predecessor ===
v5171 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v276|QWORD] destination: B240 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B239" 
    successors "B242" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5170 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6099 
=== Usages ===
=== Predecessor ===
v5172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6099  <|@  <|@
f <@~|@floating>@ <|@
tid v6327 <|@
result [v265|QWORD[.] + v276|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5662 
index: j5669 
=== Succesors ===
=== Usages ===
v6099 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5662 index: j5669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6099 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6327 
value: v6156 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5154 
=== Usages ===
=== Predecessor ===
v5170 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6327 value: v6156 stateAfter: - lastLocationAccess: - #next: v5154  <|@  <|@
f <@~|@floating>@ <|@
tid j5674 <|@
result v278|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j5669 
y: j4598 
=== Succesors ===
=== Usages ===
j5663 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5669 y: j4598  <|@  <|@
f <@*|@fixed>@ <|@
tid v5154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5155 
=== Predecessor ===
v6099 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v265|QWORD[.] + v276|QWORD * 2], input: v20|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v278|QWORD = LEA [v276|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v278|QWORD] destination: B241 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B241" "B240" 
    successors "B243" "B244" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j5663 <|@
result v279|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v5155 
values: j5674 j5669 
=== Succesors ===
=== Usages ===
v6326 v5708 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5155 values: j5674 j5669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5154 v5175 
=== Succesors ===
next: v5178 
=== Usages ===
j5663 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5154 v5175 #next: v5178  <|@  <|@
f <@~|@floating>@ <|@
tid j5707 <|@
result v280|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j5026 
y: j5655 
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j5026 y: j5655  <|@  <|@
f <@~|@floating>@ <|@
tid v5708 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@538d3441
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j5707 
y: j5663 
=== Succesors ===
=== Usages ===
v5178 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j5707 y: j5663  <|@  <|@
f <@*|@fixed>@ <|@
tid v5178 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v5708 
=== Succesors ===
trueSuccessor: v5177 
falseSuccessor: v5176 
=== Usages ===
=== Predecessor ===
v5155 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5708 #trueSuccessor: v5177 #falseSuccessor: v5176  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v279|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v280|QWORD = DEC v266|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v279|QWORD, y: v280|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B242 -> B243 falseDestination: B242 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B247" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5181 
=== Usages ===
=== Predecessor ===
v5178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5181  <|@  <|@
f <@*|@fixed>@ <|@
tid v5181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5142 
=== Predecessor ===
v5177 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B243 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B247" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v6097 
=== Usages ===
=== Predecessor ===
v5178 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6097  <|@  <|@
f <@~|@floating>@ <|@
tid v6326 <|@
result [v265|QWORD[.] + v279|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j5662 
index: j5663 
=== Succesors ===
=== Usages ===
v6097 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j5662 index: j5663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6097 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6326 
value: i6155 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v5157 
=== Usages ===
=== Predecessor ===
v5176 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6326 value: i6155 stateAfter: - lastLocationAccess: - #next: v5157  <|@  <|@
f <@*|@fixed>@ <|@
tid v5157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5142 
=== Predecessor ===
v6097 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v265|QWORD[.] + v279|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B244 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B231" 
    successors "B231" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5135 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5134 
=== Usages ===
=== Predecessor ===
v5136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5134  <|@  <|@
f <@*|@fixed>@ <|@
tid v5134 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v5130 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5135 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v5130  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v269|QWORD] destination: B245 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B247" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5141 
=== Usages ===
=== Predecessor ===
v5125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5141  <|@  <|@
f <@*|@fixed>@ <|@
tid v5141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5142 
=== Predecessor ===
v5123 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B246 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B246" "B244" "B243" 
    successors "B248" "B249" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5141 v5157 v5181 
=== Succesors ===
next: a4277 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5141 v5157 v5181 #next: a4277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4277 <|@
result v239|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a4837 
=== Succesors ===
next: v3618 
=== Usages ===
?253 a3617 
=== Predecessor ===
v5142 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a4837 #next: v3618  <|@  <|@
f <@~|@floating>@ <|@
tid a3617 <|@
result v281|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a4277 
=== Succesors ===
=== Usages ===
v3618 v4978 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3618 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: StringBuffer.toStringCache
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6209 
value: a3617 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j4864 
=== Usages ===
=== Predecessor ===
a4277 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6209 value: a3617 stateAfter: - lastLocationAccess: - #next: j4864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4864 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4042 
=== Succesors ===
next: v4868 
=== Usages ===
j4865 
=== Predecessor ===
v3618 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4042 #next: v4868  <|@  <|@
f <@~|@floating>@ <|@
tid j4865 <|@
result v282|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$152/1924078416@7040fbbc
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j4864 
y: i4682 
=== Succesors ===
=== Usages ===
v6285 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j4864 y: i4682  <|@  <|@
f <@~|@floating>@ <|@
tid v6285 <|@
result [v282|QWORD[*] + v97|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4865 
index: j4686 
=== Succesors ===
=== Usages ===
v4868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4865 index: j4686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4868 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6285 
value: i4688 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j4925 
=== Usages ===
=== Predecessor ===
j4864 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6285 value: i4688 stateAfter: - lastLocationAccess: - #next: j4925  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4925 <|@
result v283|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6292 
=== Succesors ===
next: v4875 
=== Usages ===
j4871 v4917 v6288 v6289 v6290 v6291 
=== Predecessor ===
v4868 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6292 #next: v4875  <|@  <|@
f <@~|@floating>@ <|@
tid j4871 <|@
result v284|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$94/978859646@9756628
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j4925 
y: j4589 
=== Succesors ===
=== Usages ===
v4872 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j4925 y: j4589  <|@  <|@
f <@~|@floating>@ <|@
tid v4872 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4871 
y: j4592 
=== Succesors ===
=== Usages ===
v4875 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j4871 y: j4592  <|@  <|@
tid a252 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@4394170c
hasIdentity: true
objectId: 2
stamp: a!# Ljava/lang/String;
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?247 ?253 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?253 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a252 
values: a4277 - 
=== Succesors ===
=== Usages ===
?247 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a252 values: a4277 -  <|@  <|@
tid ?247 <|@
d <@d|@=== Debug Properties ===
bci: 256
code: ResolvedJavaMethodBytecode<StringOp.cont(StringBuffer)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 166
stackSize: 1
=== Inputs ===
outerFrameState: ?89 
values: - - a252 
virtualObjectMappings: ?253 
=== Succesors ===
=== Usages ===
v4931 a4949 v4902 i4908 v4914 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?89 values: - - a252 virtualObjectMappings: ?253  <|@  <|@
f <@*|@fixed>@ <|@
tid v4875 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v4872 
=== Succesors ===
trueSuccessor: v4874 
falseSuccessor: v4873 
=== Usages ===
=== Predecessor ===
j4925 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4872 #trueSuccessor: v4874 #falseSuccessor: v4873  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v281|DWORD[.] = COMPRESSPOINTER (input: v239|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + 20], y: v281|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v282|QWORD[*] = SHR v26|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v282|QWORD[*] + v97|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v283|QWORD = MOV [v26|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v284|QWORD = AND v283|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v284|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B247 -> B248 falseDestination: B247 -> B249 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B262" 
    xhandlers
    flags 
    probability 4606102879411360327
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4874 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4876 
=== Usages ===
=== Predecessor ===
v4875 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4876  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4876 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v4933 
=== Usages ===
=== Predecessor ===
v4874 >@ <|@
instruction <@EndLockScope|@org.graalvm.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v4933  <|@  <|@
f <@*|@fixed>@ <|@
tid v4933 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4932 
=== Predecessor ===
v4876 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B248 -> B262 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B250" "B251" 
    xhandlers
    flags 
    probability 4591711229433017291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4877 
=== Usages ===
=== Predecessor ===
v4875 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4877 <|@
result v285|QWORD <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
stamp: i64
=== Inputs ===
=== Succesors ===
next: j4926 
=== Usages ===
v6286 v4902 i4908 v4914 
=== Predecessor ===
v4873 >@ <|@
instruction <@CurrentLock|@org.graalvm.compiler.hotspot.nodes.CurrentLockNode>@ #next: j4926  <|@  <|@
f <@~|@floating>@ <|@
tid v6286 <|@
result [v285|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4877 
index: - 
=== Succesors ===
=== Usages ===
j4926 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4877 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4926 <|@
result v286|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: DisplacedMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6286 
=== Succesors ===
next: v4882 
=== Usages ===
v4879 i4908 
=== Predecessor ===
j4877 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6286 #next: v4882  <|@  <|@
f <@~|@floating>@ <|@
tid v4879 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4926 
y: j4022 
=== Succesors ===
=== Usages ===
v4882 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j4926 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v4882 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v4879 
=== Succesors ===
trueSuccessor: v4881 
falseSuccessor: v4880 
=== Usages ===
=== Predecessor ===
j4926 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4879 #trueSuccessor: v4881 #falseSuccessor: v4880  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v285|QWORD = STACKLEA vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v286|QWORD = MOV [v285|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v286|QWORD, y: v286|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B249 -> B250 falseDestination: B249 -> B251 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B261" 
    xhandlers
    flags 
    probability 4585798268051676323
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4881 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4903 
=== Usages ===
=== Predecessor ===
v4882 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4903  <|@  <|@
f <@*|@fixed>@ <|@
tid v4903 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4904 
=== Predecessor ===
v4881 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B250 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B252" "B255" 
    xhandlers
    flags 
    probability 4588616991559617267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4880 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4885 
=== Usages ===
=== Predecessor ===
v4882 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4885  <|@  <|@
f <@~|@floating>@ <|@
tid v4917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
x: j4925 
y: j4598 
=== Succesors ===
=== Usages ===
v4885 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j4925 y: j4598  <|@  <|@
f <@*|@fixed>@ <|@
tid v4885 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v4917 
=== Succesors ===
trueSuccessor: v4883 
falseSuccessor: v4884 
=== Usages ===
=== Predecessor ===
v4880 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4917 #trueSuccessor: v4883 #falseSuccessor: v4884  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v283|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B251 -> B252 falseDestination: B251 -> B255 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B253" "B254" 
    xhandlers
    flags 
    probability 4588532429854379039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4906 
=== Usages ===
=== Predecessor ===
v4885 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4906 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4042 
=== Succesors ===
next: i4908 
=== Usages ===
v6287 
=== Predecessor ===
v4883 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4042 #next: i4908  <|@  <|@
f <@~|@floating>@ <|@
tid v6287 <|@
result [v26|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4906 
index: - 
=== Succesors ===
=== Usages ===
i4908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4906 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i4908 <|@
result INTERIOR_MATCH <|@
st <@st|@bench.StringOp.cont(Bench.scala:166) [bci: 256]
stack: a252 
locals: - - 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6287 
expectedValue: j4877 
newValue: j4926 
stateAfter: ?247 
=== Succesors ===
next: v4912 
=== Usages ===
v4909 
=== Predecessor ===
j4906 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v6287 expectedValue: j4877 newValue: j4926 stateAfter: ?247 #next: v4912  <|@  <|@
f <@~|@floating>@ <|@
tid v4909 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4908 
y: i90 
=== Succesors ===
=== Usages ===
v4912 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4908 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v4912 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@6b4fc8c9 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v4909 
=== Succesors ===
trueSuccessor: v4910 
falseSuccessor: v4911 
=== Usages ===
=== Predecessor ===
i4908 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4909 #trueSuccessor: v4910 #falseSuccessor: v4911  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v285|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v26|QWORD[.]], cmpValue: rax|QWORD, newValue: v286|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B252 -> B253 falseDestination: B252 -> B254 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B252" 
    successors "B261" 
    xhandlers
    flags 
    probability 4543697352192320117
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4914 
=== Usages ===
=== Predecessor ===
v4912 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4914  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4914 <|@
st <@st|@bench.StringOp.cont(Bench.scala:166) [bci: 256]
stack: a252 
locals: - - 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorexit(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: void
=== Inputs ===
stateAfter: ?247 
stateDuring: - 
arguments: a4042 j4877 
=== Succesors ===
next: v4915 
=== Usages ===
=== Predecessor ===
v4910 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?247 stateDuring: - arguments: a4042 j4877 #next: v4915  <|@  <|@
f <@*|@fixed>@ <|@
tid v4915 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4904 
=== Predecessor ===
v4914 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v285|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10acdcb60:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B253 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B252" 
    successors "B261" 
    xhandlers
    flags 
    probability 4588524058245560454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4911 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4913 
=== Usages ===
=== Predecessor ===
v4912 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4913  <|@  <|@
f <@*|@fixed>@ <|@
tid v4913 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4904 
=== Predecessor ===
v4911 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B254 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B256" "B259" 
    xhandlers
    flags 
    probability 4558551172406818075
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4884 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4927 
=== Usages ===
=== Predecessor ===
v4885 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4927  <|@  <|@
f <@~|@floating>@ <|@
tid v6288 <|@
result [v283|QWORD + 22] <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: j4925 
index: - 
=== Succesors ===
=== Usages ===
j4927 v4931 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4925 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4927 <|@
result v287|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_owner
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6288 
=== Succesors ===
next: j4928 
=== Usages ===
j4887 
=== Predecessor ===
v4884 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6288 #next: j4928  <|@  <|@
f <@~|@floating>@ <|@
tid v6289 <|@
result [v283|QWORD + 38] <|@
d <@d|@=== Debug Properties ===
displacement: 38
scale: Times1
stamp: void*
=== Inputs ===
base: j4925 
index: - 
=== Succesors ===
=== Usages ===
j4928 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4925 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4928 <|@
result v288|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_recursions
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6289 
=== Succesors ===
next: j4886 
=== Usages ===
j4888 
=== Predecessor ===
j4927 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6289 #next: j4886  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4886 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v4892 
=== Usages ===
j4887 
=== Predecessor ===
j4928 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: v4892  <|@  <|@
f <@~|@floating>@ <|@
tid j4887 <|@
result v289|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$95/254966325@645792aa
stamp: i64
=== Inputs ===
x: j4886 
y: j4927 
=== Succesors ===
=== Usages ===
j4888 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j4886 y: j4927  <|@  <|@
f <@~|@floating>@ <|@
tid j4888 <|@
result v290|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$92/1285640437@181e2e71
stamp: i64
=== Inputs ===
x: j4887 
y: j4928 
=== Succesors ===
=== Usages ===
v4889 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j4887 y: j4928  <|@  <|@
f <@~|@floating>@ <|@
tid v4889 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4888 
y: j4022 
=== Succesors ===
=== Usages ===
v4892 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j4888 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v4892 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v4889 
=== Succesors ===
trueSuccessor: v4891 
falseSuccessor: v4890 
=== Usages ===
=== Predecessor ===
j4886 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4889 #trueSuccessor: v4891 #falseSuccessor: v4890  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v287|QWORD = MOV [v283|QWORD + 22] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v288|QWORD = MOV [v283|QWORD + 38] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v289|QWORD = XOR (x: r15|QWORD, y: v287|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v290|QWORD = OR (x: v289|QWORD, y: v288|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v290|QWORD, y: v290|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B255 -> B256 falseDestination: B255 -> B259 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B257" "B258" 
    xhandlers
    flags 
    probability 4558497052915465609
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4891 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j4929 
=== Usages ===
=== Predecessor ===
v4892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j4929  <|@  <|@
f <@~|@floating>@ <|@
tid v6290 <|@
result [v283|QWORD + 54] <|@
d <@d|@=== Debug Properties ===
displacement: 54
scale: Times1
stamp: void*
=== Inputs ===
base: j4925 
index: - 
=== Succesors ===
=== Usages ===
j4929 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4925 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4929 <|@
result v291|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_cxq
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6290 
=== Succesors ===
next: j4930 
=== Usages ===
j4893 
=== Predecessor ===
v4891 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6290 #next: j4930  <|@  <|@
f <@~|@floating>@ <|@
tid v6291 <|@
result [v283|QWORD + 62] <|@
d <@d|@=== Debug Properties ===
displacement: 62
scale: Times1
stamp: void*
=== Inputs ===
base: j4925 
index: - 
=== Succesors ===
=== Usages ===
j4930 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4925 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4930 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ObjectMonitor::_EntryList
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6291 
=== Succesors ===
next: v4900 
=== Usages ===
j4893 
=== Predecessor ===
j4929 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6291 #next: v4900  <|@  <|@
f <@~|@floating>@ <|@
tid j4893 <|@
result v292|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$92/1285640437@181e2e71
stamp: i64
=== Inputs ===
x: j4929 
y: j4930 
=== Succesors ===
=== Usages ===
v4894 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j4929 y: j4930  <|@  <|@
f <@~|@floating>@ <|@
tid v4894 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4893 
y: j4022 
=== Succesors ===
=== Usages ===
v4900 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j4893 y: j4022  <|@  <|@
f <@*|@fixed>@ <|@
tid v4900 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v4894 
=== Succesors ===
trueSuccessor: v4898 
falseSuccessor: v4899 
=== Usages ===
=== Predecessor ===
j4930 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4894 #trueSuccessor: v4898 #falseSuccessor: v4899  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v291|QWORD = MOV [v283|QWORD + 54] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v292|QWORD = OR (x: v291|QWORD, ~y: [v283|QWORD + 62]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v292|QWORD, y: v292|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B256 -> B257 falseDestination: B256 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B261" 
    xhandlers
    flags 
    probability 4557961269951076194
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4901 
=== Usages ===
=== Predecessor ===
v4900 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4901 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v4931 
=== Usages ===
=== Predecessor ===
v4898 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v4931  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4931 <|@
st <@st|@bench.StringOp.cont(Bench.scala:166) [bci: 256]
stack: a252 
locals: - - 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ANY_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6288 
value: j4022 
stateAfter: ?247 
lastLocationAccess: - 
=== Succesors ===
next: v4905 
=== Usages ===
=== Predecessor ===
v4901 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6288 value: j4022 stateAfter: ?247 lastLocationAccess: - #next: v4905  <|@  <|@
f <@*|@fixed>@ <|@
tid v4905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4904 
=== Predecessor ===
v4931 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v283|QWORD + 22], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B257 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B260" 
    xhandlers
    flags 
    probability 4543697352192320115
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4899 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4897 
=== Usages ===
=== Predecessor ===
v4900 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4897  <|@  <|@
f <@*|@fixed>@ <|@
tid v4897 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4896 
=== Predecessor ===
v4899 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B258 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B260" 
    xhandlers
    flags 
    probability 4528541320773093662
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4890 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4895 
=== Usages ===
=== Predecessor ===
v4892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4895  <|@  <|@
f <@*|@fixed>@ <|@
tid v4895 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4896 
=== Predecessor ===
v4890 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B259 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B259" "B258" 
    successors "B261" 
    xhandlers
    flags 
    probability 4544347644035395019
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4896 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4895 v4897 
=== Succesors ===
next: v4902 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4895 v4897 #next: v4902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4902 <|@
st <@st|@bench.StringOp.cont(Bench.scala:166) [bci: 256]
stack: a252 
locals: - - 
locks: 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
locks: 
>@ <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: monitorexit(Object,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: void
=== Inputs ===
stateAfter: ?247 
stateDuring: - 
arguments: a4042 j4877 
=== Succesors ===
next: v4923 
=== Usages ===
=== Predecessor ===
v4896 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: ?247 stateDuring: - arguments: a4042 j4877 #next: v4923  <|@  <|@
f <@*|@fixed>@ <|@
tid v4923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4904 
=== Predecessor ===
v4902 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v285|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10acdcb60:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B260 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B250" "B257" "B254" "B253" "B260" 
    successors "B262" 
    xhandlers
    flags 
    probability 4591711229433017291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4904 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4903 v4905 v4913 v4915 v4923 
=== Succesors ===
next: v4916 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4903 v4905 v4913 v4915 v4923 #next: v4916  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v4934 
=== Usages ===
=== Predecessor ===
v4904 >@ <|@
instruction <@EndLockScope|@org.graalvm.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v4934  <|@  <|@
f <@*|@fixed>@ <|@
tid v4934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4932 
=== Predecessor ===
v4916 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B261 -> B262 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B248" "B261" 
    successors "B263" "B264" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4932 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4933 v4934 
=== Succesors ===
next: j4938 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4933 v4934 #next: j4938  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4938 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j4953 
=== Usages ===
v6293 v6294 
=== Predecessor ===
v4932 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j4953  <|@  <|@
f <@~|@floating>@ <|@
tid v6293 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j4938 
index: - 
=== Succesors ===
=== Usages ===
j4953 v4955 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4938 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4953 <|@
result v293|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6293 
=== Succesors ===
next: j4954 
=== Usages ===
j4999 j4959 v6304 
=== Predecessor ===
j4938 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6293 #next: j4954  <|@  <|@
f <@~|@floating>@ <|@
tid v6294 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j4938 
index: - 
=== Succesors ===
=== Usages ===
j4954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4938 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4954 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6294 
=== Succesors ===
next: v4946 
=== Usages ===
v4943 
=== Predecessor ===
j4953 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6294 #next: v4946  <|@  <|@
f <@~|@floating>@ <|@
tid j4999 <|@
result v294|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/243647971@43f3543e
stamp: i64
=== Inputs ===
x: j4953 
y: j4991 
=== Succesors ===
=== Usages ===
v4943 v4955 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j4953 y: j4991  <|@  <|@
f <@~|@floating>@ <|@
tid v4943 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@59686d9b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j4954 
y: j4999 
=== Succesors ===
=== Usages ===
v4946 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j4954 y: j4999  <|@  <|@
f <@*|@fixed>@ <|@
tid v4946 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@6b4fc8c9 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v4943 
=== Succesors ===
trueSuccessor: v4944 
falseSuccessor: v4945 
=== Usages ===
=== Predecessor ===
j4954 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4943 #trueSuccessor: v4944 #falseSuccessor: v4945  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v293|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v294|QWORD = LEA [v293|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v294|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B262 -> B263 falseDestination: B262 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B262" 
    successors "B265" 
    xhandlers
    flags 
    probability 4576791068796935337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4944 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a4949 
=== Usages ===
=== Predecessor ===
v4946 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a4949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4949 <|@
result v295|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@235766a9
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?247 
arguments: v4361 i3999 i750 
=== Succesors ===
next: j4950 
=== Usages ===
j4950 
=== Predecessor ===
v4944 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?247 arguments: v4361 i3999 i750 #next: j4950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4950 <|@
result v295|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4949 
=== Succesors ===
next: v4960 
=== Usages ===
j4959 
=== Predecessor ===
a4949 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4949 #next: v4960  <|@  <|@
f <@*|@fixed>@ <|@
tid v4960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4957 
=== Predecessor ===
j4950 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.cont(Bench.scala:166) [bci: 256]
stack: vobject:String:0{value=v239|QWORD[.],hash=int[0|0x0]} 
locals: - - 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
vobject:String:0{value=v239|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; v239|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:256, 17] <|@ <|@
      nr   -1  <|@ instruction v295|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v295|QWORD[.]] destination: B263 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B262" 
    successors "B265" 
    xhandlers
    flags 
    probability 4606895645397968717
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4945 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4955 
=== Usages ===
=== Predecessor ===
v4946 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4955  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4955 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6293 
value: j4999 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4952 
=== Usages ===
=== Predecessor ===
v4945 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6293 value: j4999 stateAfter: - lastLocationAccess: - #next: v4952  <|@  <|@
f <@~|@floating>@ <|@
tid v6304 <|@
result [v293|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j4953 
index: - 
=== Succesors ===
=== Usages ===
v4952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4953 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4952 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v6304 
=== Succesors ===
next: v4958 
=== Usages ===
=== Predecessor ===
v4955 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v6304 #next: v4958  <|@  <|@
f <@*|@fixed>@ <|@
tid v4958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v4957 
=== Predecessor ===
v4952 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v294|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v293|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v293|QWORD] destination: B264 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B264" "B263" 
    successors 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j4959 <|@
result v296|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v4957 
values: j4953 j4950 
=== Succesors ===
=== Usages ===
v6297 v6296 a4049 v6305 v6306 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v4957 values: j4953 j4950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v4958 v4960 
=== Succesors ===
next: a4049 
=== Usages ===
j4959 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v4958 v4960 #next: a4049  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4049 <|@
result v297|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j4959 
=== Succesors ===
next: j4970 
=== Usages ===
a4054 
=== Predecessor ===
v4957 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j4959 #next: j4970  <|@  <|@
f <@~|@floating>@ <|@
tid v4965 <|@
result v298|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j4966 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j4966 <|@
result v298|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v4965 
=== Succesors ===
=== Usages ===
v6295 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v4965  <|@  <|@
f <@~|@floating>@ <|@
tid v6295 <|@
result [v298|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j4966 
index: - 
=== Succesors ===
=== Usages ===
j4970 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4966 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j4970 <|@
result v299|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6295 
=== Succesors ===
next: v4971 
=== Usages ===
v4971 
=== Predecessor ===
a4049 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6295 #next: v4971  <|@  <|@
f <@~|@floating>@ <|@
tid v6296 <|@
result [v296|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j4959 
index: - 
=== Succesors ===
=== Usages ===
v4971 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4959 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4971 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6296 
value: j4970 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4974 
=== Usages ===
=== Predecessor ===
j4970 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6296 value: j4970 stateAfter: - lastLocationAccess: - #next: v4974  <|@  <|@
f <@~|@floating>@ <|@
tid v6297 <|@
result [v296|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j4959 
index: - 
=== Succesors ===
=== Usages ===
v4974 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4959 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v5001 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v4974 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4974 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6297 
value: v5001 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4978 
=== Usages ===
=== Predecessor ===
v4971 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6297 value: v5001 stateAfter: - lastLocationAccess: - #next: v4978  <|@  <|@
f <@~|@floating>@ <|@
tid v6305 <|@
result [v296|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j4959 
index: - 
=== Succesors ===
=== Usages ===
v4978 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4959 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4978 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6305 
value: a3617 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v4980 
=== Usages ===
=== Predecessor ===
v4974 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6305 value: a3617 stateAfter: - lastLocationAccess: - #next: v4980  <|@  <|@
f <@~|@floating>@ <|@
tid v6306 <|@
result [v296|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j4959 
index: - 
=== Succesors ===
=== Usages ===
v4980 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j4959 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4980 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6306 
value: i90 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a4054 
=== Usages ===
=== Predecessor ===
v4978 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6306 value: i90 stateAfter: - lastLocationAccess: - #next: a4054  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4054 <|@
result v297|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a4049 
=== Succesors ===
next: v4055 
=== Usages ===
v12 
=== Predecessor ===
v4980 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a4049 #next: v4055  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v4055 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
a4054 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v12  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a4054 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4055 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a4054 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v296|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v297|QWORD[.] = MOVE v296|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v298|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v299|QWORD = MOV [v298|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v296|QWORD[*]], y: v299|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v296|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v296|QWORD[*] + 12], y: v281|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v296|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v297|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B213" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4600278003139642512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5071 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5070 
=== Usages ===
=== Predecessor ===
v5072 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5070  <|@  <|@
f <@*|@fixed>@ <|@
tid v5070 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v5066 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5071 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v5066  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v248|QWORD] destination: B266 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4015 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v4353 
=== Usages ===
=== Predecessor ===
v4016 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4353  <|@  <|@
f <@~|@floating>@ <|@
tid a4350 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4355 <|@
result int[-923667|0xfffffffffff1e7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -923667
stableDimension: 0
stamp: i32 [-923667] ⇊00000000fff1e7ed ⇈00000000fff1e7ed
stampKind: i32
value: int[-923667|0xfffffffffff1e7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v4353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2567 
actionAndReason: i4355 
speculation: a4350 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4015 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2567 actionAndReason: i4355 speculation: a4350  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -923667 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: v26|QWORD[.] - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:61, 35, 7, 248, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B161" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4581516811678253513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5463 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5462 
=== Usages ===
=== Predecessor ===
v5464 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5462  <|@  <|@
f <@*|@fixed>@ <|@
tid v5462 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v5458 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5463 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v5458  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v188|QWORD] destination: B268 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B104" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4581523275715191914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5336 
=== Usages ===
=== Predecessor ===
v5338 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5336  <|@  <|@
f <@*|@fixed>@ <|@
tid v5336 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v5332 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5337 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v5332  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v123|QWORD] destination: B269 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5211 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v5210 
=== Usages ===
=== Predecessor ===
v5212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5210  <|@  <|@
f <@*|@fixed>@ <|@
tid v5210 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v5206 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5211 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v5206  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD] destination: B270 -> B48 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6c0249d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v1|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v1|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE v6|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v8|V256_QWORD = A od: SIMD<27584968630861921,27584968630861922,27584968630861922,27584968630861922> oe: QWORD <|@ <|@
      nr   -1  <|@ instruction J (address: [v6|QWORD[*] + 16], input: v8|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = LEA [v9|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + 344] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + 408] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v9|QWORD + 472] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD + 12] y: 34 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = LEA [v7|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|V256_WORD = H [v15|QWORD[.]] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = LEA [v14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction J (address: [v17|QWORD[.]], input: v16|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = LEA [v14|QWORD[.] + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v18|QWORD[.]], input: v19|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v20|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v18|QWORD[.] + 32], input: v20|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 48] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 50] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 52] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 54] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 56] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 58] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 60] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 62] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 64] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 66] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 68] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 70] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 72] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 74] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 76] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 78] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 80] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD[.] + 82] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA [v21|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE v25|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [v27|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[*]], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v25|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v25|QWORD[*] + 12] y: 34 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[.] = COMPRESSPOINTER (input: v14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[*] + 16], y: v29|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [v26|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = STACKLEA vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [v27|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = OR (x: r15|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = XOR (x: v33|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v34|QWORD y: -121 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B35" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B25" "B27" "B34" "B10" "B16" "B20" "B19" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[35|0x23] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v26|QWORD[.] v14|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:163) [bci: 234]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad state [bci:17, 21, 7, 234, 17] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v42|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = SHL v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = LEA [v45|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = AND v46|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVSXD v47|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = ADD (x: v48|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v48|QWORD + v43|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v48|QWORD + v43|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v48|QWORD + v43|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v48|QWORD + v43|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|QWORD + 12], y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD[.]] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v42|DWORD y: 35 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = CMOVE (falseValue: int[34|0x22], ~trueValue: v42|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVSXD v53|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v54|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = LEA [v52|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = LEA [v14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v54|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v57|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v54|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|V128_WORD = H [v56|QWORD[.] + v61|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v55|QWORD[.] + v61|QWORD * 2], input: v63|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v61|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v54|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|V64_WORD = H [v56|QWORD[.] + v65|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v55|QWORD[.] + v65|QWORD * 2], input: v67|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v65|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v54|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|QWORD, y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|V32_WORD = H [v56|QWORD[.] + v69|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v55|QWORD[.] + v69|QWORD * 2], input: v71|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v69|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = DEC v54|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v73|QWORD, y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVSX [v56|QWORD[.] + v73|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[.] + v73|QWORD * 2], y: v75|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B44" "B61" "B60" 
    successors "B63" "B81" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOVSXD v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v78|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction CMP (x: v76|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B82" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B79" "B78" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[.] = COMPRESSPOINTER (input: v52|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + 16], y: v95|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[*] = SHR v26|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOVE input: long[4270112768|0xfe84c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v96|QWORD[*] + v97|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOV [v26|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v98|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B87" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = DEC v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v98|DWORD, y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B88" "B91" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = MOVSXD v98|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v52|QWORD[.] + v100|QWORD * 2 + 16] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = INC v98|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + 12], y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = LEA [v98|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = SUB (x: v102|DWORD, ~y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v103|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9446261558763105 condition: < trueDestination: B87 -> B88 falseDestination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606514337675950731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|DWORD, y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B144" 
    xhandlers
    flags 
    probability 4606514337675950731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = MOVSXD v101|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v52|QWORD[.] + v104|QWORD * 2 + 16] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v101|DWORD] destination: B90 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" "B90" 
    successors "B145" "B148" 
    xhandlers
    flags 
    probability 4606993447661456006
    begin_IR
      LIR
      nr   -1  <|@ instruction [v161|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v162|DWORD[.] = MOV [v26|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: v26|QWORD[.] - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction v163|DWORD = MOV [v162|DWORD[.] * 8 + 12] size: DWORD state [bci:61, 35, 7, 241, 17] <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = INC v161|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + 12], y: v164|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v165|DWORD = LEA [v161|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = SUB (x: v165|DWORD, ~y: v163|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = UNCOMPRESSPOINTER (input: v162|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v166|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9446261558763105 condition: < trueDestination: B144 -> B145 falseDestination: B144 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4606505148472303541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = DEC v163|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v164|DWORD, y: v168|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B145 -> B146 falseDestination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B201" 
    xhandlers
    flags 
    probability 4606505148472303541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v169|QWORD = MOVSXD v164|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v167|QWORD[.] + v169|QWORD * 2 + 16] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v164|DWORD] destination: B147 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" "B147" 
    successors "B202" "B267" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      LIR
      nr   -1  <|@ instruction [v226|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v227|DWORD[.] = MOV [v26|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v227|DWORD[.], y: v227|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B201 -> B202 falseDestination: B201 -> B267 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B203" "B206" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v228|DWORD[.] = MOV [v26|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: v26|QWORD[.] - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v228|DWORD[.] * 8] state [bci:61, 35, 7, 248, 17] <|@ <|@
      nr   -1  <|@ instruction v229|DWORD = INC v226|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + 12], y: v229|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v230|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v231|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v229|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B202 -> B203 falseDestination: B202 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B204" "B205" 
    xhandlers
    flags 
    probability 4606102879411360327
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v232|DWORD = SHL v229|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v233|DWORD = LEA [v232|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v234|DWORD = AND v233|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v235|QWORD = MOVSXD v234|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v236|QWORD = ADD (x: v235|QWORD, y: v230|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v236|QWORD, y: v231|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B203 -> B204 falseDestination: B203 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B208" 
    xhandlers
    flags 
    probability 4606023602812699488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v236|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v235|QWORD + v230|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v235|QWORD + v230|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v235|QWORD + v230|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v235|QWORD + v230|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v230|QWORD + 12], y: v229|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v230|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v230|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v237|QWORD[.] = MOVE v230|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v237|QWORD[.]] destination: B205 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B205" "B207" 
    successors "B209" "B210" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      LIR
      nr   -1  <|@ instruction [v239|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v240|DWORD = MOV [v228|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v229|DWORD, y: v240|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v241|DWORD = CMOVE (falseValue: v229|DWORD, ~trueValue: v240|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v242|QWORD = MOVSXD v241|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v242|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B208 -> B209 falseDestination: B208 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B211" "B212" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v243|QWORD = LEA [v242|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v244|QWORD[.] = LEA [v239|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v245|QWORD[*] = LEA [v228|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v243|QWORD, y: v243|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B210 -> B211 falseDestination: B210 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B215" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B211 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B211" "B214" 
    successors "B216" "B217" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr   -1  <|@ instruction [v249|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v250|QWORD = LEA [v242|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v249|QWORD, y: v250|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B215 -> B216 falseDestination: B215 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B218" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v251|V128_WORD = H [v245|QWORD[*] + v249|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v244|QWORD[.] + v249|QWORD * 2], input: v251|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v252|QWORD = LEA [v249|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v252|QWORD] destination: B217 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" "B216" 
    successors "B219" "B220" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr   -1  <|@ instruction [v253|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v254|QWORD = LEA [v242|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v253|QWORD, y: v254|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B218 -> B219 falseDestination: B218 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v255|V64_WORD = H [v245|QWORD[*] + v253|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v244|QWORD[.] + v253|QWORD * 2], input: v255|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v256|QWORD = LEA [v253|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v256|QWORD] destination: B220 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" "B219" 
    successors "B222" "B223" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr   -1  <|@ instruction [v257|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v258|QWORD = LEA [v242|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v257|QWORD, y: v258|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B221 -> B222 falseDestination: B221 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v259|V32_WORD = H [v245|QWORD[*] + v257|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v244|QWORD[.] + v257|QWORD * 2], input: v259|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v260|QWORD = LEA [v257|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v260|QWORD] destination: B223 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" "B222" 
    successors "B225" "B226" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr   -1  <|@ instruction [v261|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v262|QWORD = DEC v242|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v261|QWORD, y: v262|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B224 -> B225 falseDestination: B224 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v263|DWORD = MOVSX [v245|QWORD[*] + v261|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v244|QWORD[.] + v261|QWORD * 2], y: v263|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B226 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B209" "B226" "B225" 
    successors "B228" "B246" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v264|QWORD = MOVSXD v229|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v264|QWORD, y: v242|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B227 -> B228 falseDestination: B227 -> B246 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B247" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B246 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B246" "B244" "B243" 
    successors "B248" "B249" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v281|DWORD[.] = COMPRESSPOINTER (input: v239|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + 20], y: v281|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v282|QWORD[*] = SHR v26|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v282|QWORD[*] + v97|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v283|QWORD = MOV [v26|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v284|QWORD = AND v283|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v284|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B247 -> B248 falseDestination: B247 -> B249 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B262" 
    xhandlers
    flags 
    probability 4606102879411360327
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B248 -> B262 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B248" "B261" 
    successors "B263" "B264" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v293|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v294|QWORD = LEA [v293|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v294|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B262 -> B263 falseDestination: B262 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B262" 
    successors "B265" 
    xhandlers
    flags 
    probability 4606895645397968717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v294|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v293|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v293|QWORD] destination: B264 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B264" "B263" 
    successors 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      LIR
      nr   -1  <|@ instruction [v296|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v297|QWORD[.] = MOVE v296|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v298|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v299|QWORD = MOV [v298|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v296|QWORD[*]], y: v299|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v296|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v296|QWORD[*] + 12], y: v281|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v296|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v297|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B62" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = LEA [v52|QWORD[.] + v54|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = SUB (x: v76|QWORD, ~y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = LEA [v80|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|QWORD, y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B64 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" "B67" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = LEA [v80|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v84|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v79|QWORD[.] + v84|QWORD * 2], input: v78|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v84|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|QWORD] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = LEA [v80|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v79|QWORD[.] + v87|QWORD * 2], input: v77|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = LEA [v87|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v89|QWORD] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = LEA [v80|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v90|QWORD, y: v91|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v79|QWORD[.] + v90|QWORD * 2], input: v20|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA [v90|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|QWORD] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = DEC v80|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v93|QWORD, y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD[.] + v93|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B229" "B230" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v265|QWORD[.] = LEA [v239|QWORD[.] + v242|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v266|QWORD = SUB (x: v264|QWORD, ~y: v242|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v267|QWORD = LEA [v266|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v267|QWORD, y: v267|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B228 -> B229 falseDestination: B228 -> B230 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B233" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B229 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B229" "B232" 
    successors "B234" "B235" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr   -1  <|@ instruction [v270|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v271|QWORD = LEA [v266|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v270|QWORD, y: v271|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B233 -> B234 falseDestination: B233 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B233" 
    successors "B236" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v265|QWORD[.] + v270|QWORD * 2], input: v78|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v272|QWORD = LEA [v270|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v272|QWORD] destination: B235 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B235" "B234" 
    successors "B237" "B238" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr   -1  <|@ instruction [v273|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v274|QWORD = LEA [v266|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v273|QWORD, y: v274|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B236 -> B237 falseDestination: B236 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B236" 
    successors "B239" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v265|QWORD[.] + v273|QWORD * 2], input: v77|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v275|QWORD = LEA [v273|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v275|QWORD] destination: B238 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" "B237" 
    successors "B240" "B241" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr   -1  <|@ instruction [v276|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v277|QWORD = LEA [v266|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v276|QWORD, y: v277|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B239 -> B240 falseDestination: B239 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B239" 
    successors "B242" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v265|QWORD[.] + v276|QWORD * 2], input: v20|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v278|QWORD = LEA [v276|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v278|QWORD] destination: B241 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B241" "B240" 
    successors "B243" "B244" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr   -1  <|@ instruction [v279|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v280|QWORD = DEC v266|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v279|QWORD, y: v280|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B242 -> B243 falseDestination: B242 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B247" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v265|QWORD[.] + v279|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B244 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B227" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B209 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B66" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD] destination: B80 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B80" 
    successors "B67" "B80" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v79|QWORD[.] + v82|QWORD * 2], input: v19|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA [v82|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|QWORD, y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B78 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD] destination: B270 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B270" 
    successors "B49" "B270" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|V256_WORD = H [v56|QWORD[.] + v58|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v55|QWORD[.] + v58|QWORD * 2], input: v59|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v58|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v90|QWORD] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B247" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B243 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v257|QWORD] destination: B222 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B225 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B236" 
    successors "B239" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v273|QWORD] destination: B237 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B218" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v249|QWORD] destination: B216 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v253|QWORD] destination: B219 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B213" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B212 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B213" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4600278003139642512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v248|QWORD] destination: B266 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" "B266" 
    successors "B214" "B266" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4602480130880221376
    begin_IR
      LIR
      nr   -1  <|@ instruction [v246|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v247|V256_WORD = H [v245|QWORD[*] + v246|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v244|QWORD[.] + v246|QWORD * 2], input: v247|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v248|QWORD = LEA [v246|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v248|QWORD, y: v243|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B213 -> B214 falseDestination: B213 -> B266 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B231" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B230 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B231" 
    successors "B231" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4600278003139642512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v269|QWORD] destination: B245 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B230" "B245" 
    successors "B232" "B245" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4602480130880221376
    begin_IR
      LIR
      nr   -1  <|@ instruction [v268|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v265|QWORD[.] + v268|QWORD * 2], input: v19|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v269|QWORD = LEA [v268|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v269|QWORD, y: v267|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B231 -> B232 falseDestination: B231 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B239" 
    successors "B242" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v276|QWORD] destination: B240 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B215" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v248|QWORD] destination: B214 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B231" 
    successors "B233" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v269|QWORD] destination: B232 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B233" 
    successors "B236" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v270|QWORD] destination: B234 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B39" 
    successors "B43" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v306|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v306|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v42|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v26|QWORD[.] v14|QWORD[.] v42|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:163) [bci: 234]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 7, 234, 17] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B250" "B251" 
    xhandlers
    flags 
    probability 4591711229433017291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v285|QWORD = STACKLEA vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v286|QWORD = MOV [v285|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v286|QWORD, y: v286|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B249 -> B250 falseDestination: B249 -> B251 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B252" "B255" 
    xhandlers
    flags 
    probability 4588616991559617267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v283|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B251 -> B252 falseDestination: B251 -> B255 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B253" "B254" 
    xhandlers
    flags 
    probability 4588532429854379039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v285|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v26|QWORD[.]], cmpValue: rax|QWORD, newValue: v286|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B252 -> B253 falseDestination: B252 -> B254 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B252" 
    successors "B261" 
    xhandlers
    flags 
    probability 4588524058245560454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B254 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B250" "B257" "B254" "B253" "B260" 
    successors "B262" 
    xhandlers
    flags 
    probability 4591711229433017291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B261 -> B262 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B207" 
    xhandlers
    flags 
    probability 4591711229433017291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B206 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" "B204" 
    successors "B208" 
    xhandlers
    flags 
    probability 4592345442222304004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v303|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v303|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v229|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: v26|QWORD[.] - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 7, 248, 17] <|@ <|@
      nr   -1  <|@ instruction v238|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v238|QWORD[.]] destination: B207 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v26|QWORD[.] v52|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad state [bci:17, 21, 7, 241, 17] <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v105|DWORD, y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B97" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v105|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B93 -> B94 falseDestination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4587200086203916006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = SHL v105|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = LEA [v108|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = AND v109|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVSXD v110|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = ADD (x: v111|QWORD, y: v106|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v112|QWORD, y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B99" 
    xhandlers
    flags 
    probability 4587129693552234790
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v112|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v111|QWORD + v106|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v111|QWORD + v106|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v111|QWORD + v106|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v111|QWORD + v106|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v106|QWORD + 12], y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v106|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v106|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE v106|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|QWORD[.]] destination: B96 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B96" "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v105|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = CMOVE (falseValue: v105|DWORD, ~trueValue: v42|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOVSXD v116|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v117|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = LEA [v115|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = LEA [v52|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = LEA [v117|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v120|QWORD, y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B106" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B102 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B102" "B105" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr   -1  <|@ instruction [v124|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = LEA [v117|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v124|QWORD, y: v125|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v126|V128_WORD = H [v119|QWORD[.] + v124|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v124|QWORD * 2], input: v126|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = LEA [v124|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v127|QWORD] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" "B107" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr   -1  <|@ instruction [v128|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD = LEA [v117|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v128|QWORD, y: v129|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v130|V64_WORD = H [v119|QWORD[.] + v128|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v128|QWORD * 2], input: v130|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = LEA [v128|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v131|QWORD] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr   -1  <|@ instruction [v132|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = LEA [v117|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v132|QWORD, y: v133|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v134|V32_WORD = H [v119|QWORD[.] + v132|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v132|QWORD * 2], input: v134|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = LEA [v132|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v135|QWORD] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr   -1  <|@ instruction [v136|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v137|QWORD = DEC v117|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v136|QWORD, y: v137|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVSX [v119|QWORD[.] + v136|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v118|QWORD[.] + v136|QWORD * 2], y: v138|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B100" "B117" "B116" 
    successors "B119" "B137" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = MOVSXD v105|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v139|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B118 -> B119 falseDestination: B118 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B138" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" "B135" "B134" 
    successors "B139" "B140" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|DWORD[.] = COMPRESSPOINTER (input: v115|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + 16], y: v156|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[*] = SHR v26|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v157|QWORD[*] + v97|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = MOV [v26|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v158|DWORD, y: v158|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B138 -> B139 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" "B143" 
    xhandlers
    flags 
    probability 4587904012720728163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = DEC v105|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v158|DWORD, y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B140 -> B141 falseDestination: B140 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B144" 
    xhandlers
    flags 
    probability 4587826580803878826
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = MOVSXD v158|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v115|QWORD[.] + v160|QWORD * 2 + 16] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v158|DWORD] destination: B143 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4587973608062233869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v165|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v26|QWORD[.] v167|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad state [bci:17, 21, 7, 248, 17] <|@ <|@
      nr   -1  <|@ instruction v170|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v170|DWORD, y: v170|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" "B154" 
    xhandlers
    flags 
    probability 4587973608062233869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v170|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B150 -> B151 falseDestination: B150 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" "B153" 
    xhandlers
    flags 
    probability 4587192329359589925
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = SHL v170|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = LEA [v173|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = AND v174|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v176|QWORD = MOVSXD v175|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v177|QWORD = ADD (x: v176|QWORD, y: v171|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v177|QWORD, y: v172|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B151 -> B152 falseDestination: B151 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B156" 
    xhandlers
    flags 
    probability 4587122014276351970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v177|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v176|QWORD + v171|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v176|QWORD + v171|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v176|QWORD + v171|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v176|QWORD + v171|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v171|QWORD + 12], y: v170|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v171|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v171|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE v171|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v178|QWORD[.]] destination: B153 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B153" "B155" 
    successors "B157" "B158" 
    xhandlers
    flags 
    probability 4587973608062233868
    begin_IR
      LIR
      nr   -1  <|@ instruction [v180|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v170|DWORD, y: v163|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v181|DWORD = CMOVE (falseValue: v170|DWORD, ~trueValue: v163|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v182|QWORD = MOVSXD v181|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v182|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B156 -> B157 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" "B160" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v183|QWORD[.] = LEA [v180|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v184|QWORD[*] = LEA [v162|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v185|QWORD = LEA [v182|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v185|QWORD, y: v185|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B158 -> B159 falseDestination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B163" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B159 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B159" "B162" 
    successors "B164" "B165" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr   -1  <|@ instruction [v189|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v190|QWORD = LEA [v182|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v189|QWORD, y: v190|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B163 -> B164 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v191|V128_WORD = H [v184|QWORD[*] + v189|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v183|QWORD[.] + v189|QWORD * 2], input: v191|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v192|QWORD = LEA [v189|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v192|QWORD] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B164" 
    successors "B167" "B168" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr   -1  <|@ instruction [v193|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v194|QWORD = LEA [v182|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v193|QWORD, y: v194|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B167 falseDestination: B166 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B169" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v195|V64_WORD = H [v184|QWORD[*] + v193|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v183|QWORD[.] + v193|QWORD * 2], input: v195|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v196|QWORD = LEA [v193|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v196|QWORD] destination: B168 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" "B167" 
    successors "B170" "B171" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr   -1  <|@ instruction [v197|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v198|QWORD = LEA [v182|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v197|QWORD, y: v198|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B169 -> B170 falseDestination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v199|V32_WORD = H [v184|QWORD[*] + v197|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v183|QWORD[.] + v197|QWORD * 2], input: v199|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v200|QWORD = LEA [v197|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v200|QWORD] destination: B171 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" "B170" 
    successors "B173" "B174" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr   -1  <|@ instruction [v201|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v202|QWORD = DEC v182|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v201|QWORD, y: v202|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B172 -> B173 falseDestination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v203|DWORD = MOVSX [v184|QWORD[*] + v201|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v183|QWORD[.] + v201|QWORD * 2], y: v203|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B174 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B157" "B174" "B173" 
    successors "B176" "B194" 
    xhandlers
    flags 
    probability 4587973608062233868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v204|QWORD = MOVSXD v170|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v204|QWORD, y: v182|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B175 -> B176 falseDestination: B175 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B195" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B194 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" "B192" "B191" 
    successors "B196" "B197" 
    xhandlers
    flags 
    probability 4587973608062233868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v221|DWORD[.] = COMPRESSPOINTER (input: v180|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + 16], y: v221|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v222|QWORD[*] = SHR v26|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v222|QWORD[*] + v97|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v223|DWORD = MOV [v26|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v223|DWORD, y: v223|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B195 -> B196 falseDestination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B198" "B200" 
    xhandlers
    flags 
    probability 4587895480191969474
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v224|DWORD = DEC v170|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v223|DWORD, y: v224|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B197 -> B198 falseDestination: B197 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B201" 
    xhandlers
    flags 
    probability 4587818133600407724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v225|QWORD = MOVSXD v223|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v180|QWORD[.] + v225|QWORD * 2 + 16] y: 98 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v223|DWORD] destination: B200 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B261" 
    xhandlers
    flags 
    probability 4585798268051676323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B250 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = LEA [v115|QWORD[.] + v117|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = SUB (x: v139|QWORD, ~y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = LEA [v141|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v142|QWORD, y: v142|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B124" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B120 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B120" "B123" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr   -1  <|@ instruction [v145|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = LEA [v141|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v145|QWORD, y: v146|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B124 -> B125 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v140|QWORD[.] + v145|QWORD * 2], input: v78|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v147|QWORD = LEA [v145|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v147|QWORD] destination: B126 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr   -1  <|@ instruction [v148|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = LEA [v141|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v148|QWORD, y: v149|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v140|QWORD[.] + v148|QWORD * 2], input: v77|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v150|QWORD = LEA [v148|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v150|QWORD] destination: B129 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr   -1  <|@ instruction [v151|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = LEA [v141|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v151|QWORD, y: v152|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B130 -> B131 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v140|QWORD[.] + v151|QWORD * 2], input: v20|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = LEA [v151|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v153|QWORD] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B131" 
    successors "B134" "B135" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr   -1  <|@ instruction [v154|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = DEC v141|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|QWORD, y: v155|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B133 -> B134 falseDestination: B133 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B138" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v140|QWORD[.] + v154|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B118" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B175" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B157 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B177" "B178" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v205|QWORD[.] = LEA [v180|QWORD[.] + v182|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v206|QWORD = SUB (x: v204|QWORD, ~y: v182|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v207|QWORD = LEA [v206|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v207|QWORD, y: v207|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B176 -> B177 falseDestination: B176 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B181" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B177 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B177" "B180" 
    successors "B182" "B183" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr   -1  <|@ instruction [v210|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v211|QWORD = LEA [v206|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v210|QWORD, y: v211|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B181 -> B182 falseDestination: B181 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B184" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v205|QWORD[.] + v210|QWORD * 2], input: v78|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v212|QWORD = LEA [v210|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v212|QWORD] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" "B182" 
    successors "B185" "B186" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr   -1  <|@ instruction [v213|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v214|QWORD = LEA [v206|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v213|QWORD, y: v214|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B184 -> B185 falseDestination: B184 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B187" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v205|QWORD[.] + v213|QWORD * 2], input: v77|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v215|QWORD = LEA [v213|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v215|QWORD] destination: B186 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" "B185" 
    successors "B188" "B189" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr   -1  <|@ instruction [v216|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v217|QWORD = LEA [v206|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v216|QWORD, y: v217|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B187 -> B188 falseDestination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v205|QWORD[.] + v216|QWORD * 2], input: v20|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v218|QWORD = LEA [v216|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v218|QWORD] destination: B189 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr   -1  <|@ instruction [v219|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v220|QWORD = DEC v206|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v219|QWORD, y: v220|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B195" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v205|QWORD[.] + v219|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B192 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v307|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v307|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[34|0x22] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:124) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD[.]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v302|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v302|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:124) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v301|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v301|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]}, vstack:0|QWORD, eliminated] 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} Ljava/lang/StringBuffer; int[33|0x21] v14|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 7, 227, 17] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B86" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B83" "B85" 
    successors 
    xhandlers
    flags 
    probability 4581393005893843005
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -910945 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:163) [bci: 234]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 7, 234, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = AND v30|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v35|QWORD y: 5 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B29" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v30|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = OR v30|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v26|QWORD[.]], cmpValue: rax|QWORD, newValue: v31|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B35" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B262" 
    successors "B265" 
    xhandlers
    flags 
    probability 4576791068796935337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v300|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v300|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.cont(Bench.scala:166) [bci: 256]
stack: vobject:String:0{value=v239|QWORD[.],hash=int[0|0x0]} 
locals: - - 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
vobject:String:0{value=v239|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; v239|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:256, 17] <|@ <|@
      nr   -1  <|@ instruction v295|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v295|QWORD[.]] destination: B263 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B207" 
    xhandlers
    flags 
    probability 4576227324095347148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B204 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v132|QWORD] destination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v128|QWORD] destination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B104" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4581523275715191914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v123|QWORD] destination: B269 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B269" 
    successors "B105" "B269" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4583478627150781240
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|V256_WORD = H [v119|QWORD[.] + v121|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v118|QWORD[.] + v121|QWORD * 2], input: v122|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = LEA [v121|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v123|QWORD, y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B104 -> B105 falseDestination: B104 -> B269 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|QWORD] destination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v145|QWORD] destination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v151|QWORD] destination: B131 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v148|QWORD] destination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B122" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4581523275715191914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v144|QWORD] destination: B136 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B136" 
    successors "B123" "B136" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4583478627150781240
    begin_IR
      LIR
      nr   -1  <|@ instruction [v143|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v140|QWORD[.] + v143|QWORD * 2], input: v19|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = LEA [v143|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|QWORD, y: v142|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B122 -> B123 falseDestination: B122 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v123|QWORD] destination: B105 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B138" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B134 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v144|QWORD] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B195" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B191 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v216|QWORD] destination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B179" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B178 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B179" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4581516811678253513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v209|QWORD] destination: B193 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" "B193" 
    successors "B180" "B193" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4583470008434863372
    begin_IR
      LIR
      nr   -1  <|@ instruction [v208|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v205|QWORD[.] + v208|QWORD * 2], input: v19|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v209|QWORD = LEA [v208|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v209|QWORD, y: v207|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B179 -> B180 falseDestination: B179 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B169" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v193|QWORD] destination: B167 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B181" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v209|QWORD] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B173 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v197|QWORD] destination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B161" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B160 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B161" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4581516811678253513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v188|QWORD] destination: B268 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" "B268" 
    successors "B162" "B268" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4583470008434863372
    begin_IR
      LIR
      nr   -1  <|@ instruction [v186|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v187|V256_WORD = H [v184|QWORD[*] + v186|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v183|QWORD[.] + v186|QWORD * 2], input: v187|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v188|QWORD = LEA [v186|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v188|QWORD, y: v185|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B161 -> B162 falseDestination: B161 -> B268 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B184" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v210|QWORD] destination: B182 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B187" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v213|QWORD] destination: B185 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B163" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v188|QWORD] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v189|QWORD] destination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B98" 
    xhandlers
    flags 
    probability 4572907146747568786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B95" 
    successors "B99" 
    xhandlers
    flags 
    probability 4573470287961018512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v305|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v305|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v105|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v26|QWORD[.] v52|QWORD[.] v105|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 7, 241, 17] <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v114|QWORD[.]] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B155" 
    xhandlers
    flags 
    probability 4572900251774834492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" "B152" 
    successors "B156" 
    xhandlers
    flags 
    probability 4573462772440738132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v304|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v304|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v170|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v26|QWORD[.] v167|QWORD[.] v170|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 7, 248, 17] <|@ <|@
      nr   -1  <|@ instruction v179|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v179|QWORD[.]] destination: B155 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B21" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v34|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v34|QWORD y: 768 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = AND v30|QWORD y: 895 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = OR (x: r15|QWORD, y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v26|QWORD[.]], cmpValue: rax|QWORD, newValue: v37|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B35" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B256" "B259" 
    xhandlers
    flags 
    probability 4558551172406818075
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v287|QWORD = MOV [v283|QWORD + 22] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v288|QWORD = MOV [v283|QWORD + 38] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v289|QWORD = XOR (x: r15|QWORD, y: v287|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v290|QWORD = OR (x: v289|QWORD, y: v288|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v290|QWORD, y: v290|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B255 -> B256 falseDestination: B255 -> B259 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B257" "B258" 
    xhandlers
    flags 
    probability 4558497052915465609
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v291|QWORD = MOV [v283|QWORD + 54] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v292|QWORD = OR (x: v291|QWORD, ~y: [v283|QWORD + 62]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v292|QWORD, y: v292|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B256 -> B257 falseDestination: B256 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B261" 
    xhandlers
    flags 
    probability 4557961269951076194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v283|QWORD + 22], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B257 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B142" 
    xhandlers
    flags 
    probability 4558144922946680135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B139 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B139" "B141" 
    successors 
    xhandlers
    flags 
    probability 4562623494075675088
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -977249 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 7, 241, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B199" 
    xhandlers
    flags 
    probability 4558139406968492699
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B196 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B196" "B198" 
    successors 
    xhandlers
    flags 
    probability 4562618005677378589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -949345 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 7, 248, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" 
    xhandlers
    flags 
    probability 4558094865949929048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B199" 
    xhandlers
    flags 
    probability 4558089405131523487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B198 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B98" 
    xhandlers
    flags 
    probability 4557644352979169267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B155" 
    xhandlers
    flags 
    probability 4557635954298659199
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B152 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v26|QWORD[.]], cmpValue: rax|QWORD, newValue: v32|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v30|QWORD + 22] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v30|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = SUB (x: v40|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v41|QWORD y: -4089 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v26|QWORD[.]], cmpValue: rax|QWORD, newValue: v33|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B17 -> B18 falseDestination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B35" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B252" 
    successors "B261" 
    xhandlers
    flags 
    probability 4543697352192320117
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v285|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10acdcb60:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B253 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B260" 
    xhandlers
    flags 
    probability 4543697352192320115
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B258 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B259" "B258" 
    successors "B261" 
    xhandlers
    flags 
    probability 4544347644035395019
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v285|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10acdcb60:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B260 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4531489317381612709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B28" "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]}, vstack:0|QWORD, eliminated] 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} Ljava/lang/StringBuffer; int[33|0x21] v14|QWORD[.] Object[null] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x10acd9b20:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:61, 35, 7, 227, 17] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4530952148194186286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B260" 
    xhandlers
    flags 
    probability 4528541320773093662
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B259 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4516611986926701044
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4515753460700115334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B35" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]}, vstack:0|QWORD, eliminated] 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
vobject:StringBuffer:0{count=int[33|0x21],value=v14|QWORD[.],toStringCache=Object[null]} Ljava/lang/StringBuffer; int[33|0x21] v14|QWORD[.] Object[null] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x10acd9b20:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:61, 35, 7, 227, 17] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4501392635851087307
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -934753 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5]
locals: v26|QWORD[.] Object[String:"b"] 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:5, 248, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -962657 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5]
locals: v26|QWORD[.] Object[String:"b"] 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:5, 241, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -1065569 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v26|QWORD[.] v14|QWORD[.] v42|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:163) [bci: 234]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:20, 21, 7, 234, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -923667 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: v26|QWORD[.] - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:61, 35, 7, 248, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -1085537 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v26|QWORD[.] v167|QWORD[.] v170|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:20, 21, 7, 248, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -1075553 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v26|QWORD[.] v52|QWORD[.] v105|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v26|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: v26|QWORD[.] - 
locks: monitor[v26|QWORD[.], vstack:0|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - v26|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:20, 21, 7, 241, 17] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #13         // java.lang.StringBuffer
     3: dup           
     4: invokespecial #0          // java.lang.StringBuffer.<init>:()void
     7: astore_1      
     8: aload_1       
     9: ldc           #19         // "a"
    11: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    14: pop           
    15: aload_0       
    16: aload_1       
    17: invokevirtual #2          // cont:(java.lang.StringBuffer)java.lang.String
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6c0249d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   12  <|@ instruction r10|QWORD = LEA [rsi|QWORD + 48] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 240] instr: 0 <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction MOV [rsi|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr   48  <|@ instruction MOV [rsi|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   52  <|@ instruction xmm0|V256_QWORD = A od: SIMD<27584968630861921,27584968630861922,27584968630861922,27584968630861922> oe: QWORD <|@ <|@
      nr   54  <|@ instruction J (address: [rsi|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 88] size: QWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   82  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   84  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 344] instr: 0 <|@ <|@
      nr   86  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 408] instr: 0 <|@ <|@
      nr   88  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 472] instr: 0 <|@ <|@
      nr   90  <|@ instruction MOV [rsi|QWORD + 12] y: 34 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   96  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  106  <|@ instruction xmm0|V256_WORD = H [rsi|QWORD[.]] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction J (address: [rsi|QWORD[.]], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = LEA [r10|QWORD[.] + 48] size: QWORD <|@ <|@
      nr  114  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  116  <|@ instruction J (address: [rsi|QWORD[.]], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  118  <|@ instruction xmm1|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  120  <|@ instruction J (address: [rsi|QWORD[.] + 32], input: xmm1|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  122  <|@ instruction MOV [r10|QWORD[.] + 48] y: 98 size: WORD <|@ <|@
      nr  124  <|@ instruction MOV [r10|QWORD[.] + 50] y: 98 size: WORD <|@ <|@
      nr  126  <|@ instruction MOV [r10|QWORD[.] + 52] y: 98 size: WORD <|@ <|@
      nr  128  <|@ instruction MOV [r10|QWORD[.] + 54] y: 98 size: WORD <|@ <|@
      nr  130  <|@ instruction MOV [r10|QWORD[.] + 56] y: 98 size: WORD <|@ <|@
      nr  132  <|@ instruction MOV [r10|QWORD[.] + 58] y: 98 size: WORD <|@ <|@
      nr  134  <|@ instruction MOV [r10|QWORD[.] + 60] y: 98 size: WORD <|@ <|@
      nr  136  <|@ instruction MOV [r10|QWORD[.] + 62] y: 98 size: WORD <|@ <|@
      nr  138  <|@ instruction MOV [r10|QWORD[.] + 64] y: 98 size: WORD <|@ <|@
      nr  140  <|@ instruction MOV [r10|QWORD[.] + 66] y: 98 size: WORD <|@ <|@
      nr  142  <|@ instruction MOV [r10|QWORD[.] + 68] y: 98 size: WORD <|@ <|@
      nr  144  <|@ instruction MOV [r10|QWORD[.] + 70] y: 98 size: WORD <|@ <|@
      nr  146  <|@ instruction MOV [r10|QWORD[.] + 72] y: 98 size: WORD <|@ <|@
      nr  148  <|@ instruction MOV [r10|QWORD[.] + 74] y: 98 size: WORD <|@ <|@
      nr  150  <|@ instruction MOV [r10|QWORD[.] + 76] y: 98 size: WORD <|@ <|@
      nr  152  <|@ instruction MOV [r10|QWORD[.] + 78] y: 98 size: WORD <|@ <|@
      nr  154  <|@ instruction MOV [r10|QWORD[.] + 80] y: 98 size: WORD <|@ <|@
      nr  156  <|@ instruction MOV [r10|QWORD[.] + 82] y: 98 size: WORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  160  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  162  <|@ instruction r11|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  164  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  202  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction stack:40|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>} <|@ <|@
      nr  208  <|@ instruction r8|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD[*] + 12] y: 34 size: DWORD <|@ <|@
      nr  216  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr  218  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  222  <|@ instruction r8|QWORD = MOV [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  224  <|@ instruction r9|QWORD = STACKLEA stack:32|QWORD <|@ <|@
      nr  226  <|@ instruction rcx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  228  <|@ instruction rbx|QWORD = OR (x: r15|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = XOR (x: rbx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction TEST rdi|QWORD y: -121 size: QWORD <|@ <|@
      nr  234  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B35" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B10 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B25" "B27" "B34" "B10" "B16" "B20" "B19" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|DWORD = MOVE input: int[35|0x23] <|@ <|@
      nr  454  <|@ st <@st|@reference-map: [stack:64, stack:72]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:40|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: stack:40|QWORD[.] - 
locks: monitor[stack:40|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:163) [bci: 234]
locals: - stack:40|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad state [bci:17, 21, 7, 234, 17] <|@ <|@
      nr  456  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  476  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  478  <|@ instruction CMP rax|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  480  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  486  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr  488  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  490  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  492  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  508  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  510  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  512  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  514  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  518  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  548  <|@ instruction CMP r13|DWORD y: 35 size: DWORD <|@ <|@
      nr  550  <|@ instruction rsi|DWORD = CMOVE (falseValue: int[34|0x22], ~trueValue: r13|DWORD) condition: < <|@ <|@
      nr  552  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  554  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr  556  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  568  <|@ instruction rcx|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  570  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  572  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B50" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  606  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  608  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  620  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  622  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  624  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  630  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  632  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  644  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  646  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  654  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  656  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  666  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  668  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  670  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  672  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  678  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  680  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[.] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B44" "B61" "B60" 
    successors "B63" "B81" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  700  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  702  <|@ instruction xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  704  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B82" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction xmm3|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  852  <|@ instruction xmm2|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B79" "B78" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  858  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr  860  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  862  <|@ instruction rsi|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  864  <|@ instruction r14|QWORD = MOVE input: long[4270112768|0xfe84c000] <|@ <|@
      nr  866  <|@ instruction MOVB (x: [rsi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  868  <|@ instruction rsi|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  870  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B87" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  880  <|@ instruction rdx|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr  882  <|@ instruction CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B88" "B91" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction rcx|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  902  <|@ instruction MOV [rax|QWORD[.] + rcx|QWORD * 2 + 16] y: 98 size: WORD <|@ <|@
      nr  904  <|@ instruction rcx|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr  906  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  910  <|@ instruction r10|DWORD = LEA [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  912  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  914  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  916  <|@ instruction BRANCH trueDestinationProbability: 0.9446261558763105 condition: < trueDestination: B87 -> B88 falseDestination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606514337675950731
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  920  <|@ instruction CMP (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  922  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B144" 
    xhandlers
    flags 
    probability 4606514337675950731
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV [rax|QWORD[.] + rsi|QWORD * 2 + 16] y: 98 size: WORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B90 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" "B90" 
    successors "B145" "B148" 
    xhandlers
    flags 
    probability 4606993447661456006
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1436  <|@ instruction r10|DWORD[.] = MOV [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1438  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:72]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: r11|QWORD[.] - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: r11|QWORD[.] - 
locks: monitor[r11|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - r11|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:61, 35, 7, 241, 17] <|@ <|@
      nr 1440  <|@ instruction rsi|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr 1442  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1444  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1446  <|@ instruction r9|DWORD = LEA [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr 1448  <|@ instruction rdx|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr 1450  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr 1452  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr 1454  <|@ instruction BRANCH trueDestinationProbability: 0.9446261558763105 condition: < trueDestination: B144 -> B145 falseDestination: B144 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4606505148472303541
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1458  <|@ instruction r8|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr 1460  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B145 -> B146 falseDestination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B201" 
    xhandlers
    flags 
    probability 4606505148472303541
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1476  <|@ instruction rdx|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1478  <|@ instruction MOV [rcx|QWORD[.] + rdx|QWORD * 2 + 16] y: 98 size: WORD <|@ <|@
      nr 1480  <|@ instruction JUMP ~[] destination: B147 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" "B147" 
    successors "B202" "B267" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      LIR
      nr 1974  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1976  <|@ instruction rdx|DWORD[.] = MOV [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1978  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1980  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B201 -> B202 falseDestination: B201 -> B267 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B203" "B206" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      LIR
      nr 1982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1984  <|@ instruction r13|DWORD[.] = MOV [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1986  <|@ st <@st|@reference-map: [r11:0, r13:0, stack:72]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: r11|QWORD[.] - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: r11|QWORD[.] - 
locks: monitor[r11|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - r11|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:61, 35, 7, 248, 17] <|@ <|@
      nr 1988  <|@ instruction rsi|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1992  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1994  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1996  <|@ instruction CMP rsi|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1998  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B202 -> B203 falseDestination: B202 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B204" "B205" 
    xhandlers
    flags 
    probability 4606102879411360327
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2002  <|@ instruction r10|DWORD = SHL rsi|DWORD size: DWORD <|@ <|@
      nr 2004  <|@ instruction r10|DWORD = LEA [r10|DWORD + 23] size: DWORD <|@ <|@
      nr 2006  <|@ instruction r10|DWORD = AND r10|DWORD y: -8 size: DWORD <|@ <|@
      nr 2008  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 2010  <|@ instruction r8|QWORD = ADD (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2012  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2014  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B203 -> B204 falseDestination: B203 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B208" 
    xhandlers
    flags 
    probability 4606023602812699488
    begin_IR
      LIR
      nr 2020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2022  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr 2024  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 2026  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 2028  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 2030  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 2032  <|@ instruction MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2034  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 2036  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 2038  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 2040  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2042  <|@ instruction r14|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 2044  <|@ instruction JUMP ~[] destination: B205 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B205" "B207" 
    successors "B209" "B210" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      LIR
      nr 2068  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2070  <|@ instruction rsi|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2072  <|@ instruction CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2074  <|@ instruction rdx|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr 2076  <|@ instruction rsi|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 2078  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 2080  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B208 -> B209 falseDestination: B208 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B211" "B212" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2088  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 2090  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2092  <|@ instruction r11|QWORD[*] = LEA [r13|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 2094  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2096  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B210 -> B211 falseDestination: B210 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B215" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr 2098  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2100  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2102  <|@ instruction JUMP ~[] destination: B211 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B211" "B214" 
    successors "B216" "B217" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2126  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2128  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 2130  <|@ instruction CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2132  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B215 -> B216 falseDestination: B215 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B218" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr 2138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2140  <|@ instruction xmm0|V128_WORD = H [r11|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2142  <|@ instruction J (address: [r10|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2144  <|@ instruction rdx|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr 2146  <|@ instruction r8|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 2148  <|@ instruction JUMP ~[] destination: B217 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" "B216" 
    successors "B219" "B220" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2150  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2152  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 2154  <|@ instruction CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2156  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B218 -> B219 falseDestination: B218 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr 2162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2164  <|@ instruction xmm0|V64_WORD = H [r11|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 2166  <|@ instruction J (address: [r10|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2168  <|@ instruction rdx|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr 2170  <|@ instruction r8|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 2172  <|@ instruction JUMP ~[] destination: B220 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" "B219" 
    successors "B222" "B223" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2174  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2176  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 2178  <|@ instruction CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2180  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B221 -> B222 falseDestination: B221 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr 2186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2188  <|@ instruction xmm0|V32_WORD = H [r11|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 2190  <|@ instruction J (address: [r10|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2192  <|@ instruction rdx|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr 2194  <|@ instruction r8|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 2196  <|@ instruction JUMP ~[] destination: B223 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" "B222" 
    successors "B225" "B226" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2198  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2200  <|@ instruction rdx|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 2202  <|@ instruction CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2204  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B224 -> B225 falseDestination: B224 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr 2210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2212  <|@ instruction rdx|DWORD = MOVSX [r11|QWORD[*] + r8|QWORD * 2] size: DWORD <|@ <|@
      nr 2214  <|@ instruction MOV (x: [r10|QWORD[.] + r8|QWORD * 2], y: rdx|DWORD) size: WORD <|@ <|@
      nr 2216  <|@ instruction JUMP ~[] destination: B226 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B209" "B226" "B225" 
    successors "B228" "B246" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      LIR
      nr 2218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2220  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr 2222  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2224  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B227 -> B228 falseDestination: B227 -> B246 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B247" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2370  <|@ instruction r14|QWORD = MOVE input: long[4270112768|0xfe84c000] <|@ <|@
      nr 2372  <|@ instruction r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2374  <|@ instruction JUMP ~[] destination: B246 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B246" "B244" "B243" 
    successors "B248" "B249" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      LIR
      nr 2376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2378  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr 2380  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 2382  <|@ instruction rsi|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2384  <|@ instruction MOVB (x: [rsi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2386  <|@ instruction r10|QWORD = MOV [r11|QWORD[.]] size: QWORD <|@ <|@
      nr 2388  <|@ instruction rsi|QWORD = AND r10|QWORD y: 7 size: QWORD <|@ <|@
      nr 2390  <|@ instruction CMP rsi|QWORD y: 5 size: QWORD <|@ <|@
      nr 2392  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B247 -> B248 falseDestination: B247 -> B249 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B262" 
    xhandlers
    flags 
    probability 4606102879411360327
    begin_IR
      LIR
      nr 2394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2396  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2398  <|@ instruction JUMP ~[] destination: B248 -> B262 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B248" "B261" 
    successors "B263" "B264" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      LIR
      nr 2504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2506  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2508  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 2510  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2512  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B262 -> B263 falseDestination: B262 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B262" 
    successors "B265" 
    xhandlers
    flags 
    probability 4606895645397968717
    begin_IR
      LIR
      nr 2528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2530  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2532  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr 2534  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 2536  <|@ instruction JUMP ~[] destination: B264 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B264" "B263" 
    successors 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      LIR
      nr 2538  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2540  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2542  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2544  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr 2546  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2548  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2550  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 2552  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2554  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2556  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B62" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B44 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  712  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  714  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  716  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  724  <|@ instruction xmm2|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B64 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" "B67" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  754  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  764  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm1|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  766  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  768  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  774  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  776  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  778  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  788  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  790  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  796  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  798  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  800  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  810  <|@ instruction xmm3|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  812  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm3|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  814  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  816  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  822  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  824  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  826  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  836  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  838  <|@ instruction r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B229" "B230" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2228  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 2230  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2232  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 2234  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2236  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B228 -> B229 falseDestination: B228 -> B230 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B233" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr 2238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2240  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2242  <|@ instruction JUMP ~[] destination: B229 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B229" "B232" 
    successors "B234" "B235" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2266  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2268  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 2270  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2272  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B233 -> B234 falseDestination: B233 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B233" 
    successors "B236" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr 2278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2280  <|@ instruction xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 2282  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm1|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2284  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 2286  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2288  <|@ instruction JUMP ~[] destination: B235 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B235" "B234" 
    successors "B237" "B238" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2290  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2292  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 2294  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2296  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B236 -> B237 falseDestination: B236 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B236" 
    successors "B239" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr 2302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2304  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 2306  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2308  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 2310  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2312  <|@ instruction JUMP ~[] destination: B238 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" "B237" 
    successors "B240" "B241" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2314  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2316  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 2318  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2320  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B239 -> B240 falseDestination: B239 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B239" 
    successors "B242" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr 2326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2328  <|@ instruction xmm1|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 2330  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm1|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2332  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 2334  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2336  <|@ instruction JUMP ~[] destination: B241 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B241" "B240" 
    successors "B243" "B244" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2338  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2340  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 2342  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2344  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B242 -> B243 falseDestination: B242 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B247" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr 2354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2356  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 2358  <|@ instruction r14|QWORD = MOVE input: long[4270112768|0xfe84c000] <|@ <|@
      nr 2360  <|@ instruction r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2362  <|@ instruction JUMP ~[] destination: B244 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B227" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2084  <|@ instruction JUMP ~[] destination: B209 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  732  <|@ instruction xmm2|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  734  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B66" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B80 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B80" 
    successors "B67" "B80" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  738  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm2|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  740  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  742  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  744  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ instruction r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~[] destination: B78 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr 2580  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2582  <|@ instruction JUMP ~[] destination: B270 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B270" 
    successors "B49" "B270" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  590  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  592  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  594  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  596  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction xmm3|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B247" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr 2346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2348  <|@ instruction r14|QWORD = MOVE input: long[4270112768|0xfe84c000] <|@ <|@
      nr 2350  <|@ instruction r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2352  <|@ instruction JUMP ~[] destination: B243 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr 2182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2184  <|@ instruction JUMP ~[] destination: B222 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr 2206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2208  <|@ instruction JUMP ~[] destination: B225 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B236" 
    successors "B239" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr 2298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2300  <|@ instruction JUMP ~[] destination: B237 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B218" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr 2134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2136  <|@ instruction JUMP ~[] destination: B216 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr 2158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2160  <|@ instruction JUMP ~[] destination: B219 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B213" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr 2104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2106  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2108  <|@ instruction JUMP ~[] destination: B212 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B213" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4600278003139642512
    begin_IR
      LIR
      nr 2558  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2560  <|@ instruction JUMP ~[] destination: B266 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" "B266" 
    successors "B214" "B266" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2110  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2112  <|@ instruction xmm0|V256_WORD = H [r11|QWORD[*] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2114  <|@ instruction J (address: [r10|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2116  <|@ instruction r8|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr 2118  <|@ instruction CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2120  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B213 -> B214 falseDestination: B213 -> B266 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B231" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr 2244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2246  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2248  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 2250  <|@ instruction JUMP ~[] destination: B230 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B231" 
    successors "B231" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4600278003139642512
    begin_IR
      LIR
      nr 2364  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2366  <|@ instruction JUMP ~[] destination: B245 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B230" "B245" 
    successors "B232" "B245" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2252  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2254  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2256  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 2258  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2260  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B231 -> B232 falseDestination: B231 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B239" 
    successors "B242" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr 2322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2324  <|@ instruction JUMP ~[] destination: B240 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B215" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2124  <|@ instruction JUMP ~[] destination: B214 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B231" 
    successors "B233" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr 2262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2264  <|@ instruction JUMP ~[] destination: B232 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B233" 
    successors "B236" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr 2274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2276  <|@ instruction JUMP ~[] destination: B234 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B39" 
    successors "B43" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  536  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  540  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  542  <|@ st <@st|@reference-map: [stack:64, stack:72]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:40|QWORD[.] stack:48|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:40|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: stack:40|QWORD[.] - 
locks: monitor[stack:40|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:163) [bci: 234]
locals: - stack:40|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 7, 234, 17] <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B250" "B251" 
    xhandlers
    flags 
    probability 4591711229433017291
    begin_IR
      LIR
      nr 2400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2402  <|@ instruction r8|QWORD = STACKLEA stack:32|QWORD <|@ <|@
      nr 2404  <|@ instruction rsi|QWORD = MOV [r8|QWORD] size: QWORD <|@ <|@
      nr 2406  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2408  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B249 -> B250 falseDestination: B249 -> B251 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B252" "B255" 
    xhandlers
    flags 
    probability 4588616991559617267
    begin_IR
      LIR
      nr 2416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2418  <|@ instruction TEST r10|QWORD y: 2 size: QWORD <|@ <|@
      nr 2420  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B251 -> B252 falseDestination: B251 -> B255 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B253" "B254" 
    xhandlers
    flags 
    probability 4588532429854379039
    begin_IR
      LIR
      nr 2422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2424  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2426  <|@ instruction rax|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 2428  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr 2430  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B252 -> B253 falseDestination: B252 -> B254 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B252" 
    successors "B261" 
    xhandlers
    flags 
    probability 4588524058245560454
    begin_IR
      LIR
      nr 2444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2446  <|@ instruction JUMP ~[] destination: B254 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B250" "B257" "B254" "B253" "B260" 
    successors "B262" 
    xhandlers
    flags 
    probability 4591711229433017291
    begin_IR
      LIR
      nr 2500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2502  <|@ instruction JUMP ~[] destination: B261 -> B262 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B207" 
    xhandlers
    flags 
    probability 4591711229433017291
    begin_IR
      LIR
      nr 2046  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2048  <|@ instruction JUMP ~[] destination: B206 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" "B204" 
    successors "B208" 
    xhandlers
    flags 
    probability 4592345442222304004
    begin_IR
      LIR
      nr 2050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2052  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 2054  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 2056  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 2058  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2060  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2062  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2064  <|@ st <@st|@reference-map: [r13:0, stack:72]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: stack:40|QWORD[.] - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: stack:40|QWORD[.] - 
locks: monitor[stack:40|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - stack:40|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 7, 248, 17] <|@ <|@
      nr 2066  <|@ instruction JUMP ~[] destination: B207 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  944  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ st <@st|@reference-map: [stack:64, stack:72]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:40|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: stack:40|QWORD[.] - 
locks: monitor[stack:40|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - stack:40|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad state [bci:17, 21, 7, 241, 17] <|@ <|@
      nr  954  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  958  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B97" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  974  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  976  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  978  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B93 -> B94 falseDestination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4587200086203916006
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  984  <|@ instruction r10|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  986  <|@ instruction r10|DWORD = LEA [r10|DWORD + 23] size: DWORD <|@ <|@
      nr  988  <|@ instruction r10|DWORD = AND r10|DWORD y: -8 size: DWORD <|@ <|@
      nr  990  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  992  <|@ instruction r11|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  994  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  996  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B99" 
    xhandlers
    flags 
    probability 4587129693552234790
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1006  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1008  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1010  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1012  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1014  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1016  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1018  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1020  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 1022  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1024  <|@ instruction rax|DWORD = MOVE stack:52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B96 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B96" "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1056  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1058  <|@ instruction rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr 1060  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1062  <|@ instruction CMP rdx|QWORD y: 1 size: QWORD <|@ <|@
      nr 1064  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction rcx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1076  <|@ instruction r10|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1078  <|@ instruction r11|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 1080  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1082  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B106" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1086  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1088  <|@ instruction JUMP ~[] destination: B102 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B102" "B105" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1114  <|@ instruction r11|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1116  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1118  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1126  <|@ instruction xmm0|V128_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1128  <|@ instruction J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1130  <|@ instruction r11|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr 1132  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" "B107" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1138  <|@ instruction r11|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 1140  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1142  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1150  <|@ instruction xmm0|V64_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1152  <|@ instruction J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1154  <|@ instruction r11|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr 1156  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1162  <|@ instruction r11|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 1164  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1166  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1174  <|@ instruction xmm0|V32_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 1176  <|@ instruction J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1178  <|@ instruction r11|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr 1180  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1182  <|@ instruction JUMP ~[] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1186  <|@ instruction r11|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 1188  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1190  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1198  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[.] + r8|QWORD * 2] size: DWORD <|@ <|@
      nr 1200  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD <|@ <|@
      nr 1202  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B100" "B117" "B116" 
    successors "B119" "B137" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1206  <|@ instruction rcx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 1208  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1210  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B118 -> B119 falseDestination: B118 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B138" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1360  <|@ instruction r10|QWORD = MOVE input: long[4270112768|0xfe84c000] <|@ <|@
      nr 1362  <|@ instruction xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1364  <|@ instruction xmm2|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1366  <|@ instruction xmm3|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1368  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1370  <|@ instruction JUMP ~[] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" "B135" "B134" 
    successors "B139" "B140" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1374  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr 1376  <|@ instruction MOV (x: [r14|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1378  <|@ instruction r11|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1380  <|@ instruction MOVB (x: [r11|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1382  <|@ instruction rcx|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1384  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1386  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B138 -> B139 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" "B143" 
    xhandlers
    flags 
    probability 4587904012720728163
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1396  <|@ instruction r13|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr 1398  <|@ instruction CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1400  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B140 -> B141 falseDestination: B140 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B144" 
    xhandlers
    flags 
    probability 4587826580803878826
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1418  <|@ instruction rdx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr 1420  <|@ instruction MOV [rsi|QWORD[.] + rdx|QWORD * 2 + 16] y: 98 size: WORD <|@ <|@
      nr 1422  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1424  <|@ instruction r14|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1426  <|@ instruction stack:96|V256_WORD = VMOVE xmm0|V256_WORD <|@ <|@
      nr 1428  <|@ instruction xmm0|V64_WORD = VMOVE xmm2|V64_WORD <|@ <|@
      nr 1430  <|@ instruction xmm2|V256_WORD = VMOVE stack:96|V256_WORD <|@ <|@
      nr 1432  <|@ instruction JUMP ~[] destination: B143 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4587973608062233869
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1484  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction stack:100|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1494  <|@ st <@st|@reference-map: [stack:12, stack:64, stack:72]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:40|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: stack:40|QWORD[.] - 
locks: monitor[stack:40|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - stack:40|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad state [bci:17, 21, 7, 248, 17] <|@ <|@
      nr 1496  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1498  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1500  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" "B154" 
    xhandlers
    flags 
    probability 4587973608062233869
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1516  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1518  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1520  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1522  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B150 -> B151 falseDestination: B150 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" "B153" 
    xhandlers
    flags 
    probability 4587192329359589925
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1526  <|@ instruction rdx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr 1528  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr 1530  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr 1532  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1534  <|@ instruction rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1536  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1538  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B151 -> B152 falseDestination: B151 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B156" 
    xhandlers
    flags 
    probability 4587122014276351970
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1548  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1550  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1552  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1554  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1556  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1558  <|@ instruction MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1560  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1562  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 1564  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1566  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1568  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1570  <|@ instruction JUMP ~[] destination: B153 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B153" "B155" 
    successors "B157" "B158" 
    xhandlers
    flags 
    probability 4587973608062233868
    begin_IR
      LIR
      nr 1592  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1594  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1596  <|@ instruction rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr 1598  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1600  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 1602  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B156 -> B157 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" "B160" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1610  <|@ instruction r10|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1612  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1614  <|@ instruction r10|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 1616  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 1618  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1620  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B158 -> B159 falseDestination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B163" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1624  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1626  <|@ instruction JUMP ~[] destination: B159 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B159" "B162" 
    successors "B164" "B165" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1652  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 1654  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1656  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B163 -> B164 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr 1662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1664  <|@ instruction xmm0|V128_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1666  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1668  <|@ instruction r11|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr 1670  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1672  <|@ instruction JUMP ~[] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B164" 
    successors "B167" "B168" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1674  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1676  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 1678  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1680  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B167 falseDestination: B166 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B169" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr 1686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1688  <|@ instruction xmm0|V64_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1690  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1692  <|@ instruction r11|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr 1694  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1696  <|@ instruction JUMP ~[] destination: B168 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" "B167" 
    successors "B170" "B171" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1700  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 1702  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1704  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B169 -> B170 falseDestination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1712  <|@ instruction xmm0|V32_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 1714  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1716  <|@ instruction r11|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr 1718  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1720  <|@ instruction JUMP ~[] destination: B171 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" "B170" 
    successors "B173" "B174" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1724  <|@ instruction r11|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 1726  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1728  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B172 -> B173 falseDestination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr 1734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1736  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[*] + r8|QWORD * 2] size: DWORD <|@ <|@
      nr 1738  <|@ instruction MOV (x: [rdx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD <|@ <|@
      nr 1740  <|@ instruction JUMP ~[] destination: B174 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B157" "B174" "B173" 
    successors "B176" "B194" 
    xhandlers
    flags 
    probability 4587973608062233868
    begin_IR
      LIR
      nr 1742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1744  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 1746  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1748  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B175 -> B176 falseDestination: B175 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B195" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1898  <|@ instruction rsi|QWORD = MOVE input: long[4270112768|0xfe84c000] <|@ <|@
      nr 1900  <|@ instruction xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1902  <|@ instruction xmm2|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1904  <|@ instruction xmm3|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1906  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1908  <|@ instruction JUMP ~[] destination: B194 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" "B192" "B191" 
    successors "B196" "B197" 
    xhandlers
    flags 
    probability 4587973608062233868
    begin_IR
      LIR
      nr 1910  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1912  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r14|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1916  <|@ instruction r11|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1918  <|@ instruction MOVB (x: [r11|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1920  <|@ instruction rdx|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1922  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1924  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B195 -> B196 falseDestination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B198" "B200" 
    xhandlers
    flags 
    probability 4587895480191969474
    begin_IR
      LIR
      nr 1932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1934  <|@ instruction r13|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr 1936  <|@ instruction CMP (x: rdx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1938  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B197 -> B198 falseDestination: B197 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B201" 
    xhandlers
    flags 
    probability 4587818133600407724
    begin_IR
      LIR
      nr 1954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1956  <|@ instruction r10|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1958  <|@ instruction MOV [rax|QWORD[.] + r10|QWORD * 2 + 16] y: 98 size: WORD <|@ <|@
      nr 1960  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1962  <|@ instruction r14|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1964  <|@ instruction rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1966  <|@ instruction stack:96|V256_WORD = VMOVE xmm0|V256_WORD <|@ <|@
      nr 1968  <|@ instruction xmm0|V64_WORD = VMOVE xmm2|V64_WORD <|@ <|@
      nr 1970  <|@ instruction xmm2|V256_WORD = VMOVE stack:96|V256_WORD <|@ <|@
      nr 1972  <|@ instruction JUMP ~[] destination: B200 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B261" 
    xhandlers
    flags 
    probability 4585798268051676323
    begin_IR
      LIR
      nr 2410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2412  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2414  <|@ instruction JUMP ~[] destination: B250 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1214  <|@ instruction r10|QWORD[.] = LEA [rsi|QWORD[.] + rdx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1216  <|@ instruction rcx|QWORD = SUB (x: rcx|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ instruction rdx|QWORD = LEA [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr 1220  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1222  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B124" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1226  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1228  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1230  <|@ instruction JUMP ~[] destination: B120 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B120" "B123" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1256  <|@ instruction rdx|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr 1258  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1260  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B124 -> B125 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr 1268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1270  <|@ instruction xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1272  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm1|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1274  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1276  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1278  <|@ instruction JUMP ~[] destination: B126 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1282  <|@ instruction rdx|QWORD = LEA [rcx|QWORD - 4] size: QWORD <|@ <|@
      nr 1284  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1286  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1296  <|@ instruction xmm2|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1298  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm2|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1300  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 1302  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1304  <|@ instruction JUMP ~[] destination: B129 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1308  <|@ instruction rdx|QWORD = LEA [rcx|QWORD - 2] size: QWORD <|@ <|@
      nr 1310  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1312  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B130 -> B131 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1322  <|@ instruction xmm3|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1324  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm3|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1326  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 1328  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1330  <|@ instruction JUMP ~[] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B131" 
    successors "B134" "B135" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1332  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1334  <|@ instruction rcx|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr 1336  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1338  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B133 -> B134 falseDestination: B133 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B138" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1348  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 1350  <|@ instruction r10|QWORD = MOVE input: long[4270112768|0xfe84c000] <|@ <|@
      nr 1352  <|@ instruction JUMP ~[] destination: B135 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B118" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1068  <|@ instruction JUMP ~[] destination: B100 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B175" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1606  <|@ instruction JUMP ~[] destination: B157 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B177" "B178" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1752  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1754  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1756  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 1758  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1760  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B176 -> B177 falseDestination: B176 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B181" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1764  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1766  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1768  <|@ instruction JUMP ~[] destination: B177 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B177" "B180" 
    successors "B182" "B183" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1792  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1794  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1796  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1798  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B181 -> B182 falseDestination: B181 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B184" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1808  <|@ instruction xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1810  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm1|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1812  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1814  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1816  <|@ instruction JUMP ~[] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" "B182" 
    successors "B185" "B186" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1818  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1820  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 1822  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1824  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B184 -> B185 falseDestination: B184 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B187" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1834  <|@ instruction xmm2|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1836  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm2|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1838  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 1840  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1842  <|@ instruction JUMP ~[] destination: B186 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" "B185" 
    successors "B188" "B189" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1846  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 1848  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1850  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B187 -> B188 falseDestination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr 1858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1860  <|@ instruction xmm3|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1862  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm3|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1864  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 1866  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1868  <|@ instruction JUMP ~[] destination: B189 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1870  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1872  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 1874  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1876  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B195" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr 1884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1886  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 1888  <|@ instruction rsi|QWORD = MOVE input: long[4270112768|0xfe84c000] <|@ <|@
      nr 1890  <|@ instruction JUMP ~[] destination: B192 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[34|0x22] <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:124) [bci: 0]
locals: r13|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   22  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:124) [bci: 0]
locals: r13|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   28  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  174  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  176  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  178  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}, stack:32|QWORD, eliminated] 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} Ljava/lang/StringBuffer; int[33|0x21] r14|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 7, 227, 17] <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction xmm1|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  184  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  186  <|@ instruction r10|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B86" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B83 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B83" "B85" 
    successors 
    xhandlers
    flags 
    probability 4581393005893843005
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction MOV [r15|QWORD + 668] y: -910945 size: DWORD <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  896  <|@ st <@st|@reference-map: [r11:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r11|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: r11|QWORD[.] - 
locks: monitor[r11|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:163) [bci: 234]
locals: - r11|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 7, 234, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B22" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = AND r8|QWORD y: 7 size: QWORD <|@ <|@
      nr  248  <|@ instruction CMP rax|QWORD y: 5 size: QWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B23" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B29" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction TEST r8|QWORD y: 2 size: QWORD <|@ <|@
      nr  344  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction r8|QWORD = OR r8|QWORD y: 1 size: QWORD <|@ <|@
      nr  352  <|@ instruction MOV (x: [r9|QWORD], y: r8|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction rax|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: rax|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B35" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B25 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  888  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B262" 
    successors "B265" 
    xhandlers
    flags 
    probability 4576791068796935337
    begin_IR
      LIR
      nr 2514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2516  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 2518  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 2520  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2522  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
bench.StringOp.cont(Bench.scala:166) [bci: 256]
stack: vobject:String:0{value=r14|QWORD[.],hash=int[0|0x0]} 
locals: - - 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
vobject:String:0{value=r14|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; r14|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:256, 17] <|@ <|@
      nr 2524  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2526  <|@ instruction JUMP ~[] destination: B263 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B207" 
    xhandlers
    flags 
    probability 4576227324095347148
    begin_IR
      LIR
      nr 2016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2018  <|@ instruction JUMP ~[] destination: B204 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1194  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1170  <|@ instruction JUMP ~[] destination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1146  <|@ instruction JUMP ~[] destination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1092  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1094  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B104" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4581523275715191914
    begin_IR
      LIR
      nr 2576  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2578  <|@ instruction JUMP ~[] destination: B269 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B269" 
    successors "B105" "B269" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1098  <|@ instruction xmm0|V256_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1100  <|@ instruction J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1102  <|@ instruction r8|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr 1104  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1106  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B104 -> B105 falseDestination: B104 -> B269 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1122  <|@ instruction JUMP ~[] destination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1264  <|@ instruction xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1266  <|@ instruction JUMP ~[] destination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1316  <|@ instruction xmm3|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1318  <|@ instruction JUMP ~[] destination: B131 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1290  <|@ instruction xmm2|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1292  <|@ instruction JUMP ~[] destination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr 1232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1234  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1236  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1238  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B122" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4581523275715191914
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1356  <|@ instruction JUMP ~[] destination: B136 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B136" 
    successors "B123" "B136" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1242  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1244  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 1246  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1248  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B122 -> B123 falseDestination: B122 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1110  <|@ instruction JUMP ~[] destination: B105 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B138" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1342  <|@ instruction r10|QWORD = MOVE input: long[4270112768|0xfe84c000] <|@ <|@
      nr 1344  <|@ instruction JUMP ~[] destination: B134 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1252  <|@ instruction JUMP ~[] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B195" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1880  <|@ instruction rsi|QWORD = MOVE input: long[4270112768|0xfe84c000] <|@ <|@
      nr 1882  <|@ instruction JUMP ~[] destination: B191 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr 1852  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1854  <|@ instruction xmm3|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1856  <|@ instruction JUMP ~[] destination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B179" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr 1770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1772  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1774  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1776  <|@ instruction JUMP ~[] destination: B178 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B179" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4581516811678253513
    begin_IR
      LIR
      nr 1892  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1894  <|@ instruction JUMP ~[] destination: B193 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" "B193" 
    successors "B180" "B193" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1778  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1780  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1782  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 1784  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1786  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B179 -> B180 falseDestination: B179 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B169" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1684  <|@ instruction JUMP ~[] destination: B167 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B181" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr 1788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1790  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1732  <|@ instruction JUMP ~[] destination: B173 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr 1706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1708  <|@ instruction JUMP ~[] destination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B161" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr 1628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1630  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1632  <|@ instruction JUMP ~[] destination: B160 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B161" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4581516811678253513
    begin_IR
      LIR
      nr 2572  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2574  <|@ instruction JUMP ~[] destination: B268 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" "B268" 
    successors "B162" "B268" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1636  <|@ instruction xmm0|V256_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1638  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1640  <|@ instruction r8|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr 1642  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1644  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B161 -> B162 falseDestination: B161 -> B268 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B184" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1802  <|@ instruction xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1804  <|@ instruction JUMP ~[] destination: B182 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B187" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr 1826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1828  <|@ instruction xmm2|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1830  <|@ instruction JUMP ~[] destination: B185 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B163" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr 1646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1648  <|@ instruction JUMP ~[] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1660  <|@ instruction JUMP ~[] destination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B98" 
    xhandlers
    flags 
    probability 4572907146747568786
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1032  <|@ instruction r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B95" 
    successors "B99" 
    xhandlers
    flags 
    probability 4573470287961018512
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1038  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 1040  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1044  <|@ instruction r14|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ st <@st|@reference-map: [r14:0, stack:64, stack:72]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: r14|QWORD[.] stack:48|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r14|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: r14|QWORD[.] - 
locks: monitor[r14|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - r14|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 7, 241, 17] <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction rax|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1052  <|@ instruction JUMP ~[] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B155" 
    xhandlers
    flags 
    probability 4572900251774834492
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1574  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1576  <|@ instruction JUMP ~[] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" "B152" 
    successors "B156" 
    xhandlers
    flags 
    probability 4573462772440738132
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1580  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 1582  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1584  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1586  <|@ st <@st|@reference-map: [r14:0, stack:12, stack:64, stack:72]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: r14|QWORD[.] stack:48|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r14|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: r14|QWORD[.] - 
locks: monitor[r14|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - r14|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 7, 248, 17] <|@ <|@
      nr 1588  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1590  <|@ instruction JUMP ~[] destination: B155 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B21" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction xmm3|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  258  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  260  <|@ instruction TEST rdi|QWORD y: 7 size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction TEST rdi|QWORD y: 768 size: QWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r8|QWORD = AND r8|QWORD y: 895 size: QWORD <|@ <|@
      nr  274  <|@ instruction rsi|QWORD = OR (x: r15|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction rax|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B35" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction r11|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B16 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B256" "B259" 
    xhandlers
    flags 
    probability 4558551172406818075
    begin_IR
      LIR
      nr 2448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2450  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2452  <|@ instruction rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2454  <|@ instruction rax|QWORD = MOV [r10|QWORD + 22] size: QWORD <|@ <|@
      nr 2456  <|@ instruction rsi|QWORD = MOV [r10|QWORD + 38] size: QWORD <|@ <|@
      nr 2458  <|@ instruction rax|QWORD = XOR (x: r15|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 2460  <|@ instruction rax|QWORD = OR (x: rax|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2462  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 2464  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B255 -> B256 falseDestination: B255 -> B259 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B257" "B258" 
    xhandlers
    flags 
    probability 4558497052915465609
    begin_IR
      LIR
      nr 2466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2468  <|@ instruction rax|QWORD = MOV [r10|QWORD + 54] size: QWORD <|@ <|@
      nr 2470  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r10|QWORD + 62]) size: QWORD <|@ <|@
      nr 2472  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 2474  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B256 -> B257 falseDestination: B256 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B261" 
    xhandlers
    flags 
    probability 4557961269951076194
    begin_IR
      LIR
      nr 2476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2478  <|@ instruction MOV (x: [r10|QWORD + 22], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2480  <|@ instruction JUMP ~[] destination: B257 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B142" 
    xhandlers
    flags 
    probability 4558144922946680135
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1390  <|@ instruction rbp|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1392  <|@ instruction JUMP ~[] destination: B139 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B139" "B141" 
    successors 
    xhandlers
    flags 
    probability 4562623494075675088
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1410  <|@ instruction MOV [r15|QWORD + 668] y: -977249 size: DWORD <|@ <|@
      nr 1412  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1414  <|@ st <@st|@reference-map: [rbp:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rbp|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: rbp|QWORD[.] - 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - rbp|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 7, 241, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B199" 
    xhandlers
    flags 
    probability 4558139406968492699
    begin_IR
      LIR
      nr 1926  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1928  <|@ instruction rbp|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1930  <|@ instruction JUMP ~[] destination: B196 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B196" "B198" 
    successors 
    xhandlers
    flags 
    probability 4562618005677378589
    begin_IR
      LIR
      nr 1946  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1948  <|@ instruction MOV [r15|QWORD + 668] y: -949345 size: DWORD <|@ <|@
      nr 1950  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1952  <|@ st <@st|@reference-map: [rbp:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rbp|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: rbp|QWORD[.] - 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - rbp|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 7, 248, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" 
    xhandlers
    flags 
    probability 4558094865949929048
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1404  <|@ instruction rbp|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1406  <|@ instruction JUMP ~[] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B199" 
    xhandlers
    flags 
    probability 4558089405131523487
    begin_IR
      LIR
      nr 1940  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1942  <|@ instruction rbp|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1944  <|@ instruction JUMP ~[] destination: B198 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B98" 
    xhandlers
    flags 
    probability 4557644352979169267
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B155" 
    xhandlers
    flags 
    probability 4557635954298659199
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1542  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1544  <|@ instruction JUMP ~[] destination: B152 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction rax|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction xmm3|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  402  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  404  <|@ instruction MOV (x: [r9|QWORD], y: r9|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction CMP [r8|QWORD + 22] y: 0 size: QWORD <|@ <|@
      nr  408  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  414  <|@ instruction rax|QWORD = CAS (address: [r8|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  416  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction r11|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction xmm3|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  374  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  376  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction TEST rax|QWORD y: -4089 size: QWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction MOV (x: [r9|QWORD], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  386  <|@ instruction r11|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B27 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction rax|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rbx|QWORD) accessKind: QWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B17 -> B18 falseDestination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B35" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction r11|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B20 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B252" 
    successors "B261" 
    xhandlers
    flags 
    probability 4543697352192320117
    begin_IR
      LIR
      nr 2432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2434  <|@ instruction rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2436  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2438  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 2440  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10acdcb60:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr 2442  <|@ instruction JUMP ~[] destination: B253 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B260" 
    xhandlers
    flags 
    probability 4543697352192320115
    begin_IR
      LIR
      nr 2482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2484  <|@ instruction JUMP ~[] destination: B258 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B259" "B258" 
    successors "B261" 
    xhandlers
    flags 
    probability 4544347644035395019
    begin_IR
      LIR
      nr 2490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2492  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2494  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 2496  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10acdcb60:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr 2498  <|@ instruction JUMP ~[] destination: B260 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4531489317381612709
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B28" "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction rdx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  440  <|@ st <@st|@reference-map: [rbp:0, r14:0, stack:72]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}, stack:32|QWORD, eliminated] 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} Ljava/lang/StringBuffer; int[33|0x21] r14|QWORD[.] Object[null] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x10acd9b20:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:61, 35, 7, 227, 17] <|@ <|@
      nr  442  <|@ instruction r11|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4530952148194186286
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B260" 
    xhandlers
    flags 
    probability 4528541320773093662
    begin_IR
      LIR
      nr 2486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2488  <|@ instruction JUMP ~[] destination: B259 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4516611986926701044
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4515753460700115334
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B35" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rdx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  312  <|@ st <@st|@reference-map: [rbp:0, r14:0, stack:72]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}, stack:32|QWORD, eliminated] 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} Ljava/lang/StringBuffer; int[33|0x21] r14|QWORD[.] Object[null] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x10acd9b20:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:61, 35, 7, 227, 17] <|@ <|@
      nr  314  <|@ instruction r11|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B19 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4501392635851087307
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1466  <|@ instruction rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1468  <|@ instruction MOV [r15|QWORD + 668] y: -934753 size: DWORD <|@ <|@
      nr 1470  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1472  <|@ st <@st|@reference-map: [rbp:0]
live-base-pointers: []
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5]
locals: rbp|QWORD[.] Object[String:"b"] 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - rbp|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:5, 248, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction MOV [r15|QWORD + 668] y: -962657 size: DWORD <|@ <|@
      nr  930  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  932  <|@ st <@st|@reference-map: [rbp:0]
live-base-pointers: []
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5]
locals: rbp|QWORD[.] Object[String:"b"] 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - rbp|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:5, 241, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction MOV [r15|QWORD + 668] y: -1065569 size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: rbp|QWORD[.] r14|QWORD[.] rax|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rbp|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: rbp|QWORD[.] - 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:163) [bci: 234]
locals: - rbp|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:20, 21, 7, 234, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2564  <|@ instruction rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2566  <|@ instruction MOV [r15|QWORD + 668] y: -923667 size: DWORD <|@ <|@
      nr 2568  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2570  <|@ st <@st|@reference-map: [rbp:0]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: rbp|QWORD[.] - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: rbp|QWORD[.] - 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - rbp|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:61, 35, 7, 248, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1504  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1508  <|@ instruction MOV [r15|QWORD + 668] y: -1085537 size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@reference-map: [rcx:0, rbp:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: rbp|QWORD[.] rcx|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rbp|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: rbp|QWORD[.] - 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - rbp|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:20, 21, 7, 248, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  962  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction MOV [r15|QWORD + 668] y: -1075553 size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  970  <|@ st <@st|@reference-map: [rbp:0, r10:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: rbp|QWORD[.] r10|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rbp|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: rbp|QWORD[.] - 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - rbp|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:20, 21, 7, 241, 17] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #13         // java.lang.StringBuffer
     3: dup           
     4: invokespecial #0          // java.lang.StringBuffer.<init>:()void
     7: astore_1      
     8: aload_1       
     9: ldc           #19         // "a"
    11: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    14: pop           
    15: aload_0       
    16: aload_1       
    17: invokevirtual #2          // cont:(java.lang.StringBuffer)java.lang.String
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6c0249d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   10  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   12  <|@ instruction r10|QWORD = LEA [rsi|QWORD + 48] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 240] instr: 0 <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction MOV [rsi|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr   48  <|@ instruction MOV [rsi|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   52  <|@ instruction xmm0|V256_QWORD = A od: SIMD<27584968630861921,27584968630861922,27584968630861922,27584968630861922> oe: QWORD <|@ <|@
      nr   54  <|@ instruction J (address: [rsi|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 88] size: QWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   82  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   84  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 344] instr: 0 <|@ <|@
      nr   86  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 408] instr: 0 <|@ <|@
      nr   88  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 472] instr: 0 <|@ <|@
      nr   90  <|@ instruction MOV [rsi|QWORD + 12] y: 34 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   96  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  106  <|@ instruction xmm0|V256_WORD = H [rsi|QWORD[.]] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction J (address: [rsi|QWORD[.]], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = LEA [r10|QWORD[.] + 48] size: QWORD <|@ <|@
      nr  114  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  116  <|@ instruction J (address: [rsi|QWORD[.]], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  118  <|@ instruction xmm1|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  120  <|@ instruction J (address: [rsi|QWORD[.] + 32], input: xmm1|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  122  <|@ instruction MOV [r10|QWORD[.] + 48] y: 98 size: WORD <|@ <|@
      nr  124  <|@ instruction MOV [r10|QWORD[.] + 50] y: 98 size: WORD <|@ <|@
      nr  126  <|@ instruction MOV [r10|QWORD[.] + 52] y: 98 size: WORD <|@ <|@
      nr  128  <|@ instruction MOV [r10|QWORD[.] + 54] y: 98 size: WORD <|@ <|@
      nr  130  <|@ instruction MOV [r10|QWORD[.] + 56] y: 98 size: WORD <|@ <|@
      nr  132  <|@ instruction MOV [r10|QWORD[.] + 58] y: 98 size: WORD <|@ <|@
      nr  134  <|@ instruction MOV [r10|QWORD[.] + 60] y: 98 size: WORD <|@ <|@
      nr  136  <|@ instruction MOV [r10|QWORD[.] + 62] y: 98 size: WORD <|@ <|@
      nr  138  <|@ instruction MOV [r10|QWORD[.] + 64] y: 98 size: WORD <|@ <|@
      nr  140  <|@ instruction MOV [r10|QWORD[.] + 66] y: 98 size: WORD <|@ <|@
      nr  142  <|@ instruction MOV [r10|QWORD[.] + 68] y: 98 size: WORD <|@ <|@
      nr  144  <|@ instruction MOV [r10|QWORD[.] + 70] y: 98 size: WORD <|@ <|@
      nr  146  <|@ instruction MOV [r10|QWORD[.] + 72] y: 98 size: WORD <|@ <|@
      nr  148  <|@ instruction MOV [r10|QWORD[.] + 74] y: 98 size: WORD <|@ <|@
      nr  150  <|@ instruction MOV [r10|QWORD[.] + 76] y: 98 size: WORD <|@ <|@
      nr  152  <|@ instruction MOV [r10|QWORD[.] + 78] y: 98 size: WORD <|@ <|@
      nr  154  <|@ instruction MOV [r10|QWORD[.] + 80] y: 98 size: WORD <|@ <|@
      nr  156  <|@ instruction MOV [r10|QWORD[.] + 82] y: 98 size: WORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  160  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  162  <|@ instruction r11|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  164  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  202  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction stack:40|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>} <|@ <|@
      nr  208  <|@ instruction r8|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD[*] + 12] y: 34 size: DWORD <|@ <|@
      nr  216  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr  218  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  222  <|@ instruction r8|QWORD = MOV [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  224  <|@ instruction r9|QWORD = STACKLEA stack:32|QWORD <|@ <|@
      nr  226  <|@ instruction rcx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  228  <|@ instruction rbx|QWORD = OR (x: r15|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = XOR (x: rbx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction TEST rdi|QWORD y: -121 size: QWORD <|@ <|@
      nr  234  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B35" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B10 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" "B25" "B27" "B34" "B10" "B16" "B20" "B19" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|DWORD = MOVE input: int[35|0x23] <|@ <|@
      nr  454  <|@ st <@st|@reference-map: [stack:64, stack:72]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:40|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: stack:40|QWORD[.] - 
locks: monitor[stack:40|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:163) [bci: 234]
locals: - stack:40|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad state [bci:17, 21, 7, 234, 17] <|@ <|@
      nr  456  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  476  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  478  <|@ instruction CMP rax|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  480  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" "B40" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  486  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr  488  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  490  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  492  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B42 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  508  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  510  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  512  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  514  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  518  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B62" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  548  <|@ instruction CMP r13|DWORD y: 35 size: DWORD <|@ <|@
      nr  550  <|@ instruction rsi|DWORD = CMOVE (falseValue: int[34|0x22], ~trueValue: r13|DWORD) condition: < <|@ <|@
      nr  552  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  554  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr  556  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B43 -> B62 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B50" "B48" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  568  <|@ instruction rcx|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  570  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  572  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  578  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  574  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B45 -> B50 falseDestination: B45 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B45" "B48" 
    successors "B53" "B52" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  606  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  608  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B53 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  620  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  622  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  624  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B50" 
    successors "B56" "B55" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  630  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  632  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B56 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  644  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  646  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B53" 
    successors "B59" "B58" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  654  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  656  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  666  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  668  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  670  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  672  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B56" 
    successors "B62" "B61" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  678  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  680  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[.] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B43" "B61" "B59" 
    successors "B63" "B81" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  700  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  702  <|@ instruction xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  704  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B82" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction xmm3|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  852  <|@ instruction xmm2|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B79" "B78" 
    successors "B86" "B84" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  858  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr  860  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  862  <|@ instruction rsi|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  864  <|@ instruction r14|QWORD = MOVE input: long[4270112768|0xfe84c000] <|@ <|@
      nr  866  <|@ instruction MOVB (x: [rsi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  868  <|@ instruction rsi|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  870  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B82 -> B86 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  880  <|@ instruction rdx|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr  882  <|@ instruction CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B84 -> B86 falseDestination: B84 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B88" "B91" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction rcx|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  902  <|@ instruction MOV [rax|QWORD[.] + rcx|QWORD * 2 + 16] y: 98 size: WORD <|@ <|@
      nr  904  <|@ instruction rcx|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr  906  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  910  <|@ instruction r10|DWORD = LEA [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  912  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  914  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  916  <|@ instruction BRANCH trueDestinationProbability: 0.9446261558763105 condition: < trueDestination: B87 -> B88 falseDestination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606514337675950731
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  920  <|@ instruction CMP (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  922  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B144" 
    xhandlers
    flags 
    probability 4606514337675950731
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  938  <|@ instruction MOV [rax|QWORD[.] + rsi|QWORD * 2 + 16] y: 98 size: WORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B90 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" "B90" 
    successors "B145" "B148" 
    xhandlers
    flags 
    probability 4606993447661456006
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1436  <|@ instruction r10|DWORD[.] = MOV [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1438  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:72]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: r11|QWORD[.] - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: r11|QWORD[.] - 
locks: monitor[r11|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - r11|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:61, 35, 7, 241, 17] <|@ <|@
      nr 1440  <|@ instruction rsi|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr 1442  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1444  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1446  <|@ instruction r9|DWORD = LEA [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr 1448  <|@ instruction rdx|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr 1450  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr 1452  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr 1454  <|@ instruction BRANCH trueDestinationProbability: 0.9446261558763105 condition: < trueDestination: B144 -> B145 falseDestination: B144 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4606505148472303541
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1458  <|@ instruction r8|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr 1460  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B145 -> B146 falseDestination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B201" 
    xhandlers
    flags 
    probability 4606505148472303541
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1476  <|@ instruction rdx|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1478  <|@ instruction MOV [rcx|QWORD[.] + rdx|QWORD * 2 + 16] y: 98 size: WORD <|@ <|@
      nr 1480  <|@ instruction JUMP ~[] destination: B147 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" "B147" 
    successors "B202" "B267" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      LIR
      nr 1974  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1976  <|@ instruction rdx|DWORD[.] = MOV [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1978  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1980  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B201 -> B202 falseDestination: B201 -> B267 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B203" "B207" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      LIR
      nr 1982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1984  <|@ instruction r13|DWORD[.] = MOV [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1986  <|@ st <@st|@reference-map: [r11:0, r13:0, stack:72]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: r11|QWORD[.] - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: r11|QWORD[.] - 
locks: monitor[r11|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - r11|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:61, 35, 7, 248, 17] <|@ <|@
      nr 1988  <|@ instruction rsi|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1992  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1994  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1996  <|@ instruction CMP rsi|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1998  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B202 -> B203 falseDestination: B202 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B207" "B205" 
    xhandlers
    flags 
    probability 4606102879411360327
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2002  <|@ instruction r10|DWORD = SHL rsi|DWORD size: DWORD <|@ <|@
      nr 2004  <|@ instruction r10|DWORD = LEA [r10|DWORD + 23] size: DWORD <|@ <|@
      nr 2006  <|@ instruction r10|DWORD = AND r10|DWORD y: -8 size: DWORD <|@ <|@
      nr 2008  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 2010  <|@ instruction r8|QWORD = ADD (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2012  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2014  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B203 -> B207 falseDestination: B203 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B208" 
    xhandlers
    flags 
    probability 4606023602812699488
    begin_IR
      LIR
      nr 2020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2022  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr 2024  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 2026  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 2028  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 2030  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 2032  <|@ instruction MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2034  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 2036  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 2038  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 2040  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2042  <|@ instruction r14|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 2044  <|@ instruction JUMP ~[] destination: B205 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B205" "B207" 
    successors "B227" "B210" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      LIR
      nr 2068  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2070  <|@ instruction rsi|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2072  <|@ instruction CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2074  <|@ instruction rdx|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr 2076  <|@ instruction rsi|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 2078  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 2080  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B208 -> B227 falseDestination: B208 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B215" "B213" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2088  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 2090  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2092  <|@ instruction r11|QWORD[*] = LEA [r13|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 2094  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2100  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2096  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B210 -> B215 falseDestination: B210 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B210" "B213" 
    successors "B218" "B217" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2126  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2128  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 2130  <|@ instruction CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2132  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B215 -> B218 falseDestination: B215 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B215" 
    successors "B218" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr 2138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2140  <|@ instruction xmm0|V128_WORD = H [r11|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2142  <|@ instruction J (address: [r10|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2144  <|@ instruction rdx|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr 2146  <|@ instruction r8|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 2148  <|@ instruction JUMP ~[] destination: B217 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" "B215" 
    successors "B221" "B220" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2150  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2152  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 2154  <|@ instruction CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2156  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B218 -> B221 falseDestination: B218 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr 2162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2164  <|@ instruction xmm0|V64_WORD = H [r11|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 2166  <|@ instruction J (address: [r10|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2168  <|@ instruction rdx|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr 2170  <|@ instruction r8|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 2172  <|@ instruction JUMP ~[] destination: B220 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" "B218" 
    successors "B224" "B223" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2174  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2176  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 2178  <|@ instruction CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2180  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B221 -> B224 falseDestination: B221 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr 2186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2188  <|@ instruction xmm0|V32_WORD = H [r11|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 2190  <|@ instruction J (address: [r10|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2192  <|@ instruction rdx|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr 2194  <|@ instruction r8|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 2196  <|@ instruction JUMP ~[] destination: B223 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" "B221" 
    successors "B227" "B226" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2198  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2200  <|@ instruction rdx|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 2202  <|@ instruction CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2204  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B224 -> B227 falseDestination: B224 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr 2210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2212  <|@ instruction rdx|DWORD = MOVSX [r11|QWORD[*] + r8|QWORD * 2] size: DWORD <|@ <|@
      nr 2214  <|@ instruction MOV (x: [r10|QWORD[.] + r8|QWORD * 2], y: rdx|DWORD) size: WORD <|@ <|@
      nr 2216  <|@ instruction JUMP ~[] destination: B226 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B208" "B226" "B224" 
    successors "B228" "B247" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      LIR
      nr 2218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2220  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr 2222  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2224  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B227 -> B228 falseDestination: B227 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B227" "B244" "B242" 
    successors "B248" "B249" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      LIR
      nr 2376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2370  <|@ instruction r14|QWORD = MOVE input: long[4270112768|0xfe84c000] <|@ <|@
      nr 2372  <|@ instruction r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2378  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr 2380  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 2382  <|@ instruction rsi|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2384  <|@ instruction MOVB (x: [rsi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2386  <|@ instruction r10|QWORD = MOV [r11|QWORD[.]] size: QWORD <|@ <|@
      nr 2388  <|@ instruction rsi|QWORD = AND r10|QWORD y: 7 size: QWORD <|@ <|@
      nr 2390  <|@ instruction CMP rsi|QWORD y: 5 size: QWORD <|@ <|@
      nr 2392  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B247 -> B248 falseDestination: B247 -> B249 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B262" 
    xhandlers
    flags 
    probability 4606102879411360327
    begin_IR
      LIR
      nr 2394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2396  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2398  <|@ instruction JUMP ~[] destination: B248 -> B262 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B248" "B250" "B257" "B252" "B253" "B260" 
    successors "B263" "B264" 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      LIR
      nr 2504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2506  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2508  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 2510  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2512  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B262 -> B263 falseDestination: B262 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B262" 
    successors "B265" 
    xhandlers
    flags 
    probability 4606895645397968717
    begin_IR
      LIR
      nr 2528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2530  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2532  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr 2534  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 2536  <|@ instruction JUMP ~[] destination: B264 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B264" "B263" 
    successors 
    xhandlers
    flags 
    probability 4606983730507591872
    begin_IR
      LIR
      nr 2538  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2540  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2542  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2544  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr 2546  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2548  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2550  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 2552  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2554  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2556  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B68" "B66" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  712  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  714  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  716  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  722  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  724  <|@ instruction xmm2|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B63 -> B68 falseDestination: B63 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B63" "B66" 
    successors "B71" "B70" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  754  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B71 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  764  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm1|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  766  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  768  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B68" 
    successors "B74" "B73" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  774  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  776  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  778  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B71 -> B74 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  788  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  790  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B71" 
    successors "B77" "B76" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  796  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  798  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  804  <|@ instruction xmm3|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  800  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B74 -> B77 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm3|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  814  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  816  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B74" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  822  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  824  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  826  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  836  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  838  <|@ instruction r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B233" "B230" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2228  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 2230  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2232  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 2234  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2240  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2236  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B228 -> B233 falseDestination: B228 -> B230 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B228" "B231" 
    successors "B236" "B235" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2266  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2268  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 2270  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2272  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B233 -> B236 falseDestination: B233 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B233" 
    successors "B236" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr 2278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2280  <|@ instruction xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 2282  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm1|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2284  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 2286  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2288  <|@ instruction JUMP ~[] destination: B235 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B235" "B233" 
    successors "B239" "B238" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2290  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2292  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 2294  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2296  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B236 -> B239 falseDestination: B236 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B236" 
    successors "B239" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr 2302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2304  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 2306  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2308  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 2310  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2312  <|@ instruction JUMP ~[] destination: B238 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" "B236" 
    successors "B242" "B241" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2314  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2316  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 2318  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2320  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B239 -> B242 falseDestination: B239 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B239" 
    successors "B242" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr 2326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2328  <|@ instruction xmm1|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 2330  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm1|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2332  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 2334  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2336  <|@ instruction JUMP ~[] destination: B241 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B241" "B239" 
    successors "B247" "B244" 
    xhandlers
    flags 
    probability 4602480130880221376
    begin_IR
      LIR
      nr 2338  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2340  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 2342  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2344  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B242 -> B247 falseDestination: B242 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B247" 
    xhandlers
    flags 
    probability 4600278003139642512
    begin_IR
      LIR
      nr 2354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2356  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 2362  <|@ instruction JUMP ~[] destination: B244 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B63" "B66" 
    successors "B68" "B66" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  738  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm2|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  740  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  742  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  744  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B68 falseDestination: B66 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ instruction r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~[] destination: B78 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" "B48" 
    successors "B50" "B48" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  590  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  592  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  594  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  596  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B50 falseDestination: B48 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B210" "B213" 
    successors "B215" "B213" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4602480130880221376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2112  <|@ instruction xmm0|V256_WORD = H [r11|QWORD[*] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2114  <|@ instruction J (address: [r10|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2116  <|@ instruction r8|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr 2118  <|@ instruction CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2120  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B213 -> B215 falseDestination: B213 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B231" 
    xhandlers
    flags 
    probability 4593472931625480384
    begin_IR
      LIR
      nr 2244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2248  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 2250  <|@ instruction JUMP ~[] destination: B230 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B230" "B231" 
    successors "B233" "B231" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4602480130880221376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2254  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2256  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 2258  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2260  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B231 -> B233 falseDestination: B231 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  536  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  540  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  542  <|@ st <@st|@reference-map: [stack:64, stack:72]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:40|QWORD[.] stack:48|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:40|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: stack:40|QWORD[.] - 
locks: monitor[stack:40|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:163) [bci: 234]
locals: - stack:40|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 7, 234, 17] <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B250" "B251" 
    xhandlers
    flags 
    probability 4591711229433017291
    begin_IR
      LIR
      nr 2400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2402  <|@ instruction r8|QWORD = STACKLEA stack:32|QWORD <|@ <|@
      nr 2404  <|@ instruction rsi|QWORD = MOV [r8|QWORD] size: QWORD <|@ <|@
      nr 2406  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2408  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B249 -> B250 falseDestination: B249 -> B251 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B252" "B255" 
    xhandlers
    flags 
    probability 4588616991559617267
    begin_IR
      LIR
      nr 2416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2418  <|@ instruction TEST r10|QWORD y: 2 size: QWORD <|@ <|@
      nr 2424  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2420  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B251 -> B252 falseDestination: B251 -> B255 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B253" "B262" 
    xhandlers
    flags 
    probability 4588532429854379039
    begin_IR
      LIR
      nr 2422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2426  <|@ instruction rax|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 2428  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr 2430  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B252 -> B253 falseDestination: B252 -> B262 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B202" "B203" 
    successors "B208" 
    xhandlers
    flags 
    probability 4592345442222304004
    begin_IR
      LIR
      nr 2050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2052  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 2054  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 2056  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 2058  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2060  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2062  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2064  <|@ st <@st|@reference-map: [r13:0, stack:72]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: stack:40|QWORD[.] - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: stack:40|QWORD[.] - 
locks: monitor[stack:40|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - stack:40|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 7, 248, 17] <|@ <|@
      nr 2066  <|@ instruction JUMP ~[] destination: B207 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  944  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ st <@st|@reference-map: [stack:64, stack:72]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:40|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: stack:40|QWORD[.] - 
locks: monitor[stack:40|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - stack:40|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad state [bci:17, 21, 7, 241, 17] <|@ <|@
      nr  954  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  958  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  974  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  976  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  978  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B93 -> B94 falseDestination: B93 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B98" "B96" 
    xhandlers
    flags 
    probability 4587200086203916006
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  984  <|@ instruction r10|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  986  <|@ instruction r10|DWORD = LEA [r10|DWORD + 23] size: DWORD <|@ <|@
      nr  988  <|@ instruction r10|DWORD = AND r10|DWORD y: -8 size: DWORD <|@ <|@
      nr  990  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  992  <|@ instruction r11|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  994  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  996  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B98 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B99" 
    xhandlers
    flags 
    probability 4587129693552234790
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1006  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1008  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1010  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1012  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1014  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1016  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1018  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1020  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 1022  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1024  <|@ instruction rax|DWORD = MOVE stack:52|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B96 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B96" "B98" 
    successors "B118" "B101" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1056  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1058  <|@ instruction rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr 1060  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1062  <|@ instruction CMP rdx|QWORD y: 1 size: QWORD <|@ <|@
      nr 1064  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B99 -> B118 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B106" "B104" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction rcx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1076  <|@ instruction r10|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1078  <|@ instruction r11|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 1080  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1082  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B101 -> B106 falseDestination: B101 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B101" "B104" 
    successors "B109" "B108" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1114  <|@ instruction r11|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1116  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1118  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B106 -> B109 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1126  <|@ instruction xmm0|V128_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1128  <|@ instruction J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1130  <|@ instruction r11|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr 1132  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" "B106" 
    successors "B112" "B111" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1138  <|@ instruction r11|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 1140  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1142  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B109 -> B112 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1150  <|@ instruction xmm0|V64_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1152  <|@ instruction J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1154  <|@ instruction r11|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr 1156  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" "B109" 
    successors "B115" "B114" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1162  <|@ instruction r11|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 1164  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1166  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B112 -> B115 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1174  <|@ instruction xmm0|V32_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 1176  <|@ instruction J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1178  <|@ instruction r11|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr 1180  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1182  <|@ instruction JUMP ~[] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B112" 
    successors "B118" "B117" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1186  <|@ instruction r11|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 1188  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1190  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B115 -> B118 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1198  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[.] + r8|QWORD * 2] size: DWORD <|@ <|@
      nr 1200  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD <|@ <|@
      nr 1202  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B99" "B117" "B115" 
    successors "B119" "B137" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1206  <|@ instruction rcx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 1208  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1210  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B118 -> B119 falseDestination: B118 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B138" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1360  <|@ instruction r10|QWORD = MOVE input: long[4270112768|0xfe84c000] <|@ <|@
      nr 1362  <|@ instruction xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1364  <|@ instruction xmm2|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1366  <|@ instruction xmm3|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1368  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1370  <|@ instruction JUMP ~[] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" "B135" "B134" 
    successors "B142" "B140" 
    xhandlers
    flags 
    probability 4587982226778151736
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1374  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr 1376  <|@ instruction MOV (x: [r14|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1378  <|@ instruction r11|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1380  <|@ instruction MOVB (x: [r11|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1382  <|@ instruction rcx|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1384  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1386  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B138 -> B142 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4587904012720728163
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1396  <|@ instruction r13|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr 1398  <|@ instruction CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1400  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B140 -> B142 falseDestination: B140 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B144" 
    xhandlers
    flags 
    probability 4587826580803878826
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1418  <|@ instruction rdx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr 1420  <|@ instruction MOV [rsi|QWORD[.] + rdx|QWORD * 2 + 16] y: 98 size: WORD <|@ <|@
      nr 1422  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1424  <|@ instruction r14|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1426  <|@ instruction stack:96|V256_WORD = VMOVE xmm0|V256_WORD <|@ <|@
      nr 1428  <|@ instruction xmm0|V64_WORD = VMOVE xmm2|V64_WORD <|@ <|@
      nr 1430  <|@ instruction xmm2|V256_WORD = VMOVE stack:96|V256_WORD <|@ <|@
      nr 1432  <|@ instruction JUMP ~[] destination: B143 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4587973608062233869
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1484  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction stack:100|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1494  <|@ st <@st|@reference-map: [stack:12, stack:64, stack:72]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:40|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: stack:40|QWORD[.] - 
locks: monitor[stack:40|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - stack:40|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad state [bci:17, 21, 7, 248, 17] <|@ <|@
      nr 1496  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1498  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1500  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" "B155" 
    xhandlers
    flags 
    probability 4587973608062233869
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1516  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1518  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1520  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1522  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B150 -> B151 falseDestination: B150 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B155" "B153" 
    xhandlers
    flags 
    probability 4587192329359589925
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1526  <|@ instruction rdx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr 1528  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr 1530  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr 1532  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1534  <|@ instruction rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1536  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1538  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B151 -> B155 falseDestination: B151 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B156" 
    xhandlers
    flags 
    probability 4587122014276351970
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1548  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1550  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1552  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1554  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1556  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1558  <|@ instruction MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1560  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1562  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 1564  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1566  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1568  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1570  <|@ instruction JUMP ~[] destination: B153 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B153" "B155" 
    successors "B175" "B158" 
    xhandlers
    flags 
    probability 4587973608062233868
    begin_IR
      LIR
      nr 1592  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1594  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1596  <|@ instruction rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr 1598  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1600  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 1602  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B156 -> B175 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B163" "B161" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1610  <|@ instruction r10|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1612  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1614  <|@ instruction r10|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 1616  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 1618  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1624  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1620  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B158 -> B163 falseDestination: B158 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B158" "B161" 
    successors "B166" "B165" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1652  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 1654  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1656  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B163 -> B166 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr 1662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1664  <|@ instruction xmm0|V128_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1666  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1668  <|@ instruction r11|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr 1670  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1672  <|@ instruction JUMP ~[] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B163" 
    successors "B169" "B168" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1674  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1676  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 1678  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1680  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B169 falseDestination: B166 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B169" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr 1686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1688  <|@ instruction xmm0|V64_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1690  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1692  <|@ instruction r11|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr 1694  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1696  <|@ instruction JUMP ~[] destination: B168 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" "B166" 
    successors "B172" "B171" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1700  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 1702  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1704  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B169 -> B172 falseDestination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1712  <|@ instruction xmm0|V32_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 1714  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1716  <|@ instruction r11|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr 1718  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1720  <|@ instruction JUMP ~[] destination: B171 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" "B169" 
    successors "B175" "B174" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1724  <|@ instruction r11|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 1726  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1728  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B172 -> B175 falseDestination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr 1734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1736  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[*] + r8|QWORD * 2] size: DWORD <|@ <|@
      nr 1738  <|@ instruction MOV (x: [rdx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD <|@ <|@
      nr 1740  <|@ instruction JUMP ~[] destination: B174 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B156" "B174" "B172" 
    successors "B176" "B194" 
    xhandlers
    flags 
    probability 4587973608062233868
    begin_IR
      LIR
      nr 1742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1744  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 1746  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1748  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B175 -> B176 falseDestination: B175 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B195" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1898  <|@ instruction rsi|QWORD = MOVE input: long[4270112768|0xfe84c000] <|@ <|@
      nr 1900  <|@ instruction xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1902  <|@ instruction xmm2|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1904  <|@ instruction xmm3|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1906  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1908  <|@ instruction JUMP ~[] destination: B194 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" "B192" "B191" 
    successors "B199" "B197" 
    xhandlers
    flags 
    probability 4587973608062233868
    begin_IR
      LIR
      nr 1910  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1912  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3 <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r14|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1916  <|@ instruction r11|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1918  <|@ instruction MOVB (x: [r11|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1920  <|@ instruction rdx|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1922  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1924  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B195 -> B199 falseDestination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B199" "B200" 
    xhandlers
    flags 
    probability 4587895480191969474
    begin_IR
      LIR
      nr 1932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1934  <|@ instruction r13|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr 1936  <|@ instruction CMP (x: rdx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1938  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B197 -> B199 falseDestination: B197 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B201" 
    xhandlers
    flags 
    probability 4587818133600407724
    begin_IR
      LIR
      nr 1954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1956  <|@ instruction r10|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1958  <|@ instruction MOV [rax|QWORD[.] + r10|QWORD * 2 + 16] y: 98 size: WORD <|@ <|@
      nr 1960  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1962  <|@ instruction r14|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1964  <|@ instruction rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1966  <|@ instruction stack:96|V256_WORD = VMOVE xmm0|V256_WORD <|@ <|@
      nr 1968  <|@ instruction xmm0|V64_WORD = VMOVE xmm2|V64_WORD <|@ <|@
      nr 1970  <|@ instruction xmm2|V256_WORD = VMOVE stack:96|V256_WORD <|@ <|@
      nr 1972  <|@ instruction JUMP ~[] destination: B200 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B262" 
    xhandlers
    flags 
    probability 4585798268051676323
    begin_IR
      LIR
      nr 2410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2412  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2414  <|@ instruction JUMP ~[] destination: B250 -> B262 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B124" "B122" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1214  <|@ instruction r10|QWORD[.] = LEA [rsi|QWORD[.] + rdx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1216  <|@ instruction rcx|QWORD = SUB (x: rcx|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ instruction rdx|QWORD = LEA [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr 1220  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1226  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1228  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1222  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B119 -> B124 falseDestination: B119 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B119" "B122" 
    successors "B127" "B126" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1256  <|@ instruction rdx|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr 1258  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1264  <|@ instruction xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1260  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B124 -> B127 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr 1268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1272  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm1|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1274  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1276  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1278  <|@ instruction JUMP ~[] destination: B126 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" "B124" 
    successors "B130" "B129" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1282  <|@ instruction rdx|QWORD = LEA [rcx|QWORD - 4] size: QWORD <|@ <|@
      nr 1284  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1290  <|@ instruction xmm2|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1286  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B127 -> B130 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1298  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm2|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1300  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 1302  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1304  <|@ instruction JUMP ~[] destination: B129 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" "B127" 
    successors "B133" "B132" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1308  <|@ instruction rdx|QWORD = LEA [rcx|QWORD - 2] size: QWORD <|@ <|@
      nr 1310  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1316  <|@ instruction xmm3|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1312  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B130 -> B133 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1324  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm3|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1326  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 1328  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1330  <|@ instruction JUMP ~[] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B130" 
    successors "B134" "B135" 
    xhandlers
    flags 
    probability 4583478627150781240
    begin_IR
      LIR
      nr 1332  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1334  <|@ instruction rcx|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr 1336  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1338  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B133 -> B134 falseDestination: B133 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B138" 
    xhandlers
    flags 
    probability 4581523275715191914
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1348  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 1350  <|@ instruction r10|QWORD = MOVE input: long[4270112768|0xfe84c000] <|@ <|@
      nr 1352  <|@ instruction JUMP ~[] destination: B135 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B181" "B179" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1752  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1754  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1756  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 1758  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1764  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1766  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1760  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B176 -> B181 falseDestination: B176 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B176" "B179" 
    successors "B184" "B183" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1792  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1794  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1796  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1802  <|@ instruction xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1798  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B181 -> B184 falseDestination: B181 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B184" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1810  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm1|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1812  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1814  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1816  <|@ instruction JUMP ~[] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" "B181" 
    successors "B187" "B186" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1818  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1820  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 1822  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1828  <|@ instruction xmm2|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1824  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B184 -> B187 falseDestination: B184 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B187" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1836  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm2|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1838  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 1840  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1842  <|@ instruction JUMP ~[] destination: B186 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" "B184" 
    successors "B190" "B189" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1846  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 1848  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1854  <|@ instruction xmm3|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1850  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B187 -> B190 falseDestination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr 1858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1862  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm3|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1864  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 1866  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1868  <|@ instruction JUMP ~[] destination: B189 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" "B187" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4583470008434863372
    begin_IR
      LIR
      nr 1870  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1872  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 1874  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1876  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B195" 
    xhandlers
    flags 
    probability 4581516811678253513
    begin_IR
      LIR
      nr 1884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1886  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 1888  <|@ instruction rsi|QWORD = MOVE input: long[4270112768|0xfe84c000] <|@ <|@
      nr 1890  <|@ instruction JUMP ~[] destination: B192 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[34|0x22] <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:124) [bci: 0]
locals: r13|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   22  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:124) [bci: 0]
locals: r13|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   28  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  174  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  176  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  178  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}, stack:32|QWORD, eliminated] 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} Ljava/lang/StringBuffer; int[33|0x21] r14|QWORD[.] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 7, 227, 17] <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction xmm1|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  184  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  186  <|@ instruction r10|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B82" "B84" 
    successors 
    xhandlers
    flags 
    probability 4581393005893843005
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction MOV [r15|QWORD + 668] y: -910945 size: DWORD <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  896  <|@ st <@st|@reference-map: [r11:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r11|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: r11|QWORD[.] - 
locks: monitor[r11|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:163) [bci: 234]
locals: - r11|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 7, 234, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B23" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = AND r8|QWORD y: 7 size: QWORD <|@ <|@
      nr  248  <|@ instruction CMP rax|QWORD y: 5 size: QWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B11" 
    successors "B24" "B29" 
    xhandlers
    flags 
    probability 4576399414627014598
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction TEST r8|QWORD y: 2 size: QWORD <|@ <|@
      nr  344  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4576346956698554986
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction r8|QWORD = OR r8|QWORD y: 1 size: QWORD <|@ <|@
      nr  352  <|@ instruction MOV (x: [r9|QWORD], y: r8|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction rax|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: rax|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B35" 
    xhandlers
    flags 
    probability 4576295023349379970
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B25 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B262" 
    successors "B265" 
    xhandlers
    flags 
    probability 4576791068796935337
    begin_IR
      LIR
      nr 2514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2516  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 2518  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 2520  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2522  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
bench.StringOp.cont(Bench.scala:166) [bci: 256]
stack: vobject:String:0{value=r14|QWORD[.],hash=int[0|0x0]} 
locals: - - 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
vobject:String:0{value=r14|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; r14|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:256, 17] <|@ <|@
      nr 2524  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2526  <|@ instruction JUMP ~[] destination: B263 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B101" "B104" 
    successors "B106" "B104" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4583478627150781240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1098  <|@ instruction xmm0|V256_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1100  <|@ instruction J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1102  <|@ instruction r8|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr 1104  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1106  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B104 -> B106 falseDestination: B104 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B119" "B122" 
    successors "B124" "B122" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4583478627150781240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1242  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1244  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 1246  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1248  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B122 -> B124 falseDestination: B122 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B138" 
    xhandlers
    flags 
    probability 4574471427896040248
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1342  <|@ instruction r10|QWORD = MOVE input: long[4270112768|0xfe84c000] <|@ <|@
      nr 1344  <|@ instruction JUMP ~[] destination: B134 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B195" 
    xhandlers
    flags 
    probability 4574462809180122380
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1880  <|@ instruction rsi|QWORD = MOVE input: long[4270112768|0xfe84c000] <|@ <|@
      nr 1882  <|@ instruction JUMP ~[] destination: B191 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B176" "B179" 
    successors "B181" "B179" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4583470008434863372
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1780  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1782  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 1784  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1786  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B179 -> B181 falseDestination: B179 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B158" "B161" 
    successors "B163" "B161" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4583470008434863372
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1636  <|@ instruction xmm0|V256_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1638  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1640  <|@ instruction r8|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr 1642  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1644  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B161 -> B163 falseDestination: B161 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" "B94" 
    successors "B99" 
    xhandlers
    flags 
    probability 4573470287961018512
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1032  <|@ instruction r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 1040  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1044  <|@ instruction r14|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ st <@st|@reference-map: [r14:0, stack:64, stack:72]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: r14|QWORD[.] stack:48|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r14|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: r14|QWORD[.] - 
locks: monitor[r14|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - r14|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 7, 241, 17] <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction rax|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1052  <|@ instruction JUMP ~[] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B150" "B151" 
    successors "B156" 
    xhandlers
    flags 
    probability 4573462772440738132
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1574  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1580  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 1582  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1584  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1586  <|@ st <@st|@reference-map: [r14:0, stack:12, stack:64, stack:72]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: r14|QWORD[.] stack:48|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r14|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: r14|QWORD[.] - 
locks: monitor[r14|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - r14|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 7, 248, 17] <|@ <|@
      nr 1588  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1590  <|@ instruction JUMP ~[] destination: B155 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B21" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction xmm3|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  258  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  260  <|@ instruction TEST rdi|QWORD y: 7 size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction TEST rdi|QWORD y: 768 size: QWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" "B16" 
    xhandlers
    flags 
    probability 4560610154621423830
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r8|QWORD = AND r8|QWORD y: 895 size: QWORD <|@ <|@
      nr  274  <|@ instruction rsi|QWORD = OR (x: r15|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction rax|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B14 -> B19 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B35" 
    xhandlers
    flags 
    probability 4560602683690073978
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B16 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B256" "B260" 
    xhandlers
    flags 
    probability 4558551172406818075
    begin_IR
      LIR
      nr 2448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2452  <|@ instruction rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2454  <|@ instruction rax|QWORD = MOV [r10|QWORD + 22] size: QWORD <|@ <|@
      nr 2456  <|@ instruction rsi|QWORD = MOV [r10|QWORD + 38] size: QWORD <|@ <|@
      nr 2458  <|@ instruction rax|QWORD = XOR (x: r15|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 2460  <|@ instruction rax|QWORD = OR (x: rax|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2462  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 2464  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B255 -> B256 falseDestination: B255 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B257" "B260" 
    xhandlers
    flags 
    probability 4558497052915465609
    begin_IR
      LIR
      nr 2466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2468  <|@ instruction rax|QWORD = MOV [r10|QWORD + 54] size: QWORD <|@ <|@
      nr 2470  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r10|QWORD + 62]) size: QWORD <|@ <|@
      nr 2472  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 2474  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B256 -> B257 falseDestination: B256 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B262" 
    xhandlers
    flags 
    probability 4557961269951076194
    begin_IR
      LIR
      nr 2476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2478  <|@ instruction MOV (x: [r10|QWORD + 22], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2480  <|@ instruction JUMP ~[] destination: B257 -> B262 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B138" "B140" 
    successors 
    xhandlers
    flags 
    probability 4562623494075675088
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1390  <|@ instruction rbp|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1410  <|@ instruction MOV [r15|QWORD + 668] y: -977249 size: DWORD <|@ <|@
      nr 1412  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1414  <|@ st <@st|@reference-map: [rbp:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rbp|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: rbp|QWORD[.] - 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - rbp|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 7, 241, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B195" "B197" 
    successors 
    xhandlers
    flags 
    probability 4562618005677378589
    begin_IR
      LIR
      nr 1946  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1928  <|@ instruction rbp|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1948  <|@ instruction MOV [r15|QWORD + 668] y: -949345 size: DWORD <|@ <|@
      nr 1950  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1952  <|@ st <@st|@reference-map: [rbp:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rbp|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: rbp|QWORD[.] - 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - rbp|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 7, 248, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4547007122018943792
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction rax|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" "B34" 
    xhandlers
    flags 
    probability 4546343039232290256
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction xmm3|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  402  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  404  <|@ instruction MOV (x: [r9|QWORD], y: r9|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction CMP [r8|QWORD + 22] y: 0 size: QWORD <|@ <|@
      nr  408  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" "B32" 
    xhandlers
    flags 
    probability 4545671577748007227
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  414  <|@ instruction rax|QWORD = CAS (address: [r8|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  416  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B30 -> B34 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4545067262412152501
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B34" 
    xhandlers
    flags 
    probability 4546275893083861953
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction xmm3|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  374  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  376  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction TEST rax|QWORD y: -4089 size: QWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4546209418396917933
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction MOV (x: [r9|QWORD], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  388  <|@ instruction stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B27 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4546269252255995410
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction rax|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rbx|QWORD) accessKind: QWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B17 -> B19 falseDestination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B35" 
    xhandlers
    flags 
    probability 4546262611428128875
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B20 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B252" 
    successors "B262" 
    xhandlers
    flags 
    probability 4543697352192320117
    begin_IR
      LIR
      nr 2432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2434  <|@ instruction rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2436  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2438  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 2440  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10acdcb60:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr 2442  <|@ instruction JUMP ~[] destination: B253 -> B262 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B255" "B256" 
    successors "B262" 
    xhandlers
    flags 
    probability 4544347644035395019
    begin_IR
      LIR
      nr 2490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2492  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2494  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 2496  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10acdcb60:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr 2498  <|@ instruction JUMP ~[] destination: B260 -> B262 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B26" "B29" 
    successors "B35" 
    xhandlers
    flags 
    probability 4535990231163046073
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction rdx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  440  <|@ st <@st|@reference-map: [rbp:0, r14:0, stack:72]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}, stack:32|QWORD, eliminated] 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} Ljava/lang/StringBuffer; int[33|0x21] r14|QWORD[.] Object[null] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x10acd9b20:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:61, 35, 7, 227, 17] <|@ <|@
      nr  442  <|@ instruction r11|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B35" 
    xhandlers
    flags 
    probability 4516603486667031871
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rdx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  312  <|@ st <@st|@reference-map: [rbp:0, r14:0, stack:72]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} - 
locks: monitor[vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}, stack:32|QWORD, eliminated] 
bench.StringOp.cont(Bench.scala:162) [bci: 227]
locals: - vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} Ljava/lang/StringBuffer; int[33|0x21] r14|QWORD[.] Object[null] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x10acd9b20:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:61, 35, 7, 227, 17] <|@ <|@
      nr  314  <|@ instruction r11|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B19 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1466  <|@ instruction rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1468  <|@ instruction MOV [r15|QWORD + 668] y: -934753 size: DWORD <|@ <|@
      nr 1470  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1472  <|@ st <@st|@reference-map: [rbp:0]
live-base-pointers: []
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5]
locals: rbp|QWORD[.] Object[String:"b"] 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - rbp|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:5, 248, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction MOV [r15|QWORD + 668] y: -962657 size: DWORD <|@ <|@
      nr  930  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  932  <|@ st <@st|@reference-map: [rbp:0]
live-base-pointers: []
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5]
locals: rbp|QWORD[.] Object[String:"b"] 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - rbp|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:5, 241, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction MOV [r15|QWORD + 668] y: -1065569 size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@reference-map: [rbp:0, r14:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: rbp|QWORD[.] r14|QWORD[.] rax|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rbp|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: rbp|QWORD[.] - 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:163) [bci: 234]
locals: - rbp|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:20, 21, 7, 234, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2564  <|@ instruction rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2566  <|@ instruction MOV [r15|QWORD + 668] y: -923667 size: DWORD <|@ <|@
      nr 2568  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2570  <|@ st <@st|@reference-map: [rbp:0]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: rbp|QWORD[.] - int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: rbp|QWORD[.] - 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - rbp|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:61, 35, 7, 248, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1504  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1508  <|@ instruction MOV [r15|QWORD + 668] y: -1085537 size: DWORD <|@ <|@
      nr 1510  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@reference-map: [rcx:0, rbp:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: rbp|QWORD[.] rcx|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rbp|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: rbp|QWORD[.] - 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:165) [bci: 248]
locals: - rbp|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:20, 21, 7, 248, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  962  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction MOV [r15|QWORD + 668] y: -1075553 size: DWORD <|@ <|@
      nr  968  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  970  <|@ st <@st|@reference-map: [rbp:0, r10:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: rbp|QWORD[.] r10|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rbp|QWORD[.] Object[String:"b"] int[1|0x1] 
java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7]
locals: rbp|QWORD[.] - 
locks: monitor[rbp|QWORD[.], stack:32|QWORD] 
bench.StringOp.cont(Bench.scala:164) [bci: 241]
locals: - rbp|QWORD[.] 
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - - 
>@ <|@ instruction DEOPT info [bci:20, 21, 7, 241, 17] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #13         // java.lang.StringBuffer
     3: dup           
     4: invokespecial #0          // java.lang.StringBuffer.<init>:()void
     7: astore_1      
     8: aload_1       
     9: ldc           #19         // "a"
    11: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    14: pop           
    15: aload_0       
    16: aload_1       
    17: invokevirtual #2          // cont:(java.lang.StringBuffer)java.lang.String
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0   <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1016a1f78, value=0x10a281e60]:0x10a281e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6c0249d slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 55 10 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 59 12 r10|QWORD = LEA [rsi|QWORD + 48] size: QWORD  <||@
  Comment 63 14 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 66 16 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 72 block B2 null  <||@
  Comment 72 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 34 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 76 36 AMD64PREFETCH ~[rsi|QWORD + 240] instr: 0  <||@
  Comment 83 38 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 83 40 JUMP ~[] destination: B2 -> B3  <||@
  Comment 83 block B3 null  <||@
  Comment 83 42 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 83 44 r14|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 86 46 MOV [rsi|QWORD[*] + 12] y: 16 size: DWORD  <||@
  Comment 93 48 MOV [rsi|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 100 50 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 100 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 107 52 xmm0|V256_QWORD = A od: SIMD<27584968630861921,27584968630861922,27584968630861922,27584968630861922> oe: QWORD  <||@
  Comment 107 {DataSection[0x0]}  <||@
  Comment 116 54 J (address: [rsi|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 121 56 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 125 58 rdx|QWORD = LEA [rsi|QWORD + 88] size: QWORD  <||@
  Comment 129 60 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 133 62 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 139 block B5 null  <||@
  Comment 139 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 139 80 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 143 82 AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0  <||@
  Comment 150 84 AMD64PREFETCH ~[rsi|QWORD + 344] instr: 0  <||@
  Comment 157 86 AMD64PREFETCH ~[rsi|QWORD + 408] instr: 0  <||@
  Comment 164 88 AMD64PREFETCH ~[rsi|QWORD + 472] instr: 0  <||@
  Comment 171 90 MOV [rsi|QWORD + 12] y: 34 size: DWORD  <||@
  Comment 178 92 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 185 94 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 185 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 192 96 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 192 98 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 195 100 JUMP ~[] destination: B5 -> B6  <||@
  Comment 195 block B6 null  <||@
  Comment 195 102 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 195 104 rsi|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD  <||@
  Comment 199 106 xmm0|V256_WORD = H [rsi|QWORD[.]] nZ: YMM oh: VMOVDQU  <||@
  Comment 203 108 rsi|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 207 110 J (address: [rsi|QWORD[.]], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 211 112 rsi|QWORD[.] = LEA [r10|QWORD[.] + 48] size: QWORD  <||@
  Comment 215 114 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 219 116 J (address: [rsi|QWORD[.]], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 223 118 xmm1|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 227 120 J (address: [rsi|QWORD[.] + 32], input: xmm1|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 232 122 MOV [r10|QWORD[.] + 48] y: 98 size: WORD  <||@
  Comment 239 124 MOV [r10|QWORD[.] + 50] y: 98 size: WORD  <||@
  Comment 246 126 MOV [r10|QWORD[.] + 52] y: 98 size: WORD  <||@
  Comment 253 128 MOV [r10|QWORD[.] + 54] y: 98 size: WORD  <||@
  Comment 260 130 MOV [r10|QWORD[.] + 56] y: 98 size: WORD  <||@
  Comment 267 132 MOV [r10|QWORD[.] + 58] y: 98 size: WORD  <||@
  Comment 274 134 MOV [r10|QWORD[.] + 60] y: 98 size: WORD  <||@
  Comment 281 136 MOV [r10|QWORD[.] + 62] y: 98 size: WORD  <||@
  Comment 288 138 MOV [r10|QWORD[.] + 64] y: 98 size: WORD  <||@
  Comment 295 140 MOV [r10|QWORD[.] + 66] y: 98 size: WORD  <||@
  Comment 302 142 MOV [r10|QWORD[.] + 68] y: 98 size: WORD  <||@
  Comment 309 144 MOV [r10|QWORD[.] + 70] y: 98 size: WORD  <||@
  Comment 316 146 MOV [r10|QWORD[.] + 72] y: 98 size: WORD  <||@
  Comment 323 148 MOV [r10|QWORD[.] + 74] y: 98 size: WORD  <||@
  Comment 330 150 MOV [r10|QWORD[.] + 76] y: 98 size: WORD  <||@
  Comment 337 152 MOV [r10|QWORD[.] + 78] y: 98 size: WORD  <||@
  Comment 344 154 MOV [r10|QWORD[.] + 80] y: 98 size: WORD  <||@
  Comment 351 156 MOV [r10|QWORD[.] + 82] y: 98 size: WORD  <||@
  Comment 358 158 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 362 160 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 366 162 r11|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 370 164 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 373 166 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 379 block B8 null  <||@
  Comment 379 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 379 192 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 383 194 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 390 196 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 390 198 JUMP ~[] destination: B8 -> B9  <||@
  Comment 390 block B9 null  <||@
  Comment 390 200 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 390 202 r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 393 204 stack:40|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 398 206 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}  <||@
  Comment 398 {meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}}  <||@
  Comment 408 208 r8|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 415 210 MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD  <||@
  Comment 418 212 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}  <||@
  Comment 418 {meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}}  <||@
  Comment 425 214 MOV [rsi|QWORD[*] + 12] y: 34 size: DWORD  <||@
  Comment 432 216 r8|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3  <||@
  Comment 439 218 MOV (x: [rsi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 443 220 MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 447 222 r8|QWORD = MOV [r11|QWORD[.]] size: QWORD  <||@
  Comment 450 224 r9|QWORD = STACKLEA stack:32|QWORD  <||@
  Comment 455 226 rcx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 462 228 rbx|QWORD = OR (x: r15|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 468 230 rdi|QWORD = XOR (x: rbx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 474 232 TEST rdi|QWORD y: -121 size: QWORD  <||@
  Comment 481 234 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 487 block B10 null  <||@
  Comment 487 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 487 238 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 492 240 JUMP ~[] destination: B10 -> B35  <||@
  Comment 492 block B35 null  <||@
  Comment 492 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 492 450 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 495 452 rdx|DWORD = MOVE input: int[35|0x23]  <||@
  Comment 500 454 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad state [bci:17, 21, 7, 234, 17]  <||@
  Comment 500 9  <||@
  Comment 503 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 508 [stack:64, stack:72]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |-                 
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                   |2          
     locals:  |stack:40|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                           |1 
     locals:  |stack:40|QWORD[.]                           |- 
     locks:   |monitor[stack:40|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:163) [bci: 234, duringCall: true, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:40|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 509 456 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 511 458 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 517 block B37 null  <||@
  Comment 517 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 517 474 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 521 476 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 525 478 CMP rax|DWORD y: 16777215 size: DWORD  <||@
  Comment 531 480 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B42  <||@
  Comment 537 block B38 null  <||@
  Comment 537 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 537 484 rcx|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 541 486 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 544 488 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 547 490 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 550 492 r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 556 494 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 559 496 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B42 falseDestination: B38 -> B40  <||@
  Comment 565 block B40 null  <||@
  Comment 565 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 565 504 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 569 506 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 577 508 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 585 510 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 593 512 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 601 514 MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 604 516 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 611 518 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 611 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 618 520 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 618 522 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 621 524 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 624 526 JUMP ~[] destination: B40 -> B43  <||@
  Comment 624 block B43 null  <||@
  Comment 624 546 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 624 548 CMP r13|DWORD y: 35 size: DWORD  <||@
  Comment 628 550 rsi|DWORD = CMOVE (falseValue: int[34|0x22], ~trueValue: r13|DWORD) condition: <  <||@
  Comment 637 552 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 640 554 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 644 556 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B43 -> B62 falseDestination: B43 -> B45  <||@
  Comment 650 block B45 null  <||@
  Comment 650 562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 650 564 r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 655 566 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 659 568 rcx|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD  <||@
  Comment 663 570 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 667 572 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 670 578 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 677 574 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B45 -> B50 falseDestination: B45 -> B48  <||@
  Comment 683 block B50 null  <||@
  Comment 683 604 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 683 606 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 687 608 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 690 610 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B53 falseDestination: B50 -> B52  <||@
  Comment 696 block B52 null  <||@
  Comment 696 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 696 618 xmm0|V128_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 702 620 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 708 622 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 712 624 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 715 626 JUMP ~[] destination: B52 -> B53  <||@
  Comment 715 block B53 null  <||@
  Comment 715 628 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 715 630 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 719 632 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 722 634 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B56 falseDestination: B53 -> B55  <||@
  Comment 728 block B55 null  <||@
  Comment 728 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 728 642 xmm0|V64_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 734 644 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 740 646 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 744 648 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 747 650 JUMP ~[] destination: B55 -> B56  <||@
  Comment 747 block B56 null  <||@
  Comment 747 652 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 747 654 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 751 656 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 754 658 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58  <||@
  Comment 760 block B58 null  <||@
  Comment 760 664 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 760 666 xmm0|V32_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 766 668 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 772 670 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 776 672 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 779 674 JUMP ~[] destination: B58 -> B59  <||@
  Comment 779 block B59 null  <||@
  Comment 779 676 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 779 678 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 785 680 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 788 682 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61  <||@
  Comment 794 block B61 null  <||@
  Comment 794 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 794 690 rcx|DWORD = MOVSX [rcx|QWORD[.] + r11|QWORD * 2] size: DWORD  <||@
  Comment 799 692 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 804 694 JUMP ~[] destination: B61 -> B62  <||@
  Comment 804 block B62 null  <||@
  Comment 804 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 804 698 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 807 700 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 811 702 xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 815 704 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 818 706 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B81  <||@
  Comment 824 block B81 null  <||@
  Comment 824 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 824 848 r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 829 850 xmm3|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 833 852 xmm2|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 837 854 JUMP ~[] destination: B81 -> B82  <||@
  Comment 837 block B82 null  <||@
  Comment 837 856 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 837 858 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3  <||@
  Comment 844 860 MOV (x: [r11|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 848 862 rsi|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 855 864 r14|QWORD = MOVE input: long[4270112768|0xfe84c000]  <||@
  Comment 861 866 MOVB (x: [rsi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 865 868 rsi|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 869 870 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 871 872 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B82 -> B86 falseDestination: B82 -> B84  <||@
  Comment 877 block B84 null  <||@
  Comment 877 878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 877 880 rdx|DWORD = DEC r13|DWORD size: DWORD  <||@
  Comment 882 882 CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 884 884 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B84 -> B86 falseDestination: B84 -> B87  <||@
  Comment 890 block B87 null  <||@
  Comment 890 898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 890 900 rcx|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 893 902 MOV [rax|QWORD[.] + rcx|QWORD * 2 + 16] y: 98 size: WORD  <||@
  Comment 900 904 rcx|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 904 906 MOV (x: [r11|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 908 908 MOV (x: [r11|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 912 910 r10|DWORD = LEA [rsi|DWORD + 2] size: DWORD  <||@
  Comment 916 912 rsi|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 922 914 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 925 916 BRANCH trueDestinationProbability: 0.9446261558763105 condition: < trueDestination: B87 -> B88 falseDestination: B87 -> B91  <||@
  Comment 931 block B88 null  <||@
  Comment 931 918 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 931 920 CMP (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 933 922 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90  <||@
  Comment 939 block B90 null  <||@
  Comment 939 934 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 939 936 rsi|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 942 938 MOV [rax|QWORD[.] + rsi|QWORD * 2 + 16] y: 98 size: WORD  <||@
  Comment 949 940 JUMP ~[] destination: B90 -> B144  <||@
  Comment 949 block B144 null  <||@
  Comment 949 1434 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 949 1436 r10|DWORD[.] = MOV [r11|QWORD[.] + 16] size: DWORD  <||@
  Comment 953 1438 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:61, 35, 7, 241, 17]  <||@
  Comment 953 [r10:0, r11:0, stack:72]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0             |1  |2          
     locals:  |r11|QWORD[.]  |-  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |r11|QWORD[.]                           |- 
     locks:   |monitor[r11|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:164) [bci: 241, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |r11|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 953 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 961 1440 rsi|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 965 1442 MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 969 1444 MOV (x: [r11|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 973 1446 r9|DWORD = LEA [rcx|DWORD + 2] size: DWORD  <||@
  Comment 977 1448 rdx|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 983 1450 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3  <||@
  Comment 990 1452 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 993 1454 BRANCH trueDestinationProbability: 0.9446261558763105 condition: < trueDestination: B144 -> B145 falseDestination: B144 -> B148  <||@
  Comment 999 block B145 null  <||@
  Comment 999 1456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 999 1458 r8|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 1002 1460 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1005 1462 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B145 -> B146 falseDestination: B145 -> B147  <||@
  Comment 1011 block B147 null  <||@
  Comment 1011 1474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1011 1476 rdx|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 1014 1478 MOV [rcx|QWORD[.] + rdx|QWORD * 2 + 16] y: 98 size: WORD  <||@
  Comment 1021 1480 JUMP ~[] destination: B147 -> B201  <||@
  Comment 1021 block B201 null  <||@
  Comment 1021 1974 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1021 1976 rdx|DWORD[.] = MOV [r11|QWORD[.] + 20] size: DWORD  <||@
  Comment 1025 1978 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1027 1980 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B201 -> B202 falseDestination: B201 -> B267  <||@
  Comment 1033 block B202 null  <||@
  Comment 1033 1982 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1033 1984 r13|DWORD[.] = MOV [r11|QWORD[.] + 16] size: DWORD  <||@
  Comment 1037 1986 NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:61, 35, 7, 248, 17]  <||@
  Comment 1037 [r11:0, r13:0, stack:72]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0             |1  |2          
     locals:  |r11|QWORD[.]  |-  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |r11|QWORD[.]                           |- 
     locks:   |monitor[r11|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:165) [bci: 248, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |r11|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1037 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1041 1988 rsi|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 1043 1990 MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 1047 1992 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1051 1994 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1055 1996 CMP rsi|DWORD y: 16777215 size: DWORD  <||@
  Comment 1061 1998 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B202 -> B203 falseDestination: B202 -> B207  <||@
  Comment 1067 block B203 null  <||@
  Comment 1067 2000 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1067 2002 r10|DWORD = SHL rsi|DWORD size: DWORD  <||@
  Comment 1073 2004 r10|DWORD = LEA [r10|DWORD + 23] size: DWORD  <||@
  Comment 1077 2006 r10|DWORD = AND r10|DWORD y: -8 size: DWORD  <||@
  Comment 1081 2008 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1084 2010 r8|QWORD = ADD (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1090 2012 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1093 2014 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B203 -> B207 falseDestination: B203 -> B205  <||@
  Comment 1099 block B205 null  <||@
  Comment 1099 2020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1099 2022 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 1103 2024 AMD64PREFETCH ~[r10|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 1112 2026 AMD64PREFETCH ~[r10|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 1121 2028 AMD64PREFETCH ~[r10|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 1130 2030 AMD64PREFETCH ~[r10|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 1139 2032 MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 1142 2034 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 1149 2036 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1149 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1156 2038 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1156 2040 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1159 2042 r14|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1162 2044 JUMP ~[] destination: B205 -> B208  <||@
  Comment 1162 block B208 null  <||@
  Comment 1162 2068 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1162 2070 rsi|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1170 2072 CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1173 2074 rdx|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rsi|DWORD) condition: >  <||@
  Comment 1179 2076 rsi|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 1182 2078 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 1186 2080 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B208 -> B227 falseDestination: B208 -> B210  <||@
  Comment 1192 block B210 null  <||@
  Comment 1192 2086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1192 2088 rdx|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 1196 2090 r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1200 2092 r11|QWORD[*] = LEA [r13|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 1208 2094 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1211 2100 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1218 2096 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B210 -> B215 falseDestination: B210 -> B213  <||@
  Comment 1224 block B215 null  <||@
  Comment 1224 2126 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1224 2128 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1228 2130 CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1231 2132 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B215 -> B218 falseDestination: B215 -> B217  <||@
  Comment 1237 block B217 null  <||@
  Comment 1237 2138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1237 2140 xmm0|V128_WORD = H [r11|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 1243 2142 J (address: [r10|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1249 2144 rdx|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 1253 2146 r8|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1256 2148 JUMP ~[] destination: B217 -> B218  <||@
  Comment 1256 block B218 null  <||@
  Comment 1256 2150 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1256 2152 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 1260 2154 CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1263 2156 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B218 -> B221 falseDestination: B218 -> B220  <||@
  Comment 1269 block B220 null  <||@
  Comment 1269 2162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1269 2164 xmm0|V64_WORD = H [r11|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 1275 2166 J (address: [r10|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1281 2168 rdx|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 1285 2170 r8|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1288 2172 JUMP ~[] destination: B220 -> B221  <||@
  Comment 1288 block B221 null  <||@
  Comment 1288 2174 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1288 2176 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 1292 2178 CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1295 2180 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B221 -> B224 falseDestination: B221 -> B223  <||@
  Comment 1301 block B223 null  <||@
  Comment 1301 2186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1301 2188 xmm0|V32_WORD = H [r11|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 1307 2190 J (address: [r10|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1313 2192 rdx|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 1317 2194 r8|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1320 2196 JUMP ~[] destination: B223 -> B224  <||@
  Comment 1320 block B224 null  <||@
  Comment 1320 2198 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1320 2200 rdx|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 1326 2202 CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1329 2204 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B224 -> B227 falseDestination: B224 -> B226  <||@
  Comment 1335 block B226 null  <||@
  Comment 1335 2210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1335 2212 rdx|DWORD = MOVSX [r11|QWORD[*] + r8|QWORD * 2] size: DWORD  <||@
  Comment 1340 2214 MOV (x: [r10|QWORD[.] + r8|QWORD * 2], y: rdx|DWORD) size: WORD  <||@
  Comment 1345 2216 JUMP ~[] destination: B226 -> B227  <||@
  Comment 1345 block B227 null  <||@
  Comment 1345 2218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1345 2220 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1348 2222 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1351 2224 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B227 -> B228 falseDestination: B227 -> B247  <||@
  Comment 1357 block B247 null  <||@
  Comment 1357 2376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1357 2370 r14|QWORD = MOVE input: long[4270112768|0xfe84c000]  <||@
  Comment 1363 2372 r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1368 2378 r13|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3  <||@
  Comment 1375 2380 MOV (x: [r11|QWORD[.] + 20], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1379 2382 rsi|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1386 2384 MOVB (x: [rsi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1390 2386 r10|QWORD = MOV [r11|QWORD[.]] size: QWORD  <||@
  Comment 1393 2388 rsi|QWORD = AND r10|QWORD y: 7 size: QWORD  <||@
  Comment 1400 2390 CMP rsi|QWORD y: 5 size: QWORD  <||@
  Comment 1404 2392 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B247 -> B248 falseDestination: B247 -> B249  <||@
  Comment 1410 block B248 null  <||@
  Comment 1410 2394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1410 2396 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1413 2398 JUMP ~[] destination: B248 -> B262  <||@
  Comment 1413 block B262 null  <||@
  Comment 1413 2504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1413 2506 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1417 2508 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 1421 2510 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1425 2512 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B262 -> B263 falseDestination: B262 -> B264  <||@
  Comment 1431 block B264 null  <||@
  Comment 1431 2528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1431 2530 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 1435 2532 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 1442 2534 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1442 2536 JUMP ~[] destination: B264 -> B265  <||@
  Comment 1442 block B265 null  <||@
  Comment 1442 2538 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1442 2540 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1445 2542 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1445 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1455 2544 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 1462 2546 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1465 2548 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1465 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1472 2550 MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1476 2552 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1480 2554 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1483 2556 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad  <||@
  Comment 1492 12  <||@
  Comment 1502 block B63 null  <||@
  Comment 1502 708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1502 710 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1507 712 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1510 714 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1514 716 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1517 722 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1524 724 xmm2|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1528 718 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B63 -> B68 falseDestination: B63 -> B66  <||@
  Comment 1534 block B68 null  <||@
  Comment 1534 750 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1534 752 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1538 754 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1541 756 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B71 falseDestination: B68 -> B70  <||@
  Comment 1547 block B70 null  <||@
  Comment 1547 762 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1547 764 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm1|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1553 766 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1557 768 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1560 770 JUMP ~[] destination: B70 -> B71  <||@
  Comment 1560 block B71 null  <||@
  Comment 1560 772 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1560 774 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1564 776 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1567 778 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B71 -> B74 falseDestination: B71 -> B73  <||@
  Comment 1573 block B73 null  <||@
  Comment 1573 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1573 786 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1579 788 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 1583 790 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1586 792 JUMP ~[] destination: B73 -> B74  <||@
  Comment 1586 block B74 null  <||@
  Comment 1586 794 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1586 796 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1590 798 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1593 804 xmm3|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1597 800 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B74 -> B77 falseDestination: B74 -> B76  <||@
  Comment 1603 block B76 null  <||@
  Comment 1603 808 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1603 812 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm3|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1609 814 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 1613 816 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1616 818 JUMP ~[] destination: B76 -> B77  <||@
  Comment 1616 block B77 null  <||@
  Comment 1616 820 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1616 822 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1619 824 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1622 826 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B79  <||@
  Comment 1628 block B79 null  <||@
  Comment 1628 834 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1628 836 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1633 838 r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1638 840 JUMP ~[] destination: B79 -> B82  <||@
  Comment 1643 block B228 null  <||@
  Comment 1643 2226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1643 2228 r10|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1648 2230 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1651 2232 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1655 2234 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1658 2240 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1665 2236 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B228 -> B233 falseDestination: B228 -> B230  <||@
  Comment 1671 block B233 null  <||@
  Comment 1671 2266 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1671 2268 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1675 2270 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1678 2272 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B233 -> B236 falseDestination: B233 -> B235  <||@
  Comment 1684 block B235 null  <||@
  Comment 1684 2278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1684 2280 xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1688 2282 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm1|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1694 2284 rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 1698 2286 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1701 2288 JUMP ~[] destination: B235 -> B236  <||@
  Comment 1701 block B236 null  <||@
  Comment 1701 2290 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1701 2292 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1705 2294 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1708 2296 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B236 -> B239 falseDestination: B236 -> B238  <||@
  Comment 1714 block B238 null  <||@
  Comment 1714 2302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1714 2304 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1718 2306 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1724 2308 rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 1728 2310 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1731 2312 JUMP ~[] destination: B238 -> B239  <||@
  Comment 1731 block B239 null  <||@
  Comment 1731 2314 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1731 2316 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1735 2318 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1738 2320 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B239 -> B242 falseDestination: B239 -> B241  <||@
  Comment 1744 block B241 null  <||@
  Comment 1744 2326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1744 2328 xmm1|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1748 2330 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm1|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1754 2332 rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 1758 2334 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1761 2336 JUMP ~[] destination: B241 -> B242  <||@
  Comment 1761 block B242 null  <||@
  Comment 1761 2338 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1761 2340 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1764 2342 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1767 2344 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B242 -> B247 falseDestination: B242 -> B244  <||@
  Comment 1773 block B244 null  <||@
  Comment 1773 2354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1773 2356 MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1778 2362 JUMP ~[] destination: B244 -> B247  <||@
  Comment 1783 block B66 loop 1 depth 1 header:5269|LoopBegin  <||@
  Comment 1783 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1792 738 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm2|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1798 740 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1802 742 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1805 744 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B68 falseDestination: B66 -> B66  <||@
  Comment 1812 block B78 null  <||@
  Comment 1812 828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1812 830 r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1817 832 JUMP ~[] destination: B78 -> B82  <||@
  Comment 1822 block B48 loop 0 depth 1 header:5206|LoopBegin  <||@
  Comment 1822 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1824 590 xmm0|V256_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1830 592 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1836 594 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1840 596 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1843 598 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B50 falseDestination: B48 -> B48  <||@
  Comment 1850 block B213 loop 6 depth 1 header:5066|LoopBegin  <||@
  Comment 1850 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1856 2112 xmm0|V256_WORD = H [r11|QWORD[*] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1862 2114 J (address: [r10|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1868 2116 r8|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 1872 2118 CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1875 2120 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B213 -> B215 falseDestination: B213 -> B213  <||@
  Comment 1882 block B230 null  <||@
  Comment 1882 2244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1882 2248 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1886 2250 JUMP ~[] destination: B230 -> B231  <||@
  Comment 1886 block B231 loop 7 depth 1 header:5130|LoopBegin  <||@
  Comment 1886 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1888 2254 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1894 2256 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1898 2258 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1901 2260 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B231 -> B233 falseDestination: B231 -> B231  <||@
  Comment 1908 block B42 null  <||@
  Comment 1908 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1908 534 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1908 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1918 536 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1920 538 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1925 540 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1928 542 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 7, 234, 17]  <||@
  Comment 1928 {Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1933 [stack:64, stack:72]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2         
     locals:  |-                  |-                  |          
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                   |2          
     locals:  |stack:40|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                           |1 
     locals:  |stack:40|QWORD[.]                           |- 
     locks:   |monitor[stack:40|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:163) [bci: 234, duringCall: true, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:40|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1934 544 JUMP ~[] destination: B42 -> B43  <||@
  Comment 1939 block B249 null  <||@
  Comment 1939 2400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1939 2402 r8|QWORD = STACKLEA stack:32|QWORD  <||@
  Comment 1944 2404 rsi|QWORD = MOV [r8|QWORD] size: QWORD  <||@
  Comment 1947 2406 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1950 2408 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B249 -> B250 falseDestination: B249 -> B251  <||@
  Comment 1956 block B251 null  <||@
  Comment 1956 2416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1956 2418 TEST r10|QWORD y: 2 size: QWORD  <||@
  Comment 1963 2424 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1966 2420 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B251 -> B252 falseDestination: B251 -> B255  <||@
  Comment 1972 block B252 null  <||@
  Comment 1972 2422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1972 2426 rax|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1975 2428 rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD  <||@
  Comment 1980 2430 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B252 -> B253 falseDestination: B252 -> B262  <||@
  Comment 1991 block B207 null  <||@
  Comment 1991 2050 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1991 2052 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1991 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 2001 2054 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2004 2056 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 2007 2058 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2010 2060 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2015 2062 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2018 2064 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 7, 248, 17]  <||@
  Comment 2018 {Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2023 [r13:0, stack:72]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48, duringCall: false, rethrow: false]
              |0                  |1  |2          
     locals:  |stack:40|QWORD[.]  |-  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                           |1 
     locals:  |stack:40|QWORD[.]                           |- 
     locks:   |monitor[stack:40|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:165) [bci: 248, duringCall: true, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:40|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2024 2066 JUMP ~[] destination: B207 -> B208  <||@
  Comment 2029 block B91 null  <||@
  Comment 2029 942 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2029 944 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2034 946 stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2039 948 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2042 950 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2045 952 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad state [bci:17, 21, 7, 241, 17]  <||@
  Comment 2045 9  <||@
  Comment 2047 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 2052 [stack:64, stack:72]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |-                 
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                   |2          
     locals:  |stack:40|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                           |1 
     locals:  |stack:40|QWORD[.]                           |- 
     locks:   |monitor[stack:40|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:164) [bci: 241, duringCall: true, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:40|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2053 954 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2056 956 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 2059 958 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B91 -> B92 falseDestination: B91 -> B93  <||@
  Comment 2065 block B93 null  <||@
  Comment 2065 972 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2065 974 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2069 976 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 2073 978 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 2080 980 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B93 -> B94 falseDestination: B93 -> B98  <||@
  Comment 2086 block B94 null  <||@
  Comment 2086 982 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2086 984 r10|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 2092 986 r10|DWORD = LEA [r10|DWORD + 23] size: DWORD  <||@
  Comment 2096 988 r10|DWORD = AND r10|DWORD y: -8 size: DWORD  <||@
  Comment 2100 990 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 2103 992 r11|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2109 994 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 2112 996 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B98 falseDestination: B94 -> B96  <||@
  Comment 2118 block B96 null  <||@
  Comment 2118 1004 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2118 1006 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 2122 1008 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 2131 1010 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 2140 1012 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 2149 1014 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 2158 1016 MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 2162 1018 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 2169 1020 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 2169 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 2176 1022 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2176 1024 rax|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2180 1026 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2185 1028 JUMP ~[] destination: B96 -> B99  <||@
  Comment 2185 block B99 null  <||@
  Comment 2185 1054 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2185 1056 CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2188 1058 rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: >  <||@
  Comment 2194 1060 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 2197 1062 CMP rdx|QWORD y: 1 size: QWORD  <||@
  Comment 2201 1064 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B99 -> B118 falseDestination: B99 -> B101  <||@
  Comment 2207 block B101 null  <||@
  Comment 2207 1070 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2207 1072 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2212 1074 rcx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD  <||@
  Comment 2216 1076 r10|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 2220 1078 r11|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 2224 1080 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2227 1086 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2234 1082 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B101 -> B106 falseDestination: B101 -> B104  <||@
  Comment 2240 block B106 null  <||@
  Comment 2240 1112 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2240 1114 r11|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 2244 1116 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2247 1118 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B106 -> B109 falseDestination: B106 -> B108  <||@
  Comment 2253 block B108 null  <||@
  Comment 2253 1124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2253 1126 xmm0|V128_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 2259 1128 J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 2265 1130 r11|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 2269 1132 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2272 1134 JUMP ~[] destination: B108 -> B109  <||@
  Comment 2272 block B109 null  <||@
  Comment 2272 1136 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2272 1138 r11|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 2276 1140 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2279 1142 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B109 -> B112 falseDestination: B109 -> B111  <||@
  Comment 2285 block B111 null  <||@
  Comment 2285 1148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2285 1150 xmm0|V64_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 2291 1152 J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 2297 1154 r11|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 2301 1156 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2304 1158 JUMP ~[] destination: B111 -> B112  <||@
  Comment 2304 block B112 null  <||@
  Comment 2304 1160 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2304 1162 r11|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 2308 1164 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2311 1166 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B112 -> B115 falseDestination: B112 -> B114  <||@
  Comment 2317 block B114 null  <||@
  Comment 2317 1172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2317 1174 xmm0|V32_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 2323 1176 J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 2329 1178 r11|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 2333 1180 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2336 1182 JUMP ~[] destination: B114 -> B115  <||@
  Comment 2336 block B115 null  <||@
  Comment 2336 1184 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2336 1186 r11|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 2342 1188 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2345 1190 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B115 -> B118 falseDestination: B115 -> B117  <||@
  Comment 2351 block B117 null  <||@
  Comment 2351 1196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2351 1198 r10|DWORD = MOVSX [r10|QWORD[.] + r8|QWORD * 2] size: DWORD  <||@
  Comment 2356 1200 MOV (x: [rcx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD  <||@
  Comment 2361 1202 JUMP ~[] destination: B117 -> B118  <||@
  Comment 2361 block B118 null  <||@
  Comment 2361 1204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2361 1206 rcx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 2364 1208 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 2367 1210 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B118 -> B119 falseDestination: B118 -> B137  <||@
  Comment 2373 block B137 null  <||@
  Comment 2373 1358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2373 1360 r10|QWORD = MOVE input: long[4270112768|0xfe84c000]  <||@
  Comment 2379 1362 xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 2383 1364 xmm2|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 2387 1366 xmm3|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 2391 1368 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 2395 1370 JUMP ~[] destination: B137 -> B138  <||@
  Comment 2395 block B138 null  <||@
  Comment 2395 1372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2395 1374 rdx|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3  <||@
  Comment 2402 1376 MOV (x: [r14|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 2406 1378 r11|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2413 1380 MOVB (x: [r11|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2417 1382 rcx|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 2421 1384 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2423 1386 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B138 -> B142 falseDestination: B138 -> B140  <||@
  Comment 2429 block B140 null  <||@
  Comment 2429 1394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2429 1396 r13|DWORD = DEC r13|DWORD size: DWORD  <||@
  Comment 2432 1398 CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 2435 1400 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B140 -> B142 falseDestination: B140 -> B143  <||@
  Comment 2441 block B143 null  <||@
  Comment 2441 1416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2441 1418 rdx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 2444 1420 MOV [rsi|QWORD[.] + rdx|QWORD * 2 + 16] y: 98 size: WORD  <||@
  Comment 2451 1422 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2454 1424 r14|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2457 1426 stack:96|V256_WORD = VMOVE xmm0|V256_WORD  <||@
  Comment 2463 1428 xmm0|V64_WORD = VMOVE xmm2|V64_WORD  <||@
  Comment 2467 1430 xmm2|V256_WORD = VMOVE stack:96|V256_WORD  <||@
  Comment 2473 1432 JUMP ~[] destination: B143 -> B144  <||@
  Comment 2478 block B148 null  <||@
  Comment 2478 1482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2478 1484 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2483 1486 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2488 1488 stack:100|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 2493 1490 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2498 1492 rdx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2501 1494 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad state [bci:17, 21, 7, 248, 17]  <||@
  Comment 2501 9  <||@
  Comment 2503 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 2508 [stack:12, stack:64, stack:72]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |-                 
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                   |2          
     locals:  |stack:40|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                           |1 
     locals:  |stack:40|QWORD[.]                           |- 
     locks:   |monitor[stack:40|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:165) [bci: 248, duringCall: true, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:40|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2509 1496 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2512 1498 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 2515 1500 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B148 -> B149 falseDestination: B148 -> B150  <||@
  Comment 2521 block B150 null  <||@
  Comment 2521 1514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2521 1516 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2525 1518 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 2529 1520 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 2536 1522 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B150 -> B151 falseDestination: B150 -> B155  <||@
  Comment 2542 block B151 null  <||@
  Comment 2542 1524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2542 1526 rdx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 2547 1528 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 2550 1530 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 2553 1532 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 2556 1534 rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 2562 1536 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2565 1538 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B151 -> B155 falseDestination: B151 -> B153  <||@
  Comment 2571 block B153 null  <||@
  Comment 2571 1546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2571 1548 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 2575 1550 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 2583 1552 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 2591 1554 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 2599 1556 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 2607 1558 MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 2611 1560 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 2618 1562 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 2618 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 2625 1564 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2625 1566 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2630 1568 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2635 1570 JUMP ~[] destination: B153 -> B156  <||@
  Comment 2635 block B156 null  <||@
  Comment 2635 1592 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2635 1594 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2638 1596 rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r8|DWORD) condition: >  <||@
  Comment 2645 1598 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 2648 1600 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 2652 1602 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B156 -> B175 falseDestination: B156 -> B158  <||@
  Comment 2658 block B158 null  <||@
  Comment 2658 1608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2658 1610 r10|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD  <||@
  Comment 2663 1612 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 2667 1614 r10|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 2675 1616 r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 2679 1618 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2682 1624 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2689 1620 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B158 -> B163 falseDestination: B158 -> B161  <||@
  Comment 2695 block B163 null  <||@
  Comment 2695 1650 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2695 1652 r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 2699 1654 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2702 1656 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B163 -> B166 falseDestination: B163 -> B165  <||@
  Comment 2708 block B165 null  <||@
  Comment 2708 1662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2708 1664 xmm0|V128_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 2714 1666 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 2720 1668 r11|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 2724 1670 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2727 1672 JUMP ~[] destination: B165 -> B166  <||@
  Comment 2727 block B166 null  <||@
  Comment 2727 1674 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2727 1676 r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 2731 1678 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2734 1680 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B169 falseDestination: B166 -> B168  <||@
  Comment 2740 block B168 null  <||@
  Comment 2740 1686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2740 1688 xmm0|V64_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 2746 1690 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 2752 1692 r11|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 2756 1694 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2759 1696 JUMP ~[] destination: B168 -> B169  <||@
  Comment 2759 block B169 null  <||@
  Comment 2759 1698 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2759 1700 r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 2763 1702 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2766 1704 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B169 -> B172 falseDestination: B169 -> B171  <||@
  Comment 2772 block B171 null  <||@
  Comment 2772 1710 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2772 1712 xmm0|V32_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 2778 1714 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 2784 1716 r11|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 2788 1718 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2791 1720 JUMP ~[] destination: B171 -> B172  <||@
  Comment 2791 block B172 null  <||@
  Comment 2791 1722 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2791 1724 r11|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 2797 1726 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2800 1728 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B172 -> B175 falseDestination: B172 -> B174  <||@
  Comment 2806 block B174 null  <||@
  Comment 2806 1734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2806 1736 r10|DWORD = MOVSX [r10|QWORD[*] + r8|QWORD * 2] size: DWORD  <||@
  Comment 2811 1738 MOV (x: [rdx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD  <||@
  Comment 2816 1740 JUMP ~[] destination: B174 -> B175  <||@
  Comment 2816 block B175 null  <||@
  Comment 2816 1742 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2816 1744 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 2819 1746 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2822 1748 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B175 -> B176 falseDestination: B175 -> B194  <||@
  Comment 2828 block B194 null  <||@
  Comment 2828 1896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2828 1898 rsi|QWORD = MOVE input: long[4270112768|0xfe84c000]  <||@
  Comment 2833 1900 xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 2837 1902 xmm2|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 2841 1904 xmm3|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 2845 1906 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 2849 1908 JUMP ~[] destination: B194 -> B195  <||@
  Comment 2849 block B195 null  <||@
  Comment 2849 1910 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2849 1912 rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3  <||@
  Comment 2856 1914 MOV (x: [r14|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 2860 1916 r11|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2867 1918 MOVB (x: [r11|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2871 1920 rdx|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 2875 1922 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2877 1924 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B195 -> B199 falseDestination: B195 -> B197  <||@
  Comment 2883 block B197 null  <||@
  Comment 2883 1932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2883 1934 r13|DWORD = DEC r13|DWORD size: DWORD  <||@
  Comment 2886 1936 CMP (x: rdx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 2889 1938 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B197 -> B199 falseDestination: B197 -> B200  <||@
  Comment 2895 block B200 null  <||@
  Comment 2895 1954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2895 1956 r10|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 2898 1958 MOV [rax|QWORD[.] + r10|QWORD * 2 + 16] y: 98 size: WORD  <||@
  Comment 2906 1960 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2909 1962 r14|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2912 1964 rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2914 1966 stack:96|V256_WORD = VMOVE xmm0|V256_WORD  <||@
  Comment 2920 1968 xmm0|V64_WORD = VMOVE xmm2|V64_WORD  <||@
  Comment 2924 1970 xmm2|V256_WORD = VMOVE stack:96|V256_WORD  <||@
  Comment 2930 1972 JUMP ~[] destination: B200 -> B201  <||@
  Comment 2935 block B250 null  <||@
  Comment 2935 2410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2935 2412 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2938 2414 JUMP ~[] destination: B250 -> B262  <||@
  Comment 2943 block B119 null  <||@
  Comment 2943 1212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2943 1214 r10|QWORD[.] = LEA [rsi|QWORD[.] + rdx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2948 1216 rcx|QWORD = SUB (x: rcx|QWORD, ~y: rdx|QWORD) size: QWORD  <||@
  Comment 2951 1218 rdx|QWORD = LEA [rcx|QWORD - 16] size: QWORD  <||@
  Comment 2955 1220 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 2958 1226 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2965 1228 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 2969 1222 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B119 -> B124 falseDestination: B119 -> B122  <||@
  Comment 2975 block B124 null  <||@
  Comment 2975 1254 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2975 1256 rdx|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 2979 1258 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 2982 1264 xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 2986 1260 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B124 -> B127 falseDestination: B124 -> B126  <||@
  Comment 2992 block B126 null  <||@
  Comment 2992 1268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2992 1272 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm1|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 2998 1274 rdx|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 3002 1276 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 3005 1278 JUMP ~[] destination: B126 -> B127  <||@
  Comment 3005 block B127 null  <||@
  Comment 3005 1280 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3005 1282 rdx|QWORD = LEA [rcx|QWORD - 4] size: QWORD  <||@
  Comment 3009 1284 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3012 1290 xmm2|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 3016 1286 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B127 -> B130 falseDestination: B127 -> B129  <||@
  Comment 3022 block B129 null  <||@
  Comment 3022 1294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3022 1298 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm2|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 3028 1300 rdx|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 3032 1302 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 3035 1304 JUMP ~[] destination: B129 -> B130  <||@
  Comment 3035 block B130 null  <||@
  Comment 3035 1306 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3035 1308 rdx|QWORD = LEA [rcx|QWORD - 2] size: QWORD  <||@
  Comment 3039 1310 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3042 1316 xmm3|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3046 1312 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B130 -> B133 falseDestination: B130 -> B132  <||@
  Comment 3052 block B132 null  <||@
  Comment 3052 1320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3052 1324 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm3|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 3058 1326 rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 3062 1328 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 3065 1330 JUMP ~[] destination: B132 -> B133  <||@
  Comment 3065 block B133 null  <||@
  Comment 3065 1332 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3065 1334 rcx|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 3068 1336 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 3071 1338 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B133 -> B134 falseDestination: B133 -> B135  <||@
  Comment 3077 block B135 null  <||@
  Comment 3077 1346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3077 1348 MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 3082 1350 r10|QWORD = MOVE input: long[4270112768|0xfe84c000]  <||@
  Comment 3088 1352 JUMP ~[] destination: B135 -> B138  <||@
  Comment 3093 block B176 null  <||@
  Comment 3093 1750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3093 1752 r10|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 3098 1754 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 3101 1756 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 3105 1758 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3108 1764 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3115 1766 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 3119 1760 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B176 -> B181 falseDestination: B176 -> B179  <||@
  Comment 3125 block B181 null  <||@
  Comment 3125 1792 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3125 1794 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 3129 1796 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3132 1802 xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 3136 1798 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B181 -> B184 falseDestination: B181 -> B183  <||@
  Comment 3142 block B183 null  <||@
  Comment 3142 1806 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3142 1810 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm1|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 3148 1812 rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 3152 1814 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3155 1816 JUMP ~[] destination: B183 -> B184  <||@
  Comment 3155 block B184 null  <||@
  Comment 3155 1818 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3155 1820 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 3159 1822 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3162 1828 xmm2|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 3166 1824 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B184 -> B187 falseDestination: B184 -> B186  <||@
  Comment 3172 block B186 null  <||@
  Comment 3172 1832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3172 1836 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm2|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 3178 1838 rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 3182 1840 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3185 1842 JUMP ~[] destination: B186 -> B187  <||@
  Comment 3185 block B187 null  <||@
  Comment 3185 1844 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3185 1846 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 3189 1848 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3192 1854 xmm3|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3196 1850 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B187 -> B190 falseDestination: B187 -> B189  <||@
  Comment 3202 block B189 null  <||@
  Comment 3202 1858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3202 1862 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm3|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 3208 1864 rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 3212 1866 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3215 1868 JUMP ~[] destination: B189 -> B190  <||@
  Comment 3215 block B190 null  <||@
  Comment 3215 1870 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3215 1872 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 3218 1874 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3221 1876 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B190 -> B191 falseDestination: B190 -> B192  <||@
  Comment 3227 block B192 null  <||@
  Comment 3227 1884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3227 1886 MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 3232 1888 rsi|QWORD = MOVE input: long[4270112768|0xfe84c000]  <||@
  Comment 3237 1890 JUMP ~[] destination: B192 -> B195  <||@
  Comment 3242 block B4 null  <||@
  Comment 3242 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3242 66 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 3242 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 3252 68 rdx|DWORD = MOVE input: int[34|0x22]  <||@
  Comment 3257 70 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3262 72 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 3262 {Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3267 [r13:0, r14:0]at bench.StringOp.append(Bench.scala:124) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r13|QWORD[.]  |-   <||@
  Comment 3268 74 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3271 76 JUMP ~[] destination: B4 -> B6  <||@
  Comment 3276 block B1 null  <||@
  Comment 3276 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3276 20 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3276 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3286 22 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 3291 24 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3296 26 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 3296 {Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3301 [r13:0]at bench.StringOp.append(Bench.scala:124) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r13|QWORD[.]  |-   <||@
  Comment 3302 28 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3305 30 JUMP ~[] destination: B1 -> B3  <||@
  Comment 3310 block B7 null  <||@
  Comment 3310 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3310 170 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3313 172 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3313 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3323 174 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 3328 176 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3333 178 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 7, 227, 17]  <||@
  Comment 3333 {Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3338 [r14:0]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0                                                                                         |1  |2          
     locals:  |vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}  |-  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                                                              |1 
     locals:  |vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}                                       |- 
     locks:   |monitor[vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}, stack:32|QWORD, eliminated]  |  
  at bench.StringOp.cont(Bench.scala:162) [bci: 227, duringCall: true, rethrow: false]
              |0  |1                                                                                        
     locals:  |-  |vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 3339 180 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3342 182 xmm1|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3346 184 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 3350 186 r10|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 3353 188 JUMP ~[] destination: B7 -> B9  <||@
  Comment 3358 block B86 null  <||@
  Comment 3358 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3358 892 MOV [r15|QWORD + 668] y: -910945 size: DWORD  <||@
  Comment 3369 894 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3376 896 DEOPT info [bci:26, 21, 7, 234, 17]  <||@
  Comment 3376 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1016a1f90, value=0x10a2835fe]:0x10a2835fe}  <||@
  Comment 3381 [r11:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                   |2          
     locals:  |r11|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |r11|QWORD[.]                           |- 
     locks:   |monitor[r11|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:163) [bci: 234, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |r11|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 3382 block B11 null  <||@
  Comment 3382 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3382 244 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3385 246 rax|QWORD = AND r8|QWORD y: 7 size: QWORD  <||@
  Comment 3392 248 CMP rax|QWORD y: 5 size: QWORD  <||@
  Comment 3396 250 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B23  <||@
  Comment 3402 block B23 null  <||@
  Comment 3402 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3402 342 TEST r8|QWORD y: 2 size: QWORD  <||@
  Comment 3409 344 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B29  <||@
  Comment 3415 block B24 null  <||@
  Comment 3415 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3415 350 r8|QWORD = OR r8|QWORD y: 1 size: QWORD  <||@
  Comment 3419 352 MOV (x: [r9|QWORD], y: r8|QWORD) size: QWORD  <||@
  Comment 3422 354 rax|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3425 356 rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD  <||@
  Comment 3430 358 CMP (x: rax|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3433 360 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 3439 block B25 null  <||@
  Comment 3439 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3439 364 stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 3444 366 JUMP ~[] destination: B25 -> B35  <||@
  Comment 3449 block B263 null  <||@
  Comment 3449 2514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3449 2516 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3449 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3459 2518 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 3464 2520 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3469 2522 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:256, 17]  <||@
  Comment 3469 {Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3474 [r13:0, r14:0]at bench.StringOp.cont(Bench.scala:166) [bci: 256, duringCall: false, rethrow: false]
              |0                                                     |1 
     locals:  |-                                                     |- 
     stack:   |vobject:String:0{value=r14|QWORD[.],hash=int[0|0x0]}  |  
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 3475 2524 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3475 2526 JUMP ~[] destination: B263 -> B265  <||@
  Comment 3480 block B104 loop 2 depth 1 header:5332|LoopBegin  <||@
  Comment 3480 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3488 1098 xmm0|V256_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 3494 1100 J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 3500 1102 r8|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 3504 1104 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 3507 1106 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B104 -> B106 falseDestination: B104 -> B104  <||@
  Comment 3514 block B122 loop 3 depth 1 header:5395|LoopBegin  <||@
  Comment 3514 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3520 1242 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 3526 1244 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 3530 1246 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3533 1248 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B122 -> B124 falseDestination: B122 -> B122  <||@
  Comment 3540 block B134 null  <||@
  Comment 3540 1340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3540 1342 r10|QWORD = MOVE input: long[4270112768|0xfe84c000]  <||@
  Comment 3546 1344 JUMP ~[] destination: B134 -> B138  <||@
  Comment 3551 block B191 null  <||@
  Comment 3551 1878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3551 1880 rsi|QWORD = MOVE input: long[4270112768|0xfe84c000]  <||@
  Comment 3556 1882 JUMP ~[] destination: B191 -> B195  <||@
  Comment 3561 block B179 loop 5 depth 1 header:5521|LoopBegin  <||@
  Comment 3561 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3568 1780 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 3574 1782 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 3578 1784 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3581 1786 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B179 -> B181 falseDestination: B179 -> B179  <||@
  Comment 3588 block B161 loop 4 depth 1 header:5458|LoopBegin  <||@
  Comment 3588 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3600 1636 xmm0|V256_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 3606 1638 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 3612 1640 r8|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 3616 1642 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 3619 1644 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B161 -> B163 falseDestination: B161 -> B161  <||@
  Comment 3626 block B98 null  <||@
  Comment 3626 1036 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3626 1032 r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3631 1038 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 3631 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 3641 1040 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3644 1042 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3649 1044 r14|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 3652 1046 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 7, 241, 17]  <||@
  Comment 3652 {Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3657 [r14:0, stack:64, stack:72]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0             |1                  |2         
     locals:  |-             |-                  |          
     stack:   |r14|QWORD[.]  |stack:48|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                   |2          
     locals:  |r14|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |r14|QWORD[.]                           |- 
     locks:   |monitor[r14|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:164) [bci: 241, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |r14|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 3658 1048 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3661 1050 rax|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 3665 1052 JUMP ~[] destination: B98 -> B99  <||@
  Comment 3670 block B155 null  <||@
  Comment 3670 1578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3670 1574 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3675 1580 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 3675 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 3685 1582 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3688 1584 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3693 1586 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 7, 248, 17]  <||@
  Comment 3693 {Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3698 [r14:0, stack:12, stack:64, stack:72]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0             |1                  |2         
     locals:  |-             |-                  |          
     stack:   |r14|QWORD[.]  |stack:48|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                   |2          
     locals:  |r14|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |r14|QWORD[.]                           |- 
     locks:   |monitor[r14|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:165) [bci: 248, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |r14|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 3699 1588 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 3704 1590 JUMP ~[] destination: B155 -> B156  <||@
  Comment 3709 block B12 null  <||@
  Comment 3709 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3709 254 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3714 256 xmm3|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3718 258 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 3722 260 TEST rdi|QWORD y: 7 size: QWORD  <||@
  Comment 3729 262 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B21  <||@
  Comment 3735 block B13 null  <||@
  Comment 3735 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3735 266 TEST rdi|QWORD y: 768 size: QWORD  <||@
  Comment 3742 268 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B17  <||@
  Comment 3748 block B14 null  <||@
  Comment 3748 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3748 272 r8|QWORD = AND r8|QWORD y: 895 size: QWORD  <||@
  Comment 3755 274 rsi|QWORD = OR (x: r15|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3761 276 rax|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3764 278 rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD  <||@
  Comment 3770 280 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B14 -> B19 falseDestination: B14 -> B16  <||@
  Comment 3776 block B16 null  <||@
  Comment 3776 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3776 290 stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 3781 292 JUMP ~[] destination: B16 -> B35  <||@
  Comment 3786 block B255 null  <||@
  Comment 3786 2448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3786 2452 rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 3789 2454 rax|QWORD = MOV [r10|QWORD + 22] size: QWORD  <||@
  Comment 3793 2456 rsi|QWORD = MOV [r10|QWORD + 38] size: QWORD  <||@
  Comment 3797 2458 rax|QWORD = XOR (x: r15|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 3800 2460 rax|QWORD = OR (x: rax|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3803 2462 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 3806 2464 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B255 -> B256 falseDestination: B255 -> B260  <||@
  Comment 3812 block B256 null  <||@
  Comment 3812 2466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3812 2468 rax|QWORD = MOV [r10|QWORD + 54] size: QWORD  <||@
  Comment 3816 2470 rax|QWORD = OR (x: rax|QWORD, ~y: [r10|QWORD + 62]) size: QWORD  <||@
  Comment 3820 2472 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 3823 2474 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B256 -> B257 falseDestination: B256 -> B260  <||@
  Comment 3829 block B257 null  <||@
  Comment 3829 2476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3829 2478 MOV (x: [r10|QWORD + 22], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3833 2480 JUMP ~[] destination: B257 -> B262  <||@
  Comment 3838 block B142 null  <||@
  Comment 3838 1408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3838 1390 rbp|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 3841 1410 MOV [r15|QWORD + 668] y: -977249 size: DWORD  <||@
  Comment 3852 1412 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3859 1414 DEOPT info [bci:26, 21, 7, 241, 17]  <||@
  Comment 3859 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1016a1f90, value=0x10a2835fe]:0x10a2835fe}  <||@
  Comment 3864 [rbp:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                   |2          
     locals:  |rbp|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |rbp|QWORD[.]                           |- 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:164) [bci: 241, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rbp|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 3865 block B199 null  <||@
  Comment 3865 1946 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3865 1928 rbp|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 3868 1948 MOV [r15|QWORD + 668] y: -949345 size: DWORD  <||@
  Comment 3879 1950 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3886 1952 DEOPT info [bci:26, 21, 7, 248, 17]  <||@
  Comment 3886 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1016a1f90, value=0x10a2835fe]:0x10a2835fe}  <||@
  Comment 3891 [rbp:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                   |2          
     locals:  |rbp|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |rbp|QWORD[.]                           |- 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:165) [bci: 248, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rbp|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 3892 block B21 null  <||@
  Comment 3892 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3892 330 rax|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3895 332 rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD  <||@
  Comment 3901 334 JUMP ~[] destination: B21 -> B23  <||@
  Comment 3906 block B29 null  <||@
  Comment 3906 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3906 398 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3911 400 xmm3|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3915 402 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 3919 404 MOV (x: [r9|QWORD], y: r9|QWORD) size: QWORD  <||@
  Comment 3922 406 CMP [r8|QWORD + 22] y: 0 size: QWORD  <||@
  Comment 3927 408 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B34  <||@
  Comment 3933 block B30 null  <||@
  Comment 3933 410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3933 412 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3940 414 rax|QWORD = CAS (address: [r8|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD  <||@
  Comment 3946 416 BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B30 -> B34 falseDestination: B30 -> B32  <||@
  Comment 3952 block B32 null  <||@
  Comment 3952 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3952 426 stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 3957 428 JUMP ~[] destination: B32 -> B35  <||@
  Comment 3962 block B26 null  <||@
  Comment 3962 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3962 370 rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 3965 372 xmm3|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3969 374 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 3973 376 rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD  <||@
  Comment 3976 378 TEST rax|QWORD y: -4089 size: QWORD  <||@
  Comment 3983 380 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B34  <||@
  Comment 3989 block B27 null  <||@
  Comment 3989 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3989 384 MOV (x: [r9|QWORD], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3992 388 stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 3997 390 JUMP ~[] destination: B27 -> B35  <||@
  Comment 4002 block B17 null  <||@
  Comment 4002 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4002 296 rax|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 4005 298 rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rbx|QWORD) accessKind: QWORD  <||@
  Comment 4011 300 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B17 -> B19 falseDestination: B17 -> B20  <||@
  Comment 4017 block B20 null  <||@
  Comment 4017 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4017 324 stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 4022 326 JUMP ~[] destination: B20 -> B35  <||@
  Comment 4027 block B253 null  <||@
  Comment 4027 2432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4027 2434 rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4030 2436 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4033 2438 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 4036 2440 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10acdcb60:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 4036 {Stub<monitorexit(Object,Word)void>@0x10acdcb60:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4042 2442 JUMP ~[] destination: B253 -> B262  <||@
  Comment 4047 block B260 null  <||@
  Comment 4047 2490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4047 2492 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4050 2494 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 4053 2496 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10acdcb60:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 4053 {Stub<monitorexit(Object,Word)void>@0x10acdcb60:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4059 2498 JUMP ~[] destination: B260 -> B262  <||@
  Comment 4064 block B34 null  <||@
  Comment 4064 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4064 436 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4067 438 rdx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 4070 440 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x10acd9b20:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:61, 35, 7, 227, 17]  <||@
  Comment 4070 {Stub<monitorenter(Object,Word)void>@0x10acd9b20:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4075 [rbp:0, r14:0, stack:72]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0                                                                                         |1  |2          
     locals:  |vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}  |-  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                                                              |1 
     locals:  |vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}                                       |- 
     locks:   |monitor[vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}, stack:32|QWORD, eliminated]  |  
  at bench.StringOp.cont(Bench.scala:162) [bci: 227, duringCall: true, rethrow: false]
              |0  |1                                                                                        
     locals:  |-  |vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 4076 442 r11|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4079 444 stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 4084 446 JUMP ~[] destination: B34 -> B35  <||@
  Comment 4089 block B19 null  <||@
  Comment 4089 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4089 308 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4092 310 rdx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 4095 312 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x10acd9b20:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:61, 35, 7, 227, 17]  <||@
  Comment 4095 {Stub<monitorenter(Object,Word)void>@0x10acd9b20:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4100 [rbp:0, r14:0, stack:72]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0                                                                                         |1  |2          
     locals:  |vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}  |-  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                                                              |1 
     locals:  |vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}                                       |- 
     locks:   |monitor[vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}, stack:32|QWORD, eliminated]  |  
  at bench.StringOp.cont(Bench.scala:162) [bci: 227, duringCall: true, rethrow: false]
              |0  |1                                                                                        
     locals:  |-  |vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 4101 314 r11|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4104 316 stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 4109 318 JUMP ~[] destination: B19 -> B35  <||@
  Comment 4114 block B146 null  <||@
  Comment 4114 1464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4114 1466 rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4117 1468 MOV [r15|QWORD + 668] y: -934753 size: DWORD  <||@
  Comment 4128 1470 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4135 1472 DEOPT info [bci:5, 248, 17]  <||@
  Comment 4135 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1016a1f90, value=0x10a2835fe]:0x10a2835fe}  <||@
  Comment 4140 [rbp:0]at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5, duringCall: false, rethrow: false]
              |0                                      |1                  
     locals:  |rbp|QWORD[.]                           |Object[String:"b"] 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |                   
  at bench.StringOp.cont(Bench.scala:165) [bci: 248, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rbp|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 4141 block B89 null  <||@
  Comment 4141 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4141 926 rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4144 928 MOV [r15|QWORD + 668] y: -962657 size: DWORD  <||@
  Comment 4155 930 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4162 932 DEOPT info [bci:5, 241, 17]  <||@
  Comment 4162 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1016a1f90, value=0x10a2835fe]:0x10a2835fe}  <||@
  Comment 4167 [rbp:0]at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5, duringCall: false, rethrow: false]
              |0                                      |1                  
     locals:  |rbp|QWORD[.]                           |Object[String:"b"] 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |                   
  at bench.StringOp.cont(Bench.scala:164) [bci: 241, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rbp|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 4168 block B36 null  <||@
  Comment 4168 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4168 462 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4173 464 r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4178 466 MOV [r15|QWORD + 668] y: -1065569 size: DWORD  <||@
  Comment 4189 468 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4196 470 DEOPT info [bci:20, 21, 7, 234, 17]  <||@
  Comment 4196 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1016a1f90, value=0x10a2835fe]:0x10a2835fe}  <||@
  Comment 4201 [rbp:0, r14:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |-             |-             |          
     stack:   |rbp|QWORD[.]  |r14|QWORD[.]  |rax|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                   |2          
     locals:  |rbp|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |rbp|QWORD[.]                           |- 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:163) [bci: 234, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rbp|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 4202 block B267 null  <||@
  Comment 4202 2562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4202 2564 rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4205 2566 MOV [r15|QWORD + 668] y: -923667 size: DWORD  <||@
  Comment 4216 2568 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4223 2570 DEOPT info [bci:61, 35, 7, 248, 17]  <||@
  Comment 4223 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1016a1f90, value=0x10a2835fe]:0x10a2835fe}  <||@
  Comment 4228 [rbp:0]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0             |1  |2          
     locals:  |rbp|QWORD[.]  |-  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |rbp|QWORD[.]                           |- 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:165) [bci: 248, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rbp|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 4229 block B149 null  <||@
  Comment 4229 1502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4229 1504 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4234 1506 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4239 1508 MOV [r15|QWORD + 668] y: -1085537 size: DWORD  <||@
  Comment 4250 1510 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4257 1512 DEOPT info [bci:20, 21, 7, 248, 17]  <||@
  Comment 4257 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1016a1f90, value=0x10a2835fe]:0x10a2835fe}  <||@
  Comment 4262 [rcx:0, rbp:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |-             |-             |          
     stack:   |rbp|QWORD[.]  |rcx|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                   |2          
     locals:  |rbp|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |rbp|QWORD[.]                           |- 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:165) [bci: 248, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rbp|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 4263 block B92 null  <||@
  Comment 4263 960 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4263 962 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4268 964 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4273 966 MOV [r15|QWORD + 668] y: -1075553 size: DWORD  <||@
  Comment 4284 968 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4291 970 DEOPT info [bci:20, 21, 7, 241, 17]  <||@
  Comment 4291 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1016a1f90, value=0x10a2835fe]:0x10a2835fe}  <||@
  Comment 4296 [rbp:0, r10:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |-             |-             |          
     stack:   |rbp|QWORD[.]  |r10|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                   |2          
     locals:  |rbp|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |rbp|QWORD[.]                           |- 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:164) [bci: 241, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rbp|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 4297 {Stub<ExceptionHandlerStub.exceptionHandler>@0x10a60c8e0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4297 4  <||@
  Comment 4303 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1016a1f88, value=0x10a283500]:0x10a283500}  <||@
  Comment 4303 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-695[bench.StringOp.append()]"
  method "HotSpotCompilation-695[bench.StringOp.append()]"
  date 1527726448263
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 10b17f720 448b560849c1e203493bc20f852f2710ff900f1f80000000000f1f800000000089842400c0feff4883ec6848896c24604c8bee498b7760498b57704c8d56304c3bd20f87840c00004d8957600f1886f00000004c8bf6c7460c1000000048c70601000000c74608410000f8c4c17d6f056cffffffc5fe7f4610498b7760488d5658493b57700f871f0c0000498957600f1886180100000f1886580100000f1886980100000f1886d8010000c7460c2200000048c70601000000c74608410000f84c8bd6498d7610c5fe6f06498d7210c5fe7f06498d7230c5f9efc0c5fe7f06c5f1efc9c5f97e4e206641c7423062006641c7423262006641c7423462006641c7423662006641c7423862006641c7423a62006641c7423c62006641c7423e62006641c7424062006641c7424262006641c7424462006641c7424662006641c7424862006641c7424a62006641c7424c62006641c7424e62006641c7425062006641c742526200498b7760498b57704c8d5e184c3bda0f87730b00004d895f600f1886d80000004c8bde4c895c244848ba08d600c0070000004c8b82a80000004c8906c74608c11a00f8c7460c220000004d8bc249c1e80344894610448966144d8b034c8d4c2450488b8aa8000000498bdf480bd9488bfb4933f848f7c787ffffff0f854f0b00004c89542440498bf3ba23000000666690e8842710ff9085c00f8c430e0000498b7760498b577081f8ffffff000f835b0500008bc8d1e18d491783e1f84863c94c8bd14c03d64c3bd20f873f0500004d8957600f188431c00000000f188431000100000f188431400100000f1884318001000089460c48c70601000000c74608410000f8448be8488bc64183fd23be22000000410f4cf54863f64883fe010f8c9a0000004c8b742440488d5010498d4e104c8d56f04d85d249c7c3000000000f8d750400004c8d56f84d3bda0f8f13000000c4a17a6f0459c4a17a7f045a4d8d53084d8bda4c8d56fc4d3bda0f8f13000000c4a1f96e0459c4a1f97e045a4d8d53044d8bda4c8d56fe4d3bda0f8f13000000c4a1796e0459c4a1797e045a4d8d53024d8bda4c8bd649ffca4d3bda0f8f0a000000420fbf0c596642890c5a4963d5c5f9efc0c5f1efc9483bd60f8fa60200004c8b5c2448c5e1efdbc5e9efd2488bf048c1ee0341897310498bf348c1ee0941be00c084fe46882436418b730c85f60f8cb1090000418bd5ffca3bf20f8fa40900004863ce66c744481062008bceffc141894b0c45896314448d5602418bf2412bf583fe010f8d4a0400003bca0f8f820c00004863f166c74470106200458b5310468b04d50c0000008bf1ffc64189730c45896314448d4902418bd1412bd0418bca48c1e10383fa010f8dc705000041ffc8413bf00f8f1f0c00004863d666c74451106200418b531485d20f85610c0000458b6b10438504ecffc64189730c498b5760498b4f7081feffffff000f839c030000448bd641d1e2458d52174183e2f84d63d24d8bc24c03c24c3bc10f877c0300004d894760410f188412c0000000410f18841200010000410f18841240010000410f1884128001000089720c48c70201000000c74208410000f8488bc2448bf6428b34ed0c000000443bf6418bd60f4fd64863f24883fe010f8c99000000488d56f04c8d50104e8d1ced100000004885d249c7c0000000000f8d78020000488d56f84c3bc20f8f13000000c4817a6f0443c4817a7f0442498d50084c8bc2488d56fc4c3bc20f8f13000000c481f96e0443c481f97e0442498d50044c8bc2488d56fe4c3bc20f8f13000000c481796e0443c481797e0442498d50024c8bc2488bd648ffca4c3bc20f8f0a000000430fbf144366438914424963d6483bd60f8f1e01000041be00c084fe4c8b5c24484c8be849c1ed0345896b14498bf348c1ee09468824364d8b13498bf24883e6074883fe050f85110200004c8bf0498b4760488d7018493b77700f87e2070000498977600f1880d8000000488bf048bad01600c007000000488b92a8000000488910c74008da0200f84489680c44896010488bc6488b6c24604883c46885050ca33af5c5f877c3488d4c7010482bd6488d72f04885f649c7c200000000c5e9efd20f8d02010000488d72f84c3bd60f8f0d000000c4a17a7f0c51498d72084c8bd6488d72fc4c3bd60f8f0d000000c4a1f97e0451498d72044c8bd6488d72fe4c3bd6c5e1efdb0f8f0d000000c4a1797e1c51498d72024c8bd648ffca4c3bd20f8fb800000066468924514c8b5c2448e9dafcffff4c8d547010482bd6488d72f04885f649c7c3000000000f8dd3000000488d72f84c3bde0f8f11000000c5f1efc9c4817a7f0c5a498d73084c8bde488d72fc4c3bde0f8f11000000c5f9efc0c481f97e045a498d73044c8bde488d72fe4c3bde0f8f11000000c5f1efc9c481797e0c5a498d73024c8bde48ffca4c3bda0f8f60feffff664789245ae956feffff660f1f840000000000c4a17e7f14514d8d52104c3bd67ef1e9eafeffff4c8b5c2448e927fcffff6690c4a17e6f0459c4a17e7f045a4d8d5b104d3bda7eebe971fbffff660f1f440000c4817e6f0443c4817e7f04424d8d40104c3bc27eebe96efdffffc5f9efc06690c4817e7f045a4d8d5b104c3bde7ef1e913ffffff48be080200c0070000008bd0b900000000448be8e87304abff90e9ddfaffff4c8d442450498b304885f60f84d303000049f7c2020000004c8bf00f8516070000498bc0f0490fb1330f84c3fdffffe9f407000048ba080200c007000000448bd6488bf2418bd2b900000000458bf2e81904abff90e99dfcffff488944244044896c243c498bf3418bd26690e87c2110ff90448be84585ed0f8c96080000498b7760498b57704181fdffffff000f8304060000458bd541d1e2458d52174183e2f84d63d24d8bda4c03de4c3bda0f87e40500004d895f60410f188432c0000000410f18843200010000410f18843240010000410f1884328001000044896e0c48c70601000000c74608410000f88b44243c4c8b742448443be8418bd50f4fd04863d24883fa010f8c9a0000004c8b542440488d4e104d8d52104c8d5af04d85db49c7c0000000000f8de00400004c8d5af84d3bc30f8f13000000c4817a6f0442c4a17a7f04414d8d58084d8bc34c8d5afc4d3bc30f8f13000000c481f96e0442c4a1f97e04414d8d58044d8bc34c8d5afe4d3bc30f8f13000000c481796e0442c4a1797e04414d8d58024d8bc34c8bda49ffcb4d3bc30f8f0a000000470fbf144266468914414963cd483bca0f8f3a02000041ba00c084fec5f1efc9c5e9efd2c5e1efdbc5f9efc0488bd648c1ea03418956104d8bde49c1eb0947882413418b4e0c85c90f8c8105000041ffcd413bcd0f8f750500004863d166c744561062004d8bde4d8bf2c5fe7f442410c5fa6fc2c5fe6f542410e907faffff48894c2440448944243c448954240c488b742448418bd16690e8b41f10ff90448be84585ed0f8cac060000498b4760498b77704181fdffffff000f8368040000418bd5d1e28d521783e2f84863d2488bca4803c8483bce0f874b04000049894f600f188402c00000000f188402000100000f188402400100000f188402800100004489680c48c70001000000c74008410000f8448b44243c4c8b742448453be8418bf5410f4ff04863f64883fe010f8c9e000000448b54240c488d50104e8d14d5100000004c8d5ef04d85db49c7c0000000000f8d890300004c8d5ef84d3bc30f8f13000000c4817a6f0442c4a17a7f04424d8d58084d8bc34c8d5efc4d3bc30f8f13000000c481f96e0442c4a1f97e04424d8d58044d8bc34c8d5efe4d3bc30f8f13000000c481796e0442c4a1797e04424d8d58024d8bc34c8bde49ffcb4d3bc30f8f0a000000470fbf144266468914424963d5483bd60f8f09010000be00c084fec5f1efc9c5e9efd2c5e1efdbc5f9efc0488bd048c1ea03418956104d8bde49c1eb0945882433418b560c85d20f8cd603000041ffcd413bd50f8fca0300004c63d26642c744501062004d8bde4c8bf68bf2c5fe7f442410c5fa6fc2c5fe6f542410e986f8ffff4c8bf0e906faffff4c8d545610482bca488d51f04885d249c7c300000000c5f9efc00f8d21020000488d51f84c3bdac5f1efc90f8f0d000000c4817a7f0c5a498d53084c8bda488d51fc4c3bdac5e9efd20f8f0d000000c481f97e145a498d53044c8bda488d51fe4c3bdac5e1efdb0f8f0d000000c481797e1c5a498d53024c8bda48ffc94c3bd90f8fcf010000664789245a41ba00c084fee946fdffff4c8d547010482bd6488d72f04885f649c7c300000000c5f9efc00f8dbb010000488d72f84c3bdec5f1efc90f8f0d000000c4817a7f0c5a498d73084c8bde488d72fc4c3bdec5e9efd20f8f0d000000c481f97e145a498d73044c8bde488d72fe4c3bdec5e1efdb0f8f0d000000c481797e1c5a498d73024c8bde48ffca4c3bda0f8f44010000664789245abe00c084fee977feffff48be080200c007000000ba22000000b900000000e83dffaaff904c8bd0e9f7f3ffff48be680b00c007000000ba08000000b901000000e81bffaaff90488bf0e965f3ffff4d8bf248be680b00c007000000ba02000000b901000000e8f6feaaff90488bf0c5f1efc9c5f9efc04d8bd6e968f4ffff41c7879c0200009f19f2ff4d89a7a8020000e8a93110ff904d8bf2498bc04883e0074883f8050f843301000049f7c0020000000f85eb0100004983c8014d8901498bc0f04d0fb10b493bc00f850b0200004c89742440e973f4ffff48be680b00c007000000ba02000000b901000000e86efeaaff90e90af8ffff0f1f840000000000c4817e6f0442c4a17e7f04414d8d40104d3bc37eebe906fbffff660f1f440000c4817e7f045a4d8d5b104c3bda7ef1e9cbfdffff41ba00c084fee97cfbffffbe00c084fee938fdffff0f1f8000000000c4817e7f045a4d8d5b104c3bde7ef1e931feffff660f1f440000660f1f440000c4817e6f0442c4a17e7f04424d8d40104d3bc37eebe95dfcffff4c8b5c244848be080200c007000000418bd5b9000000004d8bf3e8b7fdaaff90488bf08b44243ce933faffff4c8b74244848be080200c007000000418bd5b900000000e88efdaaff90448b44243ce9cefbffff488b6c2448c5e1efdbc5f9efc048f7c7070000000f859d00000048f7c7000300000f85fe0000004981e07f030000498bf7490bf0498bc0f0480fb175000f85390100004c89742440e922f3ffff498beb498b4216498b72264933c7480bc64885c00f85eb000000498b4236490b423e4885c00f85da0000004d896216e987f6ffff498bee41c7879c0200009f16f1ff4d89a7a8020000e8c62f10ff90498bee41c7879c0200009f83f1ff4d89a7a8020000e8ab2f10ff90498bc0f0480fb14d00e908feffff488b6c2448c5e1efdbc5f9efc04d890949837816000f858300000048c7c000000000f04d0fb178160f85700000004c89742440e972f2ffff498bebc5e1efdbc5f9efc0482bc448f7c007f0ffff0f854b0000004d89214c89742440e94af2ffff498bc0f0480fb15d000f85480000004c89742440e931f2ffff498beb488bf5498bd0e877c4b5ff90e9b6f5ffff488bf5498bd0e866c4b5ff90e9a5f5ffff488bf5498bd1e81594b5ff904c8bdd4c89742440e9f3f1ffff488bf5498bd1e8fc93b5ff904c8bdd4c89742440e9daf1ffff498beb41c7879c0200009fbcf1ff4d89a7a8020000e8b22e10ff90498beb41c7879c0200009f4ff1ff4d89a7a8020000e8972e10ff90488b6c24484c8b74244041c7879c0200009fbdefff4d89a7a8020000e8752e10ff90498beb41c7879c020000ede7f1ff4d89a7a8020000e85a2e10ff90488b4c2440488b6c244841c7879c0200009f6fefff4d89a7a8020000e8382e10ff904c8b542440488b6c244841c7879c0200009f96efff4d89a7a8020000e8162e10ff90e8f2c048ff90e80c2d10ff90f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1016a1f78, value=0x10a281e60]:0x10a281e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6c0249d slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 55 10 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 59 12 r10|QWORD = LEA [rsi|QWORD + 48] size: QWORD  <||@
  Comment 63 14 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 66 16 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 72 block B2 null  <||@
  Comment 72 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 34 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 76 36 AMD64PREFETCH ~[rsi|QWORD + 240] instr: 0  <||@
  Comment 83 38 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 83 40 JUMP ~[] destination: B2 -> B3  <||@
  Comment 83 block B3 null  <||@
  Comment 83 42 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 83 44 r14|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 86 46 MOV [rsi|QWORD[*] + 12] y: 16 size: DWORD  <||@
  Comment 93 48 MOV [rsi|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 100 50 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 100 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 107 52 xmm0|V256_QWORD = A od: SIMD<27584968630861921,27584968630861922,27584968630861922,27584968630861922> oe: QWORD  <||@
  Comment 107 {DataSection[0x0]}  <||@
  Comment 116 54 J (address: [rsi|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 121 56 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 125 58 rdx|QWORD = LEA [rsi|QWORD + 88] size: QWORD  <||@
  Comment 129 60 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 133 62 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 139 block B5 null  <||@
  Comment 139 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 139 80 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 143 82 AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0  <||@
  Comment 150 84 AMD64PREFETCH ~[rsi|QWORD + 344] instr: 0  <||@
  Comment 157 86 AMD64PREFETCH ~[rsi|QWORD + 408] instr: 0  <||@
  Comment 164 88 AMD64PREFETCH ~[rsi|QWORD + 472] instr: 0  <||@
  Comment 171 90 MOV [rsi|QWORD + 12] y: 34 size: DWORD  <||@
  Comment 178 92 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 185 94 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 185 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 192 96 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 192 98 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 195 100 JUMP ~[] destination: B5 -> B6  <||@
  Comment 195 block B6 null  <||@
  Comment 195 102 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 195 104 rsi|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD  <||@
  Comment 199 106 xmm0|V256_WORD = H [rsi|QWORD[.]] nZ: YMM oh: VMOVDQU  <||@
  Comment 203 108 rsi|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 207 110 J (address: [rsi|QWORD[.]], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 211 112 rsi|QWORD[.] = LEA [r10|QWORD[.] + 48] size: QWORD  <||@
  Comment 215 114 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 219 116 J (address: [rsi|QWORD[.]], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 223 118 xmm1|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 227 120 J (address: [rsi|QWORD[.] + 32], input: xmm1|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 232 122 MOV [r10|QWORD[.] + 48] y: 98 size: WORD  <||@
  Comment 239 124 MOV [r10|QWORD[.] + 50] y: 98 size: WORD  <||@
  Comment 246 126 MOV [r10|QWORD[.] + 52] y: 98 size: WORD  <||@
  Comment 253 128 MOV [r10|QWORD[.] + 54] y: 98 size: WORD  <||@
  Comment 260 130 MOV [r10|QWORD[.] + 56] y: 98 size: WORD  <||@
  Comment 267 132 MOV [r10|QWORD[.] + 58] y: 98 size: WORD  <||@
  Comment 274 134 MOV [r10|QWORD[.] + 60] y: 98 size: WORD  <||@
  Comment 281 136 MOV [r10|QWORD[.] + 62] y: 98 size: WORD  <||@
  Comment 288 138 MOV [r10|QWORD[.] + 64] y: 98 size: WORD  <||@
  Comment 295 140 MOV [r10|QWORD[.] + 66] y: 98 size: WORD  <||@
  Comment 302 142 MOV [r10|QWORD[.] + 68] y: 98 size: WORD  <||@
  Comment 309 144 MOV [r10|QWORD[.] + 70] y: 98 size: WORD  <||@
  Comment 316 146 MOV [r10|QWORD[.] + 72] y: 98 size: WORD  <||@
  Comment 323 148 MOV [r10|QWORD[.] + 74] y: 98 size: WORD  <||@
  Comment 330 150 MOV [r10|QWORD[.] + 76] y: 98 size: WORD  <||@
  Comment 337 152 MOV [r10|QWORD[.] + 78] y: 98 size: WORD  <||@
  Comment 344 154 MOV [r10|QWORD[.] + 80] y: 98 size: WORD  <||@
  Comment 351 156 MOV [r10|QWORD[.] + 82] y: 98 size: WORD  <||@
  Comment 358 158 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 362 160 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 366 162 r11|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 370 164 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 373 166 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 379 block B8 null  <||@
  Comment 379 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 379 192 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 383 194 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 390 196 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 390 198 JUMP ~[] destination: B8 -> B9  <||@
  Comment 390 block B9 null  <||@
  Comment 390 200 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 390 202 r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 393 204 stack:40|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 398 206 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}  <||@
  Comment 398 {meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}}  <||@
  Comment 408 208 r8|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 415 210 MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD  <||@
  Comment 418 212 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}  <||@
  Comment 418 {meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}}  <||@
  Comment 425 214 MOV [rsi|QWORD[*] + 12] y: 34 size: DWORD  <||@
  Comment 432 216 r8|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3  <||@
  Comment 439 218 MOV (x: [rsi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 443 220 MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 447 222 r8|QWORD = MOV [r11|QWORD[.]] size: QWORD  <||@
  Comment 450 224 r9|QWORD = STACKLEA stack:32|QWORD  <||@
  Comment 455 226 rcx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 462 228 rbx|QWORD = OR (x: r15|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 468 230 rdi|QWORD = XOR (x: rbx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 474 232 TEST rdi|QWORD y: -121 size: QWORD  <||@
  Comment 481 234 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 487 block B10 null  <||@
  Comment 487 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 487 238 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 492 240 JUMP ~[] destination: B10 -> B35  <||@
  Comment 492 block B35 null  <||@
  Comment 492 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 492 450 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 495 452 rdx|DWORD = MOVE input: int[35|0x23]  <||@
  Comment 500 454 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad state [bci:17, 21, 7, 234, 17]  <||@
  Comment 500 9  <||@
  Comment 503 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 508 [stack:64, stack:72]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |-                 
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                   |2          
     locals:  |stack:40|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                           |1 
     locals:  |stack:40|QWORD[.]                           |- 
     locks:   |monitor[stack:40|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:163) [bci: 234, duringCall: true, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:40|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 509 456 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 511 458 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 517 block B37 null  <||@
  Comment 517 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 517 474 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 521 476 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 525 478 CMP rax|DWORD y: 16777215 size: DWORD  <||@
  Comment 531 480 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B42  <||@
  Comment 537 block B38 null  <||@
  Comment 537 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 537 484 rcx|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 541 486 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 544 488 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 547 490 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 550 492 r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 556 494 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 559 496 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B42 falseDestination: B38 -> B40  <||@
  Comment 565 block B40 null  <||@
  Comment 565 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 565 504 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 569 506 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 577 508 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 585 510 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 593 512 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 601 514 MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 604 516 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 611 518 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 611 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 618 520 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 618 522 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 621 524 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 624 526 JUMP ~[] destination: B40 -> B43  <||@
  Comment 624 block B43 null  <||@
  Comment 624 546 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 624 548 CMP r13|DWORD y: 35 size: DWORD  <||@
  Comment 628 550 rsi|DWORD = CMOVE (falseValue: int[34|0x22], ~trueValue: r13|DWORD) condition: <  <||@
  Comment 637 552 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 640 554 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 644 556 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B43 -> B62 falseDestination: B43 -> B45  <||@
  Comment 650 block B45 null  <||@
  Comment 650 562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 650 564 r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 655 566 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 659 568 rcx|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD  <||@
  Comment 663 570 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 667 572 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 670 578 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 677 574 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B45 -> B50 falseDestination: B45 -> B48  <||@
  Comment 683 block B50 null  <||@
  Comment 683 604 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 683 606 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 687 608 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 690 610 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B53 falseDestination: B50 -> B52  <||@
  Comment 696 block B52 null  <||@
  Comment 696 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 696 618 xmm0|V128_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 702 620 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 708 622 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 712 624 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 715 626 JUMP ~[] destination: B52 -> B53  <||@
  Comment 715 block B53 null  <||@
  Comment 715 628 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 715 630 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 719 632 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 722 634 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B56 falseDestination: B53 -> B55  <||@
  Comment 728 block B55 null  <||@
  Comment 728 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 728 642 xmm0|V64_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 734 644 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 740 646 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 744 648 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 747 650 JUMP ~[] destination: B55 -> B56  <||@
  Comment 747 block B56 null  <||@
  Comment 747 652 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 747 654 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 751 656 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 754 658 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58  <||@
  Comment 760 block B58 null  <||@
  Comment 760 664 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 760 666 xmm0|V32_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 766 668 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 772 670 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 776 672 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 779 674 JUMP ~[] destination: B58 -> B59  <||@
  Comment 779 block B59 null  <||@
  Comment 779 676 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 779 678 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 785 680 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 788 682 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61  <||@
  Comment 794 block B61 null  <||@
  Comment 794 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 794 690 rcx|DWORD = MOVSX [rcx|QWORD[.] + r11|QWORD * 2] size: DWORD  <||@
  Comment 799 692 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 804 694 JUMP ~[] destination: B61 -> B62  <||@
  Comment 804 block B62 null  <||@
  Comment 804 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 804 698 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 807 700 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 811 702 xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 815 704 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 818 706 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B81  <||@
  Comment 824 block B81 null  <||@
  Comment 824 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 824 848 r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 829 850 xmm3|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 833 852 xmm2|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 837 854 JUMP ~[] destination: B81 -> B82  <||@
  Comment 837 block B82 null  <||@
  Comment 837 856 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 837 858 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3  <||@
  Comment 844 860 MOV (x: [r11|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 848 862 rsi|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 855 864 r14|QWORD = MOVE input: long[4270112768|0xfe84c000]  <||@
  Comment 861 866 MOVB (x: [rsi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 865 868 rsi|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 869 870 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 871 872 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B82 -> B86 falseDestination: B82 -> B84  <||@
  Comment 877 block B84 null  <||@
  Comment 877 878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 877 880 rdx|DWORD = DEC r13|DWORD size: DWORD  <||@
  Comment 882 882 CMP (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 884 884 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B84 -> B86 falseDestination: B84 -> B87  <||@
  Comment 890 block B87 null  <||@
  Comment 890 898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 890 900 rcx|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 893 902 MOV [rax|QWORD[.] + rcx|QWORD * 2 + 16] y: 98 size: WORD  <||@
  Comment 900 904 rcx|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 904 906 MOV (x: [r11|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 908 908 MOV (x: [r11|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 912 910 r10|DWORD = LEA [rsi|DWORD + 2] size: DWORD  <||@
  Comment 916 912 rsi|DWORD = SUB (x: r10|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 922 914 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 925 916 BRANCH trueDestinationProbability: 0.9446261558763105 condition: < trueDestination: B87 -> B88 falseDestination: B87 -> B91  <||@
  Comment 931 block B88 null  <||@
  Comment 931 918 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 931 920 CMP (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 933 922 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90  <||@
  Comment 939 block B90 null  <||@
  Comment 939 934 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 939 936 rsi|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 942 938 MOV [rax|QWORD[.] + rsi|QWORD * 2 + 16] y: 98 size: WORD  <||@
  Comment 949 940 JUMP ~[] destination: B90 -> B144  <||@
  Comment 949 block B144 null  <||@
  Comment 949 1434 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 949 1436 r10|DWORD[.] = MOV [r11|QWORD[.] + 16] size: DWORD  <||@
  Comment 953 1438 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:61, 35, 7, 241, 17]  <||@
  Comment 953 [r10:0, r11:0, stack:72]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0             |1  |2          
     locals:  |r11|QWORD[.]  |-  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |r11|QWORD[.]                           |- 
     locks:   |monitor[r11|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:164) [bci: 241, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |r11|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 953 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 961 1440 rsi|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 965 1442 MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 969 1444 MOV (x: [r11|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 973 1446 r9|DWORD = LEA [rcx|DWORD + 2] size: DWORD  <||@
  Comment 977 1448 rdx|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 983 1450 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3  <||@
  Comment 990 1452 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 993 1454 BRANCH trueDestinationProbability: 0.9446261558763105 condition: < trueDestination: B144 -> B145 falseDestination: B144 -> B148  <||@
  Comment 999 block B145 null  <||@
  Comment 999 1456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 999 1458 r8|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 1002 1460 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1005 1462 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B145 -> B146 falseDestination: B145 -> B147  <||@
  Comment 1011 block B147 null  <||@
  Comment 1011 1474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1011 1476 rdx|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 1014 1478 MOV [rcx|QWORD[.] + rdx|QWORD * 2 + 16] y: 98 size: WORD  <||@
  Comment 1021 1480 JUMP ~[] destination: B147 -> B201  <||@
  Comment 1021 block B201 null  <||@
  Comment 1021 1974 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1021 1976 rdx|DWORD[.] = MOV [r11|QWORD[.] + 20] size: DWORD  <||@
  Comment 1025 1978 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1027 1980 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B201 -> B202 falseDestination: B201 -> B267  <||@
  Comment 1033 block B202 null  <||@
  Comment 1033 1982 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1033 1984 r13|DWORD[.] = MOV [r11|QWORD[.] + 16] size: DWORD  <||@
  Comment 1037 1986 NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:61, 35, 7, 248, 17]  <||@
  Comment 1037 [r11:0, r13:0, stack:72]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0             |1  |2          
     locals:  |r11|QWORD[.]  |-  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |r11|QWORD[.]                           |- 
     locks:   |monitor[r11|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:165) [bci: 248, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |r11|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1037 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1041 1988 rsi|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 1043 1990 MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 1047 1992 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1051 1994 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1055 1996 CMP rsi|DWORD y: 16777215 size: DWORD  <||@
  Comment 1061 1998 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B202 -> B203 falseDestination: B202 -> B207  <||@
  Comment 1067 block B203 null  <||@
  Comment 1067 2000 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1067 2002 r10|DWORD = SHL rsi|DWORD size: DWORD  <||@
  Comment 1073 2004 r10|DWORD = LEA [r10|DWORD + 23] size: DWORD  <||@
  Comment 1077 2006 r10|DWORD = AND r10|DWORD y: -8 size: DWORD  <||@
  Comment 1081 2008 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1084 2010 r8|QWORD = ADD (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1090 2012 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1093 2014 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B203 -> B207 falseDestination: B203 -> B205  <||@
  Comment 1099 block B205 null  <||@
  Comment 1099 2020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1099 2022 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 1103 2024 AMD64PREFETCH ~[r10|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 1112 2026 AMD64PREFETCH ~[r10|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 1121 2028 AMD64PREFETCH ~[r10|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 1130 2030 AMD64PREFETCH ~[r10|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 1139 2032 MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 1142 2034 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 1149 2036 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1149 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1156 2038 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1156 2040 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1159 2042 r14|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1162 2044 JUMP ~[] destination: B205 -> B208  <||@
  Comment 1162 block B208 null  <||@
  Comment 1162 2068 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1162 2070 rsi|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1170 2072 CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1173 2074 rdx|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: rsi|DWORD) condition: >  <||@
  Comment 1179 2076 rsi|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 1182 2078 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 1186 2080 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B208 -> B227 falseDestination: B208 -> B210  <||@
  Comment 1192 block B210 null  <||@
  Comment 1192 2086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1192 2088 rdx|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 1196 2090 r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1200 2092 r11|QWORD[*] = LEA [r13|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 1208 2094 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1211 2100 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1218 2096 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B210 -> B215 falseDestination: B210 -> B213  <||@
  Comment 1224 block B215 null  <||@
  Comment 1224 2126 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1224 2128 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1228 2130 CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1231 2132 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B215 -> B218 falseDestination: B215 -> B217  <||@
  Comment 1237 block B217 null  <||@
  Comment 1237 2138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1237 2140 xmm0|V128_WORD = H [r11|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 1243 2142 J (address: [r10|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1249 2144 rdx|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 1253 2146 r8|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1256 2148 JUMP ~[] destination: B217 -> B218  <||@
  Comment 1256 block B218 null  <||@
  Comment 1256 2150 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1256 2152 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 1260 2154 CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1263 2156 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B218 -> B221 falseDestination: B218 -> B220  <||@
  Comment 1269 block B220 null  <||@
  Comment 1269 2162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1269 2164 xmm0|V64_WORD = H [r11|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 1275 2166 J (address: [r10|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1281 2168 rdx|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 1285 2170 r8|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1288 2172 JUMP ~[] destination: B220 -> B221  <||@
  Comment 1288 block B221 null  <||@
  Comment 1288 2174 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1288 2176 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 1292 2178 CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1295 2180 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B221 -> B224 falseDestination: B221 -> B223  <||@
  Comment 1301 block B223 null  <||@
  Comment 1301 2186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1301 2188 xmm0|V32_WORD = H [r11|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 1307 2190 J (address: [r10|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1313 2192 rdx|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 1317 2194 r8|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1320 2196 JUMP ~[] destination: B223 -> B224  <||@
  Comment 1320 block B224 null  <||@
  Comment 1320 2198 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1320 2200 rdx|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 1326 2202 CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1329 2204 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B224 -> B227 falseDestination: B224 -> B226  <||@
  Comment 1335 block B226 null  <||@
  Comment 1335 2210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1335 2212 rdx|DWORD = MOVSX [r11|QWORD[*] + r8|QWORD * 2] size: DWORD  <||@
  Comment 1340 2214 MOV (x: [r10|QWORD[.] + r8|QWORD * 2], y: rdx|DWORD) size: WORD  <||@
  Comment 1345 2216 JUMP ~[] destination: B226 -> B227  <||@
  Comment 1345 block B227 null  <||@
  Comment 1345 2218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1345 2220 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1348 2222 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1351 2224 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B227 -> B228 falseDestination: B227 -> B247  <||@
  Comment 1357 block B247 null  <||@
  Comment 1357 2376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1357 2370 r14|QWORD = MOVE input: long[4270112768|0xfe84c000]  <||@
  Comment 1363 2372 r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1368 2378 r13|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3  <||@
  Comment 1375 2380 MOV (x: [r11|QWORD[.] + 20], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1379 2382 rsi|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1386 2384 MOVB (x: [rsi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1390 2386 r10|QWORD = MOV [r11|QWORD[.]] size: QWORD  <||@
  Comment 1393 2388 rsi|QWORD = AND r10|QWORD y: 7 size: QWORD  <||@
  Comment 1400 2390 CMP rsi|QWORD y: 5 size: QWORD  <||@
  Comment 1404 2392 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B247 -> B248 falseDestination: B247 -> B249  <||@
  Comment 1410 block B248 null  <||@
  Comment 1410 2394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1410 2396 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1413 2398 JUMP ~[] destination: B248 -> B262  <||@
  Comment 1413 block B262 null  <||@
  Comment 1413 2504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1413 2506 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1417 2508 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 1421 2510 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1425 2512 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B262 -> B263 falseDestination: B262 -> B264  <||@
  Comment 1431 block B264 null  <||@
  Comment 1431 2528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1431 2530 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 1435 2532 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 1442 2534 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1442 2536 JUMP ~[] destination: B264 -> B265  <||@
  Comment 1442 block B265 null  <||@
  Comment 1442 2538 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1442 2540 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1445 2542 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1445 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1455 2544 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 1462 2546 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1465 2548 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1465 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1472 2550 MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1476 2552 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1480 2554 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1483 2556 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad  <||@
  Comment 1492 12  <||@
  Comment 1502 block B63 null  <||@
  Comment 1502 708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1502 710 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1507 712 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1510 714 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1514 716 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1517 722 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1524 724 xmm2|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1528 718 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B63 -> B68 falseDestination: B63 -> B66  <||@
  Comment 1534 block B68 null  <||@
  Comment 1534 750 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1534 752 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1538 754 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1541 756 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B71 falseDestination: B68 -> B70  <||@
  Comment 1547 block B70 null  <||@
  Comment 1547 762 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1547 764 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm1|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1553 766 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1557 768 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1560 770 JUMP ~[] destination: B70 -> B71  <||@
  Comment 1560 block B71 null  <||@
  Comment 1560 772 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1560 774 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1564 776 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1567 778 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B71 -> B74 falseDestination: B71 -> B73  <||@
  Comment 1573 block B73 null  <||@
  Comment 1573 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1573 786 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1579 788 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 1583 790 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1586 792 JUMP ~[] destination: B73 -> B74  <||@
  Comment 1586 block B74 null  <||@
  Comment 1586 794 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1586 796 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1590 798 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1593 804 xmm3|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1597 800 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B74 -> B77 falseDestination: B74 -> B76  <||@
  Comment 1603 block B76 null  <||@
  Comment 1603 808 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1603 812 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm3|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1609 814 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 1613 816 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1616 818 JUMP ~[] destination: B76 -> B77  <||@
  Comment 1616 block B77 null  <||@
  Comment 1616 820 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1616 822 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1619 824 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1622 826 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B79  <||@
  Comment 1628 block B79 null  <||@
  Comment 1628 834 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1628 836 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1633 838 r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1638 840 JUMP ~[] destination: B79 -> B82  <||@
  Comment 1643 block B228 null  <||@
  Comment 1643 2226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1643 2228 r10|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1648 2230 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1651 2232 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1655 2234 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1658 2240 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1665 2236 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B228 -> B233 falseDestination: B228 -> B230  <||@
  Comment 1671 block B233 null  <||@
  Comment 1671 2266 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1671 2268 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1675 2270 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1678 2272 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B233 -> B236 falseDestination: B233 -> B235  <||@
  Comment 1684 block B235 null  <||@
  Comment 1684 2278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1684 2280 xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1688 2282 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm1|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1694 2284 rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 1698 2286 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1701 2288 JUMP ~[] destination: B235 -> B236  <||@
  Comment 1701 block B236 null  <||@
  Comment 1701 2290 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1701 2292 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1705 2294 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1708 2296 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B236 -> B239 falseDestination: B236 -> B238  <||@
  Comment 1714 block B238 null  <||@
  Comment 1714 2302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1714 2304 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1718 2306 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1724 2308 rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 1728 2310 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1731 2312 JUMP ~[] destination: B238 -> B239  <||@
  Comment 1731 block B239 null  <||@
  Comment 1731 2314 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1731 2316 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1735 2318 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1738 2320 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B239 -> B242 falseDestination: B239 -> B241  <||@
  Comment 1744 block B241 null  <||@
  Comment 1744 2326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1744 2328 xmm1|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1748 2330 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm1|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1754 2332 rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 1758 2334 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1761 2336 JUMP ~[] destination: B241 -> B242  <||@
  Comment 1761 block B242 null  <||@
  Comment 1761 2338 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1761 2340 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1764 2342 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1767 2344 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B242 -> B247 falseDestination: B242 -> B244  <||@
  Comment 1773 block B244 null  <||@
  Comment 1773 2354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1773 2356 MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1778 2362 JUMP ~[] destination: B244 -> B247  <||@
  Comment 1783 block B66 loop 1 depth 1 header:5269|LoopBegin  <||@
  Comment 1783 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1792 738 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm2|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1798 740 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1802 742 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1805 744 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B66 -> B68 falseDestination: B66 -> B66  <||@
  Comment 1812 block B78 null  <||@
  Comment 1812 828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1812 830 r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1817 832 JUMP ~[] destination: B78 -> B82  <||@
  Comment 1822 block B48 loop 0 depth 1 header:5206|LoopBegin  <||@
  Comment 1822 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1824 590 xmm0|V256_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1830 592 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1836 594 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1840 596 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1843 598 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B48 -> B50 falseDestination: B48 -> B48  <||@
  Comment 1850 block B213 loop 6 depth 1 header:5066|LoopBegin  <||@
  Comment 1850 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1856 2112 xmm0|V256_WORD = H [r11|QWORD[*] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1862 2114 J (address: [r10|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1868 2116 r8|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 1872 2118 CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1875 2120 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B213 -> B215 falseDestination: B213 -> B213  <||@
  Comment 1882 block B230 null  <||@
  Comment 1882 2244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1882 2248 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1886 2250 JUMP ~[] destination: B230 -> B231  <||@
  Comment 1886 block B231 loop 7 depth 1 header:5130|LoopBegin  <||@
  Comment 1886 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1888 2254 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1894 2256 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1898 2258 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1901 2260 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B231 -> B233 falseDestination: B231 -> B231  <||@
  Comment 1908 block B42 null  <||@
  Comment 1908 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1908 534 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1908 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1918 536 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1920 538 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1925 540 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1928 542 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 7, 234, 17]  <||@
  Comment 1928 {Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1933 [stack:64, stack:72]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2         
     locals:  |-                  |-                  |          
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                   |2          
     locals:  |stack:40|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                           |1 
     locals:  |stack:40|QWORD[.]                           |- 
     locks:   |monitor[stack:40|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:163) [bci: 234, duringCall: true, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:40|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1934 544 JUMP ~[] destination: B42 -> B43  <||@
  Comment 1939 block B249 null  <||@
  Comment 1939 2400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1939 2402 r8|QWORD = STACKLEA stack:32|QWORD  <||@
  Comment 1944 2404 rsi|QWORD = MOV [r8|QWORD] size: QWORD  <||@
  Comment 1947 2406 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1950 2408 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B249 -> B250 falseDestination: B249 -> B251  <||@
  Comment 1956 block B251 null  <||@
  Comment 1956 2416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1956 2418 TEST r10|QWORD y: 2 size: QWORD  <||@
  Comment 1963 2424 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1966 2420 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B251 -> B252 falseDestination: B251 -> B255  <||@
  Comment 1972 block B252 null  <||@
  Comment 1972 2422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1972 2426 rax|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1975 2428 rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD  <||@
  Comment 1980 2430 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B252 -> B253 falseDestination: B252 -> B262  <||@
  Comment 1991 block B207 null  <||@
  Comment 1991 2050 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1991 2052 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1991 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 2001 2054 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2004 2056 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 2007 2058 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2010 2060 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2015 2062 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2018 2064 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 7, 248, 17]  <||@
  Comment 2018 {Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2023 [r13:0, stack:72]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48, duringCall: false, rethrow: false]
              |0                  |1  |2          
     locals:  |stack:40|QWORD[.]  |-  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                           |1 
     locals:  |stack:40|QWORD[.]                           |- 
     locks:   |monitor[stack:40|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:165) [bci: 248, duringCall: true, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:40|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2024 2066 JUMP ~[] destination: B207 -> B208  <||@
  Comment 2029 block B91 null  <||@
  Comment 2029 942 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2029 944 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2034 946 stack:52|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2039 948 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2042 950 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2045 952 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad state [bci:17, 21, 7, 241, 17]  <||@
  Comment 2045 9  <||@
  Comment 2047 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 2052 [stack:64, stack:72]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |-                 
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                   |2          
     locals:  |stack:40|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                           |1 
     locals:  |stack:40|QWORD[.]                           |- 
     locks:   |monitor[stack:40|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:164) [bci: 241, duringCall: true, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:40|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2053 954 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2056 956 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 2059 958 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B91 -> B92 falseDestination: B91 -> B93  <||@
  Comment 2065 block B93 null  <||@
  Comment 2065 972 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2065 974 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2069 976 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 2073 978 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 2080 980 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B93 -> B94 falseDestination: B93 -> B98  <||@
  Comment 2086 block B94 null  <||@
  Comment 2086 982 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2086 984 r10|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 2092 986 r10|DWORD = LEA [r10|DWORD + 23] size: DWORD  <||@
  Comment 2096 988 r10|DWORD = AND r10|DWORD y: -8 size: DWORD  <||@
  Comment 2100 990 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 2103 992 r11|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2109 994 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 2112 996 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B98 falseDestination: B94 -> B96  <||@
  Comment 2118 block B96 null  <||@
  Comment 2118 1004 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2118 1006 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 2122 1008 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 2131 1010 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 2140 1012 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 2149 1014 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 2158 1016 MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 2162 1018 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 2169 1020 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 2169 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 2176 1022 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2176 1024 rax|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2180 1026 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2185 1028 JUMP ~[] destination: B96 -> B99  <||@
  Comment 2185 block B99 null  <||@
  Comment 2185 1054 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2185 1056 CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2188 1058 rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: >  <||@
  Comment 2194 1060 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 2197 1062 CMP rdx|QWORD y: 1 size: QWORD  <||@
  Comment 2201 1064 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B99 -> B118 falseDestination: B99 -> B101  <||@
  Comment 2207 block B101 null  <||@
  Comment 2207 1070 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2207 1072 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2212 1074 rcx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD  <||@
  Comment 2216 1076 r10|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 2220 1078 r11|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 2224 1080 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2227 1086 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2234 1082 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B101 -> B106 falseDestination: B101 -> B104  <||@
  Comment 2240 block B106 null  <||@
  Comment 2240 1112 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2240 1114 r11|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 2244 1116 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2247 1118 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B106 -> B109 falseDestination: B106 -> B108  <||@
  Comment 2253 block B108 null  <||@
  Comment 2253 1124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2253 1126 xmm0|V128_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 2259 1128 J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 2265 1130 r11|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 2269 1132 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2272 1134 JUMP ~[] destination: B108 -> B109  <||@
  Comment 2272 block B109 null  <||@
  Comment 2272 1136 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2272 1138 r11|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 2276 1140 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2279 1142 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B109 -> B112 falseDestination: B109 -> B111  <||@
  Comment 2285 block B111 null  <||@
  Comment 2285 1148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2285 1150 xmm0|V64_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 2291 1152 J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 2297 1154 r11|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 2301 1156 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2304 1158 JUMP ~[] destination: B111 -> B112  <||@
  Comment 2304 block B112 null  <||@
  Comment 2304 1160 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2304 1162 r11|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 2308 1164 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2311 1166 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B112 -> B115 falseDestination: B112 -> B114  <||@
  Comment 2317 block B114 null  <||@
  Comment 2317 1172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2317 1174 xmm0|V32_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 2323 1176 J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 2329 1178 r11|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 2333 1180 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2336 1182 JUMP ~[] destination: B114 -> B115  <||@
  Comment 2336 block B115 null  <||@
  Comment 2336 1184 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2336 1186 r11|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 2342 1188 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2345 1190 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B115 -> B118 falseDestination: B115 -> B117  <||@
  Comment 2351 block B117 null  <||@
  Comment 2351 1196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2351 1198 r10|DWORD = MOVSX [r10|QWORD[.] + r8|QWORD * 2] size: DWORD  <||@
  Comment 2356 1200 MOV (x: [rcx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD  <||@
  Comment 2361 1202 JUMP ~[] destination: B117 -> B118  <||@
  Comment 2361 block B118 null  <||@
  Comment 2361 1204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2361 1206 rcx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 2364 1208 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 2367 1210 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B118 -> B119 falseDestination: B118 -> B137  <||@
  Comment 2373 block B137 null  <||@
  Comment 2373 1358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2373 1360 r10|QWORD = MOVE input: long[4270112768|0xfe84c000]  <||@
  Comment 2379 1362 xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 2383 1364 xmm2|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 2387 1366 xmm3|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 2391 1368 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 2395 1370 JUMP ~[] destination: B137 -> B138  <||@
  Comment 2395 block B138 null  <||@
  Comment 2395 1372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2395 1374 rdx|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3  <||@
  Comment 2402 1376 MOV (x: [r14|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 2406 1378 r11|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2413 1380 MOVB (x: [r11|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2417 1382 rcx|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 2421 1384 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2423 1386 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B138 -> B142 falseDestination: B138 -> B140  <||@
  Comment 2429 block B140 null  <||@
  Comment 2429 1394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2429 1396 r13|DWORD = DEC r13|DWORD size: DWORD  <||@
  Comment 2432 1398 CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 2435 1400 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B140 -> B142 falseDestination: B140 -> B143  <||@
  Comment 2441 block B143 null  <||@
  Comment 2441 1416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2441 1418 rdx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 2444 1420 MOV [rsi|QWORD[.] + rdx|QWORD * 2 + 16] y: 98 size: WORD  <||@
  Comment 2451 1422 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2454 1424 r14|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2457 1426 stack:96|V256_WORD = VMOVE xmm0|V256_WORD  <||@
  Comment 2463 1428 xmm0|V64_WORD = VMOVE xmm2|V64_WORD  <||@
  Comment 2467 1430 xmm2|V256_WORD = VMOVE stack:96|V256_WORD  <||@
  Comment 2473 1432 JUMP ~[] destination: B143 -> B144  <||@
  Comment 2478 block B148 null  <||@
  Comment 2478 1482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2478 1484 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2483 1486 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2488 1488 stack:100|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 2493 1490 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2498 1492 rdx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2501 1494 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5be791ad state [bci:17, 21, 7, 248, 17]  <||@
  Comment 2501 9  <||@
  Comment 2503 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 2508 [stack:12, stack:64, stack:72]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |-                 
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                   |2          
     locals:  |stack:40|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                           |1 
     locals:  |stack:40|QWORD[.]                           |- 
     locks:   |monitor[stack:40|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:165) [bci: 248, duringCall: true, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:40|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 2509 1496 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2512 1498 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 2515 1500 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B148 -> B149 falseDestination: B148 -> B150  <||@
  Comment 2521 block B150 null  <||@
  Comment 2521 1514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2521 1516 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2525 1518 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 2529 1520 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 2536 1522 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B150 -> B151 falseDestination: B150 -> B155  <||@
  Comment 2542 block B151 null  <||@
  Comment 2542 1524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2542 1526 rdx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 2547 1528 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 2550 1530 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 2553 1532 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 2556 1534 rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 2562 1536 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2565 1538 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B151 -> B155 falseDestination: B151 -> B153  <||@
  Comment 2571 block B153 null  <||@
  Comment 2571 1546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2571 1548 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 2575 1550 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 2583 1552 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 2591 1554 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 2599 1556 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 2607 1558 MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 2611 1560 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 2618 1562 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 2618 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 2625 1564 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2625 1566 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2630 1568 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2635 1570 JUMP ~[] destination: B153 -> B156  <||@
  Comment 2635 block B156 null  <||@
  Comment 2635 1592 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2635 1594 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2638 1596 rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r8|DWORD) condition: >  <||@
  Comment 2645 1598 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 2648 1600 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 2652 1602 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B156 -> B175 falseDestination: B156 -> B158  <||@
  Comment 2658 block B158 null  <||@
  Comment 2658 1608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2658 1610 r10|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD  <||@
  Comment 2663 1612 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 2667 1614 r10|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 2675 1616 r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 2679 1618 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2682 1624 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2689 1620 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B158 -> B163 falseDestination: B158 -> B161  <||@
  Comment 2695 block B163 null  <||@
  Comment 2695 1650 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2695 1652 r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 2699 1654 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2702 1656 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B163 -> B166 falseDestination: B163 -> B165  <||@
  Comment 2708 block B165 null  <||@
  Comment 2708 1662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2708 1664 xmm0|V128_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 2714 1666 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 2720 1668 r11|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 2724 1670 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2727 1672 JUMP ~[] destination: B165 -> B166  <||@
  Comment 2727 block B166 null  <||@
  Comment 2727 1674 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2727 1676 r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 2731 1678 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2734 1680 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B169 falseDestination: B166 -> B168  <||@
  Comment 2740 block B168 null  <||@
  Comment 2740 1686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2740 1688 xmm0|V64_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 2746 1690 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 2752 1692 r11|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 2756 1694 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2759 1696 JUMP ~[] destination: B168 -> B169  <||@
  Comment 2759 block B169 null  <||@
  Comment 2759 1698 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2759 1700 r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 2763 1702 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2766 1704 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B169 -> B172 falseDestination: B169 -> B171  <||@
  Comment 2772 block B171 null  <||@
  Comment 2772 1710 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2772 1712 xmm0|V32_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 2778 1714 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 2784 1716 r11|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 2788 1718 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2791 1720 JUMP ~[] destination: B171 -> B172  <||@
  Comment 2791 block B172 null  <||@
  Comment 2791 1722 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2791 1724 r11|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 2797 1726 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2800 1728 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B172 -> B175 falseDestination: B172 -> B174  <||@
  Comment 2806 block B174 null  <||@
  Comment 2806 1734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2806 1736 r10|DWORD = MOVSX [r10|QWORD[*] + r8|QWORD * 2] size: DWORD  <||@
  Comment 2811 1738 MOV (x: [rdx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD  <||@
  Comment 2816 1740 JUMP ~[] destination: B174 -> B175  <||@
  Comment 2816 block B175 null  <||@
  Comment 2816 1742 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2816 1744 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 2819 1746 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2822 1748 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B175 -> B176 falseDestination: B175 -> B194  <||@
  Comment 2828 block B194 null  <||@
  Comment 2828 1896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2828 1898 rsi|QWORD = MOVE input: long[4270112768|0xfe84c000]  <||@
  Comment 2833 1900 xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 2837 1902 xmm2|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 2841 1904 xmm3|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 2845 1906 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 2849 1908 JUMP ~[] destination: B194 -> B195  <||@
  Comment 2849 block B195 null  <||@
  Comment 2849 1910 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2849 1912 rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@45171875 encoding: base: 0 shift: 3  <||@
  Comment 2856 1914 MOV (x: [r14|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 2860 1916 r11|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2867 1918 MOVB (x: [r11|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2871 1920 rdx|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 2875 1922 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2877 1924 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B195 -> B199 falseDestination: B195 -> B197  <||@
  Comment 2883 block B197 null  <||@
  Comment 2883 1932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2883 1934 r13|DWORD = DEC r13|DWORD size: DWORD  <||@
  Comment 2886 1936 CMP (x: rdx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 2889 1938 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B197 -> B199 falseDestination: B197 -> B200  <||@
  Comment 2895 block B200 null  <||@
  Comment 2895 1954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2895 1956 r10|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 2898 1958 MOV [rax|QWORD[.] + r10|QWORD * 2 + 16] y: 98 size: WORD  <||@
  Comment 2906 1960 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2909 1962 r14|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2912 1964 rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2914 1966 stack:96|V256_WORD = VMOVE xmm0|V256_WORD  <||@
  Comment 2920 1968 xmm0|V64_WORD = VMOVE xmm2|V64_WORD  <||@
  Comment 2924 1970 xmm2|V256_WORD = VMOVE stack:96|V256_WORD  <||@
  Comment 2930 1972 JUMP ~[] destination: B200 -> B201  <||@
  Comment 2935 block B250 null  <||@
  Comment 2935 2410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2935 2412 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2938 2414 JUMP ~[] destination: B250 -> B262  <||@
  Comment 2943 block B119 null  <||@
  Comment 2943 1212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2943 1214 r10|QWORD[.] = LEA [rsi|QWORD[.] + rdx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2948 1216 rcx|QWORD = SUB (x: rcx|QWORD, ~y: rdx|QWORD) size: QWORD  <||@
  Comment 2951 1218 rdx|QWORD = LEA [rcx|QWORD - 16] size: QWORD  <||@
  Comment 2955 1220 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 2958 1226 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2965 1228 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 2969 1222 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B119 -> B124 falseDestination: B119 -> B122  <||@
  Comment 2975 block B124 null  <||@
  Comment 2975 1254 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2975 1256 rdx|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 2979 1258 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 2982 1264 xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 2986 1260 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B124 -> B127 falseDestination: B124 -> B126  <||@
  Comment 2992 block B126 null  <||@
  Comment 2992 1268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2992 1272 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm1|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 2998 1274 rdx|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 3002 1276 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 3005 1278 JUMP ~[] destination: B126 -> B127  <||@
  Comment 3005 block B127 null  <||@
  Comment 3005 1280 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3005 1282 rdx|QWORD = LEA [rcx|QWORD - 4] size: QWORD  <||@
  Comment 3009 1284 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3012 1290 xmm2|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 3016 1286 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B127 -> B130 falseDestination: B127 -> B129  <||@
  Comment 3022 block B129 null  <||@
  Comment 3022 1294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3022 1298 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm2|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 3028 1300 rdx|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 3032 1302 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 3035 1304 JUMP ~[] destination: B129 -> B130  <||@
  Comment 3035 block B130 null  <||@
  Comment 3035 1306 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3035 1308 rdx|QWORD = LEA [rcx|QWORD - 2] size: QWORD  <||@
  Comment 3039 1310 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3042 1316 xmm3|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3046 1312 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B130 -> B133 falseDestination: B130 -> B132  <||@
  Comment 3052 block B132 null  <||@
  Comment 3052 1320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3052 1324 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm3|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 3058 1326 rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 3062 1328 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 3065 1330 JUMP ~[] destination: B132 -> B133  <||@
  Comment 3065 block B133 null  <||@
  Comment 3065 1332 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3065 1334 rcx|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 3068 1336 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 3071 1338 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B133 -> B134 falseDestination: B133 -> B135  <||@
  Comment 3077 block B135 null  <||@
  Comment 3077 1346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3077 1348 MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 3082 1350 r10|QWORD = MOVE input: long[4270112768|0xfe84c000]  <||@
  Comment 3088 1352 JUMP ~[] destination: B135 -> B138  <||@
  Comment 3093 block B176 null  <||@
  Comment 3093 1750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3093 1752 r10|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 3098 1754 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 3101 1756 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 3105 1758 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3108 1764 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3115 1766 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 3119 1760 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B176 -> B181 falseDestination: B176 -> B179  <||@
  Comment 3125 block B181 null  <||@
  Comment 3125 1792 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3125 1794 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 3129 1796 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3132 1802 xmm1|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 3136 1798 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B181 -> B184 falseDestination: B181 -> B183  <||@
  Comment 3142 block B183 null  <||@
  Comment 3142 1806 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3142 1810 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm1|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 3148 1812 rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 3152 1814 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3155 1816 JUMP ~[] destination: B183 -> B184  <||@
  Comment 3155 block B184 null  <||@
  Comment 3155 1818 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3155 1820 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 3159 1822 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3162 1828 xmm2|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 3166 1824 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B184 -> B187 falseDestination: B184 -> B186  <||@
  Comment 3172 block B186 null  <||@
  Comment 3172 1832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3172 1836 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm2|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 3178 1838 rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 3182 1840 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3185 1842 JUMP ~[] destination: B186 -> B187  <||@
  Comment 3185 block B187 null  <||@
  Comment 3185 1844 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3185 1846 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 3189 1848 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3192 1854 xmm3|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3196 1850 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B187 -> B190 falseDestination: B187 -> B189  <||@
  Comment 3202 block B189 null  <||@
  Comment 3202 1858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3202 1862 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm3|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 3208 1864 rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 3212 1866 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3215 1868 JUMP ~[] destination: B189 -> B190  <||@
  Comment 3215 block B190 null  <||@
  Comment 3215 1870 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3215 1872 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 3218 1874 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3221 1876 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B190 -> B191 falseDestination: B190 -> B192  <||@
  Comment 3227 block B192 null  <||@
  Comment 3227 1884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3227 1886 MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 3232 1888 rsi|QWORD = MOVE input: long[4270112768|0xfe84c000]  <||@
  Comment 3237 1890 JUMP ~[] destination: B192 -> B195  <||@
  Comment 3242 block B4 null  <||@
  Comment 3242 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3242 66 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 3242 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 3252 68 rdx|DWORD = MOVE input: int[34|0x22]  <||@
  Comment 3257 70 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3262 72 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 3262 {Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3267 [r13:0, r14:0]at bench.StringOp.append(Bench.scala:124) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r13|QWORD[.]  |-   <||@
  Comment 3268 74 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3271 76 JUMP ~[] destination: B4 -> B6  <||@
  Comment 3276 block B1 null  <||@
  Comment 3276 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3276 20 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3276 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3286 22 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 3291 24 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3296 26 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 3296 {Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3301 [r13:0]at bench.StringOp.append(Bench.scala:124) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r13|QWORD[.]  |-   <||@
  Comment 3302 28 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3305 30 JUMP ~[] destination: B1 -> B3  <||@
  Comment 3310 block B7 null  <||@
  Comment 3310 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3310 170 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3313 172 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3313 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3323 174 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 3328 176 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3333 178 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 7, 227, 17]  <||@
  Comment 3333 {Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3338 [r14:0]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0                                                                                         |1  |2          
     locals:  |vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}  |-  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                                                              |1 
     locals:  |vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}                                       |- 
     locks:   |monitor[vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}, stack:32|QWORD, eliminated]  |  
  at bench.StringOp.cont(Bench.scala:162) [bci: 227, duringCall: true, rethrow: false]
              |0  |1                                                                                        
     locals:  |-  |vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 3339 180 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3342 182 xmm1|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3346 184 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 3350 186 r10|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 3353 188 JUMP ~[] destination: B7 -> B9  <||@
  Comment 3358 block B86 null  <||@
  Comment 3358 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3358 892 MOV [r15|QWORD + 668] y: -910945 size: DWORD  <||@
  Comment 3369 894 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3376 896 DEOPT info [bci:26, 21, 7, 234, 17]  <||@
  Comment 3376 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1016a1f90, value=0x10a2835fe]:0x10a2835fe}  <||@
  Comment 3381 [r11:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                   |2          
     locals:  |r11|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |r11|QWORD[.]                           |- 
     locks:   |monitor[r11|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:163) [bci: 234, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |r11|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 3382 block B11 null  <||@
  Comment 3382 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3382 244 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3385 246 rax|QWORD = AND r8|QWORD y: 7 size: QWORD  <||@
  Comment 3392 248 CMP rax|QWORD y: 5 size: QWORD  <||@
  Comment 3396 250 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B23  <||@
  Comment 3402 block B23 null  <||@
  Comment 3402 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3402 342 TEST r8|QWORD y: 2 size: QWORD  <||@
  Comment 3409 344 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B29  <||@
  Comment 3415 block B24 null  <||@
  Comment 3415 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3415 350 r8|QWORD = OR r8|QWORD y: 1 size: QWORD  <||@
  Comment 3419 352 MOV (x: [r9|QWORD], y: r8|QWORD) size: QWORD  <||@
  Comment 3422 354 rax|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3425 356 rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD  <||@
  Comment 3430 358 CMP (x: rax|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3433 360 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 3439 block B25 null  <||@
  Comment 3439 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3439 364 stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 3444 366 JUMP ~[] destination: B25 -> B35  <||@
  Comment 3449 block B263 null  <||@
  Comment 3449 2514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3449 2516 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3449 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3459 2518 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 3464 2520 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3469 2522 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:256, 17]  <||@
  Comment 3469 {Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3474 [r13:0, r14:0]at bench.StringOp.cont(Bench.scala:166) [bci: 256, duringCall: false, rethrow: false]
              |0                                                     |1 
     locals:  |-                                                     |- 
     stack:   |vobject:String:0{value=r14|QWORD[.],hash=int[0|0x0]}  |  
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 3475 2524 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3475 2526 JUMP ~[] destination: B263 -> B265  <||@
  Comment 3480 block B104 loop 2 depth 1 header:5332|LoopBegin  <||@
  Comment 3480 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3488 1098 xmm0|V256_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 3494 1100 J (address: [rcx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 3500 1102 r8|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 3504 1104 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 3507 1106 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B104 -> B106 falseDestination: B104 -> B104  <||@
  Comment 3514 block B122 loop 3 depth 1 header:5395|LoopBegin  <||@
  Comment 3514 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3520 1242 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 3526 1244 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 3530 1246 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3533 1248 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B122 -> B124 falseDestination: B122 -> B122  <||@
  Comment 3540 block B134 null  <||@
  Comment 3540 1340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3540 1342 r10|QWORD = MOVE input: long[4270112768|0xfe84c000]  <||@
  Comment 3546 1344 JUMP ~[] destination: B134 -> B138  <||@
  Comment 3551 block B191 null  <||@
  Comment 3551 1878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3551 1880 rsi|QWORD = MOVE input: long[4270112768|0xfe84c000]  <||@
  Comment 3556 1882 JUMP ~[] destination: B191 -> B195  <||@
  Comment 3561 block B179 loop 5 depth 1 header:5521|LoopBegin  <||@
  Comment 3561 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3568 1780 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 3574 1782 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 3578 1784 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3581 1786 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B179 -> B181 falseDestination: B179 -> B179  <||@
  Comment 3588 block B161 loop 4 depth 1 header:5458|LoopBegin  <||@
  Comment 3588 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3600 1636 xmm0|V256_WORD = H [r10|QWORD[*] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 3606 1638 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 3612 1640 r8|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 3616 1642 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 3619 1644 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B161 -> B163 falseDestination: B161 -> B161  <||@
  Comment 3626 block B98 null  <||@
  Comment 3626 1036 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3626 1032 r11|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3631 1038 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 3631 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 3641 1040 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3644 1042 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3649 1044 r14|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 3652 1046 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 7, 241, 17]  <||@
  Comment 3652 {Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3657 [r14:0, stack:64, stack:72]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0             |1                  |2         
     locals:  |-             |-                  |          
     stack:   |r14|QWORD[.]  |stack:48|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                   |2          
     locals:  |r14|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |r14|QWORD[.]                           |- 
     locks:   |monitor[r14|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:164) [bci: 241, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |r14|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 3658 1048 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3661 1050 rax|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 3665 1052 JUMP ~[] destination: B98 -> B99  <||@
  Comment 3670 block B155 null  <||@
  Comment 3670 1578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3670 1574 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3675 1580 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 3675 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 3685 1582 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3688 1584 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3693 1586 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 7, 248, 17]  <||@
  Comment 3693 {Stub<NewArrayStub.newArray>@0x10ac30320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3698 [r14:0, stack:12, stack:64, stack:72]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0             |1                  |2         
     locals:  |-             |-                  |          
     stack:   |r14|QWORD[.]  |stack:48|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                   |2          
     locals:  |r14|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |r14|QWORD[.]                           |- 
     locks:   |monitor[r14|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:165) [bci: 248, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |r14|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 3699 1588 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 3704 1590 JUMP ~[] destination: B155 -> B156  <||@
  Comment 3709 block B12 null  <||@
  Comment 3709 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3709 254 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3714 256 xmm3|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3718 258 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 3722 260 TEST rdi|QWORD y: 7 size: QWORD  <||@
  Comment 3729 262 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B21  <||@
  Comment 3735 block B13 null  <||@
  Comment 3735 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3735 266 TEST rdi|QWORD y: 768 size: QWORD  <||@
  Comment 3742 268 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B17  <||@
  Comment 3748 block B14 null  <||@
  Comment 3748 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3748 272 r8|QWORD = AND r8|QWORD y: 895 size: QWORD  <||@
  Comment 3755 274 rsi|QWORD = OR (x: r15|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3761 276 rax|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3764 278 rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD  <||@
  Comment 3770 280 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B14 -> B19 falseDestination: B14 -> B16  <||@
  Comment 3776 block B16 null  <||@
  Comment 3776 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3776 290 stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 3781 292 JUMP ~[] destination: B16 -> B35  <||@
  Comment 3786 block B255 null  <||@
  Comment 3786 2448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3786 2452 rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 3789 2454 rax|QWORD = MOV [r10|QWORD + 22] size: QWORD  <||@
  Comment 3793 2456 rsi|QWORD = MOV [r10|QWORD + 38] size: QWORD  <||@
  Comment 3797 2458 rax|QWORD = XOR (x: r15|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 3800 2460 rax|QWORD = OR (x: rax|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3803 2462 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 3806 2464 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B255 -> B256 falseDestination: B255 -> B260  <||@
  Comment 3812 block B256 null  <||@
  Comment 3812 2466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3812 2468 rax|QWORD = MOV [r10|QWORD + 54] size: QWORD  <||@
  Comment 3816 2470 rax|QWORD = OR (x: rax|QWORD, ~y: [r10|QWORD + 62]) size: QWORD  <||@
  Comment 3820 2472 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 3823 2474 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B256 -> B257 falseDestination: B256 -> B260  <||@
  Comment 3829 block B257 null  <||@
  Comment 3829 2476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3829 2478 MOV (x: [r10|QWORD + 22], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3833 2480 JUMP ~[] destination: B257 -> B262  <||@
  Comment 3838 block B142 null  <||@
  Comment 3838 1408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3838 1390 rbp|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 3841 1410 MOV [r15|QWORD + 668] y: -977249 size: DWORD  <||@
  Comment 3852 1412 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3859 1414 DEOPT info [bci:26, 21, 7, 241, 17]  <||@
  Comment 3859 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1016a1f90, value=0x10a2835fe]:0x10a2835fe}  <||@
  Comment 3864 [rbp:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                   |2          
     locals:  |rbp|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |rbp|QWORD[.]                           |- 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:164) [bci: 241, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rbp|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 3865 block B199 null  <||@
  Comment 3865 1946 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3865 1928 rbp|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 3868 1948 MOV [r15|QWORD + 668] y: -949345 size: DWORD  <||@
  Comment 3879 1950 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3886 1952 DEOPT info [bci:26, 21, 7, 248, 17]  <||@
  Comment 3886 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1016a1f90, value=0x10a2835fe]:0x10a2835fe}  <||@
  Comment 3891 [rbp:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                   |2          
     locals:  |rbp|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |rbp|QWORD[.]                           |- 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:165) [bci: 248, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rbp|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 3892 block B21 null  <||@
  Comment 3892 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3892 330 rax|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3895 332 rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD  <||@
  Comment 3901 334 JUMP ~[] destination: B21 -> B23  <||@
  Comment 3906 block B29 null  <||@
  Comment 3906 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3906 398 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3911 400 xmm3|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3915 402 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 3919 404 MOV (x: [r9|QWORD], y: r9|QWORD) size: QWORD  <||@
  Comment 3922 406 CMP [r8|QWORD + 22] y: 0 size: QWORD  <||@
  Comment 3927 408 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B34  <||@
  Comment 3933 block B30 null  <||@
  Comment 3933 410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3933 412 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3940 414 rax|QWORD = CAS (address: [r8|QWORD + 22], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD  <||@
  Comment 3946 416 BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B30 -> B34 falseDestination: B30 -> B32  <||@
  Comment 3952 block B32 null  <||@
  Comment 3952 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3952 426 stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 3957 428 JUMP ~[] destination: B32 -> B35  <||@
  Comment 3962 block B26 null  <||@
  Comment 3962 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3962 370 rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 3965 372 xmm3|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3969 374 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 3973 376 rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD  <||@
  Comment 3976 378 TEST rax|QWORD y: -4089 size: QWORD  <||@
  Comment 3983 380 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B34  <||@
  Comment 3989 block B27 null  <||@
  Comment 3989 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3989 384 MOV (x: [r9|QWORD], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3992 388 stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 3997 390 JUMP ~[] destination: B27 -> B35  <||@
  Comment 4002 block B17 null  <||@
  Comment 4002 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4002 296 rax|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 4005 298 rax|QWORD = CAS (address: [rbp|QWORD[.]], cmpValue: rax|QWORD, newValue: rbx|QWORD) accessKind: QWORD  <||@
  Comment 4011 300 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: != trueDestination: B17 -> B19 falseDestination: B17 -> B20  <||@
  Comment 4017 block B20 null  <||@
  Comment 4017 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4017 324 stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 4022 326 JUMP ~[] destination: B20 -> B35  <||@
  Comment 4027 block B253 null  <||@
  Comment 4027 2432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4027 2434 rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4030 2436 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4033 2438 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 4036 2440 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10acdcb60:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 4036 {Stub<monitorexit(Object,Word)void>@0x10acdcb60:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4042 2442 JUMP ~[] destination: B253 -> B262  <||@
  Comment 4047 block B260 null  <||@
  Comment 4047 2490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4047 2492 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4050 2494 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 4053 2496 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<monitorexit(Object,Word)void>@0x10acdcb60:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 4053 {Stub<monitorexit(Object,Word)void>@0x10acdcb60:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4059 2498 JUMP ~[] destination: B260 -> B262  <||@
  Comment 4064 block B34 null  <||@
  Comment 4064 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4064 436 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4067 438 rdx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 4070 440 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x10acd9b20:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:61, 35, 7, 227, 17]  <||@
  Comment 4070 {Stub<monitorenter(Object,Word)void>@0x10acd9b20:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4075 [rbp:0, r14:0, stack:72]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0                                                                                         |1  |2          
     locals:  |vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}  |-  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                                                              |1 
     locals:  |vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}                                       |- 
     locks:   |monitor[vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}, stack:32|QWORD, eliminated]  |  
  at bench.StringOp.cont(Bench.scala:162) [bci: 227, duringCall: true, rethrow: false]
              |0  |1                                                                                        
     locals:  |-  |vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 4076 442 r11|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4079 444 stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 4084 446 JUMP ~[] destination: B34 -> B35  <||@
  Comment 4089 block B19 null  <||@
  Comment 4089 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4089 308 rsi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4092 310 rdx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 4095 312 - = NEAR_FOREIGN_CALL [rsi|QWORD[.], rdx|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x10acd9b20:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:61, 35, 7, 227, 17]  <||@
  Comment 4095 {Stub<monitorenter(Object,Word)void>@0x10acd9b20:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4100 [rbp:0, r14:0, stack:72]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0                                                                                         |1  |2          
     locals:  |vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}  |-  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                                                                                                              |1 
     locals:  |vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}                                       |- 
     locks:   |monitor[vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]}, stack:32|QWORD, eliminated]  |  
  at bench.StringOp.cont(Bench.scala:162) [bci: 227, duringCall: true, rethrow: false]
              |0  |1                                                                                        
     locals:  |-  |vobject:StringBuffer:0{count=int[33|0x21],value=r14|QWORD[.],toStringCache=Object[null]} 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 4101 314 r11|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 4104 316 stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 4109 318 JUMP ~[] destination: B19 -> B35  <||@
  Comment 4114 block B146 null  <||@
  Comment 4114 1464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4114 1466 rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4117 1468 MOV [r15|QWORD + 668] y: -934753 size: DWORD  <||@
  Comment 4128 1470 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4135 1472 DEOPT info [bci:5, 248, 17]  <||@
  Comment 4135 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1016a1f90, value=0x10a2835fe]:0x10a2835fe}  <||@
  Comment 4140 [rbp:0]at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5, duringCall: false, rethrow: false]
              |0                                      |1                  
     locals:  |rbp|QWORD[.]                           |Object[String:"b"] 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |                   
  at bench.StringOp.cont(Bench.scala:165) [bci: 248, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rbp|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 4141 block B89 null  <||@
  Comment 4141 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4141 926 rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4144 928 MOV [r15|QWORD + 668] y: -962657 size: DWORD  <||@
  Comment 4155 930 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4162 932 DEOPT info [bci:5, 241, 17]  <||@
  Comment 4162 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1016a1f90, value=0x10a2835fe]:0x10a2835fe}  <||@
  Comment 4167 [rbp:0]at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 5, duringCall: false, rethrow: false]
              |0                                      |1                  
     locals:  |rbp|QWORD[.]                           |Object[String:"b"] 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |                   
  at bench.StringOp.cont(Bench.scala:164) [bci: 241, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rbp|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 4168 block B36 null  <||@
  Comment 4168 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4168 462 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4173 464 r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4178 466 MOV [r15|QWORD + 668] y: -1065569 size: DWORD  <||@
  Comment 4189 468 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4196 470 DEOPT info [bci:20, 21, 7, 234, 17]  <||@
  Comment 4196 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1016a1f90, value=0x10a2835fe]:0x10a2835fe}  <||@
  Comment 4201 [rbp:0, r14:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |-             |-             |          
     stack:   |rbp|QWORD[.]  |r14|QWORD[.]  |rax|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                   |2          
     locals:  |rbp|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |rbp|QWORD[.]                           |- 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:163) [bci: 234, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rbp|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 4202 block B267 null  <||@
  Comment 4202 2562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4202 2564 rbp|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4205 2566 MOV [r15|QWORD + 668] y: -923667 size: DWORD  <||@
  Comment 4216 2568 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4223 2570 DEOPT info [bci:61, 35, 7, 248, 17]  <||@
  Comment 4223 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1016a1f90, value=0x10a2835fe]:0x10a2835fe}  <||@
  Comment 4228 [rbp:0]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0             |1  |2          
     locals:  |rbp|QWORD[.]  |-  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |rbp|QWORD[.]                           |- 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:165) [bci: 248, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rbp|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 4229 block B149 null  <||@
  Comment 4229 1502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4229 1504 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4234 1506 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4239 1508 MOV [r15|QWORD + 668] y: -1085537 size: DWORD  <||@
  Comment 4250 1510 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4257 1512 DEOPT info [bci:20, 21, 7, 248, 17]  <||@
  Comment 4257 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1016a1f90, value=0x10a2835fe]:0x10a2835fe}  <||@
  Comment 4262 [rcx:0, rbp:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |-             |-             |          
     stack:   |rbp|QWORD[.]  |rcx|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                   |2          
     locals:  |rbp|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |rbp|QWORD[.]                           |- 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:165) [bci: 248, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rbp|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 4263 block B92 null  <||@
  Comment 4263 960 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4263 962 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4268 964 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4273 966 MOV [r15|QWORD + 668] y: -1075553 size: DWORD  <||@
  Comment 4284 968 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4291 970 DEOPT info [bci:20, 21, 7, 241, 17]  <||@
  Comment 4291 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1016a1f90, value=0x10a2835fe]:0x10a2835fe}  <||@
  Comment 4296 [rbp:0, r10:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |-             |-             |          
     stack:   |rbp|QWORD[.]  |r10|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                   |2          
     locals:  |rbp|QWORD[.]  |Object[String:"b"]  |int[1|0x1] 
  at java.lang.StringBuffer.append(StringBuffer.java:270) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1 
     locals:  |rbp|QWORD[.]                           |- 
     locks:   |monitor[rbp|QWORD[.], stack:32|QWORD]  |  
  at bench.StringOp.cont(Bench.scala:164) [bci: 241, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rbp|QWORD[.] 
  at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 4297 {Stub<ExceptionHandlerStub.exceptionHandler>@0x10a60c8e0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4297 4  <||@
  Comment 4303 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1016a1f88, value=0x10a283500]:0x10a283500}  <||@
  Comment 4303 5  <||@
  HexCodeFile>>> <|@
end_nmethod
