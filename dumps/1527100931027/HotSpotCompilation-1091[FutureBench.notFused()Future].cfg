begin_compilation
  name " HotSpotCompilation-1091[bench.FutureBench.notFused()]"
  method "HotSpotCompilation-1091[bench.FutureBench.notFused()]"
  date 1527100931050
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a3598 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a3598  <|@  <|@
f <@~|@floating>@ <|@
tid a1049 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:com.twitter.util.Promise$
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:com.twitter.util.Promise$]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3706 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3706 <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a1049 
index: - 
=== Succesors ===
=== Usages ===
a3598 a3630 a3635 a3639 a3655 a3659 a3663 a3692 a3701 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1049 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3598 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3706 
=== Succesors ===
next: v3906 
=== Usages ===
?90 v3906 v3709 v3710 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3706 #next: v3906  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FutureBench.notFused()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 195
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
v2584 v3906 v3907 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a3598 
=== Succesors ===
next: a3599 
=== Usages ===
=== Predecessor ===
a3598 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a3598 #next: a3599  <|@  <|@
f <@~|@floating>@ <|@
tid a1055 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:com.twitter.util.Promise$WaitQueue$
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:com.twitter.util.Promise$WaitQueue$]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3707 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3707 <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a1055 
index: - 
=== Succesors ===
=== Usages ===
a3599 a3629 a3636 a3652 a3660 a3691 a3698 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1055 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3599 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$WaitQueue$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3707 
=== Succesors ===
next: v3907 
=== Usages ===
v3708 v3907 
=== Predecessor ===
v3906 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3707 #next: v3907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a3599 
=== Succesors ===
next: a3600 
=== Usages ===
=== Predecessor ===
a3599 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a3599 #next: a3600  <|@  <|@
f <@~|@floating>@ <|@
tid v3709 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3598 
=== Succesors ===
=== Usages ===
a3600 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3598  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3600 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$unsafe
nullCheck: false
stamp: n# Lsun/misc/Unsafe;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3709 
=== Succesors ===
next: v1516 
=== Usages ===
v1389 
=== Predecessor ===
v3907 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3709 #next: v1516  <|@  <|@
f <@~|@floating>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3600 
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3600  <|@  <|@
f <@~|@floating>@ <|@
tid a2581 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2584 v2770 v2650 v2684 v2594 v2676 v2602 v2636 v2610 v2664 v2698 v2740 v2712 v2750 v2758 v2618 v2726 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1389 
=== Succesors ===
trueSuccessor: v1515 
falseSuccessor: v1513 
=== Usages ===
=== Predecessor ===
a3600 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1389 #trueSuccessor: v1515 #falseSuccessor: v1513  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2584 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2584  <|@  <|@
f <@~|@floating>@ <|@
tid i2588 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -275211
stableDimension: 0
stamp: i32 [-275211] ⇊00000000fffbccf5 ⇈00000000fffbccf5
stampKind: i32
value: int[-275211|0xfffffffffffbccf5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2584 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2584 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i2588 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1515 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i2588 speculation: a2581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3601 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3601  <|@  <|@
f <@~|@floating>@ <|@
tid v3708 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3599 
=== Succesors ===
=== Usages ===
a3601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3599  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3601 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.Empty
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v3708 
=== Succesors ===
next: v1802 
=== Usages ===
?380 v1873 v1880 v2773 v3796 i1079 v2978 ?753 ?158 ?752 
=== Predecessor ===
v1513 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3708 #next: v1802  <|@  <|@
tid a71 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@72460335
hasIdentity: true
objectId: 2
stamp: a!# Lcom/twitter/util/Promise;
type: HotSpotType<Lcom/twitter/util/Promise;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?480 ?505 ?33 ?76 ?380 ?386 ?90 ?89 ?76 ?752 ?158 ?859 ?839 ?843 ?411 ?761 ?193 ?205 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?752 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a71 
values: a3601 
=== Succesors ===
=== Usages ===
?380 ?158 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a71 values: a3601  <|@  <|@
tid a751 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@72460335
hasIdentity: true
objectId: 0
stamp: a!# Lcom/twitter/util/Promise$$anon$3;
type: HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?386 ?90 ?753 ?158 ?974 ?966 ?411 ?760 ?193 ?256 ?1022 ?688 ?694 ?119 ?118 ?58 ?276 ?547 ?311 ?323 ?639 ?614 ?870 ?874 ?890 ?1006 ?910 ?1017 ?958 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?753 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a751 
values: a3601 
=== Succesors ===
=== Usages ===
?380 ?158 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a751 values: a3601  <|@  <|@
f <@~|@floating>@ <|@
tid v3796 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3601 
=== Succesors ===
=== Usages ===
v3602 v3604 v3606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3601  <|@  <|@
f <@~|@floating>@ <|@
tid v2773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3601 
=== Succesors ===
=== Usages ===
v1802 v1823 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3601  <|@  <|@
tid ?22 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<FutureBench.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 195
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?32 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
tid ?32 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<Future.map(Function1)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Future.scala
sourceLine: 1811
stackSize: 0
=== Inputs ===
outerFrameState: ?22 
values: - - 
=== Succesors ===
=== Usages ===
?33 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?22 values: - -  <|@  <|@
tid a72 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@1928ac20
hasIdentity: true
objectId: 4
stamp: a!# Lcom/twitter/util/Future$$Lambda$8/112631710;
type: HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?867 ?776 ?33 ?77 ?89 ?77 ?754 ?193 ?764 ?852 ?769 ?851 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Promise.transform(Function1)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 417
stackSize: 0
=== Inputs ===
outerFrameState: ?32 
values: a71 a72 
=== Succesors ===
=== Usages ===
?107 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?32 values: a71 a72  <|@  <|@
tid ?76 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a71 
materializedValue: a71 
=== Succesors ===
=== Usages ===
?107 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a71 materializedValue: a71  <|@  <|@
tid ?77 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a72 
materializedValue: a72 
=== Succesors ===
=== Usages ===
?107 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a72 materializedValue: a72  <|@  <|@
tid ?107 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Promise$Responder.transform$(Promise$Responder, Function1)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 303
stackSize: 0
=== Inputs ===
outerFrameState: ?33 
values: - - 
virtualObjectMappings: ?76 ?77 
=== Succesors ===
=== Usages ===
?89 ?193 ?256 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?33 values: - - virtualObjectMappings: ?76 ?77  <|@  <|@
tid ?89 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<Promise$Responder.transform(Function1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 304
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a71 a72 - 
=== Succesors ===
=== Usages ===
?90 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a71 a72 -  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Promise$.interrupts(Future)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 329
stackSize: 1
=== Inputs ===
outerFrameState: ?89 
values: a3598 a71 a751 
=== Succesors ===
=== Usages ===
?181 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?89 values: a3598 a71 a751  <|@  <|@
tid ?181 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Promise$$anon$3.<init>(Future)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 330
stackSize: 0
=== Inputs ===
outerFrameState: ?90 
values: - - 
=== Succesors ===
=== Usages ===
?386 ?158 ?411 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?90 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid a15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: FutureBench$$Lambda$7/390800101@687091653
stableDimension: 0
stamp: a!# Lbench/FutureBench$$Lambda$7/390800101;
stampKind: a -
value: Object[FutureBench$$Lambda$7/390800101@687091653]
=== Inputs ===
=== Succesors ===
=== Usages ===
?754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?754 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a72 
values: a15 
=== Succesors ===
=== Usages ===
?380 ?158 ?407 ?2569 ?812 ?2570 ?442 ?859 ?205 ?839 ?843 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a72 values: a15  <|@  <|@
f <@~|@floating>@ <|@
tid v1798 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1806 v2077 v2194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1802 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v2773 
=== Succesors ===
trueSuccessor: v1801 
falseSuccessor: v1800 
=== Usages ===
=== Predecessor ===
a3601 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2773 #trueSuccessor: v1801 #falseSuccessor: v1800  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1801 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1813 
=== Usages ===
=== Predecessor ===
v1802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1813  <|@  <|@
f <@*|@fixed>@ <|@
tid v1813 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2780 
=== Predecessor ===
v1801 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1800 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3602 
=== Usages ===
=== Predecessor ===
v1802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3602 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3796 
=== Succesors ===
next: v3603 
=== Usages ===
v3762 
=== Predecessor ===
v1800 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3796 #next: v3603  <|@  <|@
f <@~|@floating>@ <|@
tid v3762 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3602 
=== Succesors ===
=== Usages ===
v3603 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3603 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3762 
=== Succesors ===
next: v2785 
=== Usages ===
v1806 
=== Predecessor ===
v3602 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3762 #next: v2785  <|@  <|@
f <@~|@floating>@ <|@
tid v1806 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3603 
y: v1798 
=== Succesors ===
=== Usages ===
v2785 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3603 y: v1798  <|@  <|@
f <@*|@fixed>@ <|@
tid v2785 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1806 
=== Succesors ===
trueSuccessor: v2783 
falseSuccessor: v2782 
=== Usages ===
=== Predecessor ===
v3603 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1806 #trueSuccessor: v2783 #falseSuccessor: v2782  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2606 
=== Usages ===
=== Predecessor ===
v2785 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2606  <|@  <|@
f <@~|@floating>@ <|@
tid i2607 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -272403
stableDimension: 0
stamp: i32 [-272403] ⇊00000000fffbd7ed ⇈00000000fffbd7ed
stampKind: i32
value: int[-272403|0xfffffffffffbd7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2608 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2605 
=== Predecessor ===
v2783 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2786 
=== Usages ===
=== Predecessor ===
v2785 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2786  <|@  <|@
f <@*|@fixed>@ <|@
tid v2786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2780 
=== Predecessor ===
v2782 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2780 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1813 v2786 
=== Succesors ===
next: v1823 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1813 v2786 #next: v1823  <|@  <|@
f <@~|@floating>@ <|@
tid v1819 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1827 v2096 v2213 j2981 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1823 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v2773 
=== Succesors ===
trueSuccessor: v1822 
falseSuccessor: v1821 
=== Usages ===
=== Predecessor ===
v2780 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2773 #trueSuccessor: v1822 #falseSuccessor: v1821  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1822 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1834 
=== Usages ===
=== Predecessor ===
v1823 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1834  <|@  <|@
f <@*|@fixed>@ <|@
tid v1834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2790 
=== Predecessor ===
v1822 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3604 
=== Usages ===
=== Predecessor ===
v1823 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3604 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3796 
=== Succesors ===
next: v3605 
=== Usages ===
v3763 
=== Predecessor ===
v1821 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3796 #next: v3605  <|@  <|@
f <@~|@floating>@ <|@
tid v3763 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3604 
=== Succesors ===
=== Usages ===
v3605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3605 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3763 
=== Succesors ===
next: v2795 
=== Usages ===
v1827 
=== Predecessor ===
v3604 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3763 #next: v2795  <|@  <|@
f <@~|@floating>@ <|@
tid v1827 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3605 
y: v1819 
=== Succesors ===
=== Usages ===
v2795 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3605 y: v1819  <|@  <|@
f <@*|@fixed>@ <|@
tid v2795 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1827 
=== Succesors ===
trueSuccessor: v2793 
falseSuccessor: v2792 
=== Usages ===
=== Predecessor ===
v3605 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1827 #trueSuccessor: v2793 #falseSuccessor: v2792  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2793 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2611 
=== Usages ===
=== Predecessor ===
v2795 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2611  <|@  <|@
f <@~|@floating>@ <|@
tid i2612 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -272659
stableDimension: 0
stamp: i32 [-272659] ⇊00000000fffbd6ed ⇈00000000fffbd6ed
stampKind: i32
value: int[-272659|0xfffffffffffbd6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2608 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2611 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2605 
=== Predecessor ===
v2793 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2608 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-272659 - -272403] ⇊00000000fffbd6ed ⇈00000000fffbd7ed
valueDescription: i32
=== Inputs ===
merge: v2605 
values: i2607 i2612 
=== Succesors ===
=== Usages ===
v2610 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2605 values: i2607 i2612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2605 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2606 v2611 
=== Succesors ===
next: v2610 
=== Usages ===
i2608 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2606 v2611 #next: v2610  <|@  <|@
tid ?386 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Promise.forwardInterruptsTo(Future)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 503
stackSize: 0
=== Inputs ===
outerFrameState: ?181 
values: a751 a71 - - - - - - - - 
=== Succesors ===
=== Usages ===
?380 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?181 values: a751 a71 - - - - - - - -  <|@  <|@
tid ?380 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.isDefined()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 840
stackSize: 1
=== Inputs ===
outerFrameState: ?386 
values: a71 - - - a3601 
virtualObjectMappings: ?752 ?753 ?754 
=== Succesors ===
=== Usages ===
v2610 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?386 values: a71 - - - a3601 virtualObjectMappings: ?752 ?753 ?754  <|@  <|@
f <@*|@fixed>@ <|@
tid v2610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?380 
actionAndReason: i2608 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2605 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?380 actionAndReason: i2608 speculation: a2581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2792 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2796 
=== Usages ===
=== Predecessor ===
v2795 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2796  <|@  <|@
f <@*|@fixed>@ <|@
tid v2796 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2790 
=== Predecessor ===
v2792 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B193" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2790 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1834 v2796 
=== Succesors ===
next: v3606 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1834 v2796 #next: v3606  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<Promise.forwardInterruptsTo(Future)>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 504
stackSize: 1
=== Inputs ===
outerFrameState: ?181 
values: a751 a71 - - - - - - - - a3601 
virtualObjectMappings: ?753 ?752 ?754 
=== Succesors ===
=== Usages ===
v2594 a2934 v3606 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?181 values: a751 a71 - - - - - - - - a3601 virtualObjectMappings: ?753 ?752 ?754  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3606 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?158 
guard: - 
address: v3796 
=== Succesors ===
next: v1532 
=== Usages ===
v3468 
=== Predecessor ===
v2790 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?158 guard: - address: v3796 #next: v1532  <|@  <|@
f <@~|@floating>@ <|@
tid v3467 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3468 v3489 v3504 v3531 v3541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3468 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3606 
y: v3467 
=== Succesors ===
=== Usages ===
v1532 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3606 y: v3467  <|@  <|@
f <@*|@fixed>@ <|@
tid v1532 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3468 
=== Succesors ===
trueSuccessor: v1529 
falseSuccessor: v1531 
=== Usages ===
=== Predecessor ===
v3606 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3468 #trueSuccessor: v1529 #falseSuccessor: v1531  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j2922 
=== Usages ===
=== Predecessor ===
v1532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2922  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2922 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2941 
=== Usages ===
v3797 v3798 
=== Predecessor ===
v1529 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2941  <|@  <|@
f <@~|@floating>@ <|@
tid v3797 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2922 
index: - 
=== Succesors ===
=== Usages ===
j2941 v2943 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2922 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2941 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3797 
=== Succesors ===
next: j2942 
=== Usages ===
j3469 j2947 v3856 
=== Predecessor ===
j2922 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3797 #next: j2942  <|@  <|@
f <@~|@floating>@ <|@
tid v3798 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2922 
index: - 
=== Succesors ===
=== Usages ===
j2942 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2922 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2942 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3798 
=== Succesors ===
next: v2930 
=== Usages ===
v2927 
=== Predecessor ===
j2941 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3798 #next: v2930  <|@  <|@
f <@~|@floating>@ <|@
tid j1831 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3469 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j2941 
y: j1831 
=== Succesors ===
=== Usages ===
v2927 v2943 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2941 y: j1831  <|@  <|@
f <@~|@floating>@ <|@
tid v2927 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@782e90
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2942 
y: j3469 
=== Succesors ===
=== Usages ===
v2930 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2942 y: j3469  <|@  <|@
f <@~|@floating>@ <|@
tid i1797 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1941 i2382 i2014 i2311 a2934 a3032 a3105 a3172 a3258 a3336 a3401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2920 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2934 a3032 a3105 a3172 a3258 a3336 a3401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2930 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2927 
=== Succesors ===
trueSuccessor: v2928 
falseSuccessor: v2929 
=== Usages ===
=== Predecessor ===
j2942 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2927 #trueSuccessor: v2928 #falseSuccessor: v2929  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2934 
=== Usages ===
=== Predecessor ===
v2930 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2934  <|@  <|@
f <@~|@floating>@ <|@
tid i3470 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2934 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@39bb4106
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?158 
arguments: v2920 i3470 i1797 
=== Succesors ===
next: j2935 
=== Usages ===
j2935 
=== Predecessor ===
v2928 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?158 arguments: v2920 i3470 i1797 #next: j2935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2935 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2934 
=== Succesors ===
next: v2948 
=== Usages ===
j2947 
=== Predecessor ===
a2934 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2934 #next: v2948  <|@  <|@
f <@*|@fixed>@ <|@
tid v2948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2945 
=== Predecessor ===
j2935 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2929 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2943 
=== Usages ===
=== Predecessor ===
v2930 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2943 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3797 
value: j3469 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2939 
=== Usages ===
=== Predecessor ===
v2929 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3797 value: j3469 stateAfter: - lastLocationAccess: - #next: v2939  <|@  <|@
f <@~|@floating>@ <|@
tid v3856 <|@
d <@d|@=== Debug Properties ===
displacement: 248
scale: Times1
stamp: void*
=== Inputs ===
base: j2941 
index: - 
=== Succesors ===
=== Usages ===
v2939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2941 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2939 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3856 
=== Succesors ===
next: v2946 
=== Usages ===
=== Predecessor ===
v2943 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3856 #next: v2946  <|@  <|@
f <@*|@fixed>@ <|@
tid v2946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2945 
=== Predecessor ===
v2939 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2947 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2945 
values: j2941 j2935 
=== Succesors ===
=== Usages ===
v3791 v3764 j1863 j1867 a1861 v3800 v3860 v3799 v3857 v3858 v3859 v3861 v3862 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2945 values: j2941 j2935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2945 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2946 v2948 
=== Succesors ===
next: a1861 
=== Usages ===
j2947 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2946 v2948 #next: a1861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1861 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2947 
=== Succesors ===
next: a1864 
=== Usages ===
a1881 
=== Predecessor ===
v2945 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2947 #next: a1864  <|@  <|@
f <@~|@floating>@ <|@
tid j1072 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1863 j2246 j2129 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1863 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j2947 
y: j1072 
=== Succesors ===
=== Usages ===
a1864 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2947 y: j1072  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1864 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1863 
=== Succesors ===
next: a1868 
=== Usages ===
a1882 
=== Predecessor ===
a1861 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1863 #next: a1868  <|@  <|@
f <@~|@floating>@ <|@
tid j1866 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 40
stableDimension: 0
stamp: i64 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1867 j3532 j3505 j3490 j3542 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1867 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j2947 
y: j1866 
=== Succesors ===
=== Usages ===
a1868 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2947 y: j1866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1868 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1867 
=== Succesors ===
next: j2959 
=== Usages ===
a1883 a1875 
=== Predecessor ===
a1864 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1867 #next: j2959  <|@  <|@
f <@~|@floating>@ <|@
tid v2953 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j3274 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3274 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2953 
=== Succesors ===
=== Usages ===
v3832 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2953  <|@  <|@
f <@~|@floating>@ <|@
tid v3832 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j3274 
index: - 
=== Succesors ===
=== Usages ===
j3278 j3125 j2959 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3274 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2959 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3832 
=== Succesors ===
next: v2960 
=== Usages ===
v2960 
=== Predecessor ===
a1868 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3832 #next: v2960  <|@  <|@
f <@~|@floating>@ <|@
tid v3799 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2947 
index: - 
=== Succesors ===
=== Usages ===
v2960 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2947 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2960 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3799 
value: j2959 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2963 
=== Usages ===
=== Predecessor ===
j2959 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3799 value: j2959 stateAfter: - lastLocationAccess: - #next: v2963  <|@  <|@
f <@~|@floating>@ <|@
tid v3800 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2947 
index: - 
=== Succesors ===
=== Usages ===
v2963 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2947 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3473 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2963 v3129 v3282 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2963 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3800 
value: v3473 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1873 
=== Usages ===
=== Predecessor ===
v2960 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3800 value: v3473 stateAfter: - lastLocationAccess: - #next: v1873  <|@  <|@
f <@~|@floating>@ <|@
tid v3764 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2947 
index: - 
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2947 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3764 
value: a3601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2970 
=== Usages ===
=== Predecessor ===
v2963 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3764 value: a3601 stateAfter: - lastLocationAccess: - #next: j2970  <|@  <|@
f <@~|@floating>@ <|@
tid v2142 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j3417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3417 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2142 
=== Succesors ===
=== Usages ===
v3850 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2142  <|@  <|@
f <@~|@floating>@ <|@
tid v3850 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j3417 
index: - 
=== Succesors ===
=== Usages ===
j3421 j3136 j2970 j3192 j3289 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3417 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2970 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3850 
=== Succesors ===
next: v2971 
=== Usages ===
v2971 
=== Predecessor ===
v1873 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3850 #next: v2971  <|@  <|@
f <@~|@floating>@ <|@
tid v3857 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2947 
index: - 
=== Succesors ===
=== Usages ===
v2971 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2947 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2971 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3857 
value: j2970 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2974 
=== Usages ===
=== Predecessor ===
j2970 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3857 value: j2970 stateAfter: - lastLocationAccess: - #next: v2974  <|@  <|@
f <@~|@floating>@ <|@
tid v3858 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j2947 
index: - 
=== Succesors ===
=== Usages ===
v2974 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2947 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3476 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2974 v3140 v3512 v3196 v3293 v3550 v3425 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2974 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3858 
value: v3476 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2978 
=== Usages ===
=== Predecessor ===
v2971 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3858 value: v3476 stateAfter: - lastLocationAccess: - #next: v2978  <|@  <|@
f <@~|@floating>@ <|@
tid v3859 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j2947 
index: - 
=== Succesors ===
=== Usages ===
v2978 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2947 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2978 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3859 
value: a3601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2980 
=== Usages ===
=== Predecessor ===
v2974 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3859 value: a3601 stateAfter: - lastLocationAccess: - #next: v2980  <|@  <|@
f <@~|@floating>@ <|@
tid v3860 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j2947 
index: - 
=== Succesors ===
=== Usages ===
v2980 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2947 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1875 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a1868 
=== Succesors ===
=== Usages ===
v2980 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2980 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3860 
value: a1875 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2985 
=== Usages ===
=== Predecessor ===
v2978 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3860 value: a1875 stateAfter: - lastLocationAccess: - #next: j2985  <|@  <|@
f <@~|@floating>@ <|@
tid j2981 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1819 
=== Succesors ===
=== Usages ===
v3801 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1819  <|@  <|@
f <@~|@floating>@ <|@
tid v3801 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2981 
index: - 
=== Succesors ===
=== Usages ===
j2985 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2981 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2985 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3801 
=== Succesors ===
next: v2986 
=== Usages ===
v2986 
=== Predecessor ===
v2980 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3801 #next: v2986  <|@  <|@
f <@~|@floating>@ <|@
tid v3861 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j2947 
index: - 
=== Succesors ===
=== Usages ===
v2986 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2947 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2986 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3861 
value: j2985 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2989 
=== Usages ===
=== Predecessor ===
j2985 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3861 value: j2985 stateAfter: - lastLocationAccess: - #next: v2989  <|@  <|@
f <@~|@floating>@ <|@
tid v3862 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j2947 
index: - 
=== Succesors ===
=== Usages ===
v2989 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2947 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3483 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2989 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2989 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3862 
value: v3483 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1880 
=== Usages ===
=== Predecessor ===
v2986 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3862 value: v3483 stateAfter: - lastLocationAccess: - #next: v1880  <|@  <|@
f <@~|@floating>@ <|@
tid v3791 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: j2947 
index: - 
=== Succesors ===
=== Usages ===
v1880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2947 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1880 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3791 
value: a3601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1881 
=== Usages ===
=== Predecessor ===
v2989 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3791 value: a3601 stateAfter: - lastLocationAccess: - #next: a1881  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1881 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1861 
=== Succesors ===
next: a1882 
=== Usages ===
v3711 ?760 ?764 a2059 ?852 v3727 ?867 ?851 v3755 v3761 j2992 j3380 j3460 
=== Predecessor ===
v1880 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1861 #next: a1882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1882 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1864 
=== Succesors ===
next: a1883 
=== Usages ===
a1077 
=== Predecessor ===
a1881 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1864 #next: a1883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1883 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1868 
=== Succesors ===
next: v1884 
=== Usages ===
?761 v3721 v3725 v3738 j3078 j3231 
=== Predecessor ===
a1882 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1868 #next: v1884  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j3607 
=== Usages ===
=== Predecessor ===
a1883 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j3607  <|@  <|@
f <@~|@floating>@ <|@
tid v3710 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3598 
=== Succesors ===
=== Usages ===
j3607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3598  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3607 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$stateOff
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3710 
=== Succesors ===
next: i1079 
=== Usages ===
v3711 
=== Predecessor ===
v1884 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3710 #next: i1079  <|@  <|@
f <@~|@floating>@ <|@
tid v3711 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1881 
index: j3607 
=== Succesors ===
=== Usages ===
i1079 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1881 index: j3607  <|@  <|@
f <@~|@floating>@ <|@
tid a1077 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a1882 
=== Succesors ===
=== Usages ===
i1079 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1079 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ANY_LOCATION
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3711 
expectedValue: a3601 
newValue: a1077 
stateAfter: - 
=== Succesors ===
next: j2992 
=== Usages ===
?407 i408 
=== Predecessor ===
j3607 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v3711 expectedValue: a3601 newValue: a1077 stateAfter: - #next: j2992  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2992 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1881 
=== Succesors ===
next: v2998 
=== Usages ===
j2994 
=== Predecessor ===
i1079 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1881 #next: v2998  <|@  <|@
f <@~|@floating>@ <|@
tid i2993 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2994 j3079 j3148 j3232 j3301 j3381 j3461 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2994 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$146/1524633570@1cec0275
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2992 
y: i2993 
=== Succesors ===
=== Usages ===
v3802 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2992 y: i2993  <|@  <|@
f <@~|@floating>@ <|@
tid j2997 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4398039040
stableDimension: 0
stamp: i64 [4398039040] ⇊000000010624c000 ⇈000000010624c000
stampKind: i64
value: long[4398039040|0x10624c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3802 v3813 v3820 v3827 v3835 v3846 v3855 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3802 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2994 
index: j2997 
=== Succesors ===
=== Usages ===
v2998 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2994 index: j2997  <|@  <|@
f <@~|@floating>@ <|@
tid i2999 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2998 v3082 v3151 v3235 v3304 v3384 v3464 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2998 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3802 
value: i2999 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1536 
=== Usages ===
=== Predecessor ===
j2992 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3802 value: i2999 stateAfter: - lastLocationAccess: - #next: v1536  <|@  <|@
tid ?411 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<Promise.forwardInterruptsTo(Future)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 506
stackSize: 0
=== Inputs ===
outerFrameState: ?181 
values: a751 a71 - - - - - - - - 
=== Succesors ===
=== Usages ===
?407 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?181 values: a751 a71 - - - - - - - -  <|@  <|@
tid ?760 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a751 
materializedValue: a1881 
=== Succesors ===
=== Usages ===
?407 ?2570 ?812 ?2572 ?442 ?859 ?205 ?501 ?476 ?1017 ?688 ?276 ?543 ?2569 ?827 ?2571 ?576 ?890 ?323 ?635 ?610 ?839 ?843 ?870 ?874 ?1003 ?905 ?974 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a751 materializedValue: a1881  <|@  <|@
tid ?761 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a71 
materializedValue: a1883 
=== Succesors ===
=== Usages ===
?407 ?2569 ?812 ?2570 ?442 ?859 ?205 ?501 ?476 ?843 ?839 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a71 materializedValue: a1883  <|@  <|@
tid ?407 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Promise.cas(Object, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 453
stackSize: 1
=== Inputs ===
outerFrameState: ?411 
values: - - - i1079 
virtualObjectMappings: ?760 ?761 ?754 
=== Succesors ===
=== Usages ===
v2618 a3609 v3610 i3614 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?411 values: - - - i1079 virtualObjectMappings: ?760 ?761 ?754  <|@  <|@
f <@~|@floating>@ <|@
tid i408 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$115/1567088237@42498438
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$116/1100921398@1fb26baa
inputBits: 32
resultBits: 1
stamp: i1
=== Inputs ===
value: i1079 
=== Succesors ===
=== Usages ===
i409 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1079  <|@  <|@
f <@~|@floating>@ <|@
tid i409 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1701538656@15c1f08d
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/999668238@1b27ce49
inputAlwaysPositive: false
inputBits: 1
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i408 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i408  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v370 v178 v226 v252 v344 v296 v985 i2297 i1925 i2000 i2368 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i409 
y: i153 
=== Succesors ===
=== Usages ===
v1536 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i409 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1536 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v178 
=== Succesors ===
trueSuccessor: v1535 
falseSuccessor: v1533 
=== Usages ===
=== Predecessor ===
v2998 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v178 #trueSuccessor: v1535 #falseSuccessor: v1533  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B192" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2614 
=== Usages ===
=== Predecessor ===
v1536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2614  <|@  <|@
f <@~|@floating>@ <|@
tid i2615 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -276499
stableDimension: 0
stamp: i32 [-276499] ⇊00000000fffbc7ed ⇈00000000fffbc7ed
stampKind: i32
value: int[-276499|0xfffffffffffbc7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2616 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2613 
=== Predecessor ===
v1535 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B191" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3608 
=== Usages ===
=== Predecessor ===
v1536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3608  <|@  <|@
f <@~|@floating>@ <|@
tid a1081 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:com.twitter.util.Local$
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:com.twitter.util.Local$]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3712 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3712 <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a1081 
index: - 
=== Succesors ===
=== Usages ===
a3608 a3647 a3671 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1081 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3608 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Local$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Local$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3712 
=== Succesors ===
next: a3609 
=== Usages ===
v3713 
=== Predecessor ===
v1533 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3712 #next: a3609  <|@  <|@
f <@~|@floating>@ <|@
tid v3713 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3608 
=== Succesors ===
=== Usages ===
a3609 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3608  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3609 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Local$.localCtx
nullCheck: true
stamp: n Ljava/lang/ThreadLocal;
=== Inputs ===
stateBefore: ?407 
guard: - 
address: v3713 
=== Succesors ===
next: v3610 
=== Usages ===
a1088 v3905 v3715 v3803 
=== Predecessor ===
a3608 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?407 guard: - address: v3713 #next: v3610  <|@  <|@
f <@~|@floating>@ <|@
tid v3803 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3609 
=== Succesors ===
=== Usages ===
v3610 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3609  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?407 
guard: - 
address: v3803 
=== Succesors ===
next: v1092 
=== Usages ===
v3714 
=== Predecessor ===
a3609 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?407 guard: - address: v3803 #next: v1092  <|@  <|@
f <@~|@floating>@ <|@
tid v3714 <|@
d <@d|@=== Debug Properties ===
displacement: 520
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3610 
=== Succesors ===
=== Usages ===
v1092 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v3714 
=== Succesors ===
next: v1548 
=== Usages ===
v652 
=== Predecessor ===
v3610 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3714 #next: v1548  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v652 v706 v1025 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1092 
y: v650 
=== Succesors ===
=== Usages ===
v1548 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1092 y: v650  <|@  <|@
f <@*|@fixed>@ <|@
tid v1548 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v652 
=== Succesors ===
trueSuccessor: v1545 
falseSuccessor: v1547 
=== Usages ===
=== Predecessor ===
v1092 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v652 #trueSuccessor: v1545 #falseSuccessor: v1547  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3611 
=== Usages ===
=== Predecessor ===
v1548 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3611  <|@  <|@
f <@~|@floating>@ <|@
tid j415 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v3705 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@org.graalvm.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3705 <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times1
stamp: void*
=== Inputs ===
base: j415 
index: - 
=== Succesors ===
=== Usages ===
a3611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j415 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3611 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: JavaThread::_threadObj:final
nullCheck: false
stamp: a! Ljava/lang/Thread;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3705 
=== Succesors ===
next: a3612 
=== Usages ===
v3745 
=== Predecessor ===
v1545 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3705 #next: a3612  <|@  <|@
f <@~|@floating>@ <|@
tid v3745 <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: a3611 
index: - 
=== Succesors ===
=== Usages ===
a3674 a3650 a3612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3611 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3612 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Thread.threadLocals
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3745 
=== Succesors ===
next: v425 
=== Usages ===
a1097 v1392 v3716 
=== Predecessor ===
a3611 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3745 #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3612 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3612  <|@  <|@
f <@~|@floating>@ <|@
tid a1088 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a Ljava/lang/ThreadLocal;
=== Inputs ===
value: a3609 
=== Succesors ===
=== Usages ===
v1120 v1139 ?428 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3609  <|@  <|@
f <@~|@floating>@ <|@
tid v3721 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1883 
index: - 
=== Succesors ===
=== Usages ===
a3626 a3619 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1883 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3727 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1881 
index: - 
=== Succesors ===
=== Usages ===
a3638 a3662 a3688 a3681 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1881 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2059 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a1881 
=== Succesors ===
=== Usages ===
v3063 v3146 v3217 v3299 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1881  <|@  <|@
f <@~|@floating>@ <|@
tid a2545 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: FutureBench$$Lambda$10/1594373685@321311106
stableDimension: 0
stamp: n!# Lbench/FutureBench$$Lambda$10/1594373685;
stampKind: n -
value: NarrowOop[FutureBench$$Lambda$10/1594373685@321311106]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2434 v2478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<FutureBench.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 195
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?57 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
tid ?57 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<Future.map(Function1)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Future.scala
sourceLine: 1811
stackSize: 0
=== Inputs ===
outerFrameState: ?45 
values: - - 
=== Succesors ===
=== Usages ===
?58 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?45 values: - -  <|@  <|@
tid a78 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@1928ac20
hasIdentity: true
objectId: 9
stamp: a!# Lcom/twitter/util/Future$$Lambda$8/112631710;
type: HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?802 ?795 ?58 ?81 ?118 ?81 ?782 ?311 ?790 ?898 ?882 ?883 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Promise.transform(Function1)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 417
stackSize: 0
=== Inputs ===
outerFrameState: ?57 
values: a751 a78 
=== Succesors ===
=== Usages ===
?140 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?57 values: a751 a78  <|@  <|@
tid ?81 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a78 
materializedValue: a78 
=== Succesors ===
=== Usages ===
?140 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a78 materializedValue: a78  <|@  <|@
tid ?140 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Promise$Responder.transform$(Promise$Responder, Function1)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 303
stackSize: 0
=== Inputs ===
outerFrameState: ?58 
values: - - 
virtualObjectMappings: ?81 
=== Succesors ===
=== Usages ===
?118 ?311 ?374 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?58 values: - - virtualObjectMappings: ?81  <|@  <|@
tid a780 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@72460335
hasIdentity: true
objectId: 5
stamp: a!# Lcom/twitter/util/Promise$$anon$3;
type: HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?694 ?119 ?781 ?276 ?943 ?940 ?547 ?787 ?311 ?374 ?941 ?910 ?1027 ?1022 ?1006 ?974 ?966 ?937 ?958 ?1031 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?374 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<Promise$Responder.transform(Function1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 306
stackSize: 0
=== Inputs ===
outerFrameState: ?140 
values: - - a780 
=== Succesors ===
=== Usages ===
?323 ?614 ?639 ?870 ?874 ?890 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: - - a780  <|@  <|@
tid a788 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@3d79c5fd
hasIdentity: true
objectId: 8
stamp: a!# Lcom/twitter/util/Promise$Transformer;
type: HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?311 ?311 ?789 ?323 ?790 ?898 ?890 ?639 ?794 ?883 ?874 ?882 ?614 ?801 ?870 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?311 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Promise$Responder.transform(Function1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 306
stackSize: 3
=== Inputs ===
outerFrameState: ?140 
values: - a78 a780 a751 a788 a788 
=== Succesors ===
=== Usages ===
?578 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: - a78 a780 a751 a788 a788  <|@  <|@
tid ?578 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Local$.save()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Local.scala
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: ?311 
values: - 
=== Succesors ===
=== Usages ===
?576 ?562 ?2572 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?311 values: -  <|@  <|@
tid ?789 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a788 
values: - - - 
=== Succesors ===
=== Usages ===
?2571 ?827 ?2572 ?576 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a788 values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid j1810 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2462 j2167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3516 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
a3172 a3401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3513 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 64
stableDimension: 0
stamp: i64 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i64
value: long[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3514 j3551 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?118 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<Promise$Responder.transform(Function1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 304
stackSize: 0
=== Inputs ===
outerFrameState: ?140 
values: a751 a78 - 
=== Succesors ===
=== Usages ===
?119 ?966 ?958 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: a751 a78 -  <|@  <|@
f <@~|@floating>@ <|@
tid a37 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: FutureBench$$Lambda$10/1594373685@321311106
stableDimension: 0
stamp: a!# Lbench/FutureBench$$Lambda$10/1594373685;
stampKind: a -
value: Object[FutureBench$$Lambda$10/1594373685@321311106]
=== Inputs ===
=== Succesors ===
=== Usages ===
?782 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?782 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a78 
values: a37 
=== Succesors ===
=== Usages ===
?688 ?276 ?543 ?2571 ?827 ?2572 ?576 ?890 ?323 ?870 ?874 ?1017 ?905 ?974 ?1003 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a78 values: a37  <|@  <|@
f <@~|@floating>@ <|@
tid a2508 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: FutureBench$$Lambda$7/390800101@687091653
stableDimension: 0
stamp: n!# Lbench/FutureBench$$Lambda$7/390800101;
stampKind: n -
value: NarrowOop[FutureBench$$Lambda$7/390800101@687091653]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2066 v2182 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3501 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3075 v3228 v3377 v3457 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3066 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j3449 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3449 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v3066 
=== Succesors ===
=== Usages ===
v3854 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v3066  <|@  <|@
f <@~|@floating>@ <|@
tid v3854 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j3449 
index: - 
=== Succesors ===
=== Usages ===
j3453 j3224 j3071 j3373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3449 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3495 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3057 v3211 v3360 v3440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3048 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j3432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3432 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v3048 
=== Succesors ===
=== Usages ===
v3853 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v3048  <|@  <|@
f <@~|@floating>@ <|@
tid v3853 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j3432 
index: - 
=== Succesors ===
=== Usages ===
j3436 j3207 j3053 j3356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3432 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1943 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2459 j2422 j2054 j2164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3492 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
a3032 a3105 a3258 a3336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1931 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1932 i2005 i2302 i2373 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1930 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1933 i2006 i2303 i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3486 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3487 v3488 v3539 v3540 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1905 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1913 v2387 v1937 v1948 v1988 v2378 v2010 v2019 v2285 v2356 v2307 v2316 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?256 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<Promise$Responder.transform(Function1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 306
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: - - a751 
=== Succesors ===
=== Usages ===
?205 ?480 ?505 ?839 ?843 ?859 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - a751  <|@  <|@
f <@~|@floating>@ <|@
tid v1885 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Lscala/Option;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Lscala/Option;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1893 v1969 v2266 v2337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid a762 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@3d79c5fd
hasIdentity: true
objectId: 3
stamp: a!# Lcom/twitter/util/Promise$Transformer;
type: HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?193 ?193 ?763 ?205 ?764 ?867 ?859 ?505 ?768 ?852 ?843 ?851 ?480 ?775 ?839 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?193 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Promise$Responder.transform(Function1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 306
stackSize: 3
=== Inputs ===
outerFrameState: ?107 
values: - a72 a751 a71 a762 a762 
=== Succesors ===
=== Usages ===
?444 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - a72 a751 a71 a762 a762  <|@  <|@
tid ?444 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Local$.save()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Local.scala
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: - 
=== Succesors ===
=== Usages ===
?442 ?428 ?2570 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: -  <|@  <|@
tid ?763 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a762 
values: - - - 
=== Succesors ===
=== Usages ===
?2569 ?812 ?2570 ?442 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a762 values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i661 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i662 i715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 7.839287703504969E-8
=== Inputs ===
condition: v1392 
=== Succesors ===
trueSuccessor: v423 
falseSuccessor: v424 
=== Usages ===
=== Predecessor ===
a3612 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1392 #trueSuccessor: v423 #falseSuccessor: v424  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4500515626435851651
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v423 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B190" 
    xhandlers
    flags 
    probability 4607182418093917144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3613 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3613  <|@  <|@
f <@~|@floating>@ <|@
tid v3716 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3612 
=== Succesors ===
=== Usages ===
a3613 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3613 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap.table
nullCheck: false
stamp: n# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3716 
=== Succesors ===
next: i3614 
=== Usages ===
a1103 v3717 
=== Predecessor ===
v424 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3716 #next: i3614  <|@  <|@
f <@~|@floating>@ <|@
tid v3717 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3613 
=== Succesors ===
=== Usages ===
i3614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3614 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?407 
guard: - 
address: v3717 
=== Succesors ===
next: i3615 
=== Usages ===
i662 v1110 
=== Predecessor ===
a3613 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?407 guard: - address: v3717 #next: i3615  <|@  <|@
f <@~|@floating>@ <|@
tid v3715 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3609 
=== Succesors ===
=== Usages ===
i3615 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3609  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3615 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal.threadLocalHashCode
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3715 
=== Succesors ===
next: v1556 
=== Usages ===
i663 
=== Predecessor ===
i3614 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3715 #next: v1556  <|@  <|@
f <@~|@floating>@ <|@
tid i662 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i3614 
y: i661 
=== Succesors ===
=== Usages ===
i663 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3614 y: i661  <|@  <|@
f <@~|@floating>@ <|@
tid i663 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$106/1828525263@267ef724
stamp: i32
=== Inputs ===
x: i662 
y: i3615 
=== Succesors ===
=== Usages ===
v3718 v1120 v1110 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i662 y: i3615  <|@  <|@
f <@~|@floating>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@782e90
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i663 
y: i3614 
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i663 y: i3614  <|@  <|@
f <@*|@fixed>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1110 
=== Succesors ===
trueSuccessor: v1553 
falseSuccessor: v1555 
=== Usages ===
=== Predecessor ===
i3615 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1110 #trueSuccessor: v1553 #falseSuccessor: v1555  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B42" 
    xhandlers
    flags 
    probability 4607182418093917144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3616 
=== Usages ===
a3616 
=== Predecessor ===
v1556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3616  <|@  <|@
f <@~|@floating>@ <|@
tid a1103 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a3613 
=== Succesors ===
=== Usages ===
v3718 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3613  <|@  <|@
f <@~|@floating>@ <|@
tid v3718 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1103 
index: i663 
=== Succesors ===
=== Usages ===
a3616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1103 index: i663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3616 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: v1553 
address: v3718 
=== Succesors ===
next: v669 
=== Usages ===
a1119 v1394 v3719 
=== Predecessor ===
v1553 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1553 address: v3718 #next: v669  <|@  <|@
f <@~|@floating>@ <|@
tid a1119 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a3616 
=== Succesors ===
=== Usages ===
v1120 a1036 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3616  <|@  <|@
f <@~|@floating>@ <|@
tid v1394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3616 
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3616  <|@  <|@
f <@~|@floating>@ <|@
tid a1097 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
value: a3612 
=== Succesors ===
=== Usages ===
?428 v1120 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3612  <|@  <|@
tid ?428 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 163
stackSize: 0
=== Inputs ===
outerFrameState: ?444 
values: a1088 - a1097 - - 
=== Succesors ===
=== Usages ===
?812 ?681 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?444 values: a1088 - a1097 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 3.527679190032315E-7
=== Inputs ===
condition: v1394 
=== Succesors ===
trueSuccessor: v667 
falseSuccessor: v668 
=== Usages ===
=== Predecessor ===
a3616 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1394 #trueSuccessor: v667 #falseSuccessor: v668  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B41" 
    xhandlers
    flags 
    probability 4510263224435847550
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a678 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a678  <|@  <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
signature: [Ljdk.vm.ci.meta.JavaType;@1e20555f
stamp: void
targetMethod: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>
=== Inputs ===
arguments: a1097 a1088 i663 a1119 
=== Succesors ===
=== Usages ===
a678 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1097 a1088 i663 a1119  <|@  <|@
tid ?681 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 0
=== Inputs ===
outerFrameState: ?428 
values: - - 
=== Succesors ===
=== Usages ===
?2569 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?428 values: - -  <|@  <|@
tid ?2569 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 419
stackSize: 0
=== Inputs ===
outerFrameState: ?681 
values: - - - - 
virtualObjectMappings: ?754 ?760 ?761 ?763 
=== Succesors ===
=== Usages ===
a678 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?681 values: - - - - virtualObjectMappings: ?754 ?760 ?761 ?763  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a678 <|@
d <@d|@=== Debug Properties ===
bci: 38
polymorphic: false
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
targetMethod: Direct#ThreadLocal$ThreadLocalMap.getEntryAfterMiss
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1120 
stateDuring: ?2569 
=== Succesors ===
next: v436 
=== Usages ===
v430 a1036 
=== Predecessor ===
v667 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1120 stateDuring: ?2569 #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a678 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a678  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 3.527674073959098E-7
=== Inputs ===
condition: v430 
=== Succesors ===
trueSuccessor: v435 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
a678 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v430 #trueSuccessor: v435 #falseSuccessor: v434  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4413953810109930006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v433  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4500515635838651094
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v431 v433 
=== Succesors ===
next: a441 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v431 v433 #next: a441  <|@  <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@5c3db205
stamp: void
targetMethod: HotSpotMethod<ThreadLocal.setInitialValue()>
=== Inputs ===
arguments: a1088 
=== Succesors ===
=== Usages ===
a441 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1088  <|@  <|@
tid ?2570 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 170
stackSize: 0
=== Inputs ===
outerFrameState: ?444 
values: - - - - - 
virtualObjectMappings: ?754 ?760 ?761 ?763 
=== Succesors ===
=== Usages ===
a441 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?444 values: - - - - - virtualObjectMappings: ?754 ?760 ?761 ?763  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a441 <|@
d <@d|@=== Debug Properties ===
bci: 34
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#ThreadLocal.setInitialValue
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1139 
stateDuring: ?2570 
=== Succesors ===
next: v1965 
=== Usages ===
?442 a846 v1141 v3806 ?764 a845 a846 a846 
=== Predecessor ===
v432 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1139 stateDuring: ?2570 #next: v1965  <|@  <|@
f <@~|@floating>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a441 
=== Succesors ===
=== Usages ===
v1965 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a441  <|@  <|@
f <@*|@fixed>@ <|@
tid v1965 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1141 
=== Succesors ===
trueSuccessor: v1964 
falseSuccessor: v1963 
=== Usages ===
=== Predecessor ===
a441 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1141 #trueSuccessor: v1964 #falseSuccessor: v1963  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    probability 4485820195411960388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1964 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2805 
=== Usages ===
=== Predecessor ===
v1965 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2805  <|@  <|@
f <@*|@fixed>@ <|@
tid v2805 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2803 
=== Predecessor ===
v1964 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B40" 
    xhandlers
    flags 
    probability 4499923315066361486
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1963 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3617 
=== Usages ===
=== Predecessor ===
v1965 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3617  <|@  <|@
f <@~|@floating>@ <|@
tid v3806 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a441 
index: - 
=== Succesors ===
=== Usages ===
v3617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a441 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3617 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3806 
=== Succesors ===
next: v3618 
=== Usages ===
v3770 
=== Predecessor ===
v1963 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3806 #next: v3618  <|@  <|@
f <@~|@floating>@ <|@
tid v3770 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3617 
=== Succesors ===
=== Usages ===
v3618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3617  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3618 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3770 
=== Succesors ===
next: v3571 
=== Usages ===
v1969 
=== Predecessor ===
v3617 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3770 #next: v3571  <|@  <|@
f <@~|@floating>@ <|@
tid v1969 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3618 
y: v1885 
=== Succesors ===
=== Usages ===
v3571 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3618 y: v1885  <|@  <|@
f <@*|@fixed>@ <|@
tid v3571 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1969 
=== Succesors ===
trueSuccessor: v3570 
falseSuccessor: v2810 
=== Usages ===
=== Predecessor ===
v3618 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1969 #trueSuccessor: v3570 #falseSuccessor: v2810  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4499923315066361486
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2813 
=== Usages ===
=== Predecessor ===
v3571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2813  <|@  <|@
f <@*|@fixed>@ <|@
tid v2813 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2803 
=== Predecessor ===
v3570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4500515635838651094
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2803 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2805 v2813 
=== Succesors ===
next: v1146 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2805 v2813 #next: v1146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a3619 
=== Usages ===
=== Predecessor ===
v2803 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a3619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3619 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise.state
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3721 
=== Succesors ===
next: v1147 
=== Usages ===
a1145 v3807 
=== Predecessor ===
v1146 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3721 #next: v1147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v3620 
=== Usages ===
=== Predecessor ===
a3619 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v3620  <|@  <|@
f <@~|@floating>@ <|@
tid a1145 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a3619 
=== Succesors ===
=== Usages ===
a850 ?205 a850 a850 a1039 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3619  <|@  <|@
tid ?764 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a762 
values: a441 a1881 a72 
=== Succesors ===
=== Usages ===
?205 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a762 values: a441 a1881 a72  <|@  <|@
tid ?205 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 761
stackSize: 1
=== Inputs ===
outerFrameState: ?256 
values: a71 a762 - - - - - - - - - a1145 
virtualObjectMappings: ?761 ?764 ?760 ?754 
=== Succesors ===
=== Usages ===
v3620 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?256 values: a71 a762 - - - - - - - - - a1145 virtualObjectMappings: ?761 ?764 ?760 ?754  <|@  <|@
f <@~|@floating>@ <|@
tid v3807 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3619 
=== Succesors ===
=== Usages ===
v3620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3620 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?205 
guard: - 
address: v3807 
=== Succesors ===
next: v3621 
=== Usages ===
v3772 v3488 v3771 
=== Predecessor ===
v1147 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?205 guard: - address: v3807 #next: v3621  <|@  <|@
f <@~|@floating>@ <|@
tid v3771 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3620 
=== Succesors ===
=== Usages ===
v2019 v3621 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3620  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3621 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SecondarySuperCache
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3771 
=== Succesors ===
next: v1991 
=== Usages ===
v1988 
=== Predecessor ===
v3620 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3771 #next: v1991  <|@  <|@
f <@~|@floating>@ <|@
tid v1988 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3621 
y: v1905 
=== Succesors ===
=== Usages ===
v1991 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3621 y: v1905  <|@  <|@
f <@*|@fixed>@ <|@
tid v1991 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1988 
=== Succesors ===
trueSuccessor: v1989 
falseSuccessor: v1990 
=== Usages ===
=== Predecessor ===
v3621 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1988 #trueSuccessor: v1989 #falseSuccessor: v1990  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B56" 
    xhandlers
    flags 
    probability 4496012036211280598
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1989 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v838 
=== Usages ===
=== Predecessor ===
v1991 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v838  <|@  <|@
f <@*|@fixed>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
v1989 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4496012036211280598
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1990 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1995 
=== Usages ===
=== Predecessor ===
v1991 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1995  <|@  <|@
f <@~|@floating>@ <|@
tid v3488 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3620 
y: v3486 
=== Succesors ===
=== Usages ===
v1995 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3620 y: v3486  <|@  <|@
f <@*|@fixed>@ <|@
tid v1995 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3488 
=== Succesors ===
trueSuccessor: v1993 
falseSuccessor: v1994 
=== Usages ===
=== Predecessor ===
v1990 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3488 #trueSuccessor: v1993 #falseSuccessor: v1994  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B56" 
    xhandlers
    flags 
    probability 4491508436583910102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1993 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2564 
=== Usages ===
=== Predecessor ===
v1995 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2564  <|@  <|@
f <@*|@fixed>@ <|@
tid v2564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
v1993 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4491508436583910102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1994 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j2016 
=== Usages ===
=== Predecessor ===
v1995 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2016  <|@  <|@
f <@~|@floating>@ <|@
tid v3772 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3620 
=== Succesors ===
=== Usages ===
j2016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3620  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2016 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3772 
=== Succesors ===
next: i2017 
=== Usages ===
v3773 v3774 
=== Predecessor ===
v1994 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3772 #next: i2017  <|@  <|@
f <@~|@floating>@ <|@
tid v3773 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2016 
index: - 
=== Succesors ===
=== Usages ===
i2017 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2016 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2017 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3773 
=== Succesors ===
next: v1998 
=== Usages ===
v2001 
=== Predecessor ===
j2016 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3773 #next: v1998  <|@  <|@
f <@*|@fixed>@ <|@
tid v1998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1999 
=== Predecessor ===
i2017 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B38" 
    successors "B36" "B39" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4494046954179436996
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2000 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1999 
values: i153 i2014 
=== Succesors ===
=== Usages ===
v2001 i2005 i2014 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1999 values: i153 i2014  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1999 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1998 
=== Succesors ===
next: v2004 
=== Usages ===
i2000 v2003 v2012 v2015 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1998 #next: v2004  <|@  <|@
f <@~|@floating>@ <|@
tid v2001 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3652e6c3
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2000 
y: i2017 
=== Succesors ===
=== Usages ===
v2004 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2000 y: i2017  <|@  <|@
f <@*|@fixed>@ <|@
tid v2004 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2001 
=== Succesors ===
trueSuccessor: v2002 
falseSuccessor: v2003 
=== Usages ===
=== Predecessor ===
v1999 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2001 #trueSuccessor: v2002 #falseSuccessor: v2003  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4489543354552066500
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2002 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j2018 
=== Usages ===
=== Predecessor ===
v2004 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2018  <|@  <|@
f <@~|@floating>@ <|@
tid i2005 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$15/433673915@1f3c8b47
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2000 
y: i1931 
=== Succesors ===
=== Usages ===
i2006 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2000 y: i1931  <|@  <|@
f <@~|@floating>@ <|@
tid i2006 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2005 
y: i1930 
=== Succesors ===
=== Usages ===
j2007 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2005 y: i1930  <|@  <|@
f <@~|@floating>@ <|@
tid j2007 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$13/1218083739@248602d1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$14/1566400895@795fae70
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2006 
=== Succesors ===
=== Usages ===
v3774 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2006  <|@  <|@
f <@~|@floating>@ <|@
tid v3774 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2016 
index: j2007 
=== Succesors ===
=== Usages ===
j2018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2016 index: j2007  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2018 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3774 
=== Succesors ===
next: v2013 
=== Usages ===
v2009 
=== Predecessor ===
v2002 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3774 #next: v2013  <|@  <|@
f <@~|@floating>@ <|@
tid v2009 <|@
d <@d|@=== Debug Properties ===
stamp: Klass*
=== Inputs ===
input: j2018 
=== Succesors ===
=== Usages ===
v2010 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j2018  <|@  <|@
f <@~|@floating>@ <|@
tid v2010 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2009 
y: v1905 
=== Succesors ===
=== Usages ===
v2013 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2009 y: v1905  <|@  <|@
f <@*|@fixed>@ <|@
tid v2013 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v2010 
=== Succesors ===
trueSuccessor: v2012 
falseSuccessor: v2011 
=== Usages ===
=== Predecessor ===
j2018 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2010 #trueSuccessor: v2012 #falseSuccessor: v2011  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B56" 
    xhandlers
    flags 
    probability 4483347409861011408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2012 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1999 
=== Succesors ===
next: v2019 
=== Usages ===
=== Predecessor ===
v2013 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1999 #next: v2019  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2019 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3771 
value: v1905 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2563 
=== Usages ===
=== Predecessor ===
v2012 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3771 value: v1905 stateAfter: - lastLocationAccess: - #next: v2563  <|@  <|@
f <@*|@fixed>@ <|@
tid v2563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
v2019 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4486158664424697308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2011 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2015 
=== Usages ===
=== Predecessor ===
v2013 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2015  <|@  <|@
f <@~|@floating>@ <|@
tid i2014 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i32
=== Inputs ===
x: i2000 
y: i1797 
=== Succesors ===
=== Usages ===
i2000 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2000 y: i1797  <|@  <|@
f <@*|@fixed>@ <|@
tid v2015 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1999 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2011 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1999  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B92" 
    xhandlers
    flags 
    probability 4489543354552066500
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2003 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1999 
=== Succesors ===
next: v842 
=== Usages ===
=== Predecessor ===
v2004 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1999 #next: v842  <|@  <|@
f <@*|@fixed>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
v2003 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2810 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1558 
=== Usages ===
=== Predecessor ===
v3571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1558  <|@  <|@
tid ?442 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 170
stackSize: 1
=== Inputs ===
outerFrameState: ?444 
values: - - - - - a441 
virtualObjectMappings: ?754 ?760 ?761 ?763 
=== Succesors ===
=== Usages ===
v1558 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?444 values: - - - - - a441 virtualObjectMappings: ?754 ?760 ?761 ?763  <|@  <|@
f <@*|@fixed>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1143
reason: ClassCastException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?442 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2810 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?442  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 4510263222085147689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v811 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v811  <|@  <|@
f <@*|@fixed>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v810 
=== Predecessor ===
v434 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B43" "B189" 
    xhandlers
    flags 
    probability 4607182414916466456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3622 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3622  <|@  <|@
f <@~|@floating>@ <|@
tid v3719 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3616 
=== Succesors ===
=== Usages ===
a3622 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3616  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3622 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.referent
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3719 
=== Succesors ===
next: v1568 
=== Usages ===
v3905 
=== Predecessor ===
v668 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3719 #next: v1568  <|@  <|@
f <@~|@floating>@ <|@
tid v3905 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3609 
y: a3622 
=== Succesors ===
=== Usages ===
v1568 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a3609 y: a3622  <|@  <|@
f <@*|@fixed>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3905 
=== Succesors ===
trueSuccessor: v1565 
falseSuccessor: v1567 
=== Usages ===
=== Predecessor ===
a3622 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3905 #trueSuccessor: v1565 #falseSuccessor: v1567  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4607182414916466456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v673 
=== Usages ===
=== Predecessor ===
v1568 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v673  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: Reference.referent
stamp: void
=== Inputs ===
=== Succesors ===
next: v813 
=== Usages ===
=== Predecessor ===
v1565 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v813  <|@  <|@
f <@*|@fixed>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v810 
=== Predecessor ===
v673 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4607182418093916023
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1036 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
valueDescription: a -
=== Inputs ===
merge: v810 
values: a678 a1119 
=== Succesors ===
=== Usages ===
v3720 ?812 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v810 values: a678 a1119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v811 v813 
=== Succesors ===
next: a3623 
=== Usages ===
a1036 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v811 v813 #next: a3623  <|@  <|@
f <@~|@floating>@ <|@
tid v3720 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1036 
index: - 
=== Succesors ===
=== Usages ===
a3623 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1036 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3623 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap$Entry.value
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3720 
=== Succesors ===
next: v1889 
=== Usages ===
a1128 v1130 v3804 
=== Predecessor ===
v810 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3720 #next: v1889  <|@  <|@
f <@~|@floating>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3623 
=== Succesors ===
=== Usages ===
v1889 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3623  <|@  <|@
f <@*|@fixed>@ <|@
tid v1889 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1130 
=== Succesors ===
trueSuccessor: v1888 
falseSuccessor: v1887 
=== Usages ===
=== Predecessor ===
a3623 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1130 #trueSuccessor: v1888 #falseSuccessor: v1887  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591870179502076612
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2820 
=== Usages ===
=== Predecessor ===
v1889 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2820  <|@  <|@
f <@*|@fixed>@ <|@
tid v2820 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2818 
=== Predecessor ===
v1888 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B188" 
    xhandlers
    flags 
    probability 4606281698239052062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3624 
=== Usages ===
=== Predecessor ===
v1889 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3624  <|@  <|@
f <@~|@floating>@ <|@
tid v3804 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3623 
=== Succesors ===
=== Usages ===
v3624 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3624 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3804 
=== Succesors ===
next: v3625 
=== Usages ===
v3765 
=== Predecessor ===
v1887 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3804 #next: v3625  <|@  <|@
f <@~|@floating>@ <|@
tid v3765 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3624 
=== Succesors ===
=== Usages ===
v3625 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3625 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3765 
=== Succesors ===
next: v3579 
=== Usages ===
v1893 
=== Predecessor ===
v3624 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3765 #next: v3579  <|@  <|@
f <@~|@floating>@ <|@
tid v1893 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3625 
y: v1885 
=== Succesors ===
=== Usages ===
v3579 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3625 y: v1885  <|@  <|@
f <@*|@fixed>@ <|@
tid v3579 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1893 
=== Succesors ===
trueSuccessor: v3578 
falseSuccessor: v2825 
=== Usages ===
=== Predecessor ===
v3625 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1893 #trueSuccessor: v3578 #falseSuccessor: v2825  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606281698239052062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3578 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2828 
=== Usages ===
=== Predecessor ===
v3579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2828  <|@  <|@
f <@*|@fixed>@ <|@
tid v2828 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2818 
=== Predecessor ===
v3578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4607182418093916022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2818 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2820 v2828 
=== Succesors ===
next: v1136 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2820 v2828 #next: v1136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a3626 
=== Usages ===
=== Predecessor ===
v2818 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a3626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3626 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise.state
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3721 
=== Succesors ===
next: v1137 
=== Usages ===
a1135 v3805 
=== Predecessor ===
v1136 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3721 #next: v1137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v3627 
=== Usages ===
=== Predecessor ===
a3626 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v3627  <|@  <|@
f <@~|@floating>@ <|@
tid a1135 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a3626 
=== Succesors ===
=== Usages ===
a850 ?859 a850 a850 a1039 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3626  <|@  <|@
f <@~|@floating>@ <|@
tid a1128 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a3623 
=== Succesors ===
=== Usages ===
a846 a846 ?867 a846 a845 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3623  <|@  <|@
tid ?867 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a762 
values: a1128 a1881 a72 
=== Succesors ===
=== Usages ===
?859 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a762 values: a1128 a1881 a72  <|@  <|@
tid ?859 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 761
stackSize: 1
=== Inputs ===
outerFrameState: ?256 
values: a71 a762 - - - - - - - - - a1135 
virtualObjectMappings: ?761 ?867 ?760 ?754 
=== Succesors ===
=== Usages ===
v3627 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?256 values: a71 a762 - - - - - - - - - a1135 virtualObjectMappings: ?761 ?867 ?760 ?754  <|@  <|@
f <@~|@floating>@ <|@
tid v3805 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3626 
=== Succesors ===
=== Usages ===
v3627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3627 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?859 
guard: - 
address: v3805 
=== Succesors ===
next: v3628 
=== Usages ===
v3767 v3487 v3766 
=== Predecessor ===
v1137 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?859 guard: - address: v3805 #next: v3628  <|@  <|@
f <@~|@floating>@ <|@
tid v3766 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3627 
=== Succesors ===
=== Usages ===
v1948 v3628 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3628 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SecondarySuperCache
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3766 
=== Succesors ===
next: v1916 
=== Usages ===
v1913 
=== Predecessor ===
v3627 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3766 #next: v1916  <|@  <|@
f <@~|@floating>@ <|@
tid v1913 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3628 
y: v1905 
=== Succesors ===
=== Usages ===
v1916 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3628 y: v1905  <|@  <|@
f <@*|@fixed>@ <|@
tid v1916 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1913 
=== Succesors ===
trueSuccessor: v1914 
falseSuccessor: v1915 
=== Usages ===
=== Predecessor ===
v3628 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1913 #trueSuccessor: v1914 #falseSuccessor: v1915  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B56" 
    xhandlers
    flags 
    probability 4602678818466545526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v840 
=== Usages ===
=== Predecessor ===
v1916 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v840  <|@  <|@
f <@*|@fixed>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
v1914 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4602678818466545526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1915 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1920 
=== Usages ===
=== Predecessor ===
v1916 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1920  <|@  <|@
f <@~|@floating>@ <|@
tid v3487 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3627 
y: v3486 
=== Succesors ===
=== Usages ===
v1920 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3627 y: v3486  <|@  <|@
f <@*|@fixed>@ <|@
tid v1920 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3487 
=== Succesors ===
trueSuccessor: v1918 
falseSuccessor: v1919 
=== Usages ===
=== Predecessor ===
v1915 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3487 #trueSuccessor: v1918 #falseSuccessor: v1919  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B56" 
    xhandlers
    flags 
    probability 4598175218839175030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1918 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2562 
=== Usages ===
=== Predecessor ===
v1920 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2562  <|@  <|@
f <@*|@fixed>@ <|@
tid v2562 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
v1918 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4598175218839175030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j1945 
=== Usages ===
=== Predecessor ===
v1920 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1945  <|@  <|@
f <@~|@floating>@ <|@
tid v3767 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3627 
=== Succesors ===
=== Usages ===
j1945 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1945 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3767 
=== Succesors ===
next: i1946 
=== Usages ===
v3768 v3769 
=== Predecessor ===
v1919 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3767 #next: i1946  <|@  <|@
f <@~|@floating>@ <|@
tid v3768 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1945 
index: - 
=== Succesors ===
=== Usages ===
i1946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1945 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1946 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3768 
=== Succesors ===
next: v1923 
=== Usages ===
v1926 
=== Predecessor ===
j1945 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3768 #next: v1923  <|@  <|@
f <@*|@fixed>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1924 
=== Predecessor ===
i1946 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B90" 
    successors "B54" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4600105333166934210
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1925 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1924 
values: i153 i1941 
=== Succesors ===
=== Usages ===
v1926 i1932 i1941 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1924 values: i153 i1941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1923 
=== Succesors ===
next: v1929 
=== Usages ===
i1925 v1928 v1939 v1942 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1923 #next: v1929  <|@  <|@
f <@~|@floating>@ <|@
tid v1926 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3652e6c3
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1925 
y: i1946 
=== Succesors ===
=== Usages ===
v1929 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1925 y: i1946  <|@  <|@
f <@*|@fixed>@ <|@
tid v1929 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1926 
=== Succesors ===
trueSuccessor: v1927 
falseSuccessor: v1928 
=== Usages ===
=== Predecessor ===
v1924 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1926 #trueSuccessor: v1927 #falseSuccessor: v1928  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595601733539563714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1927 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j1947 
=== Usages ===
=== Predecessor ===
v1929 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1947  <|@  <|@
f <@~|@floating>@ <|@
tid i1932 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$15/433673915@1f3c8b47
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1925 
y: i1931 
=== Succesors ===
=== Usages ===
i1933 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1925 y: i1931  <|@  <|@
f <@~|@floating>@ <|@
tid i1933 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1932 
y: i1930 
=== Succesors ===
=== Usages ===
j1934 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1932 y: i1930  <|@  <|@
f <@~|@floating>@ <|@
tid j1934 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$13/1218083739@248602d1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$14/1566400895@795fae70
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1933 
=== Succesors ===
=== Usages ===
v3769 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1933  <|@  <|@
f <@~|@floating>@ <|@
tid v3769 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1945 
index: j1934 
=== Succesors ===
=== Usages ===
j1947 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1945 index: j1934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1947 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3769 
=== Succesors ===
next: v1940 
=== Usages ===
v1936 
=== Predecessor ===
v1927 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3769 #next: v1940  <|@  <|@
f <@~|@floating>@ <|@
tid v1936 <|@
d <@d|@=== Debug Properties ===
stamp: Klass*
=== Inputs ===
input: j1947 
=== Succesors ===
=== Usages ===
v1937 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j1947  <|@  <|@
f <@~|@floating>@ <|@
tid v1937 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1936 
y: v1905 
=== Succesors ===
=== Usages ===
v1940 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1936 y: v1905  <|@  <|@
f <@*|@fixed>@ <|@
tid v1940 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v1937 
=== Succesors ===
trueSuccessor: v1939 
falseSuccessor: v1938 
=== Usages ===
=== Predecessor ===
j1947 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1937 #trueSuccessor: v1939 #falseSuccessor: v1938  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589811391262387560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1939 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1924 
=== Succesors ===
next: v1948 
=== Usages ===
=== Predecessor ===
v1940 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1924 #next: v1948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1948 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3766 
value: v1905 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2561 
=== Usages ===
=== Predecessor ===
v1939 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3766 value: v1905 stateAfter: - lastLocationAccess: - #next: v2561  <|@  <|@
f <@*|@fixed>@ <|@
tid v2561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
v1948 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B31" "B49" "B55" "B51" "B37" "B33" 
    successors "B57" "B88" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a846 <|@
d <@d|@=== Debug Properties ===
stamp: a [Lscala/Option;
valueDescription: a -
=== Inputs ===
merge: v837 
values: a441 a1128 a1128 a1128 a441 a441 
=== Succesors ===
=== Usages ===
a2058 ?851 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v837 values: a441 a1128 a1128 a1128 a441 a441  <|@  <|@
f <@~|@floating>@ <|@
tid a850 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v837 
values: a1145 a1135 a1135 a1135 a1145 a1145 
=== Succesors ===
=== Usages ===
v3808 v485 ?839 a1166 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v837 values: a1145 a1135 a1135 a1135 a1145 a1145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v838 v840 v2561 v2562 v2563 v2564 
=== Succesors ===
next: a3629 
=== Usages ===
a846 a850 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v838 v840 v2561 v2562 v2563 v2564 #next: a3629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3629 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$WaitQueue$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3707 
=== Succesors ===
next: v3912 
=== Usages ===
v3722 v3912 
=== Predecessor ===
v837 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3707 #next: v3912  <|@  <|@
tid ?851 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a762 
values: a846 a1881 a72 
=== Succesors ===
=== Usages ===
?839 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a762 values: a846 a1881 a72  <|@  <|@
tid ?839 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 761
stackSize: 1
=== Inputs ===
outerFrameState: ?256 
values: a71 a762 - - - - - - - - - a850 
virtualObjectMappings: ?761 ?851 ?760 ?754 
=== Succesors ===
=== Usages ===
v2684 a3032 v3912 a3631 v3913 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?256 values: a71 a762 - - - - - - - - - a850 virtualObjectMappings: ?761 ?851 ?760 ?754  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3912 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?839 
object: a3629 
=== Succesors ===
next: a3630 
=== Usages ===
=== Predecessor ===
a3629 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?839 object: a3629 #next: a3630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3630 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3706 
=== Succesors ===
next: a3631 
=== Usages ===
v3724 v3723 
=== Predecessor ===
v3912 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3706 #next: a3631  <|@  <|@
f <@~|@floating>@ <|@
tid v3723 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3630 
=== Succesors ===
=== Usages ===
a3631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3631 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$unsafe
nullCheck: true
stamp: n# Lsun/misc/Unsafe;
=== Inputs ===
stateBefore: ?839 
guard: - 
address: v3723 
=== Succesors ===
next: v3913 
=== Usages ===
v3913 
=== Predecessor ===
a3630 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?839 guard: - address: v3723 #next: v3913  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3913 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?839 
object: a3631 
=== Succesors ===
next: v3632 
=== Usages ===
=== Predecessor ===
a3631 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?839 object: a3631 #next: v3632  <|@  <|@
f <@~|@floating>@ <|@
tid v3808 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a850 
index: - 
=== Succesors ===
=== Usages ===
v3632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a850 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3632 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3808 
=== Succesors ===
next: v1592 
=== Usages ===
v3489 
=== Predecessor ===
v3913 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3808 #next: v1592  <|@  <|@
f <@~|@floating>@ <|@
tid v3489 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3632 
y: v3467 
=== Succesors ===
=== Usages ===
v1592 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3632 y: v3467  <|@  <|@
f <@*|@fixed>@ <|@
tid v1592 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3489 
=== Succesors ===
trueSuccessor: v1589 
falseSuccessor: v1591 
=== Usages ===
=== Predecessor ===
v3632 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3489 #trueSuccessor: v1589 #falseSuccessor: v1591  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B87" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3633 
=== Usages ===
=== Predecessor ===
v1592 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3633  <|@  <|@
f <@~|@floating>@ <|@
tid v3722 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3629 
=== Succesors ===
=== Usages ===
a3633 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3633 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.Empty
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v3722 
=== Succesors ===
next: v1596 
=== Usages ===
a1155 
=== Predecessor ===
v1589 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3722 #next: v1596  <|@  <|@
f <@~|@floating>@ <|@
tid a1155 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a -
=== Inputs ===
value: a3633 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3633  <|@  <|@
f <@~|@floating>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a850 
y: a1155 
=== Succesors ===
=== Usages ===
v1596 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a850 y: a1155  <|@  <|@
f <@*|@fixed>@ <|@
tid v1596 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v485 
=== Succesors ===
trueSuccessor: v1593 
falseSuccessor: v1595 
=== Usages ===
=== Predecessor ===
a3633 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v485 #trueSuccessor: v1593 #falseSuccessor: v1595  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j3021 
=== Usages ===
=== Predecessor ===
v1596 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3021  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3021 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3036 
=== Usages ===
v3809 v3810 
=== Predecessor ===
v1593 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3036  <|@  <|@
f <@~|@floating>@ <|@
tid v3809 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3021 
index: - 
=== Succesors ===
=== Usages ===
j3036 v3038 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3021 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3036 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3809 
=== Succesors ===
next: j3037 
=== Usages ===
j3490 j3042 v3863 
=== Predecessor ===
j3021 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3809 #next: j3037  <|@  <|@
f <@~|@floating>@ <|@
tid v3810 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3021 
index: - 
=== Succesors ===
=== Usages ===
j3037 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3021 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3037 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3810 
=== Succesors ===
next: v3029 
=== Usages ===
v3026 
=== Predecessor ===
j3036 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3810 #next: v3029  <|@  <|@
f <@~|@floating>@ <|@
tid j3490 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3036 
y: j1866 
=== Succesors ===
=== Usages ===
v3026 v3038 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3036 y: j1866  <|@  <|@
f <@~|@floating>@ <|@
tid v3026 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@782e90
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3037 
y: j3490 
=== Succesors ===
=== Usages ===
v3029 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3037 y: j3490  <|@  <|@
f <@*|@fixed>@ <|@
tid v3029 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3026 
=== Succesors ===
trueSuccessor: v3027 
falseSuccessor: v3028 
=== Usages ===
=== Predecessor ===
j3037 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3026 #trueSuccessor: v3027 #falseSuccessor: v3028  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4575888835103545851
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3027 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3032 
=== Usages ===
=== Predecessor ===
v3029 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3032  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3032 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@39bb4106
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?839 
arguments: v2920 i3492 i1797 
=== Succesors ===
next: j3033 
=== Usages ===
j3033 
=== Predecessor ===
v3027 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?839 arguments: v2920 i3492 i1797 #next: j3033  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3033 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3032 
=== Succesors ===
next: v3043 
=== Usages ===
j3042 
=== Predecessor ===
a3032 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3032 #next: v3043  <|@  <|@
f <@*|@fixed>@ <|@
tid v3043 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3040 
=== Predecessor ===
j3033 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605500002653506857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3028 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3038 
=== Usages ===
=== Predecessor ===
v3029 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3038 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3809 
value: j3490 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3035 
=== Usages ===
=== Predecessor ===
v3028 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3809 value: j3490 stateAfter: - lastLocationAccess: - #next: v3035  <|@  <|@
f <@~|@floating>@ <|@
tid v3863 <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j3036 
index: - 
=== Succesors ===
=== Usages ===
v3035 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3036 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3035 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3863 
=== Succesors ===
next: v3041 
=== Usages ===
=== Predecessor ===
v3038 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3863 #next: v3041  <|@  <|@
f <@*|@fixed>@ <|@
tid v3041 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3040 
=== Predecessor ===
v3035 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3042 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3040 
values: j3036 j3033 
=== Succesors ===
=== Usages ===
v3792 v3811 j2054 a2052 v3812 v3864 v3865 v3866 v3867 v3868 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3040 values: j3036 j3033  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3040 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3041 v3043 
=== Succesors ===
next: a2052 
=== Usages ===
j3042 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3041 v3043 #next: a2052  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2052 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3042 
=== Succesors ===
next: a2055 
=== Usages ===
a2067 
=== Predecessor ===
v3040 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3042 #next: a2055  <|@  <|@
f <@~|@floating>@ <|@
tid j2054 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3042 
y: j1943 
=== Succesors ===
=== Usages ===
a2055 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3042 y: j1943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2055 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2054 
=== Succesors ===
next: j3053 
=== Usages ===
a2068 a2060 
=== Predecessor ===
a2052 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2054 #next: j3053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3053 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3853 
=== Succesors ===
next: v3054 
=== Usages ===
v3054 
=== Predecessor ===
a2055 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3853 #next: v3054  <|@  <|@
f <@~|@floating>@ <|@
tid v3811 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3042 
index: - 
=== Succesors ===
=== Usages ===
v3054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3054 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3811 
value: j3053 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3057 
=== Usages ===
=== Predecessor ===
j3053 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3811 value: j3053 stateAfter: - lastLocationAccess: - #next: v3057  <|@  <|@
f <@~|@floating>@ <|@
tid v3812 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3042 
index: - 
=== Succesors ===
=== Usages ===
v3057 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3057 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3812 
value: v3495 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3061 
=== Usages ===
=== Predecessor ===
v3054 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3812 value: v3495 stateAfter: - lastLocationAccess: - #next: v3061  <|@  <|@
f <@~|@floating>@ <|@
tid v3864 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3042 
index: - 
=== Succesors ===
=== Usages ===
v3061 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3042 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2058 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n [Lscala/Option;
=== Inputs ===
value: a846 
=== Succesors ===
=== Usages ===
v3061 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3061 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3864 
value: a2058 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3063 
=== Usages ===
=== Predecessor ===
v3057 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3864 value: a2058 stateAfter: - lastLocationAccess: - #next: v3063  <|@  <|@
f <@~|@floating>@ <|@
tid v3865 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j3042 
index: - 
=== Succesors ===
=== Usages ===
v3063 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3063 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3865 
value: a2059 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3065 
=== Usages ===
=== Predecessor ===
v3061 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3865 value: a2059 stateAfter: - lastLocationAccess: - #next: v3065  <|@  <|@
f <@~|@floating>@ <|@
tid v3866 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3042 
index: - 
=== Succesors ===
=== Usages ===
v3065 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3042 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2060 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2055 
=== Succesors ===
=== Usages ===
v3065 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2055  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3065 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3866 
value: a2060 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j3071 
=== Usages ===
=== Predecessor ===
v3063 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3866 value: a2060 stateAfter: - lastLocationAccess: - #next: j3071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3071 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3854 
=== Succesors ===
next: v3072 
=== Usages ===
v3072 
=== Predecessor ===
v3065 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3854 #next: v3072  <|@  <|@
f <@~|@floating>@ <|@
tid v3867 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3042 
index: - 
=== Succesors ===
=== Usages ===
v3072 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3072 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3867 
value: j3071 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3075 
=== Usages ===
=== Predecessor ===
j3071 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3867 value: j3071 stateAfter: - lastLocationAccess: - #next: v3075  <|@  <|@
f <@~|@floating>@ <|@
tid v3868 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j3042 
index: - 
=== Succesors ===
=== Usages ===
v3075 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3075 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3868 
value: v3501 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2066 
=== Usages ===
=== Predecessor ===
v3072 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3868 value: v3501 stateAfter: - lastLocationAccess: - #next: v2066  <|@  <|@
f <@~|@floating>@ <|@
tid v3792 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j3042 
index: - 
=== Succesors ===
=== Usages ===
v2066 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2066 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3792 
value: a2508 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2067 
=== Usages ===
=== Predecessor ===
v3075 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3792 value: a2508 stateAfter: - lastLocationAccess: - #next: a2067  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2067 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2052 
=== Succesors ===
next: a2068 
=== Usages ===
a1167 ?768 
=== Predecessor ===
v2066 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2052 #next: a2068  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2068 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2055 
=== Succesors ===
next: v2069 
=== Usages ===
?769 
=== Predecessor ===
a2067 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2055 #next: v2069  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2069 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j3634 
=== Usages ===
=== Predecessor ===
a2068 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j3634  <|@  <|@
f <@~|@floating>@ <|@
tid v3724 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3630 
=== Succesors ===
=== Usages ===
j3634 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3634 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$stateOff
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3724 
=== Succesors ===
next: i1169 
=== Usages ===
v3725 
=== Predecessor ===
v2069 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3724 #next: i1169  <|@  <|@
f <@~|@floating>@ <|@
tid v3725 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1883 
index: j3634 
=== Succesors ===
=== Usages ===
i1169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1883 index: j3634  <|@  <|@
f <@~|@floating>@ <|@
tid a1166 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/lang/Object;
=== Inputs ===
value: a850 
=== Succesors ===
=== Usages ===
i1169 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a850  <|@  <|@
f <@~|@floating>@ <|@
tid a1167 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2067 
=== Succesors ===
=== Usages ===
i1169 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2067  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1169 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ANY_LOCATION
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3725 
expectedValue: a1166 
newValue: a1167 
stateAfter: - 
=== Succesors ===
next: j3078 
=== Usages ===
?501 i502 
=== Predecessor ===
j3634 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v3725 expectedValue: a1166 newValue: a1167 stateAfter: - #next: j3078  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3078 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1883 
=== Succesors ===
next: v3082 
=== Usages ===
j3079 
=== Predecessor ===
i1169 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1883 #next: v3082  <|@  <|@
f <@~|@floating>@ <|@
tid j3079 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$146/1524633570@1cec0275
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3078 
y: i2993 
=== Succesors ===
=== Usages ===
v3813 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3078 y: i2993  <|@  <|@
f <@~|@floating>@ <|@
tid v3813 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3079 
index: j2997 
=== Succesors ===
=== Usages ===
v3082 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3079 index: j2997  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3082 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3813 
value: i2999 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1600 
=== Usages ===
=== Predecessor ===
j3078 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3813 value: i2999 stateAfter: - lastLocationAccess: - #next: v1600  <|@  <|@
tid ?505 <|@
d <@d|@=== Debug Properties ===
bci: 33
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 763
stackSize: 0
=== Inputs ===
outerFrameState: ?256 
values: a71 a762 - - - - - - - - - 
=== Succesors ===
=== Usages ===
?501 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?256 values: a71 a762 - - - - - - - - -  <|@  <|@
tid ?768 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a762 
materializedValue: a2067 
=== Succesors ===
=== Usages ===
?501 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a762 materializedValue: a2067  <|@  <|@
tid ?769 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a72 
materializedValue: a2068 
=== Succesors ===
=== Usages ===
?501 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a72 materializedValue: a2068  <|@  <|@
tid ?501 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Promise.cas(Object, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 453
stackSize: 1
=== Inputs ===
outerFrameState: ?505 
values: - - - i1169 
virtualObjectMappings: ?761 ?768 ?760 ?769 
=== Succesors ===
=== Usages ===
v2650 v3910 a3637 a3640 v3911 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?505 values: - - - i1169 virtualObjectMappings: ?761 ?768 ?760 ?769  <|@  <|@
f <@~|@floating>@ <|@
tid i502 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$115/1567088237@42498438
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$116/1100921398@1fb26baa
inputBits: 32
resultBits: 1
stamp: i1
=== Inputs ===
value: i1169 
=== Succesors ===
=== Usages ===
i503 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1169  <|@  <|@
f <@~|@floating>@ <|@
tid i503 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1701538656@15c1f08d
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/999668238@1b27ce49
inputAlwaysPositive: false
inputBits: 1
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i502 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i502  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i503 
y: i153 
=== Succesors ===
=== Usages ===
v1600 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i503 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v1599 
falseSuccessor: v1597 
=== Usages ===
=== Predecessor ===
v3082 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v1599 #falseSuccessor: v1597  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2650 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2650  <|@  <|@
f <@~|@floating>@ <|@
tid i2647 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -299539
stableDimension: 0
stamp: i32 [-299539] ⇊00000000fffb6ded ⇈00000000fffb6ded
stampKind: i32
value: int[-299539|0xfffffffffffb6ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2650 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?501 
actionAndReason: i2647 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?501 actionAndReason: i2647 speculation: a2581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1597 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3635 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3635 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3706 
=== Succesors ===
next: v3910 
=== Usages ===
a1172 v3910 
=== Predecessor ===
v1597 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3706 #next: v3910  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?501 
object: a3635 
=== Succesors ===
next: a3636 
=== Usages ===
=== Predecessor ===
a3635 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?501 object: a3635 #next: a3636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3636 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$WaitQueue$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3707 
=== Succesors ===
next: a3637 
=== Usages ===
v3726 
=== Predecessor ===
v3910 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3707 #next: a3637  <|@  <|@
f <@~|@floating>@ <|@
tid v3726 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3636 
=== Succesors ===
=== Usages ===
a3637 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3637 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.Empty
nullCheck: true
stamp: n -
=== Inputs ===
stateBefore: ?501 
guard: - 
address: v3726 
=== Succesors ===
next: v1183 
=== Usages ===
?781 v2135 v3144 v3815 i1202 ?276 
=== Predecessor ===
a3636 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?501 guard: - address: v3726 #next: v1183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a3638 
=== Usages ===
=== Predecessor ===
a3637 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a3638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3638 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise.state
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3727 
=== Succesors ===
next: v1184 
=== Usages ===
?688 v2900 v3814 
=== Predecessor ===
v1183 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3727 #next: v1184  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a3639 
=== Usages ===
=== Predecessor ===
a3638 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a3639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3639 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3706 
=== Succesors ===
next: a3640 
=== Usages ===
v3729 v3728 
=== Predecessor ===
v1184 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3706 #next: a3640  <|@  <|@
f <@~|@floating>@ <|@
tid v3728 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3639 
=== Succesors ===
=== Usages ===
a3640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3640 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$unsafe
nullCheck: true
stamp: n# Lsun/misc/Unsafe;
=== Inputs ===
stateBefore: ?501 
guard: - 
address: v3728 
=== Succesors ===
next: v3911 
=== Usages ===
v3911 
=== Predecessor ===
a3639 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?501 guard: - address: v3728 #next: v3911  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3911 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?501 
object: a3640 
=== Succesors ===
next: v2073 
=== Usages ===
=== Predecessor ===
a3640 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?501 object: a3640 #next: v2073  <|@  <|@
f <@~|@floating>@ <|@
tid v3814 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3638 
=== Succesors ===
=== Usages ===
v3641 v3643 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3638  <|@  <|@
f <@~|@floating>@ <|@
tid v2900 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3638 
=== Succesors ===
=== Usages ===
v2092 v2073 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3638  <|@  <|@
tid ?781 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a780 
values: a3637 
=== Succesors ===
=== Usages ===
?688 ?276 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a780 values: a3637  <|@  <|@
f <@~|@floating>@ <|@
tid a1172 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# Lcom/twitter/util/Promise$;
=== Inputs ===
value: a3635 
=== Succesors ===
=== Usages ===
a960 ?119 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3635  <|@  <|@
tid ?119 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Promise$.interrupts(Future)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 329
stackSize: 1
=== Inputs ===
outerFrameState: ?118 
values: a1172 a751 a780 
=== Succesors ===
=== Usages ===
?299 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?118 values: a1172 a751 a780  <|@  <|@
tid ?299 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Promise$$anon$3.<init>(Future)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 330
stackSize: 0
=== Inputs ===
outerFrameState: ?119 
values: - - 
=== Succesors ===
=== Usages ===
?694 ?276 ?547 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?119 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v2073 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v2900 
=== Succesors ===
trueSuccessor: v2072 
falseSuccessor: v2071 
=== Usages ===
=== Predecessor ===
v3911 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2900 #trueSuccessor: v2072 #falseSuccessor: v2071  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 4590583437316280435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2072 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2083 
=== Usages ===
=== Predecessor ===
v2073 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2083  <|@  <|@
f <@*|@fixed>@ <|@
tid v2083 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2830 
=== Predecessor ===
v2072 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4604834113280031363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2071 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3641 
=== Usages ===
=== Predecessor ===
v2073 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3641  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3641 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3814 
=== Succesors ===
next: v3642 
=== Usages ===
v3775 
=== Predecessor ===
v2071 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3814 #next: v3642  <|@  <|@
f <@~|@floating>@ <|@
tid v3775 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3641 
=== Succesors ===
=== Usages ===
v3642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3641  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3642 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3775 
=== Succesors ===
next: v2835 
=== Usages ===
v2077 
=== Predecessor ===
v3641 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3775 #next: v2835  <|@  <|@
f <@~|@floating>@ <|@
tid v2077 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3642 
y: v1798 
=== Succesors ===
=== Usages ===
v2835 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3642 y: v1798  <|@  <|@
f <@*|@fixed>@ <|@
tid v2835 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v2077 
=== Succesors ===
trueSuccessor: v2833 
falseSuccessor: v2832 
=== Usages ===
=== Predecessor ===
v3642 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2077 #trueSuccessor: v2833 #falseSuccessor: v2832  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2833 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2672 
=== Usages ===
=== Predecessor ===
v2835 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2672  <|@  <|@
f <@~|@floating>@ <|@
tid i2673 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -303379
stableDimension: 0
stamp: i32 [-303379] ⇊00000000fffb5eed ⇈00000000fffb5eed
stampKind: i32
value: int[-303379|0xfffffffffffb5eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2674 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2671 
=== Predecessor ===
v2833 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604834113280031363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2832 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2836 
=== Usages ===
=== Predecessor ===
v2835 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2836  <|@  <|@
f <@*|@fixed>@ <|@
tid v2836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2830 
=== Predecessor ===
v2832 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" "B67" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2830 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2083 v2836 
=== Succesors ===
next: v2092 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2083 v2836 #next: v2092  <|@  <|@
f <@*|@fixed>@ <|@
tid v2092 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v2900 
=== Succesors ===
trueSuccessor: v2091 
falseSuccessor: v2090 
=== Usages ===
=== Predecessor ===
v2830 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2900 #trueSuccessor: v2091 #falseSuccessor: v2090  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B74" 
    xhandlers
    flags 
    probability 4590583437316280435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2091 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2102 
=== Usages ===
=== Predecessor ===
v2092 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2102  <|@  <|@
f <@*|@fixed>@ <|@
tid v2102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2840 
=== Predecessor ===
v2091 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4604834113280031363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2090 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3643 
=== Usages ===
=== Predecessor ===
v2092 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3643 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3814 
=== Succesors ===
next: v3644 
=== Usages ===
v3776 
=== Predecessor ===
v2090 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3814 #next: v3644  <|@  <|@
f <@~|@floating>@ <|@
tid v3776 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3643 
=== Succesors ===
=== Usages ===
v3644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3644 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3776 
=== Succesors ===
next: v2845 
=== Usages ===
v2096 
=== Predecessor ===
v3643 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3776 #next: v2845  <|@  <|@
f <@~|@floating>@ <|@
tid v2096 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3644 
y: v1819 
=== Succesors ===
=== Usages ===
v2845 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3644 y: v1819  <|@  <|@
f <@*|@fixed>@ <|@
tid v2845 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v2096 
=== Succesors ===
trueSuccessor: v2843 
falseSuccessor: v2842 
=== Usages ===
=== Predecessor ===
v3644 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2096 #trueSuccessor: v2843 #falseSuccessor: v2842  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2843 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2677 
=== Usages ===
=== Predecessor ===
v2845 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2677  <|@  <|@
f <@~|@floating>@ <|@
tid i2678 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -303635
stableDimension: 0
stamp: i32 [-303635] ⇊00000000fffb5ded ⇈00000000fffb5ded
stampKind: i32
value: int[-303635|0xfffffffffffb5ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2674 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2671 
=== Predecessor ===
v2843 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B71" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2674 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-303635 - -303379] ⇊00000000fffb5ced ⇈00000000fffb5fed
valueDescription: i32
=== Inputs ===
merge: v2671 
values: i2673 i2678 
=== Succesors ===
=== Usages ===
v2676 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2671 values: i2673 i2678  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2672 v2677 
=== Succesors ===
next: v2676 
=== Usages ===
i2674 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2672 v2677 #next: v2676  <|@  <|@
tid ?694 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Promise.forwardInterruptsTo(Future)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 503
stackSize: 0
=== Inputs ===
outerFrameState: ?299 
values: a780 a751 - - - - - - - - 
=== Succesors ===
=== Usages ===
?688 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?299 values: a780 a751 - - - - - - - -  <|@  <|@
tid ?688 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.isDefined()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 840
stackSize: 1
=== Inputs ===
outerFrameState: ?694 
values: a751 - - - a3638 
virtualObjectMappings: ?760 ?781 ?782 
=== Succesors ===
=== Usages ===
v2676 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?694 values: a751 - - - a3638 virtualObjectMappings: ?760 ?781 ?782  <|@  <|@
f <@*|@fixed>@ <|@
tid v2676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?688 
actionAndReason: i2674 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2671 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?688 actionAndReason: i2674 speculation: a2581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604834113280031363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2846 
=== Usages ===
=== Predecessor ===
v2845 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2846  <|@  <|@
f <@*|@fixed>@ <|@
tid v2846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2840 
=== Predecessor ===
v2842 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B69" "B73" 
    successors "B75" "B86" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2102 v2846 
=== Succesors ===
next: v3645 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2102 v2846 #next: v3645  <|@  <|@
tid ?276 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<Promise.forwardInterruptsTo(Future)>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 504
stackSize: 1
=== Inputs ===
outerFrameState: ?299 
values: a780 a751 - - - - - - - - a3637 
virtualObjectMappings: ?781 ?760 ?782 
=== Succesors ===
=== Usages ===
v2602 a3105 v3645 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?299 values: a780 a751 - - - - - - - - a3637 virtualObjectMappings: ?781 ?760 ?782  <|@  <|@
f <@~|@floating>@ <|@
tid v3815 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3637 
=== Succesors ===
=== Usages ===
v3645 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3637  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3645 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?276 
guard: - 
address: v3815 
=== Succesors ===
next: v1632 
=== Usages ===
v3504 
=== Predecessor ===
v2840 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?276 guard: - address: v3815 #next: v1632  <|@  <|@
f <@~|@floating>@ <|@
tid v3504 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3645 
y: v3467 
=== Succesors ===
=== Usages ===
v1632 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3645 y: v3467  <|@  <|@
f <@*|@fixed>@ <|@
tid v1632 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3504 
=== Succesors ===
trueSuccessor: v1629 
falseSuccessor: v1631 
=== Usages ===
=== Predecessor ===
v3645 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3504 #trueSuccessor: v1629 #falseSuccessor: v1631  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j3094 
=== Usages ===
=== Predecessor ===
v1632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3094  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3094 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3109 
=== Usages ===
v3816 v3817 
=== Predecessor ===
v1629 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3109  <|@  <|@
f <@~|@floating>@ <|@
tid v3816 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3094 
index: - 
=== Succesors ===
=== Usages ===
j3109 v3111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3094 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3109 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3816 
=== Succesors ===
next: j3110 
=== Usages ===
j3505 j3115 v3869 
=== Predecessor ===
j3094 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3816 #next: j3110  <|@  <|@
f <@~|@floating>@ <|@
tid v3817 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3094 
index: - 
=== Succesors ===
=== Usages ===
j3110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3094 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3110 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3817 
=== Succesors ===
next: v3102 
=== Usages ===
v3099 
=== Predecessor ===
j3109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3817 #next: v3102  <|@  <|@
f <@~|@floating>@ <|@
tid j3505 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3109 
y: j1866 
=== Succesors ===
=== Usages ===
v3099 v3111 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3109 y: j1866  <|@  <|@
f <@~|@floating>@ <|@
tid v3099 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@782e90
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3110 
y: j3505 
=== Succesors ===
=== Usages ===
v3102 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3110 y: j3505  <|@  <|@
f <@*|@fixed>@ <|@
tid v3102 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3099 
=== Succesors ===
trueSuccessor: v3100 
falseSuccessor: v3101 
=== Usages ===
=== Predecessor ===
j3110 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3099 #trueSuccessor: v3100 #falseSuccessor: v3101  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4575888835103545851
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3105 
=== Usages ===
=== Predecessor ===
v3102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3105 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@39bb4106
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?276 
arguments: v2920 i3492 i1797 
=== Succesors ===
next: j3106 
=== Usages ===
j3106 
=== Predecessor ===
v3100 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?276 arguments: v2920 i3492 i1797 #next: j3106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3106 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3105 
=== Succesors ===
next: v3116 
=== Usages ===
j3115 
=== Predecessor ===
a3105 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3105 #next: v3116  <|@  <|@
f <@*|@fixed>@ <|@
tid v3116 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3113 
=== Predecessor ===
j3106 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4605500002653506857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3111 
=== Usages ===
=== Predecessor ===
v3102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3111 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3816 
value: j3505 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3108 
=== Usages ===
=== Predecessor ===
v3101 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3816 value: j3505 stateAfter: - lastLocationAccess: - #next: v3108  <|@  <|@
f <@~|@floating>@ <|@
tid v3869 <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j3109 
index: - 
=== Succesors ===
=== Usages ===
v3108 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3109 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3869 
=== Succesors ===
next: v3114 
=== Usages ===
=== Predecessor ===
v3111 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3869 #next: v3114  <|@  <|@
f <@*|@fixed>@ <|@
tid v3114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3113 
=== Predecessor ===
v3108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3115 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3113 
values: j3109 j3106 
=== Succesors ===
=== Usages ===
v3873 v3777 j2129 a2127 v3819 v3818 v3870 v3871 v3872 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3113 values: j3109 j3106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3114 v3116 
=== Succesors ===
next: a2127 
=== Usages ===
j3115 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3114 v3116 #next: a2127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2127 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3115 
=== Succesors ===
next: a2130 
=== Usages ===
a2139 
=== Predecessor ===
v3113 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3115 #next: a2130  <|@  <|@
f <@~|@floating>@ <|@
tid j2129 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3115 
y: j1072 
=== Succesors ===
=== Usages ===
a2130 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3115 y: j1072  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2130 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2129 
=== Succesors ===
next: j3125 
=== Usages ===
a2140 
=== Predecessor ===
a2127 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2129 #next: j3125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3125 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3832 
=== Succesors ===
next: v3126 
=== Usages ===
v3126 
=== Predecessor ===
a2130 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3832 #next: v3126  <|@  <|@
f <@~|@floating>@ <|@
tid v3818 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3115 
index: - 
=== Succesors ===
=== Usages ===
v3126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3115 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3126 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3818 
value: j3125 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3129 
=== Usages ===
=== Predecessor ===
j3125 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3818 value: j3125 stateAfter: - lastLocationAccess: - #next: v3129  <|@  <|@
f <@~|@floating>@ <|@
tid v3819 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3115 
index: - 
=== Succesors ===
=== Usages ===
v3129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3115 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3819 
value: v3473 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2135 
=== Usages ===
=== Predecessor ===
v3126 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3819 value: v3473 stateAfter: - lastLocationAccess: - #next: v2135  <|@  <|@
f <@~|@floating>@ <|@
tid v3777 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3115 
index: - 
=== Succesors ===
=== Usages ===
v2135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3115 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2135 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3777 
value: a3637 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j3136 
=== Usages ===
=== Predecessor ===
v3129 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3777 value: a3637 stateAfter: - lastLocationAccess: - #next: j3136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3136 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3850 
=== Succesors ===
next: v3137 
=== Usages ===
v3137 
=== Predecessor ===
v2135 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3850 #next: v3137  <|@  <|@
f <@~|@floating>@ <|@
tid v3870 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j3115 
index: - 
=== Succesors ===
=== Usages ===
v3137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3115 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3870 
value: j3136 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3140 
=== Usages ===
=== Predecessor ===
j3136 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3870 value: j3136 stateAfter: - lastLocationAccess: - #next: v3140  <|@  <|@
f <@~|@floating>@ <|@
tid v3871 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3115 
index: - 
=== Succesors ===
=== Usages ===
v3140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3115 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3140 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3871 
value: v3476 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3144 
=== Usages ===
=== Predecessor ===
v3137 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3871 value: v3476 stateAfter: - lastLocationAccess: - #next: v3144  <|@  <|@
f <@~|@floating>@ <|@
tid v3872 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3115 
index: - 
=== Succesors ===
=== Usages ===
v3144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3115 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3144 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3872 
value: a3637 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3146 
=== Usages ===
=== Predecessor ===
v3140 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3872 value: a3637 stateAfter: - lastLocationAccess: - #next: v3146  <|@  <|@
f <@~|@floating>@ <|@
tid v3873 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j3115 
index: - 
=== Succesors ===
=== Usages ===
v3146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3115 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3146 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3873 
value: a2059 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2139 
=== Usages ===
=== Predecessor ===
v3144 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3873 value: a2059 stateAfter: - lastLocationAccess: - #next: a2139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2139 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2127 
=== Succesors ===
next: a2140 
=== Usages ===
v3730 ?787 a919 a917 j3147 
=== Predecessor ===
v3146 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2127 #next: a2140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2140 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2130 
=== Succesors ===
next: v2141 
=== Usages ===
a1200 
=== Predecessor ===
a2139 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2130 #next: v2141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2141 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j3646 
=== Usages ===
=== Predecessor ===
a2140 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j3646  <|@  <|@
f <@~|@floating>@ <|@
tid v3729 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3639 
=== Succesors ===
=== Usages ===
j3646 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3646 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$stateOff
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3729 
=== Succesors ===
next: i1202 
=== Usages ===
v3730 
=== Predecessor ===
v2141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3729 #next: i1202  <|@  <|@
f <@~|@floating>@ <|@
tid v3730 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2139 
index: j3646 
=== Succesors ===
=== Usages ===
i1202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2139 index: j3646  <|@  <|@
f <@~|@floating>@ <|@
tid a1200 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2140 
=== Succesors ===
=== Usages ===
i1202 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1202 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ANY_LOCATION
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3730 
expectedValue: a3637 
newValue: a1200 
stateAfter: - 
=== Succesors ===
next: j3147 
=== Usages ===
?543 i544 i908 
=== Predecessor ===
j3646 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v3730 expectedValue: a3637 newValue: a1200 stateAfter: - #next: j3147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3147 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2139 
=== Succesors ===
next: v3151 
=== Usages ===
j3148 
=== Predecessor ===
i1202 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2139 #next: v3151  <|@  <|@
f <@~|@floating>@ <|@
tid j3148 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$146/1524633570@1cec0275
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3147 
y: i2993 
=== Succesors ===
=== Usages ===
v3820 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3147 y: i2993  <|@  <|@
f <@~|@floating>@ <|@
tid v3820 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3148 
index: j2997 
=== Succesors ===
=== Usages ===
v3151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3148 index: j2997  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3151 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3820 
value: i2999 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1636 
=== Usages ===
=== Predecessor ===
j3147 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3820 value: i2999 stateAfter: - lastLocationAccess: - #next: v1636  <|@  <|@
tid ?547 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<Promise.forwardInterruptsTo(Future)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 506
stackSize: 0
=== Inputs ===
outerFrameState: ?299 
values: a780 a751 - - - - - - - - 
=== Succesors ===
=== Usages ===
?543 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?299 values: a780 a751 - - - - - - - -  <|@  <|@
tid ?787 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a780 
materializedValue: a2139 
=== Succesors ===
=== Usages ===
?543 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a780 materializedValue: a2139  <|@  <|@
tid ?543 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Promise.cas(Object, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 453
stackSize: 1
=== Inputs ===
outerFrameState: ?547 
values: - - - i1202 
virtualObjectMappings: ?787 ?760 ?782 
=== Succesors ===
=== Usages ===
v2664 a3648 v3649 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?547 values: - - - i1202 virtualObjectMappings: ?787 ?760 ?782  <|@  <|@
f <@~|@floating>@ <|@
tid i544 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$115/1567088237@42498438
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$116/1100921398@1fb26baa
inputBits: 32
resultBits: 1
stamp: i1
=== Inputs ===
value: i1202 
=== Succesors ===
=== Usages ===
i545 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1202  <|@  <|@
f <@~|@floating>@ <|@
tid i545 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1701538656@15c1f08d
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/999668238@1b27ce49
inputAlwaysPositive: false
inputBits: 1
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i544 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i544  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i545 
y: i153 
=== Succesors ===
=== Usages ===
v1636 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i545 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v296 
=== Succesors ===
trueSuccessor: v1635 
falseSuccessor: v1633 
=== Usages ===
=== Predecessor ===
v3151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v296 #trueSuccessor: v1635 #falseSuccessor: v1633  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1635 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2660 
=== Usages ===
=== Predecessor ===
v1636 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2660  <|@  <|@
f <@~|@floating>@ <|@
tid i2661 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -307987
stableDimension: 0
stamp: i32 [-307987] ⇊00000000fffb4ced ⇈00000000fffb4ced
stampKind: i32
value: int[-307987|0xfffffffffffb4ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2662 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2659 
=== Predecessor ===
v1635 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B84" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3647 
=== Usages ===
=== Predecessor ===
v1636 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3647 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Local$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Local$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3712 
=== Succesors ===
next: a3648 
=== Usages ===
v3731 
=== Predecessor ===
v1633 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3712 #next: a3648  <|@  <|@
f <@~|@floating>@ <|@
tid v3731 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3647 
=== Succesors ===
=== Usages ===
a3648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3648 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Local$.localCtx
nullCheck: true
stamp: n Ljava/lang/ThreadLocal;
=== Inputs ===
stateBefore: ?543 
guard: - 
address: v3731 
=== Succesors ===
next: v3649 
=== Usages ===
a1209 v3821 
=== Predecessor ===
a3647 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?543 guard: - address: v3731 #next: v3649  <|@  <|@
f <@~|@floating>@ <|@
tid v3821 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3648 
=== Succesors ===
=== Usages ===
v3649 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3649 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?543 
guard: - 
address: v3821 
=== Succesors ===
next: v1212 
=== Usages ===
v3732 
=== Predecessor ===
a3648 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?543 guard: - address: v3821 #next: v1212  <|@  <|@
f <@~|@floating>@ <|@
tid v3732 <|@
d <@d|@=== Debug Properties ===
displacement: 520
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3649 
=== Succesors ===
=== Usages ===
v1212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3649  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v3732 
=== Succesors ===
next: v1648 
=== Usages ===
v706 
=== Predecessor ===
v3649 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3732 #next: v1648  <|@  <|@
f <@~|@floating>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1212 
y: v650 
=== Succesors ===
=== Usages ===
v1648 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1212 y: v650  <|@  <|@
f <@*|@fixed>@ <|@
tid v1648 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v706 
=== Succesors ===
trueSuccessor: v1645 
falseSuccessor: v1647 
=== Usages ===
=== Predecessor ===
v1212 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v706 #trueSuccessor: v1645 #falseSuccessor: v1647  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3650 
=== Usages ===
=== Predecessor ===
v1648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3650 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Thread.threadLocals
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3745 
=== Succesors ===
next: v559 
=== Usages ===
a2576 v1404 
=== Predecessor ===
v1645 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3745 #next: v559  <|@  <|@
f <@~|@floating>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3650 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3650  <|@  <|@
f <@~|@floating>@ <|@
tid a1209 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a Ljava/lang/ThreadLocal;
=== Inputs ===
value: a3648 
=== Succesors ===
=== Usages ===
a911 a913 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3648  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 7.839287703504969E-8
=== Inputs ===
condition: v1404 
=== Succesors ===
trueSuccessor: v557 
falseSuccessor: v558 
=== Usages ===
=== Predecessor ===
a3650 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1404 #trueSuccessor: v557 #falseSuccessor: v558  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B124" 
    xhandlers
    flags 
    probability 4499457912450120107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v559 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v565  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
v557 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B120" 
    xhandlers
    flags 
    probability 4605573989781659870
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v904 
=== Usages ===
=== Predecessor ===
v559 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v904  <|@  <|@
f <@*|@fixed>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
v558 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2669 
=== Usages ===
=== Predecessor ===
v1648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2669  <|@  <|@
f <@~|@floating>@ <|@
tid i2670 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -310579
stableDimension: 0
stamp: i32 [-310579] ⇊00000000fffb42cd ⇈00000000fffb42cd
stampKind: i32
value: int[-310579|0xfffffffffffb42cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2662 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2659 
=== Predecessor ===
v1647 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B79" "B84" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2662 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-310579 - -307987] ⇊00000000fffb40c5 ⇈00000000fffb4ffd
valueDescription: i32
=== Inputs ===
merge: v2659 
values: i2661 i2670 
=== Succesors ===
=== Usages ===
v2664 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2659 values: i2661 i2670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2660 v2669 
=== Succesors ===
next: v2664 
=== Usages ===
i2662 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2660 v2669 #next: v2664  <|@  <|@
f <@*|@fixed>@ <|@
tid v2664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?543 
actionAndReason: i2662 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2659 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?543 actionAndReason: i2662 speculation: a2581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2602 
=== Usages ===
=== Predecessor ===
v1632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2602  <|@  <|@
f <@~|@floating>@ <|@
tid i2604 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -304435
stableDimension: 0
stamp: i32 [-304435] ⇊00000000fffb5acd ⇈00000000fffb5acd
stampKind: i32
value: int[-304435|0xfffffffffffb5acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2602 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?276 
actionAndReason: i2604 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1631 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?276 actionAndReason: i2604 speculation: a2581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2691 
=== Usages ===
=== Predecessor ===
v1596 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2691  <|@  <|@
f <@~|@floating>@ <|@
tid i2692 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -295955
stableDimension: 0
stamp: i32 [-295955] ⇊00000000fffb7bed ⇈00000000fffb7bed
stampKind: i32
value: int[-295955|0xfffffffffffb7bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2691 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2679 
=== Predecessor ===
v1595 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2689 
=== Usages ===
=== Predecessor ===
v1592 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2689  <|@  <|@
f <@~|@floating>@ <|@
tid i2690 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -294195
stableDimension: 0
stamp: i32 [-294195] ⇊00000000fffb82cd ⇈00000000fffb82cd
stampKind: i32
value: int[-294195|0xfffffffffffb82cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2689 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2679 
=== Predecessor ===
v1591 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B87" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2682 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-298251 - -294195] ⇊00000000fffb00c5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v2679 
values: i2690 i2692 
=== Succesors ===
=== Usages ===
v2684 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2679 values: i2690 i2692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2689 v2691 
=== Succesors ===
next: v2684 
=== Usages ===
i2682 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2689 v2691 #next: v2684  <|@  <|@
f <@*|@fixed>@ <|@
tid v2684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?839 
actionAndReason: i2682 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2679 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?839 actionAndReason: i2682 speculation: a2581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4592384876561998876
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1938 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1942 
=== Usages ===
=== Predecessor ===
v1940 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1942  <|@  <|@
f <@~|@floating>@ <|@
tid i1941 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i32
=== Inputs ===
x: i1925 
y: i1797 
=== Succesors ===
=== Usages ===
i1925 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1925 y: i1797  <|@  <|@
f <@*|@fixed>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1924 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1938 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1924  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B92" 
    xhandlers
    flags 
    probability 4595601733539563714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1924 
=== Succesors ===
next: v844 
=== Usages ===
=== Predecessor ===
v1929 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1924 #next: v844  <|@  <|@
f <@*|@fixed>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
v1928 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" "B91" 
    successors "B93" "B186" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a845 <|@
d <@d|@=== Debug Properties ===
stamp: a [Lscala/Option;
valueDescription: a -
=== Inputs ===
merge: v841 
values: a441 a1128 
=== Succesors ===
=== Usages ===
a2176 ?852 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v841 values: a441 a1128  <|@  <|@
f <@~|@floating>@ <|@
tid a1039 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v841 
values: a1145 a1135 
=== Succesors ===
=== Usages ===
v3735 v3822 ?843 v3733 a1240 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v841 values: a1145 a1135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v842 v844 
=== Succesors ===
next: v3651 
=== Usages ===
a845 a1039 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v842 v844 #next: v3651  <|@  <|@
f <@~|@floating>@ <|@
tid v3822 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1039 
index: - 
=== Succesors ===
=== Usages ===
v3651 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1039 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3651 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3822 
=== Succesors ===
next: v1652 
=== Usages ===
v3512 
=== Predecessor ===
v841 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3822 #next: v1652  <|@  <|@
f <@~|@floating>@ <|@
tid v3512 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3651 
y: v3476 
=== Succesors ===
=== Usages ===
v1652 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3651 y: v3476  <|@  <|@
tid ?852 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a762 
values: a845 a1881 a72 
=== Succesors ===
=== Usages ===
?843 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a762 values: a845 a1881 a72  <|@  <|@
tid ?843 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 761
stackSize: 1
=== Inputs ===
outerFrameState: ?256 
values: a71 a762 - - - - - - - - - a1039 
virtualObjectMappings: ?761 ?852 ?760 ?754 
=== Succesors ===
=== Usages ===
v2698 a3172 a3653 a3656 v3914 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?256 values: a71 a762 - - - - - - - - - a1039 virtualObjectMappings: ?761 ?852 ?760 ?754  <|@  <|@
f <@*|@fixed>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3512 
=== Succesors ===
trueSuccessor: v1649 
falseSuccessor: v1651 
=== Usages ===
=== Predecessor ===
v3651 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3512 #trueSuccessor: v1649 #falseSuccessor: v1651  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B185" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3652 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3652  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3652 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$WaitQueue$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3707 
=== Succesors ===
next: a3653 
=== Usages ===
v3734 
=== Predecessor ===
v1649 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3707 #next: a3653  <|@  <|@
f <@~|@floating>@ <|@
tid v3734 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3652 
=== Succesors ===
=== Usages ===
a3653 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3652  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3653 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.Empty
nullCheck: true
stamp: n -
=== Inputs ===
stateBefore: ?843 
guard: - 
address: v3734 
=== Succesors ===
next: a3654 
=== Usages ===
v1406 
=== Predecessor ===
a3652 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?843 guard: - address: v3734 #next: a3654  <|@  <|@
f <@~|@floating>@ <|@
tid v3733 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1039 
index: - 
=== Succesors ===
=== Usages ===
a3654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1039 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3654 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$Transforming.waitq
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v3733 
=== Succesors ===
next: v1660 
=== Usages ===
v1406 
=== Predecessor ===
a3653 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3733 #next: v1660  <|@  <|@
f <@~|@floating>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3653 
y: a3654 
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a3653 y: a3654  <|@  <|@
f <@*|@fixed>@ <|@
tid v1660 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1406 
=== Succesors ===
trueSuccessor: v1657 
falseSuccessor: v1659 
=== Usages ===
=== Predecessor ===
a3654 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1406 #trueSuccessor: v1657 #falseSuccessor: v1659  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3655 
=== Usages ===
=== Predecessor ===
v1660 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3655 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3706 
=== Succesors ===
next: a3656 
=== Usages ===
v3737 v3736 
=== Predecessor ===
v1657 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3706 #next: a3656  <|@  <|@
f <@~|@floating>@ <|@
tid v3736 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3655 
=== Succesors ===
=== Usages ===
a3656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3656 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$unsafe
nullCheck: true
stamp: n# Lsun/misc/Unsafe;
=== Inputs ===
stateBefore: ?843 
guard: - 
address: v3736 
=== Succesors ===
next: v3914 
=== Usages ===
v3914 
=== Predecessor ===
a3655 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?843 guard: - address: v3736 #next: v3914  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?843 
object: a3656 
=== Succesors ===
next: j3161 
=== Usages ===
=== Predecessor ===
a3656 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?843 object: a3656 #next: j3161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3161 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3176 
=== Usages ===
v3823 v3824 
=== Predecessor ===
v3914 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3176  <|@  <|@
f <@~|@floating>@ <|@
tid v3823 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3161 
index: - 
=== Succesors ===
=== Usages ===
j3176 v3178 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3161 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3176 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3823 
=== Succesors ===
next: j3177 
=== Usages ===
j3514 j3182 v3874 
=== Predecessor ===
j3161 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3823 #next: j3177  <|@  <|@
f <@~|@floating>@ <|@
tid v3824 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3161 
index: - 
=== Succesors ===
=== Usages ===
j3177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3161 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3177 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3824 
=== Succesors ===
next: v3169 
=== Usages ===
v3166 
=== Predecessor ===
j3176 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3824 #next: v3169  <|@  <|@
f <@~|@floating>@ <|@
tid j3514 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3176 
y: j3513 
=== Succesors ===
=== Usages ===
v3166 v3178 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3176 y: j3513  <|@  <|@
f <@~|@floating>@ <|@
tid v3166 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@782e90
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3177 
y: j3514 
=== Succesors ===
=== Usages ===
v3169 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3177 y: j3514  <|@  <|@
f <@*|@fixed>@ <|@
tid v3169 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3166 
=== Succesors ===
trueSuccessor: v3167 
falseSuccessor: v3168 
=== Usages ===
=== Predecessor ===
j3177 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3166 #trueSuccessor: v3167 #falseSuccessor: v3168  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4565877976503276579
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3172 
=== Usages ===
=== Predecessor ===
v3169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3172 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@39bb4106
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?843 
arguments: v2920 i3516 i1797 
=== Succesors ===
next: j3173 
=== Usages ===
j3173 
=== Predecessor ===
v3167 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?843 arguments: v2920 i3516 i1797 #next: j3173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3173 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3172 
=== Succesors ===
next: v3183 
=== Usages ===
j3182 
=== Predecessor ===
a3172 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3172 #next: v3183  <|@  <|@
f <@*|@fixed>@ <|@
tid v3183 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3180 
=== Predecessor ===
j3173 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4595537396906387982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3178 
=== Usages ===
=== Predecessor ===
v3169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3178 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3823 
value: j3514 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3175 
=== Usages ===
=== Predecessor ===
v3168 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3823 value: j3514 stateAfter: - lastLocationAccess: - #next: v3175  <|@  <|@
f <@~|@floating>@ <|@
tid v3874 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j3176 
index: - 
=== Succesors ===
=== Usages ===
v3175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3176 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3874 
=== Succesors ===
next: v3181 
=== Usages ===
=== Predecessor ===
v3178 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3874 #next: v3181  <|@  <|@
f <@*|@fixed>@ <|@
tid v3181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3180 
=== Predecessor ===
v3175 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3182 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3180 
values: j3176 j3173 
=== Succesors ===
=== Usages ===
v3793 v3825 j2164 j2167 a2162 v3826 v3881 v3875 v3876 v3877 v3878 v3879 v3880 v3882 v3883 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3180 values: j3176 j3173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3180 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3181 v3183 
=== Succesors ===
next: a2162 
=== Usages ===
j3182 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3181 v3183 #next: a2162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2162 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3182 
=== Succesors ===
next: a2165 
=== Usages ===
a2183 
=== Predecessor ===
v3180 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3182 #next: a2165  <|@  <|@
f <@~|@floating>@ <|@
tid j2164 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3182 
y: j1943 
=== Succesors ===
=== Usages ===
a2165 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3182 y: j1943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2165 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2164 
=== Succesors ===
next: a2168 
=== Usages ===
a2184 a2171 
=== Predecessor ===
a2162 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2164 #next: a2168  <|@  <|@
f <@~|@floating>@ <|@
tid j2167 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3182 
y: j1810 
=== Succesors ===
=== Usages ===
a2168 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3182 y: j1810  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2168 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2167 
=== Succesors ===
next: j3192 
=== Usages ===
a2185 a2177 
=== Predecessor ===
a2165 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2167 #next: j3192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3192 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3850 
=== Succesors ===
next: v3193 
=== Usages ===
v3193 
=== Predecessor ===
a2168 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3850 #next: v3193  <|@  <|@
f <@~|@floating>@ <|@
tid v3825 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3193 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3825 
value: j3192 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3196 
=== Usages ===
=== Predecessor ===
j3192 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3825 value: j3192 stateAfter: - lastLocationAccess: - #next: v3196  <|@  <|@
f <@~|@floating>@ <|@
tid v3826 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3196 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3826 
value: v3476 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3200 
=== Usages ===
=== Predecessor ===
v3193 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3826 value: v3476 stateAfter: - lastLocationAccess: - #next: v3200  <|@  <|@
f <@~|@floating>@ <|@
tid v3875 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2171 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2165 
=== Succesors ===
=== Usages ===
v3200 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3875 
value: a2171 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a3657 
=== Usages ===
=== Predecessor ===
v3196 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3875 value: a2171 stateAfter: - lastLocationAccess: - #next: a3657  <|@  <|@
f <@~|@floating>@ <|@
tid v3735 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1039 
index: - 
=== Succesors ===
=== Usages ===
a3657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1039 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3657 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$Transforming.other
nullCheck: false
stamp: n Lcom/twitter/util/Future;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3735 
=== Succesors ===
next: v3202 
=== Usages ===
v3202 
=== Predecessor ===
v3200 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3735 #next: v3202  <|@  <|@
f <@~|@floating>@ <|@
tid v3876 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3876 
value: a3657 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j3207 
=== Usages ===
=== Predecessor ===
a3657 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3876 value: a3657 stateAfter: - lastLocationAccess: - #next: j3207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3853 
=== Succesors ===
next: v3208 
=== Usages ===
v3208 
=== Predecessor ===
v3202 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3853 #next: v3208  <|@  <|@
f <@~|@floating>@ <|@
tid v3877 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3208 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3877 
value: j3207 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3211 
=== Usages ===
=== Predecessor ===
j3207 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3877 value: j3207 stateAfter: - lastLocationAccess: - #next: v3211  <|@  <|@
f <@~|@floating>@ <|@
tid v3878 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3211 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3878 
value: v3495 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3215 
=== Usages ===
=== Predecessor ===
v3208 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3878 value: v3495 stateAfter: - lastLocationAccess: - #next: v3215  <|@  <|@
f <@~|@floating>@ <|@
tid v3879 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2176 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n [Lscala/Option;
=== Inputs ===
value: a845 
=== Succesors ===
=== Usages ===
v3215 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3215 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3879 
value: a2176 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3217 
=== Usages ===
=== Predecessor ===
v3211 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3879 value: a2176 stateAfter: - lastLocationAccess: - #next: v3217  <|@  <|@
f <@~|@floating>@ <|@
tid v3880 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3217 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3880 
value: a2059 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3219 
=== Usages ===
=== Predecessor ===
v3215 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3880 value: a2059 stateAfter: - lastLocationAccess: - #next: v3219  <|@  <|@
f <@~|@floating>@ <|@
tid v3881 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2177 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2168 
=== Succesors ===
=== Usages ===
v3219 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3219 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3881 
value: a2177 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j3224 
=== Usages ===
=== Predecessor ===
v3217 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3881 value: a2177 stateAfter: - lastLocationAccess: - #next: j3224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3854 
=== Succesors ===
next: v3225 
=== Usages ===
v3225 
=== Predecessor ===
v3219 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3854 #next: v3225  <|@  <|@
f <@~|@floating>@ <|@
tid v3882 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3225 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3882 
value: j3224 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3228 
=== Usages ===
=== Predecessor ===
j3224 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3882 value: j3224 stateAfter: - lastLocationAccess: - #next: v3228  <|@  <|@
f <@~|@floating>@ <|@
tid v3883 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3883 
value: v3501 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2182 
=== Usages ===
=== Predecessor ===
v3225 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3883 value: v3501 stateAfter: - lastLocationAccess: - #next: v2182  <|@  <|@
f <@~|@floating>@ <|@
tid v3793 <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v2182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3793 
value: a2508 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2183 
=== Usages ===
=== Predecessor ===
v3228 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3793 value: a2508 stateAfter: - lastLocationAccess: - #next: a2183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2183 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2162 
=== Succesors ===
next: a2184 
=== Usages ===
a1241 
=== Predecessor ===
v2182 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2162 #next: a2184  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2184 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2165 
=== Succesors ===
next: a2185 
=== Usages ===
?775 
=== Predecessor ===
a2183 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2165 #next: a2185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2185 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2168 
=== Succesors ===
next: v2186 
=== Usages ===
?776 
=== Predecessor ===
a2184 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2168 #next: v2186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2186 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j3658 
=== Usages ===
=== Predecessor ===
a2185 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j3658  <|@  <|@
f <@~|@floating>@ <|@
tid v3737 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3655 
=== Succesors ===
=== Usages ===
j3658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3658 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$stateOff
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3737 
=== Succesors ===
next: i1243 
=== Usages ===
v3738 
=== Predecessor ===
v2186 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3737 #next: i1243  <|@  <|@
f <@~|@floating>@ <|@
tid v3738 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1883 
index: j3658 
=== Succesors ===
=== Usages ===
i1243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1883 index: j3658  <|@  <|@
f <@~|@floating>@ <|@
tid a1240 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/lang/Object;
=== Inputs ===
value: a1039 
=== Succesors ===
=== Usages ===
i1243 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1039  <|@  <|@
f <@~|@floating>@ <|@
tid a1241 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2183 
=== Succesors ===
=== Usages ===
i1243 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1243 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ANY_LOCATION
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3738 
expectedValue: a1240 
newValue: a1241 
stateAfter: - 
=== Succesors ===
next: j3231 
=== Usages ===
?476 i477 
=== Predecessor ===
j3658 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v3738 expectedValue: a1240 newValue: a1241 stateAfter: - #next: j3231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3231 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1883 
=== Succesors ===
next: v3235 
=== Usages ===
j3232 
=== Predecessor ===
i1243 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1883 #next: v3235  <|@  <|@
f <@~|@floating>@ <|@
tid j3232 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$146/1524633570@1cec0275
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3231 
y: i2993 
=== Succesors ===
=== Usages ===
v3827 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3231 y: i2993  <|@  <|@
f <@~|@floating>@ <|@
tid v3827 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3232 
index: j2997 
=== Succesors ===
=== Usages ===
v3235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3232 index: j2997  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3235 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3827 
value: i2999 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1672 
=== Usages ===
=== Predecessor ===
j3231 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3827 value: i2999 stateAfter: - lastLocationAccess: - #next: v1672  <|@  <|@
tid ?480 <|@
d <@d|@=== Debug Properties ===
bci: 159
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 769
stackSize: 0
=== Inputs ===
outerFrameState: ?256 
values: a71 a762 - - - - - - - - - 
=== Succesors ===
=== Usages ===
?476 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?256 values: a71 a762 - - - - - - - - -  <|@  <|@
tid ?775 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a762 
materializedValue: a2184 
=== Succesors ===
=== Usages ===
?476 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a762 materializedValue: a2184  <|@  <|@
tid ?776 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a72 
materializedValue: a2185 
=== Succesors ===
=== Usages ===
?476 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a72 materializedValue: a2185  <|@  <|@
tid ?476 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Promise.cas(Object, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 453
stackSize: 1
=== Inputs ===
outerFrameState: ?480 
values: - - - i1243 
virtualObjectMappings: ?761 ?775 ?760 ?776 
=== Succesors ===
=== Usages ===
v2636 v3908 a3661 a3664 v3909 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?480 values: - - - i1243 virtualObjectMappings: ?761 ?775 ?760 ?776  <|@  <|@
f <@~|@floating>@ <|@
tid i477 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$115/1567088237@42498438
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$116/1100921398@1fb26baa
inputBits: 32
resultBits: 1
stamp: i1
=== Inputs ===
value: i1243 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1243  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1701538656@15c1f08d
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/999668238@1b27ce49
inputAlwaysPositive: false
inputBits: 1
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i477 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i477  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i478 
y: i153 
=== Succesors ===
=== Usages ===
v1672 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i478 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1672 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v252 
=== Succesors ===
trueSuccessor: v1671 
falseSuccessor: v1669 
=== Usages ===
=== Predecessor ===
v3235 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v252 #trueSuccessor: v1671 #falseSuccessor: v1669  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2636 
=== Usages ===
=== Predecessor ===
v1672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2636  <|@  <|@
f <@~|@floating>@ <|@
tid i2633 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -318483
stableDimension: 0
stamp: i32 [-318483] ⇊00000000fffb23ed ⇈00000000fffb23ed
stampKind: i32
value: int[-318483|0xfffffffffffb23ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?476 
actionAndReason: i2633 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1671 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?476 actionAndReason: i2633 speculation: a2581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3659 
=== Usages ===
=== Predecessor ===
v1672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3659 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3706 
=== Succesors ===
next: v3908 
=== Usages ===
a1246 v3908 
=== Predecessor ===
v1669 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3706 #next: v3908  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3908 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?476 
object: a3659 
=== Succesors ===
next: a3660 
=== Usages ===
=== Predecessor ===
a3659 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?476 object: a3659 #next: a3660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3660 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$WaitQueue$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3707 
=== Succesors ===
next: a3661 
=== Usages ===
v3739 
=== Predecessor ===
v3908 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3707 #next: a3661  <|@  <|@
f <@~|@floating>@ <|@
tid v3739 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3660 
=== Succesors ===
=== Usages ===
a3661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3661 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.Empty
nullCheck: true
stamp: n -
=== Inputs ===
stateBefore: ?476 
guard: - 
address: v3739 
=== Succesors ===
next: v1256 
=== Usages ===
?1027 v2252 v3297 v3829 i1275 ?974 
=== Predecessor ===
a3660 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?476 guard: - address: v3739 #next: v1256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a3662 
=== Usages ===
=== Predecessor ===
a3661 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a3662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3662 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise.state
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3727 
=== Succesors ===
next: v1257 
=== Usages ===
?1017 v2901 v3828 
=== Predecessor ===
v1256 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3727 #next: v1257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a3663 
=== Usages ===
=== Predecessor ===
a3662 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a3663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3706 
=== Succesors ===
next: a3664 
=== Usages ===
v3741 v3740 
=== Predecessor ===
v1257 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3706 #next: a3664  <|@  <|@
f <@~|@floating>@ <|@
tid v3740 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3663 
=== Succesors ===
=== Usages ===
a3664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3664 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$unsafe
nullCheck: true
stamp: n# Lsun/misc/Unsafe;
=== Inputs ===
stateBefore: ?476 
guard: - 
address: v3740 
=== Succesors ===
next: v3909 
=== Usages ===
v3909 
=== Predecessor ===
a3663 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?476 guard: - address: v3740 #next: v3909  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3909 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?476 
object: a3664 
=== Succesors ===
next: v2190 
=== Usages ===
=== Predecessor ===
a3664 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?476 object: a3664 #next: v2190  <|@  <|@
f <@~|@floating>@ <|@
tid v3828 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3662 
=== Succesors ===
=== Usages ===
v3665 v3667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3662  <|@  <|@
f <@~|@floating>@ <|@
tid v2901 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3662 
=== Succesors ===
=== Usages ===
v2209 v2190 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3662  <|@  <|@
tid ?1027 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a780 
values: a3661 
=== Succesors ===
=== Usages ===
?974 ?1017 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a780 values: a3661  <|@  <|@
f <@~|@floating>@ <|@
tid a1246 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# Lcom/twitter/util/Promise$;
=== Inputs ===
value: a3659 
=== Succesors ===
=== Usages ===
a960 ?966 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3659  <|@  <|@
tid ?966 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Promise$.interrupts(Future)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 329
stackSize: 1
=== Inputs ===
outerFrameState: ?118 
values: a1246 a751 a780 
=== Succesors ===
=== Usages ===
?987 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?118 values: a1246 a751 a780  <|@  <|@
tid ?987 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Promise$$anon$3.<init>(Future)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 330
stackSize: 0
=== Inputs ===
outerFrameState: ?966 
values: - - 
=== Succesors ===
=== Usages ===
?974 ?1006 ?1022 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?966 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v2190 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v2901 
=== Succesors ===
trueSuccessor: v2189 
falseSuccessor: v2188 
=== Usages ===
=== Predecessor ===
v3909 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2901 #trueSuccessor: v2189 #falseSuccessor: v2188  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    probability 4580804192411133072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2200 
=== Usages ===
=== Predecessor ===
v2190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2200  <|@  <|@
f <@*|@fixed>@ <|@
tid v2200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2850 
=== Predecessor ===
v2189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4594958362668583204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2188 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3665 
=== Usages ===
=== Predecessor ===
v2190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3665 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3828 
=== Succesors ===
next: v3666 
=== Usages ===
v3778 
=== Predecessor ===
v2188 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3828 #next: v3666  <|@  <|@
f <@~|@floating>@ <|@
tid v3778 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3665 
=== Succesors ===
=== Usages ===
v3666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3666 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3778 
=== Succesors ===
next: v2855 
=== Usages ===
v2194 
=== Predecessor ===
v3665 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3778 #next: v2855  <|@  <|@
f <@~|@floating>@ <|@
tid v2194 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3666 
y: v1798 
=== Succesors ===
=== Usages ===
v2855 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3666 y: v1798  <|@  <|@
f <@*|@fixed>@ <|@
tid v2855 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v2194 
=== Succesors ===
trueSuccessor: v2853 
falseSuccessor: v2852 
=== Usages ===
=== Predecessor ===
v3666 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2194 #trueSuccessor: v2853 #falseSuccessor: v2852  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2766 
=== Usages ===
=== Predecessor ===
v2855 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2766  <|@  <|@
f <@~|@floating>@ <|@
tid i2767 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -322067
stableDimension: 0
stamp: i32 [-322067] ⇊00000000fffb15ed ⇈00000000fffb15ed
stampKind: i32
value: int[-322067|0xfffffffffffb15ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2768 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2765 
=== Predecessor ===
v2853 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    probability 4594958362668583204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2856 
=== Usages ===
=== Predecessor ===
v2855 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2856  <|@  <|@
f <@*|@fixed>@ <|@
tid v2856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2850 
=== Predecessor ===
v2852 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B100" "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2850 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2200 v2856 
=== Succesors ===
next: v2209 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2200 v2856 #next: v2209  <|@  <|@
f <@*|@fixed>@ <|@
tid v2209 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v2901 
=== Succesors ===
trueSuccessor: v2208 
falseSuccessor: v2207 
=== Usages ===
=== Predecessor ===
v2850 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2901 #trueSuccessor: v2208 #falseSuccessor: v2207  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B110" 
    xhandlers
    flags 
    probability 4580804192411133072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2219 
=== Usages ===
=== Predecessor ===
v2209 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2219  <|@  <|@
f <@*|@fixed>@ <|@
tid v2219 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2860 
=== Predecessor ===
v2208 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B109" 
    xhandlers
    flags 
    probability 4594958362668583204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2207 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3667 
=== Usages ===
=== Predecessor ===
v2209 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3667 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3828 
=== Succesors ===
next: v3668 
=== Usages ===
v3779 
=== Predecessor ===
v2207 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3828 #next: v3668  <|@  <|@
f <@~|@floating>@ <|@
tid v3779 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3667 
=== Succesors ===
=== Usages ===
v3668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3668 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3779 
=== Succesors ===
next: v2865 
=== Usages ===
v2213 
=== Predecessor ===
v3667 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3779 #next: v2865  <|@  <|@
f <@~|@floating>@ <|@
tid v2213 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3668 
y: v1819 
=== Succesors ===
=== Usages ===
v2865 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3668 y: v1819  <|@  <|@
f <@*|@fixed>@ <|@
tid v2865 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v2213 
=== Succesors ===
trueSuccessor: v2863 
falseSuccessor: v2862 
=== Usages ===
=== Predecessor ===
v3668 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2213 #trueSuccessor: v2863 #falseSuccessor: v2862  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2863 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2771 
=== Usages ===
=== Predecessor ===
v2865 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2771  <|@  <|@
f <@~|@floating>@ <|@
tid i2772 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -322323
stableDimension: 0
stamp: i32 [-322323] ⇊00000000fffb14ed ⇈00000000fffb14ed
stampKind: i32
value: int[-322323|0xfffffffffffb14ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2768 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2765 
=== Predecessor ===
v2863 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B107" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2768 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-322323 - -322067] ⇊00000000fffb14ed ⇈00000000fffb15ed
valueDescription: i32
=== Inputs ===
merge: v2765 
values: i2767 i2772 
=== Succesors ===
=== Usages ===
v2770 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2765 values: i2767 i2772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2766 v2771 
=== Succesors ===
next: v2770 
=== Usages ===
i2768 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2766 v2771 #next: v2770  <|@  <|@
tid ?1022 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Promise.forwardInterruptsTo(Future)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 503
stackSize: 0
=== Inputs ===
outerFrameState: ?987 
values: a780 a751 - - - - - - - - 
=== Succesors ===
=== Usages ===
?1017 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?987 values: a780 a751 - - - - - - - -  <|@  <|@
tid ?1017 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.isDefined()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 840
stackSize: 1
=== Inputs ===
outerFrameState: ?1022 
values: a751 - - - a3662 
virtualObjectMappings: ?760 ?1027 ?782 
=== Succesors ===
=== Usages ===
v2770 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1022 values: a751 - - - a3662 virtualObjectMappings: ?760 ?1027 ?782  <|@  <|@
f <@*|@fixed>@ <|@
tid v2770 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1017 
actionAndReason: i2768 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2765 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1017 actionAndReason: i2768 speculation: a2581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B110" 
    xhandlers
    flags 
    probability 4594958362668583204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2862 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2866 
=== Usages ===
=== Predecessor ===
v2865 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2866  <|@  <|@
f <@*|@fixed>@ <|@
tid v2866 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2860 
=== Predecessor ===
v2862 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B105" "B109" 
    successors "B111" "B184" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2219 v2866 
=== Succesors ===
next: v3669 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2219 v2866 #next: v3669  <|@  <|@
tid ?974 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<Promise.forwardInterruptsTo(Future)>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 504
stackSize: 1
=== Inputs ===
outerFrameState: ?987 
values: a780 a751 - - - - - - - - a3661 
virtualObjectMappings: ?1027 ?760 ?782 
=== Succesors ===
=== Usages ===
v2750 a3258 v3669 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?987 values: a780 a751 - - - - - - - - a3661 virtualObjectMappings: ?1027 ?760 ?782  <|@  <|@
f <@~|@floating>@ <|@
tid v3829 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3661 
=== Succesors ===
=== Usages ===
v3669 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3669 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?974 
guard: - 
address: v3829 
=== Succesors ===
next: v1704 
=== Usages ===
v3531 
=== Predecessor ===
v2860 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?974 guard: - address: v3829 #next: v1704  <|@  <|@
f <@~|@floating>@ <|@
tid v3531 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3669 
y: v3467 
=== Succesors ===
=== Usages ===
v1704 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3669 y: v3467  <|@  <|@
f <@*|@fixed>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3531 
=== Succesors ===
trueSuccessor: v1701 
falseSuccessor: v1703 
=== Usages ===
=== Predecessor ===
v3669 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3531 #trueSuccessor: v1701 #falseSuccessor: v1703  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1701 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j3247 
=== Usages ===
=== Predecessor ===
v1704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3247  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3247 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3262 
=== Usages ===
v3830 v3831 
=== Predecessor ===
v1701 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3262  <|@  <|@
f <@~|@floating>@ <|@
tid v3830 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3247 
index: - 
=== Succesors ===
=== Usages ===
j3262 v3264 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3247 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3262 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3830 
=== Succesors ===
next: j3263 
=== Usages ===
j3532 j3268 v3884 
=== Predecessor ===
j3247 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3830 #next: j3263  <|@  <|@
f <@~|@floating>@ <|@
tid v3831 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3247 
index: - 
=== Succesors ===
=== Usages ===
j3263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3247 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3263 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3831 
=== Succesors ===
next: v3255 
=== Usages ===
v3252 
=== Predecessor ===
j3262 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3831 #next: v3255  <|@  <|@
f <@~|@floating>@ <|@
tid j3532 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3262 
y: j1866 
=== Succesors ===
=== Usages ===
v3252 v3264 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3262 y: j1866  <|@  <|@
f <@~|@floating>@ <|@
tid v3252 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@782e90
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3263 
y: j3532 
=== Succesors ===
=== Usages ===
v3255 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3263 y: j3532  <|@  <|@
f <@*|@fixed>@ <|@
tid v3255 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3252 
=== Succesors ===
trueSuccessor: v3253 
falseSuccessor: v3254 
=== Usages ===
=== Predecessor ===
j3263 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3252 #trueSuccessor: v3253 #falseSuccessor: v3254  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4565877976503276579
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3258 
=== Usages ===
=== Predecessor ===
v3255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3258 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@39bb4106
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?974 
arguments: v2920 i3492 i1797 
=== Succesors ===
next: j3259 
=== Usages ===
j3259 
=== Predecessor ===
v3253 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?974 arguments: v2920 i3492 i1797 #next: j3259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3259 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3258 
=== Succesors ===
next: v3269 
=== Usages ===
j3268 
=== Predecessor ===
a3258 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3258 #next: v3269  <|@  <|@
f <@*|@fixed>@ <|@
tid v3269 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3266 
=== Predecessor ===
j3259 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4595537396906387982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3264 
=== Usages ===
=== Predecessor ===
v3255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3264 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3830 
value: j3532 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3261 
=== Usages ===
=== Predecessor ===
v3254 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3830 value: j3532 stateAfter: - lastLocationAccess: - #next: v3261  <|@  <|@
f <@~|@floating>@ <|@
tid v3884 <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j3262 
index: - 
=== Succesors ===
=== Usages ===
v3261 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3262 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3884 
=== Succesors ===
next: v3267 
=== Usages ===
=== Predecessor ===
v3264 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3884 #next: v3267  <|@  <|@
f <@*|@fixed>@ <|@
tid v3267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3266 
=== Predecessor ===
v3261 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3268 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3266 
values: j3262 j3259 
=== Succesors ===
=== Usages ===
v3888 v3780 j2246 a2244 v3834 v3833 v3885 v3886 v3887 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3266 values: j3262 j3259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3267 v3269 
=== Succesors ===
next: a2244 
=== Usages ===
j3268 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3267 v3269 #next: a2244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2244 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3268 
=== Succesors ===
next: a2247 
=== Usages ===
a2256 
=== Predecessor ===
v3266 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3268 #next: a2247  <|@  <|@
f <@~|@floating>@ <|@
tid j2246 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3268 
y: j1072 
=== Succesors ===
=== Usages ===
a2247 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3268 y: j1072  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2247 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2246 
=== Succesors ===
next: j3278 
=== Usages ===
a2257 
=== Predecessor ===
a2244 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2246 #next: j3278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3278 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3832 
=== Succesors ===
next: v3279 
=== Usages ===
v3279 
=== Predecessor ===
a2247 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3832 #next: v3279  <|@  <|@
f <@~|@floating>@ <|@
tid v3833 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3268 
index: - 
=== Succesors ===
=== Usages ===
v3279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3279 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3833 
value: j3278 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3282 
=== Usages ===
=== Predecessor ===
j3278 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3833 value: j3278 stateAfter: - lastLocationAccess: - #next: v3282  <|@  <|@
f <@~|@floating>@ <|@
tid v3834 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3268 
index: - 
=== Succesors ===
=== Usages ===
v3282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3282 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3834 
value: v3473 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2252 
=== Usages ===
=== Predecessor ===
v3279 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3834 value: v3473 stateAfter: - lastLocationAccess: - #next: v2252  <|@  <|@
f <@~|@floating>@ <|@
tid v3780 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3268 
index: - 
=== Succesors ===
=== Usages ===
v2252 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2252 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3780 
value: a3661 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j3289 
=== Usages ===
=== Predecessor ===
v3282 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3780 value: a3661 stateAfter: - lastLocationAccess: - #next: j3289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3289 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3850 
=== Succesors ===
next: v3290 
=== Usages ===
v3290 
=== Predecessor ===
v2252 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3850 #next: v3290  <|@  <|@
f <@~|@floating>@ <|@
tid v3885 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j3268 
index: - 
=== Succesors ===
=== Usages ===
v3290 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3290 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3885 
value: j3289 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3293 
=== Usages ===
=== Predecessor ===
j3289 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3885 value: j3289 stateAfter: - lastLocationAccess: - #next: v3293  <|@  <|@
f <@~|@floating>@ <|@
tid v3886 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3268 
index: - 
=== Succesors ===
=== Usages ===
v3293 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3293 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3886 
value: v3476 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3297 
=== Usages ===
=== Predecessor ===
v3290 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3886 value: v3476 stateAfter: - lastLocationAccess: - #next: v3297  <|@  <|@
f <@~|@floating>@ <|@
tid v3887 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3268 
index: - 
=== Succesors ===
=== Usages ===
v3297 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3297 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3887 
value: a3661 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3299 
=== Usages ===
=== Predecessor ===
v3293 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3887 value: a3661 stateAfter: - lastLocationAccess: - #next: v3299  <|@  <|@
f <@~|@floating>@ <|@
tid v3888 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j3268 
index: - 
=== Succesors ===
=== Usages ===
v3299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3299 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3888 
value: a2059 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2256 
=== Usages ===
=== Predecessor ===
v3297 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3888 value: a2059 stateAfter: - lastLocationAccess: - #next: a2256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2256 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2244 
=== Succesors ===
next: a2257 
=== Usages ===
v3742 ?1031 a917 a919 j3300 
=== Predecessor ===
v3299 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2244 #next: a2257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2257 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2247 
=== Succesors ===
next: v2258 
=== Usages ===
a1273 
=== Predecessor ===
a2256 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2247 #next: v2258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2258 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j3670 
=== Usages ===
=== Predecessor ===
a2257 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j3670  <|@  <|@
f <@~|@floating>@ <|@
tid v3741 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3663 
=== Succesors ===
=== Usages ===
j3670 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3670 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$stateOff
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3741 
=== Succesors ===
next: i1275 
=== Usages ===
v3742 
=== Predecessor ===
v2258 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3741 #next: i1275  <|@  <|@
f <@~|@floating>@ <|@
tid v3742 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2256 
index: j3670 
=== Succesors ===
=== Usages ===
i1275 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2256 index: j3670  <|@  <|@
f <@~|@floating>@ <|@
tid a1273 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2257 
=== Succesors ===
=== Usages ===
i1275 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1275 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ANY_LOCATION
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3742 
expectedValue: a3661 
newValue: a1273 
stateAfter: - 
=== Succesors ===
next: j3300 
=== Usages ===
?1003 i1004 i908 
=== Predecessor ===
j3670 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v3742 expectedValue: a3661 newValue: a1273 stateAfter: - #next: j3300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3300 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2256 
=== Succesors ===
next: v3304 
=== Usages ===
j3301 
=== Predecessor ===
i1275 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2256 #next: v3304  <|@  <|@
f <@~|@floating>@ <|@
tid j3301 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$146/1524633570@1cec0275
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3300 
y: i2993 
=== Succesors ===
=== Usages ===
v3835 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3300 y: i2993  <|@  <|@
f <@~|@floating>@ <|@
tid v3835 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3301 
index: j2997 
=== Succesors ===
=== Usages ===
v3304 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3301 index: j2997  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3304 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3835 
value: i2999 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1708 
=== Usages ===
=== Predecessor ===
j3300 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3835 value: i2999 stateAfter: - lastLocationAccess: - #next: v1708  <|@  <|@
tid ?1006 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<Promise.forwardInterruptsTo(Future)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 506
stackSize: 0
=== Inputs ===
outerFrameState: ?987 
values: a780 a751 - - - - - - - - 
=== Succesors ===
=== Usages ===
?1003 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?987 values: a780 a751 - - - - - - - -  <|@  <|@
tid ?1031 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a780 
materializedValue: a2256 
=== Succesors ===
=== Usages ===
?1003 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a780 materializedValue: a2256  <|@  <|@
tid ?1003 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Promise.cas(Object, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 453
stackSize: 1
=== Inputs ===
outerFrameState: ?1006 
values: - - - i1275 
virtualObjectMappings: ?1031 ?760 ?782 
=== Succesors ===
=== Usages ===
v2758 a3672 v3673 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1006 values: - - - i1275 virtualObjectMappings: ?1031 ?760 ?782  <|@  <|@
f <@~|@floating>@ <|@
tid i1004 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$115/1567088237@42498438
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$116/1100921398@1fb26baa
inputBits: 32
resultBits: 1
stamp: i1
=== Inputs ===
value: i1275 
=== Succesors ===
=== Usages ===
i1005 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1275  <|@  <|@
f <@~|@floating>@ <|@
tid i1005 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1701538656@15c1f08d
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/999668238@1b27ce49
inputAlwaysPositive: false
inputBits: 1
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1004 
=== Succesors ===
=== Usages ===
v985 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1004  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1005 
y: i153 
=== Succesors ===
=== Usages ===
v1708 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1005 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v985 
=== Succesors ===
trueSuccessor: v1707 
falseSuccessor: v1705 
=== Usages ===
=== Predecessor ===
v3304 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v985 #trueSuccessor: v1707 #falseSuccessor: v1705  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2754 
=== Usages ===
=== Predecessor ===
v1708 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2754  <|@  <|@
f <@~|@floating>@ <|@
tid i2755 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -326675
stableDimension: 0
stamp: i32 [-326675] ⇊00000000fffb03ed ⇈00000000fffb03ed
stampKind: i32
value: int[-326675|0xfffffffffffb03ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2754 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2753 
=== Predecessor ===
v1707 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B182" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3671 
=== Usages ===
=== Predecessor ===
v1708 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3671 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Local$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Local$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3712 
=== Succesors ===
next: a3672 
=== Usages ===
v3743 
=== Predecessor ===
v1705 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3712 #next: a3672  <|@  <|@
f <@~|@floating>@ <|@
tid v3743 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3671 
=== Succesors ===
=== Usages ===
a3672 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3672 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Local$.localCtx
nullCheck: true
stamp: n Ljava/lang/ThreadLocal;
=== Inputs ===
stateBefore: ?1003 
guard: - 
address: v3743 
=== Succesors ===
next: v3673 
=== Usages ===
a1282 v3836 
=== Predecessor ===
a3671 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1003 guard: - address: v3743 #next: v3673  <|@  <|@
f <@~|@floating>@ <|@
tid v3836 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3672 
=== Succesors ===
=== Usages ===
v3673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3673 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?1003 
guard: - 
address: v3836 
=== Succesors ===
next: v1285 
=== Usages ===
v3744 
=== Predecessor ===
a3672 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1003 guard: - address: v3836 #next: v1285  <|@  <|@
f <@~|@floating>@ <|@
tid v3744 <|@
d <@d|@=== Debug Properties ===
displacement: 520
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3673 
=== Succesors ===
=== Usages ===
v1285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3673  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v3744 
=== Succesors ===
next: v1720 
=== Usages ===
v1025 
=== Predecessor ===
v3673 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3744 #next: v1720  <|@  <|@
f <@~|@floating>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1285 
y: v650 
=== Succesors ===
=== Usages ===
v1720 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1285 y: v650  <|@  <|@
f <@*|@fixed>@ <|@
tid v1720 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1025 
=== Succesors ===
trueSuccessor: v1717 
falseSuccessor: v1719 
=== Usages ===
=== Predecessor ===
v1285 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1025 #trueSuccessor: v1717 #falseSuccessor: v1719  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B118" "B119" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3674 
=== Usages ===
=== Predecessor ===
v1720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3674  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3674 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Thread.threadLocals
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3745 
=== Succesors ===
next: v1014 
=== Usages ===
a2576 v1415 
=== Predecessor ===
v1717 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3745 #next: v1014  <|@  <|@
f <@~|@floating>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3674 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3674  <|@  <|@
f <@~|@floating>@ <|@
tid a1282 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a Ljava/lang/ThreadLocal;
=== Inputs ===
value: a3672 
=== Succesors ===
=== Usages ===
a913 a911 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3672  <|@  <|@
f <@*|@fixed>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 7.839287703504969E-8
=== Inputs ===
condition: v1415 
=== Succesors ===
trueSuccessor: v1012 
falseSuccessor: v1013 
=== Usages ===
=== Predecessor ===
a3674 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1415 #trueSuccessor: v1012 #falseSuccessor: v1013  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B124" 
    xhandlers
    flags 
    probability 4489543341119495866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1033 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1033  <|@  <|@
f <@*|@fixed>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
v1012 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" 
    xhandlers
    flags 
    probability 4595601733539564515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v906 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v906  <|@  <|@
f <@*|@fixed>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
v1013 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B83" "B119" 
    successors "B121" "B180" 
    xhandlers
    flags 
    probability 4607182418093917143
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i908 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v903 
values: i1202 i1275 
=== Succesors ===
=== Usages ===
?905 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v903 values: i1202 i1275  <|@  <|@
f <@~|@floating>@ <|@
tid a913 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/lang/ThreadLocal;
valueDescription: a -
=== Inputs ===
merge: v903 
values: a1209 a1282 
=== Succesors ===
=== Usages ===
?562 a911 v727 v3746 v1310 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v903 values: a1209 a1282  <|@  <|@
f <@~|@floating>@ <|@
tid a960 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/twitter/util/Promise$;
valueDescription: a -
=== Inputs ===
merge: v903 
values: a1172 a1246 
=== Succesors ===
=== Usages ===
?958 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v903 values: a1172 a1246  <|@  <|@
f <@~|@floating>@ <|@
tid a2576 <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap;
valueDescription: n -
=== Inputs ===
merge: v903 
values: a3650 a3674 
=== Succesors ===
=== Usages ===
a2577 v3747 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v903 values: a3650 a3674  <|@  <|@
f <@~|@floating>@ <|@
tid a919 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/twitter/util/Promise$$anon$3;
valueDescription: a -
=== Inputs ===
merge: v903 
values: a2139 a2256 
=== Succesors ===
=== Usages ===
?943 a917 a920 a924 ?898 a920 a920 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v903 values: a2139 a2256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v904 v906 
=== Succesors ===
next: a3675 
=== Usages ===
i908 a913 a960 a2576 a919 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v904 v906 #next: a3675  <|@  <|@
f <@~|@floating>@ <|@
tid v3747 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2576 
=== Succesors ===
=== Usages ===
a3675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3675 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap.table
nullCheck: false
stamp: n# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3747 
=== Succesors ===
next: i3676 
=== Usages ===
a1294 v3748 
=== Predecessor ===
v903 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3747 #next: i3676  <|@  <|@
tid ?958 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Promise$.interrupts(Future)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 329
stackSize: 1
=== Inputs ===
outerFrameState: ?118 
values: a960 a751 a780 
=== Succesors ===
=== Usages ===
?945 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?118 values: a960 a751 a780  <|@  <|@
tid ?945 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Promise$$anon$3.<init>(Future)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 330
stackSize: 0
=== Inputs ===
outerFrameState: ?958 
values: - - 
=== Succesors ===
=== Usages ===
?910 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?958 values: - -  <|@  <|@
tid ?910 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<Promise.forwardInterruptsTo(Future)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 506
stackSize: 0
=== Inputs ===
outerFrameState: ?945 
values: a780 a751 - - - - - - - - 
=== Succesors ===
=== Usages ===
?905 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?945 values: a780 a751 - - - - - - - -  <|@  <|@
tid ?943 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a780 
materializedValue: a919 
=== Succesors ===
=== Usages ===
?905 ?827 ?2571 ?890 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a780 materializedValue: a919  <|@  <|@
tid ?905 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Promise.cas(Object, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 453
stackSize: 1
=== Inputs ===
outerFrameState: ?910 
values: - - - i908 
virtualObjectMappings: ?943 ?760 ?782 
=== Succesors ===
=== Usages ===
v2740 i3676 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?910 values: - - - i908 virtualObjectMappings: ?943 ?760 ?782  <|@  <|@
f <@~|@floating>@ <|@
tid v3748 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3675 
=== Succesors ===
=== Usages ===
i3676 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3676 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?905 
guard: - 
address: v3748 
=== Succesors ===
next: i3677 
=== Usages ===
i715 v1301 
=== Predecessor ===
a3675 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?905 guard: - address: v3748 #next: i3677  <|@  <|@
f <@~|@floating>@ <|@
tid v3746 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a913 
index: - 
=== Succesors ===
=== Usages ===
i3677 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a913 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3677 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal.threadLocalHashCode
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3746 
=== Succesors ===
next: v1728 
=== Usages ===
i716 
=== Predecessor ===
i3676 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3746 #next: v1728  <|@  <|@
f <@~|@floating>@ <|@
tid i715 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i3676 
y: i661 
=== Succesors ===
=== Usages ===
i716 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3676 y: i661  <|@  <|@
f <@~|@floating>@ <|@
tid i716 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$106/1828525263@267ef724
stamp: i32
=== Inputs ===
x: i715 
y: i3677 
=== Succesors ===
=== Usages ===
v3749 v1310 v1301 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i715 y: i3677  <|@  <|@
f <@~|@floating>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@782e90
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i716 
y: i3676 
=== Succesors ===
=== Usages ===
v1728 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i716 y: i3676  <|@  <|@
f <@*|@fixed>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1301 
=== Succesors ===
trueSuccessor: v1725 
falseSuccessor: v1727 
=== Usages ===
=== Predecessor ===
i3677 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1301 #trueSuccessor: v1725 #falseSuccessor: v1727  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B140" 
    xhandlers
    flags 
    probability 4607182418093917143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3678 
=== Usages ===
a3678 
=== Predecessor ===
v1728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3678  <|@  <|@
f <@~|@floating>@ <|@
tid a1294 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a3675 
=== Succesors ===
=== Usages ===
v3749 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3675  <|@  <|@
f <@~|@floating>@ <|@
tid v3749 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1294 
index: i716 
=== Succesors ===
=== Usages ===
a3678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1294 index: i716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3678 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: v1725 
address: v3749 
=== Succesors ===
next: v722 
=== Usages ===
a1309 v1417 v3750 
=== Predecessor ===
v1725 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1725 address: v3749 #next: v722  <|@  <|@
f <@~|@floating>@ <|@
tid a1309 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a3678 
=== Succesors ===
=== Usages ===
v1310 a1043 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3678  <|@  <|@
f <@~|@floating>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3678 
=== Succesors ===
=== Usages ===
v722 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3678  <|@  <|@
f <@~|@floating>@ <|@
tid a2577 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
value: a2576 
=== Succesors ===
=== Usages ===
v1310 ?562 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2576  <|@  <|@
tid ?562 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 163
stackSize: 0
=== Inputs ===
outerFrameState: ?578 
values: a913 - a2577 - - 
=== Succesors ===
=== Usages ===
?827 ?734 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?578 values: a913 - a2577 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 3.527679190032315E-7
=== Inputs ===
condition: v1417 
=== Succesors ===
trueSuccessor: v720 
falseSuccessor: v721 
=== Usages ===
=== Predecessor ===
a3678 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1417 #trueSuccessor: v720 #falseSuccessor: v721  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B123" "B139" 
    xhandlers
    flags 
    probability 4510263224435847550
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a731 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a731  <|@  <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
signature: [Ljdk.vm.ci.meta.JavaType;@284c0e
stamp: void
targetMethod: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>
=== Inputs ===
arguments: a2577 a913 i716 a1309 
=== Succesors ===
=== Usages ===
a731 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2577 a913 i716 a1309  <|@  <|@
tid ?734 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 0
=== Inputs ===
outerFrameState: ?562 
values: - - 
=== Succesors ===
=== Usages ===
?2571 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?562 values: - -  <|@  <|@
tid ?2571 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 419
stackSize: 0
=== Inputs ===
outerFrameState: ?734 
values: - - - - 
virtualObjectMappings: ?782 ?943 ?760 ?789 
=== Succesors ===
=== Usages ===
a731 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?734 values: - - - - virtualObjectMappings: ?782 ?943 ?760 ?789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a731 <|@
d <@d|@=== Debug Properties ===
bci: 38
polymorphic: false
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
targetMethod: Direct#ThreadLocal$ThreadLocalMap.getEntryAfterMiss
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1310 
stateDuring: ?2571 
=== Succesors ===
next: v570 
=== Usages ===
v564 a1043 
=== Predecessor ===
v720 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1310 stateDuring: ?2571 #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a731 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a731  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 3.527674073959098E-7
=== Inputs ===
condition: v564 
=== Succesors ===
trueSuccessor: v569 
falseSuccessor: v568 
=== Usages ===
=== Predecessor ===
a731 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v564 #trueSuccessor: v569 #falseSuccessor: v568  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" 
    xhandlers
    flags 
    probability 4413953810109930006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v567  <|@  <|@
f <@*|@fixed>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
v569 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B82" "B123" "B118" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4500515635838651093
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a911 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/lang/ThreadLocal;
valueDescription: a -
=== Inputs ===
merge: v566 
values: a1209 a913 a1282 
=== Succesors ===
=== Usages ===
v1327 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v566 values: a1209 a913 a1282  <|@  <|@
f <@~|@floating>@ <|@
tid a917 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/twitter/util/Promise$$anon$3;
valueDescription: a -
=== Inputs ===
merge: v566 
values: a2139 a919 a2256 
=== Succesors ===
=== Usages ===
?790 a920 a924 ?937 a920 a920 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v566 values: a2139 a919 a2256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v565 v567 v1033 
=== Succesors ===
next: a575 
=== Usages ===
a911 a917 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v565 v567 v1033 #next: a575  <|@  <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@730d27db
stamp: void
targetMethod: HotSpotMethod<ThreadLocal.setInitialValue()>
=== Inputs ===
arguments: a911 
=== Succesors ===
=== Usages ===
a575 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a911  <|@  <|@
tid ?937 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a780 
materializedValue: a917 
=== Succesors ===
=== Usages ===
?323 ?576 ?2572 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a780 materializedValue: a917  <|@  <|@
tid ?2572 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 170
stackSize: 0
=== Inputs ===
outerFrameState: ?578 
values: - - - - - 
virtualObjectMappings: ?782 ?937 ?760 ?789 
=== Succesors ===
=== Usages ===
a575 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?578 values: - - - - - virtualObjectMappings: ?782 ?937 ?760 ?789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a575 <|@
d <@d|@=== Debug Properties ===
bci: 34
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#ThreadLocal.setInitialValue
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1327 
stateDuring: ?2572 
=== Succesors ===
next: v2333 
=== Usages ===
?576 a877 v1329 v3839 ?790 a876 a877 a877 
=== Predecessor ===
v566 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1327 stateDuring: ?2572 #next: v2333  <|@  <|@
f <@~|@floating>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a575 
=== Succesors ===
=== Usages ===
v2333 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a575  <|@  <|@
f <@*|@fixed>@ <|@
tid v2333 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1329 
=== Succesors ===
trueSuccessor: v2332 
falseSuccessor: v2331 
=== Usages ===
=== Predecessor ===
a575 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1329 #trueSuccessor: v2332 #falseSuccessor: v2331  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B128" 
    xhandlers
    flags 
    probability 4485820195411960387
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2875 
=== Usages ===
=== Predecessor ===
v2333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2875  <|@  <|@
f <@*|@fixed>@ <|@
tid v2875 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2873 
=== Predecessor ===
v2332 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" "B138" 
    xhandlers
    flags 
    probability 4499923315066361485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3679 
=== Usages ===
=== Predecessor ===
v2333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3679  <|@  <|@
f <@~|@floating>@ <|@
tid v3839 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a575 
index: - 
=== Succesors ===
=== Usages ===
v3679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a575 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3679 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3839 
=== Succesors ===
next: v3680 
=== Usages ===
v3786 
=== Predecessor ===
v2331 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3839 #next: v3680  <|@  <|@
f <@~|@floating>@ <|@
tid v3786 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3679 
=== Succesors ===
=== Usages ===
v3680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3679  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3680 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3786 
=== Succesors ===
next: v3587 
=== Usages ===
v2337 
=== Predecessor ===
v3679 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3786 #next: v3587  <|@  <|@
f <@~|@floating>@ <|@
tid v2337 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3680 
y: v1885 
=== Succesors ===
=== Usages ===
v3587 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3680 y: v1885  <|@  <|@
f <@*|@fixed>@ <|@
tid v3587 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2337 
=== Succesors ===
trueSuccessor: v3586 
falseSuccessor: v2880 
=== Usages ===
=== Predecessor ===
v3680 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2337 #trueSuccessor: v3586 #falseSuccessor: v2880  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B128" 
    xhandlers
    flags 
    probability 4499923315066361485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2883 
=== Usages ===
=== Predecessor ===
v3587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2883  <|@  <|@
f <@*|@fixed>@ <|@
tid v2883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2873 
=== Predecessor ===
v3586 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B125" "B127" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4500515635838651093
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2875 v2883 
=== Succesors ===
next: v1334 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2875 v2883 #next: v1334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a3681 
=== Usages ===
=== Predecessor ===
v2873 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a3681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3681 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise.state
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3727 
=== Succesors ===
next: v1335 
=== Usages ===
a1333 v3840 
=== Predecessor ===
v1334 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3727 #next: v1335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v3682 
=== Usages ===
=== Predecessor ===
a3681 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v3682  <|@  <|@
f <@~|@floating>@ <|@
tid a1333 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a3681 
=== Succesors ===
=== Usages ===
a881 ?323 a881 a881 a1046 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3681  <|@  <|@
tid ?790 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a788 
values: a575 a917 a78 
=== Succesors ===
=== Usages ===
?323 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a788 values: a575 a917 a78  <|@  <|@
tid ?323 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 761
stackSize: 1
=== Inputs ===
outerFrameState: ?374 
values: a751 a788 - - - - - - - - - a1333 
virtualObjectMappings: ?760 ?790 ?937 ?782 
=== Succesors ===
=== Usages ===
v3682 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?374 values: a751 a788 - - - - - - - - - a1333 virtualObjectMappings: ?760 ?790 ?937 ?782  <|@  <|@
f <@~|@floating>@ <|@
tid v3840 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3681 
=== Succesors ===
=== Usages ===
v3682 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3682 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?323 
guard: - 
address: v3840 
=== Succesors ===
next: v3683 
=== Usages ===
v3788 v3540 v3787 
=== Predecessor ===
v1335 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?323 guard: - address: v3840 #next: v3683  <|@  <|@
f <@~|@floating>@ <|@
tid v3787 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3682 
=== Succesors ===
=== Usages ===
v2387 v3683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3683 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SecondarySuperCache
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3787 
=== Succesors ===
next: v2359 
=== Usages ===
v2356 
=== Predecessor ===
v3682 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3787 #next: v2359  <|@  <|@
f <@~|@floating>@ <|@
tid v2356 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3683 
y: v1905 
=== Succesors ===
=== Usages ===
v2359 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3683 y: v1905  <|@  <|@
f <@*|@fixed>@ <|@
tid v2359 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2356 
=== Succesors ===
trueSuccessor: v2357 
falseSuccessor: v2358 
=== Usages ===
=== Predecessor ===
v3683 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2356 #trueSuccessor: v2357 #falseSuccessor: v2358  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B154" 
    xhandlers
    flags 
    probability 4496012036211280597
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v869 
=== Usages ===
=== Predecessor ===
v2359 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v869  <|@  <|@
f <@*|@fixed>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
v2357 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    probability 4496012036211280597
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2363 
=== Usages ===
=== Predecessor ===
v2359 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2363  <|@  <|@
f <@~|@floating>@ <|@
tid v3540 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3682 
y: v3486 
=== Succesors ===
=== Usages ===
v2363 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3682 y: v3486  <|@  <|@
f <@*|@fixed>@ <|@
tid v2363 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3540 
=== Succesors ===
trueSuccessor: v2361 
falseSuccessor: v2362 
=== Usages ===
=== Predecessor ===
v2358 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3540 #trueSuccessor: v2361 #falseSuccessor: v2362  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B154" 
    xhandlers
    flags 
    probability 4491508436583910101
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2568 
=== Usages ===
=== Predecessor ===
v2363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2568  <|@  <|@
f <@*|@fixed>@ <|@
tid v2568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
v2361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4491508436583910101
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j2384 
=== Usages ===
=== Predecessor ===
v2363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2384  <|@  <|@
f <@~|@floating>@ <|@
tid v3788 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3682 
=== Succesors ===
=== Usages ===
j2384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2384 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3788 
=== Succesors ===
next: i2385 
=== Usages ===
v3789 v3790 
=== Predecessor ===
v2362 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3788 #next: i2385  <|@  <|@
f <@~|@floating>@ <|@
tid v3789 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2384 
index: - 
=== Succesors ===
=== Usages ===
i2385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2384 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2385 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3789 
=== Succesors ===
next: v2366 
=== Usages ===
v2369 
=== Predecessor ===
j2384 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3789 #next: v2366  <|@  <|@
f <@*|@fixed>@ <|@
tid v2366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2367 
=== Predecessor ===
i2385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B136" 
    successors "B134" "B137" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4494046954179436995
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2368 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v2367 
values: i153 i2382 
=== Succesors ===
=== Usages ===
v2369 i2373 i2382 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2367 values: i153 i2382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2367 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2366 
=== Succesors ===
next: v2372 
=== Usages ===
i2368 v2371 v2380 v2383 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2366 #next: v2372  <|@  <|@
f <@~|@floating>@ <|@
tid v2369 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3652e6c3
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2368 
y: i2385 
=== Succesors ===
=== Usages ===
v2372 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2368 y: i2385  <|@  <|@
f <@*|@fixed>@ <|@
tid v2372 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2369 
=== Succesors ===
trueSuccessor: v2370 
falseSuccessor: v2371 
=== Usages ===
=== Predecessor ===
v2367 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2369 #trueSuccessor: v2370 #falseSuccessor: v2371  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4489543354552066499
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j2386 
=== Usages ===
=== Predecessor ===
v2372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2386  <|@  <|@
f <@~|@floating>@ <|@
tid i2373 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$15/433673915@1f3c8b47
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2368 
y: i1931 
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2368 y: i1931  <|@  <|@
f <@~|@floating>@ <|@
tid i2374 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2373 
y: i1930 
=== Succesors ===
=== Usages ===
j2375 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2373 y: i1930  <|@  <|@
f <@~|@floating>@ <|@
tid j2375 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$13/1218083739@248602d1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$14/1566400895@795fae70
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2374 
=== Succesors ===
=== Usages ===
v3790 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2374  <|@  <|@
f <@~|@floating>@ <|@
tid v3790 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2384 
index: j2375 
=== Succesors ===
=== Usages ===
j2386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2384 index: j2375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2386 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3790 
=== Succesors ===
next: v2381 
=== Usages ===
v2377 
=== Predecessor ===
v2370 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3790 #next: v2381  <|@  <|@
f <@~|@floating>@ <|@
tid v2377 <|@
d <@d|@=== Debug Properties ===
stamp: Klass*
=== Inputs ===
input: j2386 
=== Succesors ===
=== Usages ===
v2378 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j2386  <|@  <|@
f <@~|@floating>@ <|@
tid v2378 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2377 
y: v1905 
=== Succesors ===
=== Usages ===
v2381 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2377 y: v1905  <|@  <|@
f <@*|@fixed>@ <|@
tid v2381 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v2378 
=== Succesors ===
trueSuccessor: v2380 
falseSuccessor: v2379 
=== Usages ===
=== Predecessor ===
j2386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2378 #trueSuccessor: v2380 #falseSuccessor: v2379  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B154" 
    xhandlers
    flags 
    probability 4483347409861011408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2367 
=== Succesors ===
next: v2387 
=== Usages ===
=== Predecessor ===
v2381 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2367 #next: v2387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2387 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3787 
value: v1905 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2567 
=== Usages ===
=== Predecessor ===
v2380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3787 value: v1905 stateAfter: - lastLocationAccess: - #next: v2567  <|@  <|@
f <@*|@fixed>@ <|@
tid v2567 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
v2387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B133" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4486158664424697307
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2383 
=== Usages ===
=== Predecessor ===
v2381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2383  <|@  <|@
f <@~|@floating>@ <|@
tid i2382 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i32
=== Inputs ===
x: i2368 
y: i1797 
=== Succesors ===
=== Usages ===
i2368 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2368 y: i1797  <|@  <|@
f <@*|@fixed>@ <|@
tid v2383 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2367 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2379 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2367  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B167" 
    xhandlers
    flags 
    probability 4489543354552066499
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2371 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2367 
=== Succesors ===
next: v873 
=== Usages ===
=== Predecessor ===
v2372 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2367 #next: v873  <|@  <|@
f <@*|@fixed>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v872 
=== Predecessor ===
v2371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2880 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1730 
=== Usages ===
=== Predecessor ===
v3587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1730  <|@  <|@
tid ?576 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 170
stackSize: 1
=== Inputs ===
outerFrameState: ?578 
values: - - - - - a575 
virtualObjectMappings: ?782 ?937 ?760 ?789 
=== Succesors ===
=== Usages ===
v1730 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?578 values: - - - - - a575 virtualObjectMappings: ?782 ?937 ?760 ?789  <|@  <|@
f <@*|@fixed>@ <|@
tid v1730 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1331
reason: ClassCastException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?576 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2880 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?576  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B142" 
    xhandlers
    flags 
    probability 4510263222085147689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v826 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v826  <|@  <|@
f <@*|@fixed>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
v568 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B141" "B179" 
    xhandlers
    flags 
    probability 4607182414916466455
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3684 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3684  <|@  <|@
f <@~|@floating>@ <|@
tid v3750 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3678 
=== Succesors ===
=== Usages ===
a3684 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3678  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3684 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.referent
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3750 
=== Succesors ===
next: v1740 
=== Usages ===
a1313 
=== Predecessor ===
v721 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3750 #next: v1740  <|@  <|@
f <@~|@floating>@ <|@
tid a1313 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a3684 
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3684  <|@  <|@
f <@~|@floating>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a913 
y: a1313 
=== Succesors ===
=== Usages ===
v1740 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a913 y: a1313  <|@  <|@
f <@*|@fixed>@ <|@
tid v1740 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v727 
=== Succesors ===
trueSuccessor: v1737 
falseSuccessor: v1739 
=== Usages ===
=== Predecessor ===
a3684 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v727 #trueSuccessor: v1737 #falseSuccessor: v1739  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" 
    xhandlers
    flags 
    probability 4607182414916466455
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v1740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v726  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: Reference.referent
stamp: void
=== Inputs ===
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v1737 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v828  <|@  <|@
f <@*|@fixed>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
v726 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B139" "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4607182418093916022
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1043 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
valueDescription: a -
=== Inputs ===
merge: v825 
values: a731 a1309 
=== Succesors ===
=== Usages ===
v3751 ?827 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v825 values: a731 a1309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v826 v828 
=== Succesors ===
next: a3685 
=== Usages ===
a1043 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v826 v828 #next: a3685  <|@  <|@
f <@~|@floating>@ <|@
tid v3751 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1043 
index: - 
=== Succesors ===
=== Usages ===
a3685 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1043 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3685 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap$Entry.value
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3751 
=== Succesors ===
next: v2262 
=== Usages ===
a1317 v1319 v3837 
=== Predecessor ===
v825 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3751 #next: v2262  <|@  <|@
f <@~|@floating>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3685 
=== Succesors ===
=== Usages ===
v2262 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3685  <|@  <|@
f <@*|@fixed>@ <|@
tid v2262 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1319 
=== Succesors ===
trueSuccessor: v2261 
falseSuccessor: v2260 
=== Usages ===
=== Predecessor ===
a3685 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1319 #trueSuccessor: v2261 #falseSuccessor: v2260  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B146" 
    xhandlers
    flags 
    probability 4591870179502076611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2890 
=== Usages ===
=== Predecessor ===
v2262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2890  <|@  <|@
f <@*|@fixed>@ <|@
tid v2890 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2888 
=== Predecessor ===
v2261 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B178" 
    xhandlers
    flags 
    probability 4606281698239052062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3686 
=== Usages ===
=== Predecessor ===
v2262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3686  <|@  <|@
f <@~|@floating>@ <|@
tid v3837 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3685 
=== Succesors ===
=== Usages ===
v3686 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3686 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3837 
=== Succesors ===
next: v3687 
=== Usages ===
v3781 
=== Predecessor ===
v2260 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3837 #next: v3687  <|@  <|@
f <@~|@floating>@ <|@
tid v3781 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3686 
=== Succesors ===
=== Usages ===
v3687 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3687 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3781 
=== Succesors ===
next: v3595 
=== Usages ===
v2266 
=== Predecessor ===
v3686 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3781 #next: v3595  <|@  <|@
f <@~|@floating>@ <|@
tid v2266 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3687 
y: v1885 
=== Succesors ===
=== Usages ===
v3595 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3687 y: v1885  <|@  <|@
f <@*|@fixed>@ <|@
tid v3595 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2266 
=== Succesors ===
trueSuccessor: v3594 
falseSuccessor: v2895 
=== Usages ===
=== Predecessor ===
v3687 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2266 #trueSuccessor: v3594 #falseSuccessor: v2895  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" 
    xhandlers
    flags 
    probability 4606281698239052062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2898 
=== Usages ===
=== Predecessor ===
v3595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2898  <|@  <|@
f <@*|@fixed>@ <|@
tid v2898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2888 
=== Predecessor ===
v3594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" 
    successors "B147" "B148" 
    xhandlers
    flags 
    probability 4607182418093916022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2890 v2898 
=== Succesors ===
next: v1324 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2890 v2898 #next: v1324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a3688 
=== Usages ===
=== Predecessor ===
v2888 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a3688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3688 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise.state
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3727 
=== Succesors ===
next: v1325 
=== Usages ===
a1323 v3838 
=== Predecessor ===
v1324 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3727 #next: v1325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v3689 
=== Usages ===
=== Predecessor ===
a3688 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v3689  <|@  <|@
f <@~|@floating>@ <|@
tid a1323 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a3688 
=== Succesors ===
=== Usages ===
a881 ?890 a881 a881 a1046 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3688  <|@  <|@
f <@~|@floating>@ <|@
tid a1317 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a3685 
=== Succesors ===
=== Usages ===
a877 a877 ?898 a877 a876 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3685  <|@  <|@
tid ?898 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a788 
values: a1317 a919 a78 
=== Succesors ===
=== Usages ===
?890 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a788 values: a1317 a919 a78  <|@  <|@
tid ?890 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 761
stackSize: 1
=== Inputs ===
outerFrameState: ?374 
values: a751 a788 - - - - - - - - - a1323 
virtualObjectMappings: ?760 ?898 ?943 ?782 
=== Succesors ===
=== Usages ===
v3689 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?374 values: a751 a788 - - - - - - - - - a1323 virtualObjectMappings: ?760 ?898 ?943 ?782  <|@  <|@
f <@~|@floating>@ <|@
tid v3838 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3688 
=== Succesors ===
=== Usages ===
v3689 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3689 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?890 
guard: - 
address: v3838 
=== Succesors ===
next: v3690 
=== Usages ===
v3783 v3539 v3782 
=== Predecessor ===
v1325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?890 guard: - address: v3838 #next: v3690  <|@  <|@
f <@~|@floating>@ <|@
tid v3782 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3689 
=== Succesors ===
=== Usages ===
v2316 v3690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3690 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SecondarySuperCache
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3782 
=== Succesors ===
next: v2288 
=== Usages ===
v2285 
=== Predecessor ===
v3689 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3782 #next: v2288  <|@  <|@
f <@~|@floating>@ <|@
tid v2285 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3690 
y: v1905 
=== Succesors ===
=== Usages ===
v2288 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3690 y: v1905  <|@  <|@
f <@*|@fixed>@ <|@
tid v2288 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2285 
=== Succesors ===
trueSuccessor: v2286 
falseSuccessor: v2287 
=== Usages ===
=== Predecessor ===
v3690 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2285 #trueSuccessor: v2286 #falseSuccessor: v2287  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B154" 
    xhandlers
    flags 
    probability 4602678818466545526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v2288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v871  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
v2286 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4602678818466545526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2292 
=== Usages ===
=== Predecessor ===
v2288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2292  <|@  <|@
f <@~|@floating>@ <|@
tid v3539 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3689 
y: v3486 
=== Succesors ===
=== Usages ===
v2292 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3689 y: v3486  <|@  <|@
f <@*|@fixed>@ <|@
tid v2292 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3539 
=== Succesors ===
trueSuccessor: v2290 
falseSuccessor: v2291 
=== Usages ===
=== Predecessor ===
v2287 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3539 #trueSuccessor: v2290 #falseSuccessor: v2291  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B154" 
    xhandlers
    flags 
    probability 4598175218839175030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2566 
=== Usages ===
=== Predecessor ===
v2292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2566  <|@  <|@
f <@*|@fixed>@ <|@
tid v2566 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
v2290 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4598175218839175030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j2313 
=== Usages ===
=== Predecessor ===
v2292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2313  <|@  <|@
f <@~|@floating>@ <|@
tid v3783 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3689 
=== Succesors ===
=== Usages ===
j2313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2313 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3783 
=== Succesors ===
next: i2314 
=== Usages ===
v3784 v3785 
=== Predecessor ===
v2291 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3783 #next: i2314  <|@  <|@
f <@~|@floating>@ <|@
tid v3784 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2313 
index: - 
=== Succesors ===
=== Usages ===
i2314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2313 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2314 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3784 
=== Succesors ===
next: v2295 
=== Usages ===
v2298 
=== Predecessor ===
j2313 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3784 #next: v2295  <|@  <|@
f <@*|@fixed>@ <|@
tid v2295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2296 
=== Predecessor ===
i2314 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B165" 
    successors "B152" "B166" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4600105333166934210
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2297 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v2296 
values: i153 i2311 
=== Succesors ===
=== Usages ===
v2298 i2302 i2311 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2296 values: i153 i2311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2296 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2295 
=== Succesors ===
next: v2301 
=== Usages ===
i2297 v2300 v2309 v2312 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2295 #next: v2301  <|@  <|@
f <@~|@floating>@ <|@
tid v2298 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3652e6c3
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2297 
y: i2314 
=== Succesors ===
=== Usages ===
v2301 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2297 y: i2314  <|@  <|@
f <@*|@fixed>@ <|@
tid v2301 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2298 
=== Succesors ===
trueSuccessor: v2299 
falseSuccessor: v2300 
=== Usages ===
=== Predecessor ===
v2296 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2298 #trueSuccessor: v2299 #falseSuccessor: v2300  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B165" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4595601733539563714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j2315 
=== Usages ===
=== Predecessor ===
v2301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2315  <|@  <|@
f <@~|@floating>@ <|@
tid i2302 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$15/433673915@1f3c8b47
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2297 
y: i1931 
=== Succesors ===
=== Usages ===
i2303 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2297 y: i1931  <|@  <|@
f <@~|@floating>@ <|@
tid i2303 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2302 
y: i1930 
=== Succesors ===
=== Usages ===
j2304 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2302 y: i1930  <|@  <|@
f <@~|@floating>@ <|@
tid j2304 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$13/1218083739@248602d1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$14/1566400895@795fae70
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2303 
=== Succesors ===
=== Usages ===
v3785 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2303  <|@  <|@
f <@~|@floating>@ <|@
tid v3785 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2313 
index: j2304 
=== Succesors ===
=== Usages ===
j2315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2313 index: j2304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2315 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3785 
=== Succesors ===
next: v2310 
=== Usages ===
v2306 
=== Predecessor ===
v2299 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3785 #next: v2310  <|@  <|@
f <@~|@floating>@ <|@
tid v2306 <|@
d <@d|@=== Debug Properties ===
stamp: Klass*
=== Inputs ===
input: j2315 
=== Succesors ===
=== Usages ===
v2307 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j2315  <|@  <|@
f <@~|@floating>@ <|@
tid v2307 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2306 
y: v1905 
=== Succesors ===
=== Usages ===
v2310 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2306 y: v1905  <|@  <|@
f <@*|@fixed>@ <|@
tid v2310 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v2307 
=== Succesors ===
trueSuccessor: v2309 
falseSuccessor: v2308 
=== Usages ===
=== Predecessor ===
j2315 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2307 #trueSuccessor: v2309 #falseSuccessor: v2308  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B154" 
    xhandlers
    flags 
    probability 4589811391262387560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2296 
=== Succesors ===
next: v2316 
=== Usages ===
=== Predecessor ===
v2310 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2296 #next: v2316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2316 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3782 
value: v1905 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2565 
=== Usages ===
=== Predecessor ===
v2309 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3782 value: v1905 stateAfter: - lastLocationAccess: - #next: v2565  <|@  <|@
f <@*|@fixed>@ <|@
tid v2565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
v2316 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B129" "B147" "B153" "B149" "B135" "B131" 
    successors "B155" "B163" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a877 <|@
d <@d|@=== Debug Properties ===
stamp: a [Lscala/Option;
valueDescription: a -
=== Inputs ===
merge: v868 
values: a575 a1317 a1317 a1317 a575 a575 
=== Succesors ===
=== Usages ===
a2426 ?882 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v868 values: a575 a1317 a1317 a1317 a575 a575  <|@  <|@
f <@~|@floating>@ <|@
tid a920 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/twitter/util/Promise$$anon$3;
valueDescription: a -
=== Inputs ===
merge: v868 
values: a917 a919 a919 a919 a917 a917 
=== Succesors ===
=== Usages ===
a2427 v745 ?882 ?940 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v868 values: a917 a919 a919 a919 a917 a917  <|@  <|@
f <@~|@floating>@ <|@
tid a881 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v868 
values: a1333 a1323 a1323 a1323 a1333 a1333 
=== Succesors ===
=== Usages ===
v3841 v619 ?870 a1354 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v868 values: a1333 a1323 a1323 a1323 a1333 a1333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v869 v871 v2565 v2566 v2567 v2568 
=== Succesors ===
next: a3691 
=== Usages ===
a877 a920 a881 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v869 v871 v2565 v2566 v2567 v2568 #next: a3691  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3691 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$WaitQueue$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3707 
=== Succesors ===
next: v3915 
=== Usages ===
v3752 v3915 
=== Predecessor ===
v868 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3707 #next: v3915  <|@  <|@
tid ?882 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a788 
values: a877 a920 a78 
=== Succesors ===
=== Usages ===
?870 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a788 values: a877 a920 a78  <|@  <|@
tid ?940 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a780 
materializedValue: a920 
=== Succesors ===
=== Usages ===
?870 ?635 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a780 materializedValue: a920  <|@  <|@
tid ?870 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 761
stackSize: 1
=== Inputs ===
outerFrameState: ?374 
values: a751 a788 - - - - - - - - - a881 
virtualObjectMappings: ?760 ?882 ?940 ?782 
=== Succesors ===
=== Usages ===
v2712 a3336 v3915 a3693 v3916 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?374 values: a751 a788 - - - - - - - - - a881 virtualObjectMappings: ?760 ?882 ?940 ?782  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3915 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?870 
object: a3691 
=== Succesors ===
next: a3692 
=== Usages ===
=== Predecessor ===
a3691 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?870 object: a3691 #next: a3692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3692 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3706 
=== Succesors ===
next: a3693 
=== Usages ===
v3754 v3753 
=== Predecessor ===
v3915 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3706 #next: a3693  <|@  <|@
f <@~|@floating>@ <|@
tid v3753 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3692 
=== Succesors ===
=== Usages ===
a3693 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3693 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$unsafe
nullCheck: true
stamp: n# Lsun/misc/Unsafe;
=== Inputs ===
stateBefore: ?870 
guard: - 
address: v3753 
=== Succesors ===
next: v3916 
=== Usages ===
v3916 
=== Predecessor ===
a3692 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?870 guard: - address: v3753 #next: v3916  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?870 
object: a3693 
=== Succesors ===
next: v3694 
=== Usages ===
=== Predecessor ===
a3693 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?870 object: a3693 #next: v3694  <|@  <|@
f <@~|@floating>@ <|@
tid v3841 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a881 
index: - 
=== Succesors ===
=== Usages ===
v3694 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a881 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3694 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3841 
=== Succesors ===
next: v1764 
=== Usages ===
v3541 
=== Predecessor ===
v3916 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3841 #next: v1764  <|@  <|@
f <@~|@floating>@ <|@
tid v3541 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3694 
y: v3467 
=== Succesors ===
=== Usages ===
v1764 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3694 y: v3467  <|@  <|@
f <@*|@fixed>@ <|@
tid v1764 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3541 
=== Succesors ===
trueSuccessor: v1761 
falseSuccessor: v1763 
=== Usages ===
=== Predecessor ===
v3694 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3541 #trueSuccessor: v1761 #falseSuccessor: v1763  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B162" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3695 
=== Usages ===
=== Predecessor ===
v1764 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3695  <|@  <|@
f <@~|@floating>@ <|@
tid v3752 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3691 
=== Succesors ===
=== Usages ===
a3695 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3691  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3695 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.Empty
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v3752 
=== Succesors ===
next: v1768 
=== Usages ===
a1343 
=== Predecessor ===
v1761 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3752 #next: v1768  <|@  <|@
f <@~|@floating>@ <|@
tid a1343 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a -
=== Inputs ===
value: a3695 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3695  <|@  <|@
f <@~|@floating>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a881 
y: a1343 
=== Succesors ===
=== Usages ===
v1768 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a881 y: a1343  <|@  <|@
f <@*|@fixed>@ <|@
tid v1768 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v619 
=== Succesors ===
trueSuccessor: v1765 
falseSuccessor: v1767 
=== Usages ===
=== Predecessor ===
a3695 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v619 #trueSuccessor: v1765 #falseSuccessor: v1767  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" "B158" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j3325 
=== Usages ===
=== Predecessor ===
v1768 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3325 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3340 
=== Usages ===
v3842 v3843 
=== Predecessor ===
v1765 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3340  <|@  <|@
f <@~|@floating>@ <|@
tid v3842 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3325 
index: - 
=== Succesors ===
=== Usages ===
j3340 v3342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3325 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3340 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3842 
=== Succesors ===
next: j3341 
=== Usages ===
j3542 j3346 v3889 
=== Predecessor ===
j3325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3842 #next: j3341  <|@  <|@
f <@~|@floating>@ <|@
tid v3843 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3325 
index: - 
=== Succesors ===
=== Usages ===
j3341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3325 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3843 
=== Succesors ===
next: v3333 
=== Usages ===
v3330 
=== Predecessor ===
j3340 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3843 #next: v3333  <|@  <|@
f <@~|@floating>@ <|@
tid j3542 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3340 
y: j1866 
=== Succesors ===
=== Usages ===
v3330 v3342 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3340 y: j1866  <|@  <|@
f <@~|@floating>@ <|@
tid v3330 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@782e90
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3341 
y: j3542 
=== Succesors ===
=== Usages ===
v3333 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3341 y: j3542  <|@  <|@
f <@*|@fixed>@ <|@
tid v3333 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3330 
=== Succesors ===
trueSuccessor: v3331 
falseSuccessor: v3332 
=== Usages ===
=== Predecessor ===
j3341 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3330 #trueSuccessor: v3331 #falseSuccessor: v3332  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4575888835103545851
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3336 
=== Usages ===
=== Predecessor ===
v3333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3336 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@39bb4106
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?870 
arguments: v2920 i3492 i1797 
=== Succesors ===
next: j3337 
=== Usages ===
j3337 
=== Predecessor ===
v3331 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?870 arguments: v2920 i3492 i1797 #next: j3337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3337 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3336 
=== Succesors ===
next: v3347 
=== Usages ===
j3346 
=== Predecessor ===
a3336 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3336 #next: v3347  <|@  <|@
f <@*|@fixed>@ <|@
tid v3347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3344 
=== Predecessor ===
j3337 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4605500002653506857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3342 
=== Usages ===
=== Predecessor ===
v3333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3842 
value: j3542 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3339 
=== Usages ===
=== Predecessor ===
v3332 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3842 value: j3542 stateAfter: - lastLocationAccess: - #next: v3339  <|@  <|@
f <@~|@floating>@ <|@
tid v3889 <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j3340 
index: - 
=== Succesors ===
=== Usages ===
v3339 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3340 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3889 
=== Succesors ===
next: v3345 
=== Usages ===
=== Predecessor ===
v3342 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3889 #next: v3345  <|@  <|@
f <@*|@fixed>@ <|@
tid v3345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3344 
=== Predecessor ===
v3339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" "B157" 
    successors "B160" "B161" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3346 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3344 
values: j3340 j3337 
=== Succesors ===
=== Usages ===
v3794 v3844 j2422 a2420 v3845 v3890 v3891 v3892 v3893 v3894 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3344 values: j3340 j3337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3345 v3347 
=== Succesors ===
next: a2420 
=== Usages ===
j3346 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3345 v3347 #next: a2420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2420 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3346 
=== Succesors ===
next: a2423 
=== Usages ===
a2435 
=== Predecessor ===
v3344 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3346 #next: a2423  <|@  <|@
f <@~|@floating>@ <|@
tid j2422 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3346 
y: j1943 
=== Succesors ===
=== Usages ===
a2423 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3346 y: j1943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2423 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2422 
=== Succesors ===
next: j3356 
=== Usages ===
a2436 a2428 
=== Predecessor ===
a2420 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2422 #next: j3356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3853 
=== Succesors ===
next: v3357 
=== Usages ===
v3357 
=== Predecessor ===
a2423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3853 #next: v3357  <|@  <|@
f <@~|@floating>@ <|@
tid v3844 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3346 
index: - 
=== Succesors ===
=== Usages ===
v3357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3346 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3844 
value: j3356 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3360 
=== Usages ===
=== Predecessor ===
j3356 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3844 value: j3356 stateAfter: - lastLocationAccess: - #next: v3360  <|@  <|@
f <@~|@floating>@ <|@
tid v3845 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3346 
index: - 
=== Succesors ===
=== Usages ===
v3360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3346 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3360 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3845 
value: v3495 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3364 
=== Usages ===
=== Predecessor ===
v3357 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3845 value: v3495 stateAfter: - lastLocationAccess: - #next: v3364  <|@  <|@
f <@~|@floating>@ <|@
tid v3890 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3346 
index: - 
=== Succesors ===
=== Usages ===
v3364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3346 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2426 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n [Lscala/Option;
=== Inputs ===
value: a877 
=== Succesors ===
=== Usages ===
v3364 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3364 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3890 
value: a2426 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3366 
=== Usages ===
=== Predecessor ===
v3360 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3890 value: a2426 stateAfter: - lastLocationAccess: - #next: v3366  <|@  <|@
f <@~|@floating>@ <|@
tid v3891 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j3346 
index: - 
=== Succesors ===
=== Usages ===
v3366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3346 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2427 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Lcom/twitter/util/Promise$$anon$3;
=== Inputs ===
value: a920 
=== Succesors ===
=== Usages ===
v3366 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3891 
value: a2427 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3368 
=== Usages ===
=== Predecessor ===
v3364 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3891 value: a2427 stateAfter: - lastLocationAccess: - #next: v3368  <|@  <|@
f <@~|@floating>@ <|@
tid v3892 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3346 
index: - 
=== Succesors ===
=== Usages ===
v3368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3346 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2428 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2423 
=== Succesors ===
=== Usages ===
v3368 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3892 
value: a2428 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j3373 
=== Usages ===
=== Predecessor ===
v3366 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3892 value: a2428 stateAfter: - lastLocationAccess: - #next: j3373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3373 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3854 
=== Succesors ===
next: v3374 
=== Usages ===
v3374 
=== Predecessor ===
v3368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3854 #next: v3374  <|@  <|@
f <@~|@floating>@ <|@
tid v3893 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3346 
index: - 
=== Succesors ===
=== Usages ===
v3374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3346 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3374 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3893 
value: j3373 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3377 
=== Usages ===
=== Predecessor ===
j3373 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3893 value: j3373 stateAfter: - lastLocationAccess: - #next: v3377  <|@  <|@
f <@~|@floating>@ <|@
tid v3894 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j3346 
index: - 
=== Succesors ===
=== Usages ===
v3377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3346 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3377 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3894 
value: v3501 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2434 
=== Usages ===
=== Predecessor ===
v3374 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3894 value: v3501 stateAfter: - lastLocationAccess: - #next: v2434  <|@  <|@
f <@~|@floating>@ <|@
tid v3794 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j3346 
index: - 
=== Succesors ===
=== Usages ===
v2434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3346 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3794 
value: a2545 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2435 
=== Usages ===
=== Predecessor ===
v3377 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3794 value: a2545 stateAfter: - lastLocationAccess: - #next: a2435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2435 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2420 
=== Succesors ===
next: a2436 
=== Usages ===
a1355 ?794 
=== Predecessor ===
v2434 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2420 #next: a2436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2436 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2423 
=== Succesors ===
next: v2437 
=== Usages ===
?795 
=== Predecessor ===
a2435 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2423 #next: v2437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2437 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j3696 
=== Usages ===
=== Predecessor ===
a2436 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j3696  <|@  <|@
f <@~|@floating>@ <|@
tid v3754 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3692 
=== Succesors ===
=== Usages ===
j3696 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3696 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$stateOff
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3754 
=== Succesors ===
next: i1357 
=== Usages ===
v3755 
=== Predecessor ===
v2437 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3754 #next: i1357  <|@  <|@
f <@~|@floating>@ <|@
tid v3755 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1881 
index: j3696 
=== Succesors ===
=== Usages ===
i1357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1881 index: j3696  <|@  <|@
f <@~|@floating>@ <|@
tid a1354 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/lang/Object;
=== Inputs ===
value: a881 
=== Succesors ===
=== Usages ===
i1357 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a881  <|@  <|@
f <@~|@floating>@ <|@
tid a1355 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2435 
=== Succesors ===
=== Usages ===
i1357 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1357 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ANY_LOCATION
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3755 
expectedValue: a1354 
newValue: a1355 
stateAfter: - 
=== Succesors ===
next: j3380 
=== Usages ===
?635 i636 
=== Predecessor ===
j3696 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v3755 expectedValue: a1354 newValue: a1355 stateAfter: - #next: j3380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3380 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1881 
=== Succesors ===
next: v3384 
=== Usages ===
j3381 
=== Predecessor ===
i1357 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1881 #next: v3384  <|@  <|@
f <@~|@floating>@ <|@
tid j3381 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$146/1524633570@1cec0275
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3380 
y: i2993 
=== Succesors ===
=== Usages ===
v3846 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3380 y: i2993  <|@  <|@
f <@~|@floating>@ <|@
tid v3846 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3381 
index: j2997 
=== Succesors ===
=== Usages ===
v3384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3381 index: j2997  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3384 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3846 
value: i2999 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1772 
=== Usages ===
=== Predecessor ===
j3380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3846 value: i2999 stateAfter: - lastLocationAccess: - #next: v1772  <|@  <|@
f <@~|@floating>@ <|@
tid i636 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$115/1567088237@42498438
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$116/1100921398@1fb26baa
inputBits: 32
resultBits: 1
stamp: i1
=== Inputs ===
value: i1357 
=== Succesors ===
=== Usages ===
i637 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1357  <|@  <|@
f <@~|@floating>@ <|@
tid i637 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1701538656@15c1f08d
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/999668238@1b27ce49
inputAlwaysPositive: false
inputBits: 1
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i636 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i636  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i637 
y: i153 
=== Succesors ===
=== Usages ===
v1772 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i637 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1772 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v344 
=== Succesors ===
trueSuccessor: v1771 
falseSuccessor: v1769 
=== Usages ===
=== Predecessor ===
v3384 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v344 #trueSuccessor: v1771 #falseSuccessor: v1769  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1770 
=== Usages ===
=== Predecessor ===
v1772 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1770  <|@  <|@
tid ?639 <|@
d <@d|@=== Debug Properties ===
bci: 33
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 763
stackSize: 0
=== Inputs ===
outerFrameState: ?374 
values: a751 a788 - - - - - - - - - 
=== Succesors ===
=== Usages ===
?635 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?374 values: a751 a788 - - - - - - - - -  <|@  <|@
tid ?794 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a788 
materializedValue: a2435 
=== Succesors ===
=== Usages ===
?635 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a788 materializedValue: a2435  <|@  <|@
tid ?795 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a78 
materializedValue: a2436 
=== Succesors ===
=== Usages ===
?635 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a78 materializedValue: a2436  <|@  <|@
tid ?635 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Promise.cas(Object, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 453
stackSize: 1
=== Inputs ===
outerFrameState: ?639 
values: - - - i1357 
virtualObjectMappings: ?760 ?794 ?940 ?795 
=== Succesors ===
=== Usages ===
v1770 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?639 values: - - - i1357 virtualObjectMappings: ?760 ?794 ?940 ?795  <|@  <|@
f <@*|@fixed>@ <|@
tid v1770 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1358
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?635 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1771 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?635  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1769 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v1772 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a920 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1769 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a920 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B164" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2719 
=== Usages ===
=== Predecessor ===
v1768 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2719  <|@  <|@
f <@~|@floating>@ <|@
tid i2720 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -344083
stableDimension: 0
stamp: i32 [-344083] ⇊00000000fffabfed ⇈00000000fffabfed
stampKind: i32
value: int[-344083|0xfffffffffffabfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2710 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2707 
=== Predecessor ===
v1767 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B164" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2717 
=== Usages ===
=== Predecessor ===
v1764 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2717  <|@  <|@
f <@~|@floating>@ <|@
tid i2718 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -342323
stableDimension: 0
stamp: i32 [-342323] ⇊00000000fffac6cd ⇈00000000fffac6cd
stampKind: i32
value: int[-342323|0xfffffffffffac6cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2710 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2707 
=== Predecessor ===
v1763 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" "B162" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2710 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-346379 - -342323] ⇊00000000fffa80c5 ⇈00000000fffafffd
valueDescription: i32
=== Inputs ===
merge: v2707 
values: i2718 i2720 
=== Succesors ===
=== Usages ===
v2712 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2707 values: i2718 i2720  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2707 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2717 v2719 
=== Succesors ===
next: v2712 
=== Usages ===
i2710 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2717 v2719 #next: v2712  <|@  <|@
f <@*|@fixed>@ <|@
tid v2712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?870 
actionAndReason: i2710 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2707 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?870 actionAndReason: i2710 speculation: a2581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B151" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4592384876561998876
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2312 
=== Usages ===
=== Predecessor ===
v2310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2312  <|@  <|@
f <@~|@floating>@ <|@
tid i2311 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i32
=== Inputs ===
x: i2297 
y: i1797 
=== Succesors ===
=== Usages ===
i2297 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2297 y: i1797  <|@  <|@
f <@*|@fixed>@ <|@
tid v2312 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2296 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2308 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2296  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B167" 
    xhandlers
    flags 
    probability 4595601733539563714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2296 
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v2301 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2296 #next: v875  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v872 
=== Predecessor ===
v2300 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B137" "B166" 
    successors "B168" "B176" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a876 <|@
d <@d|@=== Debug Properties ===
stamp: a [Lscala/Option;
valueDescription: a -
=== Inputs ===
merge: v872 
values: a575 a1317 
=== Succesors ===
=== Usages ===
a2471 ?883 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v872 values: a575 a1317  <|@  <|@
f <@~|@floating>@ <|@
tid a1046 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v872 
values: a1333 a1323 
=== Succesors ===
=== Usages ===
v3758 v3847 ?874 v3756 a1382 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v872 values: a1333 a1323  <|@  <|@
f <@~|@floating>@ <|@
tid a924 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/twitter/util/Promise$$anon$3;
valueDescription: a -
=== Inputs ===
merge: v872 
values: a917 a919 
=== Succesors ===
=== Usages ===
a2472 v746 ?883 ?941 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v872 values: a917 a919  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v873 v875 
=== Succesors ===
next: v3697 
=== Usages ===
a876 a1046 a924 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v873 v875 #next: v3697  <|@  <|@
f <@~|@floating>@ <|@
tid v3847 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1046 
index: - 
=== Succesors ===
=== Usages ===
v3697 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1046 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3697 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3847 
=== Succesors ===
next: v1776 
=== Usages ===
v3550 
=== Predecessor ===
v872 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3847 #next: v1776  <|@  <|@
f <@~|@floating>@ <|@
tid v3550 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3697 
y: v3476 
=== Succesors ===
=== Usages ===
v1776 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3697 y: v3476  <|@  <|@
tid ?883 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a788 
values: a876 a924 a78 
=== Succesors ===
=== Usages ===
?874 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a788 values: a876 a924 a78  <|@  <|@
tid ?941 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a780 
materializedValue: a924 
=== Succesors ===
=== Usages ===
?874 ?610 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a780 materializedValue: a924  <|@  <|@
tid ?874 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 761
stackSize: 1
=== Inputs ===
outerFrameState: ?374 
values: a751 a788 - - - - - - - - - a1046 
virtualObjectMappings: ?760 ?883 ?941 ?782 
=== Succesors ===
=== Usages ===
v2726 a3401 a3699 a3702 v3917 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?374 values: a751 a788 - - - - - - - - - a1046 virtualObjectMappings: ?760 ?883 ?941 ?782  <|@  <|@
f <@*|@fixed>@ <|@
tid v1776 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3550 
=== Succesors ===
trueSuccessor: v1773 
falseSuccessor: v1775 
=== Usages ===
=== Predecessor ===
v3697 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3550 #trueSuccessor: v1773 #falseSuccessor: v1775  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B169" "B175" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3698 
=== Usages ===
=== Predecessor ===
v1776 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3698  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3698 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$WaitQueue$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3707 
=== Succesors ===
next: a3699 
=== Usages ===
v3757 
=== Predecessor ===
v1773 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3707 #next: a3699  <|@  <|@
f <@~|@floating>@ <|@
tid v3757 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3698 
=== Succesors ===
=== Usages ===
a3699 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3698  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3699 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.Empty
nullCheck: true
stamp: n -
=== Inputs ===
stateBefore: ?874 
guard: - 
address: v3757 
=== Succesors ===
next: a3700 
=== Usages ===
v1422 
=== Predecessor ===
a3698 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?874 guard: - address: v3757 #next: a3700  <|@  <|@
f <@~|@floating>@ <|@
tid v3756 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1046 
index: - 
=== Succesors ===
=== Usages ===
a3700 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1046 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3700 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$Transforming.waitq
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v3756 
=== Succesors ===
next: v1784 
=== Usages ===
v1422 
=== Predecessor ===
a3699 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3756 #next: v1784  <|@  <|@
f <@~|@floating>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3699 
y: a3700 
=== Succesors ===
=== Usages ===
v1784 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a3699 y: a3700  <|@  <|@
f <@*|@fixed>@ <|@
tid v1784 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1422 
=== Succesors ===
trueSuccessor: v1781 
falseSuccessor: v1783 
=== Usages ===
=== Predecessor ===
a3700 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1422 #trueSuccessor: v1781 #falseSuccessor: v1783  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B170" "B171" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1781 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3701 
=== Usages ===
=== Predecessor ===
v1784 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3701 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3706 
=== Succesors ===
next: a3702 
=== Usages ===
v3760 v3759 
=== Predecessor ===
v1781 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3706 #next: a3702  <|@  <|@
f <@~|@floating>@ <|@
tid v3759 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3701 
=== Succesors ===
=== Usages ===
a3702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3702 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$unsafe
nullCheck: true
stamp: n# Lsun/misc/Unsafe;
=== Inputs ===
stateBefore: ?874 
guard: - 
address: v3759 
=== Succesors ===
next: v3917 
=== Usages ===
v3917 
=== Predecessor ===
a3701 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?874 guard: - address: v3759 #next: v3917  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?874 
object: a3702 
=== Succesors ===
next: j3390 
=== Usages ===
=== Predecessor ===
a3702 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?874 object: a3702 #next: j3390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3390 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3405 
=== Usages ===
v3848 v3849 
=== Predecessor ===
v3917 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3405  <|@  <|@
f <@~|@floating>@ <|@
tid v3848 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3390 
index: - 
=== Succesors ===
=== Usages ===
j3405 v3407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3390 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3405 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3848 
=== Succesors ===
next: j3406 
=== Usages ===
j3551 j3411 v3895 
=== Predecessor ===
j3390 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3848 #next: j3406  <|@  <|@
f <@~|@floating>@ <|@
tid v3849 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3390 
index: - 
=== Succesors ===
=== Usages ===
j3406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3390 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3406 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3849 
=== Succesors ===
next: v3398 
=== Usages ===
v3395 
=== Predecessor ===
j3405 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3849 #next: v3398  <|@  <|@
f <@~|@floating>@ <|@
tid j3551 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3405 
y: j3513 
=== Succesors ===
=== Usages ===
v3395 v3407 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3405 y: j3513  <|@  <|@
f <@~|@floating>@ <|@
tid v3395 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@782e90
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3406 
y: j3551 
=== Succesors ===
=== Usages ===
v3398 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3406 y: j3551  <|@  <|@
f <@*|@fixed>@ <|@
tid v3398 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3395 
=== Succesors ===
trueSuccessor: v3396 
falseSuccessor: v3397 
=== Usages ===
=== Predecessor ===
j3406 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3395 #trueSuccessor: v3396 #falseSuccessor: v3397  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4565877976503276579
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3401 
=== Usages ===
=== Predecessor ===
v3398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3401  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3401 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@39bb4106
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?874 
arguments: v2920 i3516 i1797 
=== Succesors ===
next: j3402 
=== Usages ===
j3402 
=== Predecessor ===
v3396 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?874 arguments: v2920 i3516 i1797 #next: j3402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3402 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3401 
=== Succesors ===
next: v3412 
=== Usages ===
j3411 
=== Predecessor ===
a3401 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3401 #next: v3412  <|@  <|@
f <@*|@fixed>@ <|@
tid v3412 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3409 
=== Predecessor ===
j3402 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4595537396906387982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3407 
=== Usages ===
=== Predecessor ===
v3398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3407 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3848 
value: j3551 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3404 
=== Usages ===
=== Predecessor ===
v3397 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3848 value: j3551 stateAfter: - lastLocationAccess: - #next: v3404  <|@  <|@
f <@~|@floating>@ <|@
tid v3895 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j3405 
index: - 
=== Succesors ===
=== Usages ===
v3404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3895 
=== Succesors ===
next: v3410 
=== Usages ===
=== Predecessor ===
v3407 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3895 #next: v3410  <|@  <|@
f <@*|@fixed>@ <|@
tid v3410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3409 
=== Predecessor ===
v3404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" "B170" 
    successors "B173" "B174" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3411 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3409 
values: j3405 j3402 
=== Succesors ===
=== Usages ===
v3795 v3851 j2459 j2462 a2457 v3852 v3902 v3896 v3897 v3898 v3899 v3900 v3901 v3903 v3904 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3409 values: j3405 j3402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3410 v3412 
=== Succesors ===
next: a2457 
=== Usages ===
j3411 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3410 v3412 #next: a2457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2457 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3411 
=== Succesors ===
next: a2460 
=== Usages ===
a2479 
=== Predecessor ===
v3409 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3411 #next: a2460  <|@  <|@
f <@~|@floating>@ <|@
tid j2459 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3411 
y: j1943 
=== Succesors ===
=== Usages ===
a2460 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3411 y: j1943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2460 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2459 
=== Succesors ===
next: a2463 
=== Usages ===
a2480 a2466 
=== Predecessor ===
a2457 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2459 #next: a2463  <|@  <|@
f <@~|@floating>@ <|@
tid j2462 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3411 
y: j1810 
=== Succesors ===
=== Usages ===
a2463 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3411 y: j1810  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2463 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2462 
=== Succesors ===
next: j3421 
=== Usages ===
a2481 a2473 
=== Predecessor ===
a2460 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2462 #next: j3421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3421 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3850 
=== Succesors ===
next: v3422 
=== Usages ===
v3422 
=== Predecessor ===
a2463 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3850 #next: v3422  <|@  <|@
f <@~|@floating>@ <|@
tid v3851 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3422 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3851 
value: j3421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3425 
=== Usages ===
=== Predecessor ===
j3421 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3851 value: j3421 stateAfter: - lastLocationAccess: - #next: v3425  <|@  <|@
f <@~|@floating>@ <|@
tid v3852 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3425 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3852 
value: v3476 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3429 
=== Usages ===
=== Predecessor ===
v3422 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3852 value: v3476 stateAfter: - lastLocationAccess: - #next: v3429  <|@  <|@
f <@~|@floating>@ <|@
tid v3896 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3429 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2466 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2460 
=== Succesors ===
=== Usages ===
v3429 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2460  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3429 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3896 
value: a2466 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a3703 
=== Usages ===
=== Predecessor ===
v3425 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3896 value: a2466 stateAfter: - lastLocationAccess: - #next: a3703  <|@  <|@
f <@~|@floating>@ <|@
tid v3758 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1046 
index: - 
=== Succesors ===
=== Usages ===
a3703 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1046 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3703 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$Transforming.other
nullCheck: false
stamp: n Lcom/twitter/util/Future;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3758 
=== Succesors ===
next: v3431 
=== Usages ===
v3431 
=== Predecessor ===
v3429 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3758 #next: v3431  <|@  <|@
f <@~|@floating>@ <|@
tid v3897 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3431 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3431 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3897 
value: a3703 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j3436 
=== Usages ===
=== Predecessor ===
a3703 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3897 value: a3703 stateAfter: - lastLocationAccess: - #next: j3436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3436 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3853 
=== Succesors ===
next: v3437 
=== Usages ===
v3437 
=== Predecessor ===
v3431 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3853 #next: v3437  <|@  <|@
f <@~|@floating>@ <|@
tid v3898 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3437 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3898 
value: j3436 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3440 
=== Usages ===
=== Predecessor ===
j3436 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3898 value: j3436 stateAfter: - lastLocationAccess: - #next: v3440  <|@  <|@
f <@~|@floating>@ <|@
tid v3899 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3440 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3899 
value: v3495 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3444 
=== Usages ===
=== Predecessor ===
v3437 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3899 value: v3495 stateAfter: - lastLocationAccess: - #next: v3444  <|@  <|@
f <@~|@floating>@ <|@
tid v3900 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2471 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n [Lscala/Option;
=== Inputs ===
value: a876 
=== Succesors ===
=== Usages ===
v3444 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a876  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3444 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3900 
value: a2471 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3446 
=== Usages ===
=== Predecessor ===
v3440 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3900 value: a2471 stateAfter: - lastLocationAccess: - #next: v3446  <|@  <|@
f <@~|@floating>@ <|@
tid v3901 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2472 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Lcom/twitter/util/Promise$$anon$3;
=== Inputs ===
value: a924 
=== Succesors ===
=== Usages ===
v3446 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a924  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3446 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3901 
value: a2472 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3448 
=== Usages ===
=== Predecessor ===
v3444 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3901 value: a2472 stateAfter: - lastLocationAccess: - #next: v3448  <|@  <|@
f <@~|@floating>@ <|@
tid v3902 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2473 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2463 
=== Succesors ===
=== Usages ===
v3448 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3448 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3902 
value: a2473 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j3453 
=== Usages ===
=== Predecessor ===
v3446 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3902 value: a2473 stateAfter: - lastLocationAccess: - #next: j3453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3854 
=== Succesors ===
next: v3454 
=== Usages ===
v3454 
=== Predecessor ===
v3448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3854 #next: v3454  <|@  <|@
f <@~|@floating>@ <|@
tid v3903 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3454 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3903 
value: j3453 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3457 
=== Usages ===
=== Predecessor ===
j3453 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3903 value: j3453 stateAfter: - lastLocationAccess: - #next: v3457  <|@  <|@
f <@~|@floating>@ <|@
tid v3904 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3457 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3904 
value: v3501 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2478 
=== Usages ===
=== Predecessor ===
v3454 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3904 value: v3501 stateAfter: - lastLocationAccess: - #next: v2478  <|@  <|@
f <@~|@floating>@ <|@
tid v3795 <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v2478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3795 
value: a2545 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2479 
=== Usages ===
=== Predecessor ===
v3457 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3795 value: a2545 stateAfter: - lastLocationAccess: - #next: a2479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2479 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2457 
=== Succesors ===
next: a2480 
=== Usages ===
a1383 
=== Predecessor ===
v2478 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2457 #next: a2480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2480 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2460 
=== Succesors ===
next: a2481 
=== Usages ===
?801 
=== Predecessor ===
a2479 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2460 #next: a2481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2481 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2463 
=== Succesors ===
next: v2482 
=== Usages ===
?802 
=== Predecessor ===
a2480 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2463 #next: v2482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2482 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j3704 
=== Usages ===
=== Predecessor ===
a2481 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j3704  <|@  <|@
f <@~|@floating>@ <|@
tid v3760 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3701 
=== Succesors ===
=== Usages ===
j3704 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3704 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$stateOff
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3760 
=== Succesors ===
next: i1385 
=== Usages ===
v3761 
=== Predecessor ===
v2482 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3760 #next: i1385  <|@  <|@
f <@~|@floating>@ <|@
tid v3761 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1881 
index: j3704 
=== Succesors ===
=== Usages ===
i1385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1881 index: j3704  <|@  <|@
f <@~|@floating>@ <|@
tid a1382 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/lang/Object;
=== Inputs ===
value: a1046 
=== Succesors ===
=== Usages ===
i1385 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1046  <|@  <|@
f <@~|@floating>@ <|@
tid a1383 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2479 
=== Succesors ===
=== Usages ===
i1385 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1385 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ANY_LOCATION
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3761 
expectedValue: a1382 
newValue: a1383 
stateAfter: - 
=== Succesors ===
next: j3460 
=== Usages ===
?610 i611 
=== Predecessor ===
j3704 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v3761 expectedValue: a1382 newValue: a1383 stateAfter: - #next: j3460  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3460 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1881 
=== Succesors ===
next: v3464 
=== Usages ===
j3461 
=== Predecessor ===
i1385 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1881 #next: v3464  <|@  <|@
f <@~|@floating>@ <|@
tid j3461 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$146/1524633570@1cec0275
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3460 
y: i2993 
=== Succesors ===
=== Usages ===
v3855 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3460 y: i2993  <|@  <|@
f <@~|@floating>@ <|@
tid v3855 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3461 
index: j2997 
=== Succesors ===
=== Usages ===
v3464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3461 index: j2997  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3464 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3855 
value: i2999 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1796 
=== Usages ===
=== Predecessor ===
j3460 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3855 value: i2999 stateAfter: - lastLocationAccess: - #next: v1796  <|@  <|@
f <@~|@floating>@ <|@
tid i611 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$115/1567088237@42498438
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$116/1100921398@1fb26baa
inputBits: 32
resultBits: 1
stamp: i1
=== Inputs ===
value: i1385 
=== Succesors ===
=== Usages ===
i612 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1385  <|@  <|@
f <@~|@floating>@ <|@
tid i612 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1701538656@15c1f08d
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/999668238@1b27ce49
inputAlwaysPositive: false
inputBits: 1
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i611 
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i611  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i612 
y: i153 
=== Succesors ===
=== Usages ===
v1796 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i612 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1796 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v1795 
falseSuccessor: v1793 
=== Usages ===
=== Predecessor ===
v3464 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v1795 #falseSuccessor: v1793  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1795 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1794 
=== Usages ===
=== Predecessor ===
v1796 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1794  <|@  <|@
tid ?614 <|@
d <@d|@=== Debug Properties ===
bci: 159
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 769
stackSize: 0
=== Inputs ===
outerFrameState: ?374 
values: a751 a788 - - - - - - - - - 
=== Succesors ===
=== Usages ===
?610 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?374 values: a751 a788 - - - - - - - - -  <|@  <|@
tid ?801 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a788 
materializedValue: a2480 
=== Succesors ===
=== Usages ===
?610 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a788 materializedValue: a2480  <|@  <|@
tid ?802 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a78 
materializedValue: a2481 
=== Succesors ===
=== Usages ===
?610 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a78 materializedValue: a2481  <|@  <|@
tid ?610 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Promise.cas(Object, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 453
stackSize: 1
=== Inputs ===
outerFrameState: ?614 
values: - - - i1385 
virtualObjectMappings: ?760 ?801 ?941 ?802 
=== Succesors ===
=== Usages ===
v1794 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?614 values: - - - i1385 virtualObjectMappings: ?760 ?801 ?941 ?802  <|@  <|@
f <@*|@fixed>@ <|@
tid v1794 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1386
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?610 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1795 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?610  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1793 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v1796 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v746  <|@  <|@
f <@*|@fixed>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a924 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1793 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a924 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2731 
=== Usages ===
=== Predecessor ===
v1784 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2731  <|@  <|@
f <@~|@floating>@ <|@
tid i2732 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -350483
stableDimension: 0
stamp: i32 [-350483] ⇊00000000fffaa6ed ⇈00000000fffaa6ed
stampKind: i32
value: int[-350483|0xfffffffffffaa6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2724 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2721 
=== Predecessor ===
v1783 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2727 
=== Usages ===
=== Predecessor ===
v1776 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2727  <|@  <|@
f <@~|@floating>@ <|@
tid i2728 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -347923
stableDimension: 0
stamp: i32 [-347923] ⇊00000000fffab0ed ⇈00000000fffab0ed
stampKind: i32
value: int[-347923|0xfffffffffffab0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2724 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2721 
=== Predecessor ===
v1775 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" "B175" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2724 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-353547 - -347923] ⇊00000000fffa80e5 ⇈00000000fffabefd
valueDescription: i32
=== Inputs ===
merge: v2721 
values: i2728 i2732 
=== Succesors ===
=== Usages ===
v2726 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2721 values: i2728 i2732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2727 v2731 
=== Succesors ===
next: v2726 
=== Usages ===
i2724 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2727 v2731 #next: v2726  <|@  <|@
f <@*|@fixed>@ <|@
tid v2726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?874 
actionAndReason: i2724 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2721 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?874 actionAndReason: i2724 speculation: a2581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2895 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1742 
=== Usages ===
=== Predecessor ===
v3595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1742  <|@  <|@
tid ?827 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 1
=== Inputs ===
outerFrameState: ?562 
values: - - a1043 
virtualObjectMappings: ?782 ?943 ?760 ?789 
=== Succesors ===
=== Usages ===
v1742 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?562 values: - - a1043 virtualObjectMappings: ?782 ?943 ?760 ?789  <|@  <|@
f <@*|@fixed>@ <|@
tid v1742 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1321
reason: ClassCastException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?827 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2895 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?827  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1739 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2743 
=== Usages ===
=== Predecessor ===
v1740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2743  <|@  <|@
f <@~|@floating>@ <|@
tid i2744 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -336403
stableDimension: 0
stamp: i32 [-336403] ⇊00000000fffadded ⇈00000000fffadded
stampKind: i32
value: int[-336403|0xfffffffffffadded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2738 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2735 
=== Predecessor ===
v1739 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2741 
=== Usages ===
=== Predecessor ===
v1728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2741  <|@  <|@
f <@~|@floating>@ <|@
tid i2742 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -333339
stableDimension: 0
stamp: i32 [-333339] ⇊00000000fffae9e5 ⇈00000000fffae9e5
stampKind: i32
value: int[-333339|0xfffffffffffae9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2738 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2741 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2735 
=== Predecessor ===
v1727 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" "B179" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2738 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-336403 - -331787] ⇊00000000fffac9e5 ⇈00000000fffafffd
valueDescription: i32
=== Inputs ===
merge: v2735 
values: i2742 i2744 
=== Succesors ===
=== Usages ===
v2740 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2735 values: i2742 i2744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2735 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2741 v2743 
=== Succesors ===
next: v2740 
=== Usages ===
i2738 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2741 v2743 #next: v2740  <|@  <|@
f <@*|@fixed>@ <|@
tid v2740 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?905 
actionAndReason: i2738 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2735 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?905 actionAndReason: i2738 speculation: a2581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2763 
=== Usages ===
=== Predecessor ===
v1720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2763  <|@  <|@
f <@~|@floating>@ <|@
tid i2764 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -329267
stableDimension: 0
stamp: i32 [-329267] ⇊00000000fffaf9cd ⇈00000000fffaf9cd
stampKind: i32
value: int[-329267|0xfffffffffffaf9cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2753 
=== Predecessor ===
v1719 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B115" "B182" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2756 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-329267 - -326675] ⇊00000000fffa00c5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v2753 
values: i2755 i2764 
=== Succesors ===
=== Usages ===
v2758 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2753 values: i2755 i2764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2753 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2754 v2763 
=== Succesors ===
next: v2758 
=== Usages ===
i2756 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2754 v2763 #next: v2758  <|@  <|@
f <@*|@fixed>@ <|@
tid v2758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1003 
actionAndReason: i2756 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2753 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1003 actionAndReason: i2756 speculation: a2581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2750 
=== Usages ===
=== Predecessor ===
v1704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2750  <|@  <|@
f <@~|@floating>@ <|@
tid i2752 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -323123
stableDimension: 0
stamp: i32 [-323123] ⇊00000000fffb11cd ⇈00000000fffb11cd
stampKind: i32
value: int[-323123|0xfffffffffffb11cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2750 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?974 
actionAndReason: i2752 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1703 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?974 actionAndReason: i2752 speculation: a2581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B187" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2703 
=== Usages ===
=== Predecessor ===
v1660 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2703  <|@  <|@
f <@~|@floating>@ <|@
tid i2704 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -314131
stableDimension: 0
stamp: i32 [-314131] ⇊00000000fffb34ed ⇈00000000fffb34ed
stampKind: i32
value: int[-314131|0xfffffffffffb34ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2696 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2693 
=== Predecessor ===
v1659 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B187" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2699 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2699  <|@  <|@
f <@~|@floating>@ <|@
tid i2700 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -311571
stableDimension: 0
stamp: i32 [-311571] ⇊00000000fffb3eed ⇈00000000fffb3eed
stampKind: i32
value: int[-311571|0xfffffffffffb3eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2696 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2693 
=== Predecessor ===
v1651 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" "B185" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2696 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-317195 - -311571] ⇊00000000fffb20e5 ⇈00000000fffb3efd
valueDescription: i32
=== Inputs ===
merge: v2693 
values: i2700 i2704 
=== Succesors ===
=== Usages ===
v2698 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2693 values: i2700 i2704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2699 v2703 
=== Succesors ===
next: v2698 
=== Usages ===
i2696 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2699 v2703 #next: v2698  <|@  <|@
f <@*|@fixed>@ <|@
tid v2698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?843 
actionAndReason: i2696 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2693 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?843 actionAndReason: i2696 speculation: a2581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2825 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1570 
=== Usages ===
=== Predecessor ===
v3579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1570  <|@  <|@
tid ?812 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 1
=== Inputs ===
outerFrameState: ?428 
values: - - a1036 
virtualObjectMappings: ?754 ?760 ?761 ?763 
=== Succesors ===
=== Usages ===
v1570 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?428 values: - - a1036 virtualObjectMappings: ?754 ?760 ?761 ?763  <|@  <|@
f <@*|@fixed>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1132
reason: ClassCastException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?812 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2825 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?812  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B192" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2629 
=== Usages ===
=== Predecessor ===
v1568 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2629  <|@  <|@
f <@~|@floating>@ <|@
tid i2630 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -287763
stableDimension: 0
stamp: i32 [-287763] ⇊00000000fffb9bed ⇈00000000fffb9bed
stampKind: i32
value: int[-287763|0xfffffffffffb9bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2616 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2613 
=== Predecessor ===
v1567 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B192" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2627 
=== Usages ===
=== Predecessor ===
v1556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2627  <|@  <|@
f <@~|@floating>@ <|@
tid i2628 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -284443
stableDimension: 0
stamp: i32 [-284443] ⇊00000000fffba8e5 ⇈00000000fffba8e5
stampKind: i32
value: int[-284443|0xfffffffffffba8e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2616 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2627 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2613 
=== Predecessor ===
v1555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B192" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2623 
=== Usages ===
=== Predecessor ===
v1548 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2623  <|@  <|@
f <@~|@floating>@ <|@
tid i2624 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -279859
stableDimension: 0
stamp: i32 [-279859] ⇊00000000fffbbacd ⇈00000000fffbbacd
stampKind: i32
value: int[-279859|0xfffffffffffbbacd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2616 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2613 
=== Predecessor ===
v1547 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B18" "B191" "B190" "B189" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2616 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-287763 - -276499] ⇊00000000fffb80c5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v2613 
values: i2615 i2624 i2628 i2630 
=== Succesors ===
=== Usages ===
v2618 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2613 values: i2615 i2624 i2628 i2630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2614 v2623 v2627 v2629 
=== Succesors ===
next: v2618 
=== Usages ===
i2616 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2614 v2623 v2627 v2629 #next: v2618  <|@  <|@
f <@*|@fixed>@ <|@
tid v2618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?407 
actionAndReason: i2616 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2613 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?407 actionAndReason: i2616 speculation: a2581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2594 
=== Usages ===
=== Predecessor ===
v1532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2594  <|@  <|@
f <@~|@floating>@ <|@
tid i2596 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -273459
stableDimension: 0
stamp: i32 [-273459] ⇊00000000fffbd3cd ⇈00000000fffbd3cd
stampKind: i32
value: int[-273459|0xfffffffffffbd3cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2594 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?158 
actionAndReason: i2596 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1531 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?158 actionAndReason: i2596 speculation: a2581  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a3598 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a3598  <|@  <|@
f <@~|@floating>@ <|@
tid a1049 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:com.twitter.util.Promise$
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:com.twitter.util.Promise$]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3706 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3706 <|@
result [v0|QWORD[.] + 104] <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a1049 
index: - 
=== Succesors ===
=== Usages ===
a3598 a3630 a3635 a3639 a3655 a3659 a3663 a3692 a3701 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1049 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3598 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3706 
=== Succesors ===
next: v3906 
=== Usages ===
?90 v3906 v3709 v3710 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3706 #next: v3906  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FutureBench.notFused()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 195
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
v2584 v3906 v3907 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a3598 
=== Succesors ===
next: a3599 
=== Usages ===
=== Predecessor ===
a3598 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a3598 #next: a3599  <|@  <|@
f <@~|@floating>@ <|@
tid a1055 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:com.twitter.util.Promise$WaitQueue$
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:com.twitter.util.Promise$WaitQueue$]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3707 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3707 <|@
result [v2|QWORD[.] + 104] <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a1055 
index: - 
=== Succesors ===
=== Usages ===
a3599 a3629 a3636 a3652 a3660 a3691 a3698 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1055 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3599 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$WaitQueue$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3707 
=== Succesors ===
next: v3907 
=== Usages ===
v3708 v3907 
=== Predecessor ===
v3906 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3707 #next: v3907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a3599 
=== Succesors ===
next: a3600 
=== Usages ===
=== Predecessor ===
a3599 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a3599 #next: a3600  <|@  <|@
f <@~|@floating>@ <|@
tid v3709 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3598 
=== Succesors ===
=== Usages ===
a3600 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3598  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3600 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$unsafe
nullCheck: false
stamp: n# Lsun/misc/Unsafe;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3709 
=== Succesors ===
next: v1516 
=== Usages ===
v1389 
=== Predecessor ===
v3907 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3709 #next: v1516  <|@  <|@
f <@~|@floating>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3600 
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3600  <|@  <|@
f <@~|@floating>@ <|@
tid a2581 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2584 v2770 v2650 v2684 v2594 v2676 v2602 v2636 v2610 v2664 v2698 v2740 v2712 v2750 v2758 v2618 v2726 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1389 
=== Succesors ===
trueSuccessor: v1515 
falseSuccessor: v1513 
=== Usages ===
=== Predecessor ===
a3600 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1389 #trueSuccessor: v1515 #falseSuccessor: v1513  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@201e25c4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.FutureBench.notFused(Bench.scala:195) [bci: 0]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v1|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.FutureBench.notFused(Bench.scala:195) [bci: 0]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2584 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2584  <|@  <|@
f <@~|@floating>@ <|@
tid i2588 <|@
result int[-275211|0xfffffffffffbccf5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -275211
stableDimension: 0
stamp: i32 [-275211] ⇊00000000fffbccf5 ⇈00000000fffbccf5
stampKind: i32
value: int[-275211|0xfffffffffffbccf5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2584 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2584 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i2588 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1515 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i2588 speculation: a2581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -275211 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.FutureBench.notFused(Bench.scala:195) [bci: 0]
locals: - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3601 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3601  <|@  <|@
f <@~|@floating>@ <|@
tid v3708 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3599 
=== Succesors ===
=== Usages ===
a3601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3599  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3601 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.Empty
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v3708 
=== Succesors ===
next: v1802 
=== Usages ===
?380 v1873 v1880 v2773 v3796 i1079 v2978 ?753 ?158 ?752 
=== Predecessor ===
v1513 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3708 #next: v1802  <|@  <|@
tid a71 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@72460335
hasIdentity: true
objectId: 2
stamp: a!# Lcom/twitter/util/Promise;
type: HotSpotType<Lcom/twitter/util/Promise;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?480 ?505 ?33 ?76 ?380 ?386 ?90 ?89 ?76 ?752 ?158 ?859 ?839 ?843 ?411 ?761 ?193 ?205 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?752 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a71 
values: a3601 
=== Succesors ===
=== Usages ===
?380 ?158 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a71 values: a3601  <|@  <|@
tid a751 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@72460335
hasIdentity: true
objectId: 0
stamp: a!# Lcom/twitter/util/Promise$$anon$3;
type: HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?386 ?90 ?753 ?158 ?974 ?966 ?411 ?760 ?193 ?256 ?1022 ?688 ?694 ?119 ?118 ?58 ?276 ?547 ?311 ?323 ?639 ?614 ?870 ?874 ?890 ?1006 ?910 ?1017 ?958 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?753 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a751 
values: a3601 
=== Succesors ===
=== Usages ===
?380 ?158 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a751 values: a3601  <|@  <|@
f <@~|@floating>@ <|@
tid v3796 <|@
result [v5|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3601 
=== Succesors ===
=== Usages ===
v3602 v3604 v3606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3601  <|@  <|@
f <@~|@floating>@ <|@
tid v2773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3601 
=== Succesors ===
=== Usages ===
v1802 v1823 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3601  <|@  <|@
tid ?22 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<FutureBench.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 195
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?32 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
tid ?32 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<Future.map(Function1)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Future.scala
sourceLine: 1811
stackSize: 0
=== Inputs ===
outerFrameState: ?22 
values: - - 
=== Succesors ===
=== Usages ===
?33 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?22 values: - -  <|@  <|@
tid a72 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@1928ac20
hasIdentity: true
objectId: 4
stamp: a!# Lcom/twitter/util/Future$$Lambda$8/112631710;
type: HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?867 ?776 ?33 ?77 ?89 ?77 ?754 ?193 ?764 ?852 ?769 ?851 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Promise.transform(Function1)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 417
stackSize: 0
=== Inputs ===
outerFrameState: ?32 
values: a71 a72 
=== Succesors ===
=== Usages ===
?107 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?32 values: a71 a72  <|@  <|@
tid ?76 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a71 
materializedValue: a71 
=== Succesors ===
=== Usages ===
?107 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a71 materializedValue: a71  <|@  <|@
tid ?77 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a72 
materializedValue: a72 
=== Succesors ===
=== Usages ===
?107 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a72 materializedValue: a72  <|@  <|@
tid ?107 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Promise$Responder.transform$(Promise$Responder, Function1)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 303
stackSize: 0
=== Inputs ===
outerFrameState: ?33 
values: - - 
virtualObjectMappings: ?76 ?77 
=== Succesors ===
=== Usages ===
?89 ?193 ?256 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?33 values: - - virtualObjectMappings: ?76 ?77  <|@  <|@
tid ?89 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<Promise$Responder.transform(Function1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 304
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a71 a72 - 
=== Succesors ===
=== Usages ===
?90 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a71 a72 -  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Promise$.interrupts(Future)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 329
stackSize: 1
=== Inputs ===
outerFrameState: ?89 
values: a3598 a71 a751 
=== Succesors ===
=== Usages ===
?181 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?89 values: a3598 a71 a751  <|@  <|@
tid ?181 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Promise$$anon$3.<init>(Future)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 330
stackSize: 0
=== Inputs ===
outerFrameState: ?90 
values: - - 
=== Succesors ===
=== Usages ===
?386 ?158 ?411 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?90 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid a15 <|@
result Object[FutureBench$$Lambda$7/390800101@687091653] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: FutureBench$$Lambda$7/390800101@687091653
stableDimension: 0
stamp: a!# Lbench/FutureBench$$Lambda$7/390800101;
stampKind: a -
value: Object[FutureBench$$Lambda$7/390800101@687091653]
=== Inputs ===
=== Succesors ===
=== Usages ===
?754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?754 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a72 
values: a15 
=== Succesors ===
=== Usages ===
?380 ?158 ?407 ?2569 ?812 ?2570 ?442 ?859 ?205 ?839 ?843 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a72 values: a15  <|@  <|@
f <@~|@floating>@ <|@
tid v1798 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1806 v2077 v2194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1802 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v2773 
=== Succesors ===
trueSuccessor: v1801 
falseSuccessor: v1800 
=== Usages ===
=== Predecessor ===
a3601 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2773 #trueSuccessor: v1801 #falseSuccessor: v1800  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>} <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD[.], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1801 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1813 
=== Usages ===
=== Predecessor ===
v1802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1813  <|@  <|@
f <@*|@fixed>@ <|@
tid v1813 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2780 
=== Predecessor ===
v1801 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1800 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3602 
=== Usages ===
=== Predecessor ===
v1802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3602 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3796 
=== Succesors ===
next: v3603 
=== Usages ===
v3762 
=== Predecessor ===
v1800 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3796 #next: v3603  <|@  <|@
f <@~|@floating>@ <|@
tid v3762 <|@
result [v7|DWORD * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3602 
=== Succesors ===
=== Usages ===
v3603 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3603 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3762 
=== Succesors ===
next: v2785 
=== Usages ===
v1806 
=== Predecessor ===
v3602 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3762 #next: v2785  <|@  <|@
f <@~|@floating>@ <|@
tid v1806 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3603 
y: v1798 
=== Succesors ===
=== Usages ===
v2785 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3603 y: v1798  <|@  <|@
f <@*|@fixed>@ <|@
tid v2785 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1806 
=== Succesors ===
trueSuccessor: v2783 
falseSuccessor: v2782 
=== Usages ===
=== Predecessor ===
v3603 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1806 #trueSuccessor: v2783 #falseSuccessor: v2782  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v5|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: [v7|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2606 
=== Usages ===
=== Predecessor ===
v2785 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2606  <|@  <|@
f <@~|@floating>@ <|@
tid i2607 <|@
result int[-272403|0xfffffffffffbd7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -272403
stableDimension: 0
stamp: i32 [-272403] ⇊00000000fffbd7ed ⇈00000000fffbd7ed
stampKind: i32
value: int[-272403|0xfffffffffffbd7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2608 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2605 
=== Predecessor ===
v2783 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-272403|0xfffffffffffbd7ed]] destination: B5 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2786 
=== Usages ===
=== Predecessor ===
v2785 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2786  <|@  <|@
f <@*|@fixed>@ <|@
tid v2786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2780 
=== Predecessor ===
v2782 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2780 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1813 v2786 
=== Succesors ===
next: v1823 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1813 v2786 #next: v1823  <|@  <|@
f <@~|@floating>@ <|@
tid v1819 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1827 v2096 v2213 j2981 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1823 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v2773 
=== Succesors ===
trueSuccessor: v1822 
falseSuccessor: v1821 
=== Usages ===
=== Predecessor ===
v2780 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2773 #trueSuccessor: v1822 #falseSuccessor: v1821  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>} <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD[.], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1822 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1834 
=== Usages ===
=== Predecessor ===
v1823 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1834  <|@  <|@
f <@*|@fixed>@ <|@
tid v1834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2790 
=== Predecessor ===
v1822 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3604 
=== Usages ===
=== Predecessor ===
v1823 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3604 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3796 
=== Succesors ===
next: v3605 
=== Usages ===
v3763 
=== Predecessor ===
v1821 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3796 #next: v3605  <|@  <|@
f <@~|@floating>@ <|@
tid v3763 <|@
result [v9|DWORD * 8 + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3604 
=== Succesors ===
=== Usages ===
v3605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3605 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3763 
=== Succesors ===
next: v2795 
=== Usages ===
v1827 
=== Predecessor ===
v3604 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3763 #next: v2795  <|@  <|@
f <@~|@floating>@ <|@
tid v1827 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3605 
y: v1819 
=== Succesors ===
=== Usages ===
v2795 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3605 y: v1819  <|@  <|@
f <@*|@fixed>@ <|@
tid v2795 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1827 
=== Succesors ===
trueSuccessor: v2793 
falseSuccessor: v2792 
=== Usages ===
=== Predecessor ===
v3605 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1827 #trueSuccessor: v2793 #falseSuccessor: v2792  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v5|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: [v9|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2793 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2611 
=== Usages ===
=== Predecessor ===
v2795 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2611  <|@  <|@
f <@~|@floating>@ <|@
tid i2612 <|@
result int[-272659|0xfffffffffffbd6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -272659
stableDimension: 0
stamp: i32 [-272659] ⇊00000000fffbd6ed ⇈00000000fffbd6ed
stampKind: i32
value: int[-272659|0xfffffffffffbd6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2608 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2611 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2605 
=== Predecessor ===
v2793 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-272659|0xfffffffffffbd6ed]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2608 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-272659 - -272403] ⇊00000000fffbd6ed ⇈00000000fffbd7ed
valueDescription: i32
=== Inputs ===
merge: v2605 
values: i2607 i2612 
=== Succesors ===
=== Usages ===
v2610 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2605 values: i2607 i2612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2605 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2606 v2611 
=== Succesors ===
next: v2610 
=== Usages ===
i2608 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2606 v2611 #next: v2610  <|@  <|@
tid ?386 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Promise.forwardInterruptsTo(Future)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 503
stackSize: 0
=== Inputs ===
outerFrameState: ?181 
values: a751 a71 - - - - - - - - 
=== Succesors ===
=== Usages ===
?380 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?181 values: a751 a71 - - - - - - - -  <|@  <|@
tid ?380 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.isDefined()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 840
stackSize: 1
=== Inputs ===
outerFrameState: ?386 
values: a71 - - - a3601 
virtualObjectMappings: ?752 ?753 ?754 
=== Succesors ===
=== Usages ===
v2610 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?386 values: a71 - - - a3601 virtualObjectMappings: ?752 ?753 ?754  <|@  <|@
f <@*|@fixed>@ <|@
tid v2610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?380 
actionAndReason: i2608 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2605 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?380 actionAndReason: i2608 speculation: a2581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.isDefined(Promise.scala:840) [bci: 4]
stack: v5|DWORD[.] 
locals: vobject:Promise:0{state=v5|DWORD[.]} - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:503) [bci: 1]
locals: vobject:Promise$$anon$3:1{state=v5|DWORD[.]} vobject:Promise:0{state=v5|DWORD[.]} - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:1{state=v5|DWORD[.]} 
locals: v1|DWORD[.] vobject:Promise:0{state=v5|DWORD[.]} 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: vobject:Promise:0{state=v5|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: vobject:Promise:0{state=v5|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise:0{state=v5|DWORD[.]} Lcom/twitter/util/Promise; v5|DWORD[.] 
vobject:Promise$$anon$3:1{state=v5|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v5|DWORD[.] 
vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:4, 1, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2792 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2796 
=== Usages ===
=== Predecessor ===
v2795 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2796  <|@  <|@
f <@*|@fixed>@ <|@
tid v2796 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2790 
=== Predecessor ===
v2792 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B193" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2790 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1834 v2796 
=== Succesors ===
next: v3606 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1834 v2796 #next: v3606  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<Promise.forwardInterruptsTo(Future)>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 504
stackSize: 1
=== Inputs ===
outerFrameState: ?181 
values: a751 a71 - - - - - - - - a3601 
virtualObjectMappings: ?753 ?752 ?754 
=== Succesors ===
=== Usages ===
v2594 a2934 v3606 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?181 values: a751 a71 - - - - - - - - a3601 virtualObjectMappings: ?753 ?752 ?754  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3606 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?158 
guard: - 
address: v3796 
=== Succesors ===
next: v1532 
=== Usages ===
v3468 
=== Predecessor ===
v2790 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?158 guard: - address: v3796 #next: v1532  <|@  <|@
f <@~|@floating>@ <|@
tid v3467 <|@
result meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3468 v3489 v3504 v3531 v3541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3468 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3606 
y: v3467 
=== Succesors ===
=== Usages ===
v1532 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3606 y: v3467  <|@  <|@
f <@*|@fixed>@ <|@
tid v1532 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3468 
=== Succesors ===
trueSuccessor: v1529 
falseSuccessor: v1531 
=== Usages ===
=== Predecessor ===
v3606 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3468 #trueSuccessor: v1529 #falseSuccessor: v1531  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: v5|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=v5|DWORD[.]} vobject:Promise:1{state=v5|DWORD[.]} - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v5|DWORD[.]} 
locals: v1|DWORD[.] vobject:Promise:1{state=v5|DWORD[.]} 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: vobject:Promise:1{state=v5|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: vobject:Promise:1{state=v5|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$$anon$3:0{state=v5|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v5|DWORD[.] 
vobject:Promise:1{state=v5|DWORD[.]} Lcom/twitter/util/Promise; v5|DWORD[.] 
vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction CMP [v5|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} state [bci:12, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j2922 
=== Usages ===
=== Predecessor ===
v1532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2922  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2922 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2941 
=== Usages ===
v3797 v3798 
=== Predecessor ===
v1529 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2941  <|@  <|@
f <@~|@floating>@ <|@
tid v3797 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2922 
index: - 
=== Succesors ===
=== Usages ===
j2941 v2943 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2922 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2941 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3797 
=== Succesors ===
next: j2942 
=== Usages ===
j3469 j2947 v3856 
=== Predecessor ===
j2922 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3797 #next: j2942  <|@  <|@
f <@~|@floating>@ <|@
tid v3798 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2922 
index: - 
=== Succesors ===
=== Usages ===
j2942 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2922 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2942 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3798 
=== Succesors ===
next: v2930 
=== Usages ===
v2927 
=== Predecessor ===
j2941 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3798 #next: v2930  <|@  <|@
f <@~|@floating>@ <|@
tid j1831 <|@
result long[56|0x38] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3469 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j2941 
y: j1831 
=== Succesors ===
=== Usages ===
v2927 v2943 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2941 y: j1831  <|@  <|@
f <@~|@floating>@ <|@
tid v2927 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@782e90
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2942 
y: j3469 
=== Succesors ===
=== Usages ===
v2930 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2942 y: j3469  <|@  <|@
f <@~|@floating>@ <|@
tid i1797 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1941 i2382 i2014 i2311 a2934 a3032 a3105 a3172 a3258 a3336 a3401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2920 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2934 a3032 a3105 a3172 a3258 a3336 a3401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2930 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2927 
=== Succesors ===
trueSuccessor: v2928 
falseSuccessor: v2929 
=== Usages ===
=== Predecessor ===
j2942 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2927 #trueSuccessor: v2928 #falseSuccessor: v2929  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA [v11|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2934 
=== Usages ===
=== Predecessor ===
v2930 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2934  <|@  <|@
f <@~|@floating>@ <|@
tid i3470 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2934 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2934 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@39bb4106
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?158 
arguments: v2920 i3470 i1797 
=== Succesors ===
next: j2935 
=== Usages ===
j2935 
=== Predecessor ===
v2928 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?158 arguments: v2920 i3470 i1797 #next: j2935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2935 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2934 
=== Succesors ===
next: v2948 
=== Usages ===
j2947 
=== Predecessor ===
a2934 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2934 #next: v2948  <|@  <|@
f <@*|@fixed>@ <|@
tid v2948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2945 
=== Predecessor ===
j2935 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: v5|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=v5|DWORD[.]} vobject:Promise:1{state=v5|DWORD[.]} - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v5|DWORD[.]} 
locals: v1|DWORD[.] vobject:Promise:1{state=v5|DWORD[.]} 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: vobject:Promise:1{state=v5|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: vobject:Promise:1{state=v5|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$$anon$3:0{state=v5|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v5|DWORD[.] 
vobject:Promise:1{state=v5|DWORD[.]} Lcom/twitter/util/Promise; v5|DWORD[.] 
vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:12, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2929 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2943 
=== Usages ===
=== Predecessor ===
v2930 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2943 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3797 
value: j3469 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2939 
=== Usages ===
=== Predecessor ===
v2929 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3797 value: j3469 stateAfter: - lastLocationAccess: - #next: v2939  <|@  <|@
f <@~|@floating>@ <|@
tid v3856 <|@
result [v11|QWORD + 248] <|@
d <@d|@=== Debug Properties ===
displacement: 248
scale: Times1
stamp: void*
=== Inputs ===
base: j2941 
index: - 
=== Succesors ===
=== Usages ===
v2939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2941 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2939 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3856 
=== Succesors ===
next: v2946 
=== Usages ===
=== Predecessor ===
v2943 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3856 #next: v2946  <|@  <|@
f <@*|@fixed>@ <|@
tid v2946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2945 
=== Predecessor ===
v2939 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + 248] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2947 <|@
result v15|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2945 
values: j2941 j2935 
=== Succesors ===
=== Usages ===
v3791 v3764 j1863 j1867 a1861 v3800 v3860 v3799 v3857 v3858 v3859 v3861 v3862 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2945 values: j2941 j2935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2945 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2946 v2948 
=== Succesors ===
next: a1861 
=== Usages ===
j2947 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2946 v2948 #next: a1861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1861 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2947 
=== Succesors ===
next: a1864 
=== Usages ===
a1881 
=== Predecessor ===
v2945 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2947 #next: a1864  <|@  <|@
f <@~|@floating>@ <|@
tid j1072 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1863 j2246 j2129 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1863 <|@
result v17|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j2947 
y: j1072 
=== Succesors ===
=== Usages ===
a1864 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2947 y: j1072  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1864 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1863 
=== Succesors ===
next: a1868 
=== Usages ===
a1882 
=== Predecessor ===
a1861 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1863 #next: a1868  <|@  <|@
f <@~|@floating>@ <|@
tid j1866 <|@
result long[40|0x28] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 40
stableDimension: 0
stamp: i64 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1867 j3532 j3505 j3490 j3542 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1867 <|@
result v19|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j2947 
y: j1866 
=== Succesors ===
=== Usages ===
a1868 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2947 y: j1866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1868 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1867 
=== Succesors ===
next: j2959 
=== Usages ===
a1883 a1875 
=== Predecessor ===
a1864 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1867 #next: j2959  <|@  <|@
f <@~|@floating>@ <|@
tid v2953 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j3274 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3274 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2953 
=== Succesors ===
=== Usages ===
v3832 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2953  <|@  <|@
f <@~|@floating>@ <|@
tid v3832 <|@
result [v21|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j3274 
index: - 
=== Succesors ===
=== Usages ===
j3278 j3125 j2959 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3274 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2959 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3832 
=== Succesors ===
next: v2960 
=== Usages ===
v2960 
=== Predecessor ===
a1868 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3832 #next: v2960  <|@  <|@
f <@~|@floating>@ <|@
tid v3799 <|@
result [v15|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2947 
index: - 
=== Succesors ===
=== Usages ===
v2960 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2947 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2960 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3799 
value: j2959 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2963 
=== Usages ===
=== Predecessor ===
j2959 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3799 value: j2959 stateAfter: - lastLocationAccess: - #next: v2963  <|@  <|@
f <@~|@floating>@ <|@
tid v3800 <|@
result [v15|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2947 
index: - 
=== Succesors ===
=== Usages ===
v2963 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2947 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3473 <|@
result meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2963 v3129 v3282 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2963 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3800 
value: v3473 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1873 
=== Usages ===
=== Predecessor ===
v2960 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3800 value: v3473 stateAfter: - lastLocationAccess: - #next: v1873  <|@  <|@
f <@~|@floating>@ <|@
tid v3764 <|@
result [v15|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2947 
index: - 
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2947 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3764 
value: a3601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2970 
=== Usages ===
=== Predecessor ===
v2963 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3764 value: a3601 stateAfter: - lastLocationAccess: - #next: j2970  <|@  <|@
f <@~|@floating>@ <|@
tid v2142 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j3417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3417 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2142 
=== Succesors ===
=== Usages ===
v3850 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2142  <|@  <|@
f <@~|@floating>@ <|@
tid v3850 <|@
result [v23|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j3417 
index: - 
=== Succesors ===
=== Usages ===
j3421 j3136 j2970 j3192 j3289 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3417 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2970 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3850 
=== Succesors ===
next: v2971 
=== Usages ===
v2971 
=== Predecessor ===
v1873 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3850 #next: v2971  <|@  <|@
f <@~|@floating>@ <|@
tid v3857 <|@
result [v15|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2947 
index: - 
=== Succesors ===
=== Usages ===
v2971 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2947 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2971 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3857 
value: j2970 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2974 
=== Usages ===
=== Predecessor ===
j2970 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3857 value: j2970 stateAfter: - lastLocationAccess: - #next: v2974  <|@  <|@
f <@~|@floating>@ <|@
tid v3858 <|@
result [v15|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j2947 
index: - 
=== Succesors ===
=== Usages ===
v2974 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2947 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3476 <|@
result meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2974 v3140 v3512 v3196 v3293 v3550 v3425 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2974 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3858 
value: v3476 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2978 
=== Usages ===
=== Predecessor ===
v2971 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3858 value: v3476 stateAfter: - lastLocationAccess: - #next: v2978  <|@  <|@
f <@~|@floating>@ <|@
tid v3859 <|@
result [v15|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j2947 
index: - 
=== Succesors ===
=== Usages ===
v2978 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2947 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2978 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3859 
value: a3601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2980 
=== Usages ===
=== Predecessor ===
v2974 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3859 value: a3601 stateAfter: - lastLocationAccess: - #next: v2980  <|@  <|@
f <@~|@floating>@ <|@
tid v3860 <|@
result [v15|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j2947 
index: - 
=== Succesors ===
=== Usages ===
v2980 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2947 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1875 <|@
result v25|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a1868 
=== Succesors ===
=== Usages ===
v2980 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2980 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3860 
value: a1875 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2985 
=== Usages ===
=== Predecessor ===
v2978 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3860 value: a1875 stateAfter: - lastLocationAccess: - #next: j2985  <|@  <|@
f <@~|@floating>@ <|@
tid j2981 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1819 
=== Succesors ===
=== Usages ===
v3801 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1819  <|@  <|@
f <@~|@floating>@ <|@
tid v3801 <|@
result [v8|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2981 
index: - 
=== Succesors ===
=== Usages ===
j2985 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2981 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2985 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3801 
=== Succesors ===
next: v2986 
=== Usages ===
v2986 
=== Predecessor ===
v2980 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3801 #next: v2986  <|@  <|@
f <@~|@floating>@ <|@
tid v3861 <|@
result [v15|QWORD[*] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j2947 
index: - 
=== Succesors ===
=== Usages ===
v2986 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2947 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2986 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3861 
value: j2985 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2989 
=== Usages ===
=== Predecessor ===
j2985 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3861 value: j2985 stateAfter: - lastLocationAccess: - #next: v2989  <|@  <|@
f <@~|@floating>@ <|@
tid v3862 <|@
result [v15|QWORD[*] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j2947 
index: - 
=== Succesors ===
=== Usages ===
v2989 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2947 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3483 <|@
result meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2989 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2989 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3862 
value: v3483 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1880 
=== Usages ===
=== Predecessor ===
v2986 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3862 value: v3483 stateAfter: - lastLocationAccess: - #next: v1880  <|@  <|@
f <@~|@floating>@ <|@
tid v3791 <|@
result [v15|QWORD[*] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: j2947 
index: - 
=== Succesors ===
=== Usages ===
v1880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2947 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1880 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3791 
value: a3601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1881 
=== Usages ===
=== Predecessor ===
v2989 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3791 value: a3601 stateAfter: - lastLocationAccess: - #next: a1881  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1881 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1861 
=== Succesors ===
next: a1882 
=== Usages ===
v3711 ?760 ?764 a2059 ?852 v3727 ?867 ?851 v3755 v3761 j2992 j3380 j3460 
=== Predecessor ===
v1880 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1861 #next: a1882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1882 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1864 
=== Succesors ===
next: a1883 
=== Usages ===
a1077 
=== Predecessor ===
a1881 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1864 #next: a1883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1883 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1868 
=== Succesors ===
next: v1884 
=== Usages ===
?761 v3721 v3725 v3738 j3078 j3231 
=== Predecessor ===
a1882 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1868 #next: v1884  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j3607 
=== Usages ===
=== Predecessor ===
a1883 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j3607  <|@  <|@
f <@~|@floating>@ <|@
tid v3710 <|@
result [v1|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3598 
=== Succesors ===
=== Usages ===
j3607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3598  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3607 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$stateOff
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3710 
=== Succesors ===
next: i1079 
=== Usages ===
v3711 
=== Predecessor ===
v1884 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3710 #next: i1079  <|@  <|@
f <@~|@floating>@ <|@
tid v3711 <|@
result [v16|QWORD[.] + v27|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1881 
index: j3607 
=== Succesors ===
=== Usages ===
i1079 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1881 index: j3607  <|@  <|@
f <@~|@floating>@ <|@
tid a1077 <|@
result v28|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a1882 
=== Succesors ===
=== Usages ===
i1079 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1079 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ANY_LOCATION
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3711 
expectedValue: a3601 
newValue: a1077 
stateAfter: - 
=== Succesors ===
next: j2992 
=== Usages ===
?407 i408 
=== Predecessor ===
j3607 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v3711 expectedValue: a3601 newValue: a1077 stateAfter: - #next: j2992  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2992 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1881 
=== Succesors ===
next: v2998 
=== Usages ===
j2994 
=== Predecessor ===
i1079 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1881 #next: v2998  <|@  <|@
f <@~|@floating>@ <|@
tid i2993 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2994 j3079 j3148 j3232 j3301 j3381 j3461 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2994 <|@
result v31|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$146/1524633570@1cec0275
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2992 
y: i2993 
=== Succesors ===
=== Usages ===
v3802 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2992 y: i2993  <|@  <|@
f <@~|@floating>@ <|@
tid j2997 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4398039040
stableDimension: 0
stamp: i64 [4398039040] ⇊000000010624c000 ⇈000000010624c000
stampKind: i64
value: long[4398039040|0x10624c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3802 v3813 v3820 v3827 v3835 v3846 v3855 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3802 <|@
result [v31|QWORD[*] + v32|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2994 
index: j2997 
=== Succesors ===
=== Usages ===
v2998 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2994 index: j2997  <|@  <|@
f <@~|@floating>@ <|@
tid i2999 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2998 v3082 v3151 v3235 v3304 v3384 v3464 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2998 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3802 
value: i2999 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1536 
=== Usages ===
=== Predecessor ===
j2992 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3802 value: i2999 stateAfter: - lastLocationAccess: - #next: v1536  <|@  <|@
tid ?411 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<Promise.forwardInterruptsTo(Future)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 506
stackSize: 0
=== Inputs ===
outerFrameState: ?181 
values: a751 a71 - - - - - - - - 
=== Succesors ===
=== Usages ===
?407 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?181 values: a751 a71 - - - - - - - -  <|@  <|@
tid ?760 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a751 
materializedValue: a1881 
=== Succesors ===
=== Usages ===
?407 ?2570 ?812 ?2572 ?442 ?859 ?205 ?501 ?476 ?1017 ?688 ?276 ?543 ?2569 ?827 ?2571 ?576 ?890 ?323 ?635 ?610 ?839 ?843 ?870 ?874 ?1003 ?905 ?974 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a751 materializedValue: a1881  <|@  <|@
tid ?761 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a71 
materializedValue: a1883 
=== Succesors ===
=== Usages ===
?407 ?2569 ?812 ?2570 ?442 ?859 ?205 ?501 ?476 ?843 ?839 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a71 materializedValue: a1883  <|@  <|@
tid ?407 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Promise.cas(Object, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 453
stackSize: 1
=== Inputs ===
outerFrameState: ?411 
values: - - - i1079 
virtualObjectMappings: ?760 ?761 ?754 
=== Succesors ===
=== Usages ===
v2618 a3609 v3610 i3614 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?411 values: - - - i1079 virtualObjectMappings: ?760 ?761 ?754  <|@  <|@
f <@~|@floating>@ <|@
tid i408 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$115/1567088237@42498438
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$116/1100921398@1fb26baa
inputBits: 32
resultBits: 1
stamp: i1
=== Inputs ===
value: i1079 
=== Succesors ===
=== Usages ===
i409 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1079  <|@  <|@
f <@~|@floating>@ <|@
tid i409 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1701538656@15c1f08d
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/999668238@1b27ce49
inputAlwaysPositive: false
inputBits: 1
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i408 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i408  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v370 v178 v226 v252 v344 v296 v985 i2297 i1925 i2000 i2368 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i409 
y: i153 
=== Succesors ===
=== Usages ===
v1536 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i409 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1536 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v178 
=== Succesors ===
trueSuccessor: v1535 
falseSuccessor: v1533 
=== Usages ===
=== Predecessor ===
v2998 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v178 #trueSuccessor: v1535 #falseSuccessor: v1533  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE v15|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = LEA [v15|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[*] = LEA [v15|QWORD[*] + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE v19|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [v21|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[*]], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v15|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[*] + 12], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [v23|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[*] + 16], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v15|QWORD[*] + 24] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[*] + 28], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = COMPRESSPOINTER (input: v20|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[*] + 32], y: v25|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [v8|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[*] + 40], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v15|QWORD[*] + 48] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[*] + 52], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [v1|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[.] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = MOVE v5|DWORD[.] moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = CAS (address: [v16|QWORD[.] + v27|QWORD * 1], cmpValue: rax|DWORD[.], newValue: v28|DWORD[.]) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: v30|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[*] = SHR v16|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v31|QWORD[*] + v32|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND v29|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B192" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2614 
=== Usages ===
=== Predecessor ===
v1536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2614  <|@  <|@
f <@~|@floating>@ <|@
tid i2615 <|@
result int[-276499|0xfffffffffffbc7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -276499
stableDimension: 0
stamp: i32 [-276499] ⇊00000000fffbc7ed ⇈00000000fffbc7ed
stampKind: i32
value: int[-276499|0xfffffffffffbc7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2616 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2613 
=== Predecessor ===
v1535 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-276499|0xfffffffffffbc7ed]] destination: B18 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B191" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3608 
=== Usages ===
=== Predecessor ===
v1536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3608  <|@  <|@
f <@~|@floating>@ <|@
tid a1081 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:com.twitter.util.Local$
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:com.twitter.util.Local$]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3712 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3712 <|@
result [v34|QWORD[.] + 104] <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a1081 
index: - 
=== Succesors ===
=== Usages ===
a3608 a3647 a3671 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1081 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3608 <|@
result v35|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Local$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Local$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3712 
=== Succesors ===
next: a3609 
=== Usages ===
v3713 
=== Predecessor ===
v1533 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3712 #next: a3609  <|@  <|@
f <@~|@floating>@ <|@
tid v3713 <|@
result [v35|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3608 
=== Succesors ===
=== Usages ===
a3609 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3608  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3609 <|@
result v36|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Local$.localCtx
nullCheck: true
stamp: n Ljava/lang/ThreadLocal;
=== Inputs ===
stateBefore: ?407 
guard: - 
address: v3713 
=== Succesors ===
next: v3610 
=== Usages ===
a1088 v3905 v3715 v3803 
=== Predecessor ===
a3608 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?407 guard: - address: v3713 #next: v3610  <|@  <|@
f <@~|@floating>@ <|@
tid v3803 <|@
result [v36|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3609 
=== Succesors ===
=== Usages ===
v3610 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3609  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3610 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?407 
guard: - 
address: v3803 
=== Succesors ===
next: v1092 
=== Usages ===
v3714 
=== Predecessor ===
a3609 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?407 guard: - address: v3803 #next: v1092  <|@  <|@
f <@~|@floating>@ <|@
tid v3714 <|@
result [v37|DWORD * 8 + 520] <|@
d <@d|@=== Debug Properties ===
displacement: 520
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3610 
=== Succesors ===
=== Usages ===
v1092 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1092 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v3714 
=== Succesors ===
next: v1548 
=== Usages ===
v652 
=== Predecessor ===
v3610 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3714 #next: v1548  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v652 v706 v1025 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1092 
y: v650 
=== Succesors ===
=== Usages ===
v1548 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1092 y: v650  <|@  <|@
f <@*|@fixed>@ <|@
tid v1548 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v652 
=== Succesors ===
trueSuccessor: v1545 
falseSuccessor: v1547 
=== Usages ===
=== Predecessor ===
v1092 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v652 #trueSuccessor: v1545 #falseSuccessor: v1547  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Local$] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = MOV [v34|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v29|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v16|QWORD[.] v20|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v16|QWORD[.] 
locals: v1|DWORD[.] v20|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction v36|DWORD[.] = MOV [v35|DWORD[.] * 8 + 16] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v29|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v16|QWORD[.] v20|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v16|QWORD[.] 
locals: v1|DWORD[.] v20|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction v37|DWORD = MOV [v36|DWORD[.] * 8 + 8] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: [v37|DWORD * 8 + 520]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3611 
=== Usages ===
=== Predecessor ===
v1548 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3611  <|@  <|@
f <@~|@floating>@ <|@
tid j415 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v3705 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@org.graalvm.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3705 <|@
result [r15|QWORD + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times1
stamp: void*
=== Inputs ===
base: j415 
index: - 
=== Succesors ===
=== Usages ===
a3611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j415 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3611 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: JavaThread::_threadObj:final
nullCheck: false
stamp: a! Ljava/lang/Thread;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3705 
=== Succesors ===
next: a3612 
=== Usages ===
v3745 
=== Predecessor ===
v1545 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3705 #next: a3612  <|@  <|@
f <@~|@floating>@ <|@
tid v3745 <|@
result [v39|QWORD[.] + 80] <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: a3611 
index: - 
=== Succesors ===
=== Usages ===
a3674 a3650 a3612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3611 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3612 <|@
result v40|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Thread.threadLocals
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3745 
=== Succesors ===
next: v425 
=== Usages ===
a1097 v1392 v3716 
=== Predecessor ===
a3611 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3745 #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3612 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3612  <|@  <|@
f <@~|@floating>@ <|@
tid a1088 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a Ljava/lang/ThreadLocal;
=== Inputs ===
value: a3609 
=== Succesors ===
=== Usages ===
v1120 v1139 ?428 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3609  <|@  <|@
f <@~|@floating>@ <|@
tid v3721 <|@
result [v20|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1883 
index: - 
=== Succesors ===
=== Usages ===
a3626 a3619 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1883 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3727 <|@
result [v16|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1881 
index: - 
=== Succesors ===
=== Usages ===
a3638 a3662 a3688 a3681 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1881 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2059 <|@
result v42|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a1881 
=== Succesors ===
=== Usages ===
v3063 v3146 v3217 v3299 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1881  <|@  <|@
f <@~|@floating>@ <|@
tid a2545 <|@
result NarrowOop[FutureBench$$Lambda$10/1594373685@321311106] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: FutureBench$$Lambda$10/1594373685@321311106
stableDimension: 0
stamp: n!# Lbench/FutureBench$$Lambda$10/1594373685;
stampKind: n -
value: NarrowOop[FutureBench$$Lambda$10/1594373685@321311106]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2434 v2478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<FutureBench.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 195
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?57 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
tid ?57 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<Future.map(Function1)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Future.scala
sourceLine: 1811
stackSize: 0
=== Inputs ===
outerFrameState: ?45 
values: - - 
=== Succesors ===
=== Usages ===
?58 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?45 values: - -  <|@  <|@
tid a78 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@1928ac20
hasIdentity: true
objectId: 9
stamp: a!# Lcom/twitter/util/Future$$Lambda$8/112631710;
type: HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?802 ?795 ?58 ?81 ?118 ?81 ?782 ?311 ?790 ?898 ?882 ?883 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Promise.transform(Function1)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 417
stackSize: 0
=== Inputs ===
outerFrameState: ?57 
values: a751 a78 
=== Succesors ===
=== Usages ===
?140 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?57 values: a751 a78  <|@  <|@
tid ?81 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a78 
materializedValue: a78 
=== Succesors ===
=== Usages ===
?140 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a78 materializedValue: a78  <|@  <|@
tid ?140 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Promise$Responder.transform$(Promise$Responder, Function1)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 303
stackSize: 0
=== Inputs ===
outerFrameState: ?58 
values: - - 
virtualObjectMappings: ?81 
=== Succesors ===
=== Usages ===
?118 ?311 ?374 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?58 values: - - virtualObjectMappings: ?81  <|@  <|@
tid a780 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@72460335
hasIdentity: true
objectId: 5
stamp: a!# Lcom/twitter/util/Promise$$anon$3;
type: HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?694 ?119 ?781 ?276 ?943 ?940 ?547 ?787 ?311 ?374 ?941 ?910 ?1027 ?1022 ?1006 ?974 ?966 ?937 ?958 ?1031 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?374 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<Promise$Responder.transform(Function1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 306
stackSize: 0
=== Inputs ===
outerFrameState: ?140 
values: - - a780 
=== Succesors ===
=== Usages ===
?323 ?614 ?639 ?870 ?874 ?890 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: - - a780  <|@  <|@
tid a788 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@3d79c5fd
hasIdentity: true
objectId: 8
stamp: a!# Lcom/twitter/util/Promise$Transformer;
type: HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?311 ?311 ?789 ?323 ?790 ?898 ?890 ?639 ?794 ?883 ?874 ?882 ?614 ?801 ?870 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?311 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Promise$Responder.transform(Function1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 306
stackSize: 3
=== Inputs ===
outerFrameState: ?140 
values: - a78 a780 a751 a788 a788 
=== Succesors ===
=== Usages ===
?578 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: - a78 a780 a751 a788 a788  <|@  <|@
tid ?578 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Local$.save()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Local.scala
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: ?311 
values: - 
=== Succesors ===
=== Usages ===
?576 ?562 ?2572 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?311 values: -  <|@  <|@
tid ?789 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a788 
values: - - - 
=== Succesors ===
=== Usages ===
?2571 ?827 ?2572 ?576 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a788 values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid j1810 <|@
result long[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2462 j2167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3516 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
a3172 a3401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3513 <|@
result long[64|0x40] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 64
stableDimension: 0
stamp: i64 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i64
value: long[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3514 j3551 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?118 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<Promise$Responder.transform(Function1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 304
stackSize: 0
=== Inputs ===
outerFrameState: ?140 
values: a751 a78 - 
=== Succesors ===
=== Usages ===
?119 ?966 ?958 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: a751 a78 -  <|@  <|@
f <@~|@floating>@ <|@
tid a37 <|@
result Object[FutureBench$$Lambda$10/1594373685@321311106] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: FutureBench$$Lambda$10/1594373685@321311106
stableDimension: 0
stamp: a!# Lbench/FutureBench$$Lambda$10/1594373685;
stampKind: a -
value: Object[FutureBench$$Lambda$10/1594373685@321311106]
=== Inputs ===
=== Succesors ===
=== Usages ===
?782 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?782 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a78 
values: a37 
=== Succesors ===
=== Usages ===
?688 ?276 ?543 ?2571 ?827 ?2572 ?576 ?890 ?323 ?870 ?874 ?1017 ?905 ?974 ?1003 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a78 values: a37  <|@  <|@
f <@~|@floating>@ <|@
tid a2508 <|@
result NarrowOop[FutureBench$$Lambda$7/390800101@687091653] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: FutureBench$$Lambda$7/390800101@687091653
stableDimension: 0
stamp: n!# Lbench/FutureBench$$Lambda$7/390800101;
stampKind: n -
value: NarrowOop[FutureBench$$Lambda$7/390800101@687091653]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2066 v2182 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3501 <|@
result meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3075 v3228 v3377 v3457 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3066 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j3449 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3449 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v3066 
=== Succesors ===
=== Usages ===
v3854 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v3066  <|@  <|@
f <@~|@floating>@ <|@
tid v3854 <|@
result [v43|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j3449 
index: - 
=== Succesors ===
=== Usages ===
j3453 j3224 j3071 j3373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3449 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3495 <|@
result meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3057 v3211 v3360 v3440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3048 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j3432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3432 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v3048 
=== Succesors ===
=== Usages ===
v3853 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v3048  <|@  <|@
f <@~|@floating>@ <|@
tid v3853 <|@
result [v44|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j3432 
index: - 
=== Succesors ===
=== Usages ===
j3436 j3207 j3053 j3356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3432 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1943 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2459 j2422 j2054 j2164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3492 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
a3032 a3105 a3258 a3336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1931 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1932 i2005 i2302 i2373 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1930 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1933 i2006 i2303 i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3486 <|@
result meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v3487 v3488 v3539 v3540 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1905 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1913 v2387 v1937 v1948 v1988 v2378 v2010 v2019 v2285 v2356 v2307 v2316 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?256 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<Promise$Responder.transform(Function1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 306
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: - - a751 
=== Succesors ===
=== Usages ===
?205 ?480 ?505 ?839 ?843 ?859 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - a751  <|@  <|@
f <@~|@floating>@ <|@
tid v1885 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Lscala/Option;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Lscala/Option;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1893 v1969 v2266 v2337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid a762 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@3d79c5fd
hasIdentity: true
objectId: 3
stamp: a!# Lcom/twitter/util/Promise$Transformer;
type: HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?193 ?193 ?763 ?205 ?764 ?867 ?859 ?505 ?768 ?852 ?843 ?851 ?480 ?775 ?839 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?193 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Promise$Responder.transform(Function1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 306
stackSize: 3
=== Inputs ===
outerFrameState: ?107 
values: - a72 a751 a71 a762 a762 
=== Succesors ===
=== Usages ===
?444 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - a72 a751 a71 a762 a762  <|@  <|@
tid ?444 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Local$.save()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Local.scala
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: - 
=== Succesors ===
=== Usages ===
?442 ?428 ?2570 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: -  <|@  <|@
tid ?763 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a762 
values: - - - 
=== Succesors ===
=== Usages ===
?2569 ?812 ?2570 ?442 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a762 values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i661 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i662 i715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 7.839287703504969E-8
=== Inputs ===
condition: v1392 
=== Succesors ===
trueSuccessor: v423 
falseSuccessor: v424 
=== Usages ===
=== Predecessor ===
a3612 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1392 #trueSuccessor: v423 #falseSuccessor: v424  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v39|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = COMPRESSPOINTER (input: v16|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>} <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD[.], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 7.839287703504969E-8 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4500515626435851651
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v423 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B190" 
    xhandlers
    flags 
    probability 4607182418093917144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3613 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3613  <|@  <|@
f <@~|@floating>@ <|@
tid v3716 <|@
result [v40|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3612 
=== Succesors ===
=== Usages ===
a3613 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3613 <|@
result v47|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap.table
nullCheck: false
stamp: n# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3716 
=== Succesors ===
next: i3614 
=== Usages ===
a1103 v3717 
=== Predecessor ===
v424 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3716 #next: i3614  <|@  <|@
f <@~|@floating>@ <|@
tid v3717 <|@
result [v47|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3613 
=== Succesors ===
=== Usages ===
i3614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3614 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?407 
guard: - 
address: v3717 
=== Succesors ===
next: i3615 
=== Usages ===
i662 v1110 
=== Predecessor ===
a3613 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?407 guard: - address: v3717 #next: i3615  <|@  <|@
f <@~|@floating>@ <|@
tid v3715 <|@
result [v36|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3609 
=== Succesors ===
=== Usages ===
i3615 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3609  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3615 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal.threadLocalHashCode
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3715 
=== Succesors ===
next: v1556 
=== Usages ===
i663 
=== Predecessor ===
i3614 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3715 #next: v1556  <|@  <|@
f <@~|@floating>@ <|@
tid i662 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i3614 
y: i661 
=== Succesors ===
=== Usages ===
i663 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3614 y: i661  <|@  <|@
f <@~|@floating>@ <|@
tid i663 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$106/1828525263@267ef724
stamp: i32
=== Inputs ===
x: i662 
y: i3615 
=== Succesors ===
=== Usages ===
v3718 v1120 v1110 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i662 y: i3615  <|@  <|@
f <@~|@floating>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@782e90
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i663 
y: i3614 
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i663 y: i3614  <|@  <|@
f <@*|@fixed>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1110 
=== Succesors ===
trueSuccessor: v1553 
falseSuccessor: v1555 
=== Usages ===
=== Predecessor ===
i3615 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1110 #trueSuccessor: v1553 #falseSuccessor: v1555  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[.] = MOV [v40|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v29|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v16|QWORD[.] v20|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v16|QWORD[.] 
locals: v1|DWORD[.] v20|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction v48|DWORD = MOV [v47|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = DEC v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = AND (x: v49|DWORD, ~y: [v36|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v48|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B42" 
    xhandlers
    flags 
    probability 4607182418093917144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3616 
=== Usages ===
a3616 
=== Predecessor ===
v1556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3616  <|@  <|@
f <@~|@floating>@ <|@
tid a1103 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a3613 
=== Succesors ===
=== Usages ===
v3718 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3613  <|@  <|@
f <@~|@floating>@ <|@
tid v3718 <|@
result [v51|QWORD[.] + v50|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1103 
index: i663 
=== Succesors ===
=== Usages ===
a3616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1103 index: i663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3616 <|@
result v52|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: v1553 
address: v3718 
=== Succesors ===
next: v669 
=== Usages ===
a1119 v1394 v3719 
=== Predecessor ===
v1553 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1553 address: v3718 #next: v669  <|@  <|@
f <@~|@floating>@ <|@
tid a1119 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a3616 
=== Succesors ===
=== Usages ===
v1120 a1036 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3616  <|@  <|@
f <@~|@floating>@ <|@
tid v1394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3616 
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3616  <|@  <|@
f <@~|@floating>@ <|@
tid a1097 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
value: a3612 
=== Succesors ===
=== Usages ===
?428 v1120 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3612  <|@  <|@
tid ?428 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 163
stackSize: 0
=== Inputs ===
outerFrameState: ?444 
values: a1088 - a1097 - - 
=== Succesors ===
=== Usages ===
?812 ?681 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?444 values: a1088 - a1097 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 3.527679190032315E-7
=== Inputs ===
condition: v1394 
=== Succesors ===
trueSuccessor: v667 
falseSuccessor: v668 
=== Usages ===
=== Predecessor ===
a3616 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1394 #trueSuccessor: v667 #falseSuccessor: v668  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[.] = MOV [v51|QWORD[.] + v50|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v52|DWORD[.], y: v52|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.527679190032315E-7 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B41" 
    xhandlers
    flags 
    probability 4510263224435847550
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a678 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a678  <|@  <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
signature: [Ljdk.vm.ci.meta.JavaType;@1e20555f
stamp: void
targetMethod: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>
=== Inputs ===
arguments: a1097 a1088 i663 a1119 
=== Succesors ===
=== Usages ===
a678 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1097 a1088 i663 a1119  <|@  <|@
tid ?681 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 0
=== Inputs ===
outerFrameState: ?428 
values: - - 
=== Succesors ===
=== Usages ===
?2569 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?428 values: - -  <|@  <|@
tid ?2569 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 419
stackSize: 0
=== Inputs ===
outerFrameState: ?681 
values: - - - - 
virtualObjectMappings: ?754 ?760 ?761 ?763 
=== Succesors ===
=== Usages ===
a678 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?681 values: - - - - virtualObjectMappings: ?754 ?760 ?761 ?763  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a678 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 38
polymorphic: false
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
targetMethod: Direct#ThreadLocal$ThreadLocalMap.getEntryAfterMiss
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1120 
stateDuring: ?2569 
=== Succesors ===
next: v436 
=== Usages ===
v430 a1036 
=== Predecessor ===
v667 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1120 stateDuring: ?2569 #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a678 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a678  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 3.527674073959098E-7
=== Inputs ===
condition: v430 
=== Succesors ===
trueSuccessor: v435 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
a678 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v430 #trueSuccessor: v435 #falseSuccessor: v434  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v50|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: v41|QWORD[.] - v54|QWORD[.] - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: v20|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:38, 2, 16, 4, 19, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v55|QWORD[.], y: v55|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.527674073959098E-7 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4413953810109930006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v433  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4500515635838651094
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v431 v433 
=== Succesors ===
next: a441 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v431 v433 #next: a441  <|@  <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@5c3db205
stamp: void
targetMethod: HotSpotMethod<ThreadLocal.setInitialValue()>
=== Inputs ===
arguments: a1088 
=== Succesors ===
=== Usages ===
a441 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1088  <|@  <|@
tid ?2570 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 170
stackSize: 0
=== Inputs ===
outerFrameState: ?444 
values: - - - - - 
virtualObjectMappings: ?754 ?760 ?761 ?763 
=== Succesors ===
=== Usages ===
a441 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?444 values: - - - - - virtualObjectMappings: ?754 ?760 ?761 ?763  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a441 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 34
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#ThreadLocal.setInitialValue
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1139 
stateDuring: ?2570 
=== Succesors ===
next: v1965 
=== Usages ===
?442 a846 v1141 v3806 ?764 a845 a846 a846 
=== Predecessor ===
v432 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1139 stateDuring: ?2570 #next: v1965  <|@  <|@
f <@~|@floating>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a441 
=== Succesors ===
=== Usages ===
v1965 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a441  <|@  <|@
f <@*|@fixed>@ <|@
tid v1965 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1141 
=== Succesors ===
trueSuccessor: v1964 
falseSuccessor: v1963 
=== Usages ===
=== Predecessor ===
a441 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1141 #trueSuccessor: v1964 #falseSuccessor: v1963  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: v20|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:34, 4, 19, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v56|QWORD[.], y: v56|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    probability 4485820195411960388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1964 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2805 
=== Usages ===
=== Predecessor ===
v1965 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2805  <|@  <|@
f <@*|@fixed>@ <|@
tid v2805 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2803 
=== Predecessor ===
v1964 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B40" 
    xhandlers
    flags 
    probability 4499923315066361486
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1963 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3617 
=== Usages ===
=== Predecessor ===
v1965 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3617  <|@  <|@
f <@~|@floating>@ <|@
tid v3806 <|@
result [v56|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a441 
index: - 
=== Succesors ===
=== Usages ===
v3617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a441 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3617 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3806 
=== Succesors ===
next: v3618 
=== Usages ===
v3770 
=== Predecessor ===
v1963 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3806 #next: v3618  <|@  <|@
f <@~|@floating>@ <|@
tid v3770 <|@
result [v57|DWORD * 8 + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3617 
=== Succesors ===
=== Usages ===
v3618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3617  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3618 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3770 
=== Succesors ===
next: v3571 
=== Usages ===
v1969 
=== Predecessor ===
v3617 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3770 #next: v3571  <|@  <|@
f <@~|@floating>@ <|@
tid v1969 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3618 
y: v1885 
=== Succesors ===
=== Usages ===
v3571 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3618 y: v1885  <|@  <|@
f <@*|@fixed>@ <|@
tid v3571 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1969 
=== Succesors ===
trueSuccessor: v3570 
falseSuccessor: v2810 
=== Usages ===
=== Predecessor ===
v3618 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1969 #trueSuccessor: v3570 #falseSuccessor: v2810  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOV [v56|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: [v57|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4499923315066361486
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2813 
=== Usages ===
=== Predecessor ===
v3571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2813  <|@  <|@
f <@*|@fixed>@ <|@
tid v2813 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2803 
=== Predecessor ===
v3570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4500515635838651094
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2803 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2805 v2813 
=== Succesors ===
next: v1146 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2805 v2813 #next: v1146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a3619 
=== Usages ===
=== Predecessor ===
v2803 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a3619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3619 <|@
result v58|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise.state
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3721 
=== Succesors ===
next: v1147 
=== Usages ===
a1145 v3807 
=== Predecessor ===
v1146 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3721 #next: v1147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v3620 
=== Usages ===
=== Predecessor ===
a3619 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v3620  <|@  <|@
f <@~|@floating>@ <|@
tid a1145 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a3619 
=== Succesors ===
=== Usages ===
a850 ?205 a850 a850 a1039 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3619  <|@  <|@
tid ?764 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a762 
values: a441 a1881 a72 
=== Succesors ===
=== Usages ===
?205 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a762 values: a441 a1881 a72  <|@  <|@
tid ?205 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 761
stackSize: 1
=== Inputs ===
outerFrameState: ?256 
values: a71 a762 - - - - - - - - - a1145 
virtualObjectMappings: ?761 ?764 ?760 ?754 
=== Succesors ===
=== Usages ===
v3620 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?256 values: a71 a762 - - - - - - - - - a1145 virtualObjectMappings: ?761 ?764 ?760 ?754  <|@  <|@
f <@~|@floating>@ <|@
tid v3807 <|@
result [v58|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3619 
=== Succesors ===
=== Usages ===
v3620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3620 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?205 
guard: - 
address: v3807 
=== Succesors ===
next: v3621 
=== Usages ===
v3772 v3488 v3771 
=== Predecessor ===
v1147 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?205 guard: - address: v3807 #next: v3621  <|@  <|@
f <@~|@floating>@ <|@
tid v3771 <|@
result [v60|DWORD * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3620 
=== Succesors ===
=== Usages ===
v2019 v3621 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3620  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3621 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SecondarySuperCache
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3771 
=== Succesors ===
next: v1991 
=== Usages ===
v1988 
=== Predecessor ===
v3620 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3771 #next: v1991  <|@  <|@
f <@~|@floating>@ <|@
tid v1988 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3621 
y: v1905 
=== Succesors ===
=== Usages ===
v1991 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3621 y: v1905  <|@  <|@
f <@*|@fixed>@ <|@
tid v1991 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1988 
=== Succesors ===
trueSuccessor: v1989 
falseSuccessor: v1990 
=== Usages ===
=== Predecessor ===
v3621 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1988 #trueSuccessor: v1989 #falseSuccessor: v1990  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[.] = MOV [v20|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v59|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v56|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v56|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v56|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction v60|DWORD = MOV [v58|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: [v60|DWORD * 8 + 24]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B56" 
    xhandlers
    flags 
    probability 4496012036211280598
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1989 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v838 
=== Usages ===
=== Predecessor ===
v1991 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v838  <|@  <|@
f <@*|@fixed>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
v1989 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.], v59|QWORD[.]] destination: B31 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4496012036211280598
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1990 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1995 
=== Usages ===
=== Predecessor ===
v1991 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1995  <|@  <|@
f <@~|@floating>@ <|@
tid v3488 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3620 
y: v3486 
=== Succesors ===
=== Usages ===
v1995 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3620 y: v3486  <|@  <|@
f <@*|@fixed>@ <|@
tid v1995 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3488 
=== Succesors ===
trueSuccessor: v1993 
falseSuccessor: v1994 
=== Usages ===
=== Predecessor ===
v1990 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3488 #trueSuccessor: v1993 #falseSuccessor: v1994  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v60|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B56" 
    xhandlers
    flags 
    probability 4491508436583910102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1993 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2564 
=== Usages ===
=== Predecessor ===
v1995 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2564  <|@  <|@
f <@*|@fixed>@ <|@
tid v2564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
v1993 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.], v59|QWORD[.]] destination: B33 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4491508436583910102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1994 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j2016 
=== Usages ===
=== Predecessor ===
v1995 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2016  <|@  <|@
f <@~|@floating>@ <|@
tid v3772 <|@
result [v60|DWORD * 8 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3620 
=== Succesors ===
=== Usages ===
j2016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3620  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2016 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3772 
=== Succesors ===
next: i2017 
=== Usages ===
v3773 v3774 
=== Predecessor ===
v1994 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3772 #next: i2017  <|@  <|@
f <@~|@floating>@ <|@
tid v3773 <|@
result [v61|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2016 
index: - 
=== Succesors ===
=== Usages ===
i2017 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2016 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2017 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3773 
=== Succesors ===
next: v1998 
=== Usages ===
v2001 
=== Predecessor ===
j2016 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3773 #next: v1998  <|@  <|@
f <@*|@fixed>@ <|@
tid v1998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1999 
=== Predecessor ===
i2017 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [v60|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOV [v61|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B38" 
    successors "B36" "B39" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4494046954179436996
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2000 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1999 
values: i153 i2014 
=== Succesors ===
=== Usages ===
v2001 i2005 i2014 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1999 values: i153 i2014  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1999 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1998 
=== Succesors ===
next: v2004 
=== Usages ===
i2000 v2003 v2012 v2015 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1998 #next: v2004  <|@  <|@
f <@~|@floating>@ <|@
tid v2001 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3652e6c3
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2000 
y: i2017 
=== Succesors ===
=== Usages ===
v2004 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2000 y: i2017  <|@  <|@
f <@*|@fixed>@ <|@
tid v2004 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2001 
=== Succesors ===
trueSuccessor: v2002 
falseSuccessor: v2003 
=== Usages ===
=== Predecessor ===
v1999 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2001 #trueSuccessor: v2002 #falseSuccessor: v2003  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4489543354552066500
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2002 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j2018 
=== Usages ===
=== Predecessor ===
v2004 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2018  <|@  <|@
f <@~|@floating>@ <|@
tid i2005 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$15/433673915@1f3c8b47
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2000 
y: i1931 
=== Succesors ===
=== Usages ===
i2006 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2000 y: i1931  <|@  <|@
f <@~|@floating>@ <|@
tid i2006 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2005 
y: i1930 
=== Succesors ===
=== Usages ===
j2007 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2005 y: i1930  <|@  <|@
f <@~|@floating>@ <|@
tid j2007 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$13/1218083739@248602d1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$14/1566400895@795fae70
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2006 
=== Succesors ===
=== Usages ===
v3774 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2006  <|@  <|@
f <@~|@floating>@ <|@
tid v3774 <|@
result [v61|QWORD + v66|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2016 
index: j2007 
=== Succesors ===
=== Usages ===
j2018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2016 index: j2007  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2018 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3774 
=== Succesors ===
next: v2013 
=== Usages ===
v2009 
=== Predecessor ===
v2002 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3774 #next: v2013  <|@  <|@
f <@~|@floating>@ <|@
tid v2009 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: Klass*
=== Inputs ===
input: j2018 
=== Succesors ===
=== Usages ===
v2010 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j2018  <|@  <|@
f <@~|@floating>@ <|@
tid v2010 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2009 
y: v1905 
=== Succesors ===
=== Usages ===
v2013 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2009 y: v1905  <|@  <|@
f <@*|@fixed>@ <|@
tid v2013 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v2010 
=== Succesors ===
trueSuccessor: v2012 
falseSuccessor: v2011 
=== Usages ===
=== Predecessor ===
j2018 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2010 #trueSuccessor: v2012 #falseSuccessor: v2011  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = SHL v63|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = LEA [v64|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVSXD v65|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [v61|QWORD + v66|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B56" 
    xhandlers
    flags 
    probability 4483347409861011408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2012 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1999 
=== Succesors ===
next: v2019 
=== Usages ===
=== Predecessor ===
v2013 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1999 #next: v2019  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2019 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3771 
value: v1905 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2563 
=== Usages ===
=== Predecessor ===
v2012 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3771 value: v1905 stateAfter: - lastLocationAccess: - #next: v2563  <|@  <|@
f <@*|@fixed>@ <|@
tid v2563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
v2019 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|DWORD * 8 + 24], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.], v59|QWORD[.]] destination: B37 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4486158664424697308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2011 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2015 
=== Usages ===
=== Predecessor ===
v2013 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2015  <|@  <|@
f <@~|@floating>@ <|@
tid i2014 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i32
=== Inputs ===
x: i2000 
y: i1797 
=== Succesors ===
=== Usages ===
i2000 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2000 y: i1797  <|@  <|@
f <@*|@fixed>@ <|@
tid v2015 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1999 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2011 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1999  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = INC v63|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|DWORD] destination: B38 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B92" 
    xhandlers
    flags 
    probability 4489543354552066500
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2003 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1999 
=== Succesors ===
next: v842 
=== Usages ===
=== Predecessor ===
v2004 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1999 #next: v842  <|@  <|@
f <@*|@fixed>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
v2003 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.], v59|QWORD[.]] destination: B39 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2810 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1558 
=== Usages ===
=== Predecessor ===
v3571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1558  <|@  <|@
tid ?442 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 170
stackSize: 1
=== Inputs ===
outerFrameState: ?444 
values: - - - - - a441 
virtualObjectMappings: ?754 ?760 ?761 ?763 
=== Succesors ===
=== Usages ===
v1558 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?444 values: - - - - - a441 virtualObjectMappings: ?754 ?760 ?761 ?763  <|@  <|@
f <@*|@fixed>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1143
reason: ClassCastException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?442 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2810 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?442  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -292643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37]
stack: v56|QWORD[.] 
locals: - - - - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: v20|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:37, 4, 19, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 4510263222085147689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v811 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v811  <|@  <|@
f <@*|@fixed>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v810 
=== Predecessor ===
v434 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD[.]] destination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B43" "B189" 
    xhandlers
    flags 
    probability 4607182414916466456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3622 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3622  <|@  <|@
f <@~|@floating>@ <|@
tid v3719 <|@
result [v52|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3616 
=== Succesors ===
=== Usages ===
a3622 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3616  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3622 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.referent
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3719 
=== Succesors ===
next: v1568 
=== Usages ===
v3905 
=== Predecessor ===
v668 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3719 #next: v1568  <|@  <|@
f <@~|@floating>@ <|@
tid v3905 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3609 
y: a3622 
=== Succesors ===
=== Usages ===
v1568 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a3609 y: a3622  <|@  <|@
f <@*|@fixed>@ <|@
tid v1568 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3905 
=== Succesors ===
trueSuccessor: v1565 
falseSuccessor: v1567 
=== Usages ===
=== Predecessor ===
a3622 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3905 #trueSuccessor: v1565 #falseSuccessor: v1567  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|DWORD[.], y: [v52|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4607182414916466456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v673 
=== Usages ===
=== Predecessor ===
v1568 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v673  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: Reference.referent
stamp: void
=== Inputs ===
=== Succesors ===
next: v813 
=== Usages ===
=== Predecessor ===
v1565 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v813  <|@  <|@
f <@*|@fixed>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v810 
=== Predecessor ===
v673 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4607182418093916023
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1036 <|@
result v69|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
valueDescription: a -
=== Inputs ===
merge: v810 
values: a678 a1119 
=== Succesors ===
=== Usages ===
v3720 ?812 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v810 values: a678 a1119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v811 v813 
=== Succesors ===
next: a3623 
=== Usages ===
a1036 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v811 v813 #next: a3623  <|@  <|@
f <@~|@floating>@ <|@
tid v3720 <|@
result [v69|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1036 
index: - 
=== Succesors ===
=== Usages ===
a3623 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1036 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3623 <|@
result v70|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap$Entry.value
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3720 
=== Succesors ===
next: v1889 
=== Usages ===
a1128 v1130 v3804 
=== Predecessor ===
v810 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3720 #next: v1889  <|@  <|@
f <@~|@floating>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3623 
=== Succesors ===
=== Usages ===
v1889 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3623  <|@  <|@
f <@*|@fixed>@ <|@
tid v1889 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1130 
=== Succesors ===
trueSuccessor: v1888 
falseSuccessor: v1887 
=== Usages ===
=== Predecessor ===
a3623 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1130 #trueSuccessor: v1888 #falseSuccessor: v1887  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[.] = MOV [v69|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v70|DWORD[.], y: v70|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591870179502076612
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2820 
=== Usages ===
=== Predecessor ===
v1889 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2820  <|@  <|@
f <@*|@fixed>@ <|@
tid v2820 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2818 
=== Predecessor ===
v1888 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B188" 
    xhandlers
    flags 
    probability 4606281698239052062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3624 
=== Usages ===
=== Predecessor ===
v1889 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3624  <|@  <|@
f <@~|@floating>@ <|@
tid v3804 <|@
result [v70|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3623 
=== Succesors ===
=== Usages ===
v3624 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3624 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3804 
=== Succesors ===
next: v3625 
=== Usages ===
v3765 
=== Predecessor ===
v1887 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3804 #next: v3625  <|@  <|@
f <@~|@floating>@ <|@
tid v3765 <|@
result [v71|DWORD * 8 + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3624 
=== Succesors ===
=== Usages ===
v3625 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3625 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3765 
=== Succesors ===
next: v3579 
=== Usages ===
v1893 
=== Predecessor ===
v3624 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3765 #next: v3579  <|@  <|@
f <@~|@floating>@ <|@
tid v1893 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3625 
y: v1885 
=== Succesors ===
=== Usages ===
v3579 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3625 y: v1885  <|@  <|@
f <@*|@fixed>@ <|@
tid v3579 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1893 
=== Succesors ===
trueSuccessor: v3578 
falseSuccessor: v2825 
=== Usages ===
=== Predecessor ===
v3625 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1893 #trueSuccessor: v3578 #falseSuccessor: v2825  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV [v70|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: [v71|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606281698239052062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3578 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2828 
=== Usages ===
=== Predecessor ===
v3579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2828  <|@  <|@
f <@*|@fixed>@ <|@
tid v2828 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2818 
=== Predecessor ===
v3578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4607182418093916022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2818 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2820 v2828 
=== Succesors ===
next: v1136 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2820 v2828 #next: v1136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a3626 
=== Usages ===
=== Predecessor ===
v2818 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a3626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3626 <|@
result v72|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise.state
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3721 
=== Succesors ===
next: v1137 
=== Usages ===
a1135 v3805 
=== Predecessor ===
v1136 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3721 #next: v1137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v3627 
=== Usages ===
=== Predecessor ===
a3626 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v3627  <|@  <|@
f <@~|@floating>@ <|@
tid a1135 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a3626 
=== Succesors ===
=== Usages ===
a850 ?859 a850 a850 a1039 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3626  <|@  <|@
f <@~|@floating>@ <|@
tid a1128 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a3623 
=== Succesors ===
=== Usages ===
a846 a846 ?867 a846 a845 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3623  <|@  <|@
tid ?867 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a762 
values: a1128 a1881 a72 
=== Succesors ===
=== Usages ===
?859 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a762 values: a1128 a1881 a72  <|@  <|@
tid ?859 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 761
stackSize: 1
=== Inputs ===
outerFrameState: ?256 
values: a71 a762 - - - - - - - - - a1135 
virtualObjectMappings: ?761 ?867 ?760 ?754 
=== Succesors ===
=== Usages ===
v3627 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?256 values: a71 a762 - - - - - - - - - a1135 virtualObjectMappings: ?761 ?867 ?760 ?754  <|@  <|@
f <@~|@floating>@ <|@
tid v3805 <|@
result [v72|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3626 
=== Succesors ===
=== Usages ===
v3627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3627 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?859 
guard: - 
address: v3805 
=== Succesors ===
next: v3628 
=== Usages ===
v3767 v3487 v3766 
=== Predecessor ===
v1137 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?859 guard: - address: v3805 #next: v3628  <|@  <|@
f <@~|@floating>@ <|@
tid v3766 <|@
result [v75|DWORD * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3627 
=== Succesors ===
=== Usages ===
v1948 v3628 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3628 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SecondarySuperCache
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3766 
=== Succesors ===
next: v1916 
=== Usages ===
v1913 
=== Predecessor ===
v3627 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3766 #next: v1916  <|@  <|@
f <@~|@floating>@ <|@
tid v1913 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3628 
y: v1905 
=== Succesors ===
=== Usages ===
v1916 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3628 y: v1905  <|@  <|@
f <@*|@fixed>@ <|@
tid v1916 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1913 
=== Succesors ===
trueSuccessor: v1914 
falseSuccessor: v1915 
=== Usages ===
=== Predecessor ===
v3628 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1913 #trueSuccessor: v1914 #falseSuccessor: v1915  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD[.] = MOV [v20|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v72|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v73|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v74|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v74|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v74|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction v75|DWORD = MOV [v72|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: [v75|DWORD * 8 + 24]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B56" 
    xhandlers
    flags 
    probability 4602678818466545526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v840 
=== Usages ===
=== Predecessor ===
v1916 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v840  <|@  <|@
f <@*|@fixed>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
v1914 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD[.], v73|QWORD[.]] destination: B49 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4602678818466545526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1915 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1920 
=== Usages ===
=== Predecessor ===
v1916 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1920  <|@  <|@
f <@~|@floating>@ <|@
tid v3487 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3627 
y: v3486 
=== Succesors ===
=== Usages ===
v1920 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3627 y: v3486  <|@  <|@
f <@*|@fixed>@ <|@
tid v1920 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3487 
=== Succesors ===
trueSuccessor: v1918 
falseSuccessor: v1919 
=== Usages ===
=== Predecessor ===
v1915 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3487 #trueSuccessor: v1918 #falseSuccessor: v1919  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v75|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B56" 
    xhandlers
    flags 
    probability 4598175218839175030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1918 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2562 
=== Usages ===
=== Predecessor ===
v1920 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2562  <|@  <|@
f <@*|@fixed>@ <|@
tid v2562 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
v1918 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD[.], v73|QWORD[.]] destination: B51 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4598175218839175030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j1945 
=== Usages ===
=== Predecessor ===
v1920 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1945  <|@  <|@
f <@~|@floating>@ <|@
tid v3767 <|@
result [v75|DWORD * 8 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3627 
=== Succesors ===
=== Usages ===
j1945 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1945 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3767 
=== Succesors ===
next: i1946 
=== Usages ===
v3768 v3769 
=== Predecessor ===
v1919 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3767 #next: i1946  <|@  <|@
f <@~|@floating>@ <|@
tid v3768 <|@
result [v76|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1945 
index: - 
=== Succesors ===
=== Usages ===
i1946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1945 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1946 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3768 
=== Succesors ===
next: v1923 
=== Usages ===
v1926 
=== Predecessor ===
j1945 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3768 #next: v1923  <|@  <|@
f <@*|@fixed>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1924 
=== Predecessor ===
i1946 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v75|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOV [v76|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B90" 
    successors "B54" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4600105333166934210
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1925 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1924 
values: i153 i1941 
=== Succesors ===
=== Usages ===
v1926 i1932 i1941 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1924 values: i153 i1941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1923 
=== Succesors ===
next: v1929 
=== Usages ===
i1925 v1928 v1939 v1942 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1923 #next: v1929  <|@  <|@
f <@~|@floating>@ <|@
tid v1926 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3652e6c3
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1925 
y: i1946 
=== Succesors ===
=== Usages ===
v1929 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1925 y: i1946  <|@  <|@
f <@*|@fixed>@ <|@
tid v1929 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1926 
=== Succesors ===
trueSuccessor: v1927 
falseSuccessor: v1928 
=== Usages ===
=== Predecessor ===
v1924 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1926 #trueSuccessor: v1927 #falseSuccessor: v1928  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595601733539563714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1927 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j1947 
=== Usages ===
=== Predecessor ===
v1929 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1947  <|@  <|@
f <@~|@floating>@ <|@
tid i1932 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$15/433673915@1f3c8b47
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1925 
y: i1931 
=== Succesors ===
=== Usages ===
i1933 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1925 y: i1931  <|@  <|@
f <@~|@floating>@ <|@
tid i1933 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1932 
y: i1930 
=== Succesors ===
=== Usages ===
j1934 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1932 y: i1930  <|@  <|@
f <@~|@floating>@ <|@
tid j1934 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$13/1218083739@248602d1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$14/1566400895@795fae70
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1933 
=== Succesors ===
=== Usages ===
v3769 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1933  <|@  <|@
f <@~|@floating>@ <|@
tid v3769 <|@
result [v76|QWORD + v81|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1945 
index: j1934 
=== Succesors ===
=== Usages ===
j1947 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1945 index: j1934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1947 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3769 
=== Succesors ===
next: v1940 
=== Usages ===
v1936 
=== Predecessor ===
v1927 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3769 #next: v1940  <|@  <|@
f <@~|@floating>@ <|@
tid v1936 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: Klass*
=== Inputs ===
input: j1947 
=== Succesors ===
=== Usages ===
v1937 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j1947  <|@  <|@
f <@~|@floating>@ <|@
tid v1937 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1936 
y: v1905 
=== Succesors ===
=== Usages ===
v1940 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1936 y: v1905  <|@  <|@
f <@*|@fixed>@ <|@
tid v1940 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v1937 
=== Succesors ===
trueSuccessor: v1939 
falseSuccessor: v1938 
=== Usages ===
=== Predecessor ===
j1947 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1937 #trueSuccessor: v1939 #falseSuccessor: v1938  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = SHL v78|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = LEA [v79|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVSXD v80|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOV [v76|QWORD + v81|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589811391262387560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1939 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1924 
=== Succesors ===
next: v1948 
=== Usages ===
=== Predecessor ===
v1940 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1924 #next: v1948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1948 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3766 
value: v1905 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2561 
=== Usages ===
=== Predecessor ===
v1939 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3766 value: v1905 stateAfter: - lastLocationAccess: - #next: v2561  <|@  <|@
f <@*|@fixed>@ <|@
tid v2561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
v1948 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|DWORD * 8 + 24], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD[.], v73|QWORD[.]] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B31" "B49" "B55" "B51" "B37" "B33" 
    successors "B57" "B88" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a846 <|@
result v83|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Lscala/Option;
valueDescription: a -
=== Inputs ===
merge: v837 
values: a441 a1128 a1128 a1128 a441 a441 
=== Succesors ===
=== Usages ===
a2058 ?851 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v837 values: a441 a1128 a1128 a1128 a441 a441  <|@  <|@
f <@~|@floating>@ <|@
tid a850 <|@
result v84|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v837 
values: a1145 a1135 a1135 a1135 a1145 a1145 
=== Succesors ===
=== Usages ===
v3808 v485 ?839 a1166 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v837 values: a1145 a1135 a1135 a1135 a1145 a1145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v838 v840 v2561 v2562 v2563 v2564 
=== Succesors ===
next: a3629 
=== Usages ===
a846 a850 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v838 v840 v2561 v2562 v2563 v2564 #next: a3629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3629 <|@
result v85|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$WaitQueue$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3707 
=== Succesors ===
next: v3912 
=== Usages ===
v3722 v3912 
=== Predecessor ===
v837 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3707 #next: v3912  <|@  <|@
tid ?851 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a762 
values: a846 a1881 a72 
=== Succesors ===
=== Usages ===
?839 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a762 values: a846 a1881 a72  <|@  <|@
tid ?839 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 761
stackSize: 1
=== Inputs ===
outerFrameState: ?256 
values: a71 a762 - - - - - - - - - a850 
virtualObjectMappings: ?761 ?851 ?760 ?754 
=== Succesors ===
=== Usages ===
v2684 a3032 v3912 a3631 v3913 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?256 values: a71 a762 - - - - - - - - - a850 virtualObjectMappings: ?761 ?851 ?760 ?754  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3912 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?839 
object: a3629 
=== Succesors ===
next: a3630 
=== Usages ===
=== Predecessor ===
a3629 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?839 object: a3629 #next: a3630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3630 <|@
result v86|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3706 
=== Succesors ===
next: a3631 
=== Usages ===
v3724 v3723 
=== Predecessor ===
v3912 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3706 #next: a3631  <|@  <|@
f <@~|@floating>@ <|@
tid v3723 <|@
result [v86|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3630 
=== Succesors ===
=== Usages ===
a3631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3631 <|@
result v87|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$unsafe
nullCheck: true
stamp: n# Lsun/misc/Unsafe;
=== Inputs ===
stateBefore: ?839 
guard: - 
address: v3723 
=== Succesors ===
next: v3913 
=== Usages ===
v3913 
=== Predecessor ===
a3630 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?839 guard: - address: v3723 #next: v3913  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3913 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?839 
object: a3631 
=== Succesors ===
next: v3632 
=== Usages ===
=== Predecessor ===
a3631 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?839 object: a3631 #next: v3632  <|@  <|@
f <@~|@floating>@ <|@
tid v3808 <|@
result [v84|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a850 
index: - 
=== Succesors ===
=== Usages ===
v3632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a850 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3632 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3808 
=== Succesors ===
next: v1592 
=== Usages ===
v3489 
=== Predecessor ===
v3913 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3808 #next: v1592  <|@  <|@
f <@~|@floating>@ <|@
tid v3489 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3632 
y: v3467 
=== Succesors ===
=== Usages ===
v1592 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3632 y: v3467  <|@  <|@
f <@*|@fixed>@ <|@
tid v1592 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3489 
=== Succesors ===
trueSuccessor: v1589 
falseSuccessor: v1591 
=== Usages ===
=== Predecessor ===
v3632 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3489 #trueSuccessor: v1589 #falseSuccessor: v1591  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|QWORD[.], v84|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[.] = MOV [v2|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v84|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v83|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v83|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v83|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v85|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[.] = MOV [v0|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v84|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v83|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v83|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v83|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction v87|DWORD[.] = MOV [v86|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v84|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v83|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v83|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v83|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v87|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction CMP [v84|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B87" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3633 
=== Usages ===
=== Predecessor ===
v1592 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3633  <|@  <|@
f <@~|@floating>@ <|@
tid v3722 <|@
result [v85|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3629 
=== Succesors ===
=== Usages ===
a3633 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3633 <|@
result v88|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.Empty
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v3722 
=== Succesors ===
next: v1596 
=== Usages ===
a1155 
=== Predecessor ===
v1589 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3722 #next: v1596  <|@  <|@
f <@~|@floating>@ <|@
tid a1155 <|@
result v89|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a -
=== Inputs ===
value: a3633 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3633  <|@  <|@
f <@~|@floating>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a850 
y: a1155 
=== Succesors ===
=== Usages ===
v1596 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a850 y: a1155  <|@  <|@
f <@*|@fixed>@ <|@
tid v1596 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v485 
=== Succesors ===
trueSuccessor: v1593 
falseSuccessor: v1595 
=== Usages ===
=== Predecessor ===
a3633 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v485 #trueSuccessor: v1593 #falseSuccessor: v1595  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD[.] = MOV [v85|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = UNCOMPRESSPOINTER (input: v88|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|QWORD[.], y: v84|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j3021 
=== Usages ===
=== Predecessor ===
v1596 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3021  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3021 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3036 
=== Usages ===
v3809 v3810 
=== Predecessor ===
v1593 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3036  <|@  <|@
f <@~|@floating>@ <|@
tid v3809 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3021 
index: - 
=== Succesors ===
=== Usages ===
j3036 v3038 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3021 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3036 <|@
result v90|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3809 
=== Succesors ===
next: j3037 
=== Usages ===
j3490 j3042 v3863 
=== Predecessor ===
j3021 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3809 #next: j3037  <|@  <|@
f <@~|@floating>@ <|@
tid v3810 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3021 
index: - 
=== Succesors ===
=== Usages ===
j3037 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3021 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3037 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3810 
=== Succesors ===
next: v3029 
=== Usages ===
v3026 
=== Predecessor ===
j3036 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3810 #next: v3029  <|@  <|@
f <@~|@floating>@ <|@
tid j3490 <|@
result v91|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3036 
y: j1866 
=== Succesors ===
=== Usages ===
v3026 v3038 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3036 y: j1866  <|@  <|@
f <@~|@floating>@ <|@
tid v3026 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@782e90
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3037 
y: j3490 
=== Succesors ===
=== Usages ===
v3029 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3037 y: j3490  <|@  <|@
f <@*|@fixed>@ <|@
tid v3029 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3026 
=== Succesors ===
trueSuccessor: v3027 
falseSuccessor: v3028 
=== Usages ===
=== Predecessor ===
j3037 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3026 #trueSuccessor: v3027 #falseSuccessor: v3028  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = LEA [v90|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v91|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4575888835103545851
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3027 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3032 
=== Usages ===
=== Predecessor ===
v3029 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3032  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3032 <|@
result v92|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@39bb4106
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?839 
arguments: v2920 i3492 i1797 
=== Succesors ===
next: j3033 
=== Usages ===
j3033 
=== Predecessor ===
v3027 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?839 arguments: v2920 i3492 i1797 #next: j3033  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3033 <|@
result v92|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3032 
=== Succesors ===
next: v3043 
=== Usages ===
j3042 
=== Predecessor ===
a3032 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3032 #next: v3043  <|@  <|@
f <@*|@fixed>@ <|@
tid v3043 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3040 
=== Predecessor ===
j3033 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v84|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v83|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v83|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v83|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|QWORD[.]] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605500002653506857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3028 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3038 
=== Usages ===
=== Predecessor ===
v3029 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3038 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3809 
value: j3490 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3035 
=== Usages ===
=== Predecessor ===
v3028 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3809 value: j3490 stateAfter: - lastLocationAccess: - #next: v3035  <|@  <|@
f <@~|@floating>@ <|@
tid v3863 <|@
result [v90|QWORD + 232] <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j3036 
index: - 
=== Succesors ===
=== Usages ===
v3035 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3036 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3035 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3863 
=== Succesors ===
next: v3041 
=== Usages ===
=== Predecessor ===
v3038 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3863 #next: v3041  <|@  <|@
f <@*|@fixed>@ <|@
tid v3041 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3040 
=== Predecessor ===
v3035 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v91|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v90|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v90|QWORD] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3042 <|@
result v93|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3040 
values: j3036 j3033 
=== Succesors ===
=== Usages ===
v3792 v3811 j2054 a2052 v3812 v3864 v3865 v3866 v3867 v3868 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3040 values: j3036 j3033  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3040 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3041 v3043 
=== Succesors ===
next: a2052 
=== Usages ===
j3042 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3041 v3043 #next: a2052  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2052 <|@
result v94|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3042 
=== Succesors ===
next: a2055 
=== Usages ===
a2067 
=== Predecessor ===
v3040 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3042 #next: a2055  <|@  <|@
f <@~|@floating>@ <|@
tid j2054 <|@
result v95|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3042 
y: j1943 
=== Succesors ===
=== Usages ===
a2055 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3042 y: j1943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2055 <|@
result v96|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2054 
=== Succesors ===
next: j3053 
=== Usages ===
a2068 a2060 
=== Predecessor ===
a2052 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2054 #next: j3053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3053 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3853 
=== Succesors ===
next: v3054 
=== Usages ===
v3054 
=== Predecessor ===
a2055 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3853 #next: v3054  <|@  <|@
f <@~|@floating>@ <|@
tid v3811 <|@
result [v93|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3042 
index: - 
=== Succesors ===
=== Usages ===
v3054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3054 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3811 
value: j3053 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3057 
=== Usages ===
=== Predecessor ===
j3053 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3811 value: j3053 stateAfter: - lastLocationAccess: - #next: v3057  <|@  <|@
f <@~|@floating>@ <|@
tid v3812 <|@
result [v93|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3042 
index: - 
=== Succesors ===
=== Usages ===
v3057 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3057 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3812 
value: v3495 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3061 
=== Usages ===
=== Predecessor ===
v3054 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3812 value: v3495 stateAfter: - lastLocationAccess: - #next: v3061  <|@  <|@
f <@~|@floating>@ <|@
tid v3864 <|@
result [v93|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3042 
index: - 
=== Succesors ===
=== Usages ===
v3061 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3042 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2058 <|@
result v98|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n [Lscala/Option;
=== Inputs ===
value: a846 
=== Succesors ===
=== Usages ===
v3061 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3061 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3864 
value: a2058 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3063 
=== Usages ===
=== Predecessor ===
v3057 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3864 value: a2058 stateAfter: - lastLocationAccess: - #next: v3063  <|@  <|@
f <@~|@floating>@ <|@
tid v3865 <|@
result [v93|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j3042 
index: - 
=== Succesors ===
=== Usages ===
v3063 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3063 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3865 
value: a2059 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3065 
=== Usages ===
=== Predecessor ===
v3061 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3865 value: a2059 stateAfter: - lastLocationAccess: - #next: v3065  <|@  <|@
f <@~|@floating>@ <|@
tid v3866 <|@
result [v93|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3042 
index: - 
=== Succesors ===
=== Usages ===
v3065 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3042 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2060 <|@
result v99|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2055 
=== Succesors ===
=== Usages ===
v3065 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2055  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3065 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3866 
value: a2060 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j3071 
=== Usages ===
=== Predecessor ===
v3063 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3866 value: a2060 stateAfter: - lastLocationAccess: - #next: j3071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3071 <|@
result v100|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3854 
=== Succesors ===
next: v3072 
=== Usages ===
v3072 
=== Predecessor ===
v3065 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3854 #next: v3072  <|@  <|@
f <@~|@floating>@ <|@
tid v3867 <|@
result [v93|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3042 
index: - 
=== Succesors ===
=== Usages ===
v3072 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3072 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3867 
value: j3071 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3075 
=== Usages ===
=== Predecessor ===
j3071 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3867 value: j3071 stateAfter: - lastLocationAccess: - #next: v3075  <|@  <|@
f <@~|@floating>@ <|@
tid v3868 <|@
result [v93|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j3042 
index: - 
=== Succesors ===
=== Usages ===
v3075 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3075 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3868 
value: v3501 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2066 
=== Usages ===
=== Predecessor ===
v3072 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3868 value: v3501 stateAfter: - lastLocationAccess: - #next: v2066  <|@  <|@
f <@~|@floating>@ <|@
tid v3792 <|@
result [v93|QWORD[*] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j3042 
index: - 
=== Succesors ===
=== Usages ===
v2066 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3042 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2066 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3792 
value: a2508 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2067 
=== Usages ===
=== Predecessor ===
v3075 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3792 value: a2508 stateAfter: - lastLocationAccess: - #next: a2067  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2067 <|@
result v94|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2052 
=== Succesors ===
next: a2068 
=== Usages ===
a1167 ?768 
=== Predecessor ===
v2066 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2052 #next: a2068  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2068 <|@
result v96|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2055 
=== Succesors ===
next: v2069 
=== Usages ===
?769 
=== Predecessor ===
a2067 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2055 #next: v2069  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2069 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j3634 
=== Usages ===
=== Predecessor ===
a2068 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j3634  <|@  <|@
f <@~|@floating>@ <|@
tid v3724 <|@
result [v86|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3630 
=== Succesors ===
=== Usages ===
j3634 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3634 <|@
result v101|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$stateOff
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3724 
=== Succesors ===
next: i1169 
=== Usages ===
v3725 
=== Predecessor ===
v2069 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3724 #next: i1169  <|@  <|@
f <@~|@floating>@ <|@
tid v3725 <|@
result [v20|QWORD[.] + v101|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1883 
index: j3634 
=== Succesors ===
=== Usages ===
i1169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1883 index: j3634  <|@  <|@
f <@~|@floating>@ <|@
tid a1166 <|@
result v102|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/lang/Object;
=== Inputs ===
value: a850 
=== Succesors ===
=== Usages ===
i1169 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a850  <|@  <|@
f <@~|@floating>@ <|@
tid a1167 <|@
result v103|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2067 
=== Succesors ===
=== Usages ===
i1169 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2067  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1169 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ANY_LOCATION
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3725 
expectedValue: a1166 
newValue: a1167 
stateAfter: - 
=== Succesors ===
next: j3078 
=== Usages ===
?501 i502 
=== Predecessor ===
j3634 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v3725 expectedValue: a1166 newValue: a1167 stateAfter: - #next: j3078  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3078 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1883 
=== Succesors ===
next: v3082 
=== Usages ===
j3079 
=== Predecessor ===
i1169 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1883 #next: v3082  <|@  <|@
f <@~|@floating>@ <|@
tid j3079 <|@
result v106|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$146/1524633570@1cec0275
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3078 
y: i2993 
=== Succesors ===
=== Usages ===
v3813 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3078 y: i2993  <|@  <|@
f <@~|@floating>@ <|@
tid v3813 <|@
result [v106|QWORD[*] + v32|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3079 
index: j2997 
=== Succesors ===
=== Usages ===
v3082 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3079 index: j2997  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3082 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3813 
value: i2999 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1600 
=== Usages ===
=== Predecessor ===
j3078 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3813 value: i2999 stateAfter: - lastLocationAccess: - #next: v1600  <|@  <|@
tid ?505 <|@
d <@d|@=== Debug Properties ===
bci: 33
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 763
stackSize: 0
=== Inputs ===
outerFrameState: ?256 
values: a71 a762 - - - - - - - - - 
=== Succesors ===
=== Usages ===
?501 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?256 values: a71 a762 - - - - - - - - -  <|@  <|@
tid ?768 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a762 
materializedValue: a2067 
=== Succesors ===
=== Usages ===
?501 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a762 materializedValue: a2067  <|@  <|@
tid ?769 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a72 
materializedValue: a2068 
=== Succesors ===
=== Usages ===
?501 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a72 materializedValue: a2068  <|@  <|@
tid ?501 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Promise.cas(Object, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 453
stackSize: 1
=== Inputs ===
outerFrameState: ?505 
values: - - - i1169 
virtualObjectMappings: ?761 ?768 ?760 ?769 
=== Succesors ===
=== Usages ===
v2650 v3910 a3637 a3640 v3911 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?505 values: - - - i1169 virtualObjectMappings: ?761 ?768 ?760 ?769  <|@  <|@
f <@~|@floating>@ <|@
tid i502 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$115/1567088237@42498438
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$116/1100921398@1fb26baa
inputBits: 32
resultBits: 1
stamp: i1
=== Inputs ===
value: i1169 
=== Succesors ===
=== Usages ===
i503 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1169  <|@  <|@
f <@~|@floating>@ <|@
tid i503 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1701538656@15c1f08d
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/999668238@1b27ce49
inputAlwaysPositive: false
inputBits: 1
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i502 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i502  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i503 
y: i153 
=== Succesors ===
=== Usages ===
v1600 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i503 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v1599 
falseSuccessor: v1597 
=== Usages ===
=== Predecessor ===
v3082 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v1599 #falseSuccessor: v1597  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE v93|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[*] = LEA [v93|QWORD[*] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE v95|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV [v44|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v93|QWORD[*]], y: v97|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v93|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[.] = COMPRESSPOINTER (input: v83|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v93|QWORD[*] + 12], y: v98|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v93|QWORD[*] + 16], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD[.] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v93|QWORD[*] + 20], y: v99|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = MOV [v43|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v93|QWORD[*] + 24], y: v100|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v93|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v93|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$7/390800101@687091653] <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [v86|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD[.] = COMPRESSPOINTER (input: v84|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[.] = COMPRESSPOINTER (input: v94|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = MOVE v102|DWORD[.] moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = CAS (address: [v20|QWORD[.] + v101|QWORD * 1], cmpValue: rax|DWORD[.], newValue: v103|DWORD[.]) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: v105|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[*] = SHR v20|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v106|QWORD[*] + v32|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = AND v104|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v107|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2650 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2650  <|@  <|@
f <@~|@floating>@ <|@
tid i2647 <|@
result int[-299539|0xfffffffffffb6ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -299539
stableDimension: 0
stamp: i32 [-299539] ⇊00000000fffb6ded ⇈00000000fffb6ded
stampKind: i32
value: int[-299539|0xfffffffffffb6ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2650 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?501 
actionAndReason: i2647 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?501 actionAndReason: i2647 speculation: a2581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -299539 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v104|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: v20|QWORD[.] v94|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] v96|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction DEOPT info [bci:18, 33, 27, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1597 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3635 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3635 <|@
result v108|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3706 
=== Succesors ===
next: v3910 
=== Usages ===
a1172 v3910 
=== Predecessor ===
v1597 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3706 #next: v3910  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?501 
object: a3635 
=== Succesors ===
next: a3636 
=== Usages ===
=== Predecessor ===
a3635 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?501 object: a3635 #next: a3636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3636 <|@
result v109|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$WaitQueue$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3707 
=== Succesors ===
next: a3637 
=== Usages ===
v3726 
=== Predecessor ===
v3910 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3707 #next: a3637  <|@  <|@
f <@~|@floating>@ <|@
tid v3726 <|@
result [v109|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3636 
=== Succesors ===
=== Usages ===
a3637 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3637 <|@
result v110|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.Empty
nullCheck: true
stamp: n -
=== Inputs ===
stateBefore: ?501 
guard: - 
address: v3726 
=== Succesors ===
next: v1183 
=== Usages ===
?781 v2135 v3144 v3815 i1202 ?276 
=== Predecessor ===
a3636 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?501 guard: - address: v3726 #next: v1183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a3638 
=== Usages ===
=== Predecessor ===
a3637 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a3638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3638 <|@
result v111|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise.state
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3727 
=== Succesors ===
next: v1184 
=== Usages ===
?688 v2900 v3814 
=== Predecessor ===
v1183 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3727 #next: v1184  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a3639 
=== Usages ===
=== Predecessor ===
a3638 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a3639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3639 <|@
result v112|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3706 
=== Succesors ===
next: a3640 
=== Usages ===
v3729 v3728 
=== Predecessor ===
v1184 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3706 #next: a3640  <|@  <|@
f <@~|@floating>@ <|@
tid v3728 <|@
result [v112|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3639 
=== Succesors ===
=== Usages ===
a3640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3640 <|@
result v113|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$unsafe
nullCheck: true
stamp: n# Lsun/misc/Unsafe;
=== Inputs ===
stateBefore: ?501 
guard: - 
address: v3728 
=== Succesors ===
next: v3911 
=== Usages ===
v3911 
=== Predecessor ===
a3639 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?501 guard: - address: v3728 #next: v3911  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3911 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?501 
object: a3640 
=== Succesors ===
next: v2073 
=== Usages ===
=== Predecessor ===
a3640 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?501 object: a3640 #next: v2073  <|@  <|@
f <@~|@floating>@ <|@
tid v3814 <|@
result [v111|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3638 
=== Succesors ===
=== Usages ===
v3641 v3643 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3638  <|@  <|@
f <@~|@floating>@ <|@
tid v2900 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3638 
=== Succesors ===
=== Usages ===
v2092 v2073 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3638  <|@  <|@
tid ?781 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a780 
values: a3637 
=== Succesors ===
=== Usages ===
?688 ?276 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a780 values: a3637  <|@  <|@
f <@~|@floating>@ <|@
tid a1172 <|@
result v114|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# Lcom/twitter/util/Promise$;
=== Inputs ===
value: a3635 
=== Succesors ===
=== Usages ===
a960 ?119 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3635  <|@  <|@
tid ?119 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Promise$.interrupts(Future)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 329
stackSize: 1
=== Inputs ===
outerFrameState: ?118 
values: a1172 a751 a780 
=== Succesors ===
=== Usages ===
?299 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?118 values: a1172 a751 a780  <|@  <|@
tid ?299 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Promise$$anon$3.<init>(Future)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 330
stackSize: 0
=== Inputs ===
outerFrameState: ?119 
values: - - 
=== Succesors ===
=== Usages ===
?694 ?276 ?547 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?119 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v2073 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v2900 
=== Succesors ===
trueSuccessor: v2072 
falseSuccessor: v2071 
=== Usages ===
=== Predecessor ===
v3911 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2900 #trueSuccessor: v2072 #falseSuccessor: v2071  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD[.] = MOV [v0|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v104|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: v20|QWORD[.] v94|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] v96|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v108|DWORD[.] * 8] state [bci:18, 33, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v109|DWORD[.] = MOV [v2|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v104|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: v20|QWORD[.] v94|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] v96|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction v110|DWORD[.] = MOV [v109|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 33, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v111|DWORD[.] = MOV [v16|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD[.] = MOV [v0|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v104|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: v20|QWORD[.] v94|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] v96|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction v113|DWORD[.] = MOV [v112|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 33, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v104|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: v20|QWORD[.] v94|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] v96|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v113|DWORD[.] * 8] state [bci:18, 33, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v108|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v111|DWORD[.], y: v111|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 4590583437316280435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2072 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2083 
=== Usages ===
=== Predecessor ===
v2073 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2083  <|@  <|@
f <@*|@fixed>@ <|@
tid v2083 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2830 
=== Predecessor ===
v2072 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4604834113280031363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2071 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3641 
=== Usages ===
=== Predecessor ===
v2073 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3641  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3641 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3814 
=== Succesors ===
next: v3642 
=== Usages ===
v3775 
=== Predecessor ===
v2071 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3814 #next: v3642  <|@  <|@
f <@~|@floating>@ <|@
tid v3775 <|@
result [v115|DWORD * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3641 
=== Succesors ===
=== Usages ===
v3642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3641  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3642 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3775 
=== Succesors ===
next: v2835 
=== Usages ===
v2077 
=== Predecessor ===
v3641 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3775 #next: v2835  <|@  <|@
f <@~|@floating>@ <|@
tid v2077 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3642 
y: v1798 
=== Succesors ===
=== Usages ===
v2835 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3642 y: v1798  <|@  <|@
f <@*|@fixed>@ <|@
tid v2835 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v2077 
=== Succesors ===
trueSuccessor: v2833 
falseSuccessor: v2832 
=== Usages ===
=== Predecessor ===
v3642 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2077 #trueSuccessor: v2833 #falseSuccessor: v2832  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v111|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: [v115|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2833 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2672 
=== Usages ===
=== Predecessor ===
v2835 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2672  <|@  <|@
f <@~|@floating>@ <|@
tid i2673 <|@
result int[-303379|0xfffffffffffb5eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -303379
stableDimension: 0
stamp: i32 [-303379] ⇊00000000fffb5eed ⇈00000000fffb5eed
stampKind: i32
value: int[-303379|0xfffffffffffb5eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2674 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2671 
=== Predecessor ===
v2833 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-303379|0xfffffffffffb5eed]] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604834113280031363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2832 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2836 
=== Usages ===
=== Predecessor ===
v2835 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2836  <|@  <|@
f <@*|@fixed>@ <|@
tid v2836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2830 
=== Predecessor ===
v2832 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" "B67" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2830 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2083 v2836 
=== Succesors ===
next: v2092 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2083 v2836 #next: v2092  <|@  <|@
f <@*|@fixed>@ <|@
tid v2092 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v2900 
=== Succesors ===
trueSuccessor: v2091 
falseSuccessor: v2090 
=== Usages ===
=== Predecessor ===
v2830 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2900 #trueSuccessor: v2091 #falseSuccessor: v2090  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v111|DWORD[.], y: v111|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B74" 
    xhandlers
    flags 
    probability 4590583437316280435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2091 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2102 
=== Usages ===
=== Predecessor ===
v2092 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2102  <|@  <|@
f <@*|@fixed>@ <|@
tid v2102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2840 
=== Predecessor ===
v2091 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4604834113280031363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2090 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3643 
=== Usages ===
=== Predecessor ===
v2092 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3643 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3814 
=== Succesors ===
next: v3644 
=== Usages ===
v3776 
=== Predecessor ===
v2090 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3814 #next: v3644  <|@  <|@
f <@~|@floating>@ <|@
tid v3776 <|@
result [v116|DWORD * 8 + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3643 
=== Succesors ===
=== Usages ===
v3644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3644 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3776 
=== Succesors ===
next: v2845 
=== Usages ===
v2096 
=== Predecessor ===
v3643 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3776 #next: v2845  <|@  <|@
f <@~|@floating>@ <|@
tid v2096 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3644 
y: v1819 
=== Succesors ===
=== Usages ===
v2845 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3644 y: v1819  <|@  <|@
f <@*|@fixed>@ <|@
tid v2845 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v2096 
=== Succesors ===
trueSuccessor: v2843 
falseSuccessor: v2842 
=== Usages ===
=== Predecessor ===
v3644 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2096 #trueSuccessor: v2843 #falseSuccessor: v2842  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOV [v111|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: [v116|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2843 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2677 
=== Usages ===
=== Predecessor ===
v2845 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2677  <|@  <|@
f <@~|@floating>@ <|@
tid i2678 <|@
result int[-303635|0xfffffffffffb5ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -303635
stableDimension: 0
stamp: i32 [-303635] ⇊00000000fffb5ded ⇈00000000fffb5ded
stampKind: i32
value: int[-303635|0xfffffffffffb5ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2674 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2671 
=== Predecessor ===
v2843 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-303635|0xfffffffffffb5ded]] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B71" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2674 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-303635 - -303379] ⇊00000000fffb5ced ⇈00000000fffb5fed
valueDescription: i32
=== Inputs ===
merge: v2671 
values: i2673 i2678 
=== Succesors ===
=== Usages ===
v2676 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2671 values: i2673 i2678  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2672 v2677 
=== Succesors ===
next: v2676 
=== Usages ===
i2674 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2672 v2677 #next: v2676  <|@  <|@
tid ?694 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Promise.forwardInterruptsTo(Future)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 503
stackSize: 0
=== Inputs ===
outerFrameState: ?299 
values: a780 a751 - - - - - - - - 
=== Succesors ===
=== Usages ===
?688 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?299 values: a780 a751 - - - - - - - -  <|@  <|@
tid ?688 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.isDefined()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 840
stackSize: 1
=== Inputs ===
outerFrameState: ?694 
values: a751 - - - a3638 
virtualObjectMappings: ?760 ?781 ?782 
=== Succesors ===
=== Usages ===
v2676 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?694 values: a751 - - - a3638 virtualObjectMappings: ?760 ?781 ?782  <|@  <|@
f <@*|@fixed>@ <|@
tid v2676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?688 
actionAndReason: i2674 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2671 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?688 actionAndReason: i2674 speculation: a2581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v117|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.isDefined(Promise.scala:840) [bci: 4]
stack: v111|DWORD[.] 
locals: v16|QWORD[.] - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:503) [bci: 1]
locals: vobject:Promise$$anon$3:0{state=v110|DWORD[.]} v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v110|DWORD[.]} 
locals: v114|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=v110|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v110|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:4, 1, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604834113280031363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2846 
=== Usages ===
=== Predecessor ===
v2845 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2846  <|@  <|@
f <@*|@fixed>@ <|@
tid v2846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2840 
=== Predecessor ===
v2842 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B69" "B73" 
    successors "B75" "B86" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2102 v2846 
=== Succesors ===
next: v3645 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2102 v2846 #next: v3645  <|@  <|@
tid ?276 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<Promise.forwardInterruptsTo(Future)>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 504
stackSize: 1
=== Inputs ===
outerFrameState: ?299 
values: a780 a751 - - - - - - - - a3637 
virtualObjectMappings: ?781 ?760 ?782 
=== Succesors ===
=== Usages ===
v2602 a3105 v3645 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?299 values: a780 a751 - - - - - - - - a3637 virtualObjectMappings: ?781 ?760 ?782  <|@  <|@
f <@~|@floating>@ <|@
tid v3815 <|@
result [v110|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3637 
=== Succesors ===
=== Usages ===
v3645 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3637  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3645 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?276 
guard: - 
address: v3815 
=== Succesors ===
next: v1632 
=== Usages ===
v3504 
=== Predecessor ===
v2840 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?276 guard: - address: v3815 #next: v1632  <|@  <|@
f <@~|@floating>@ <|@
tid v3504 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3645 
y: v3467 
=== Succesors ===
=== Usages ===
v1632 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3645 y: v3467  <|@  <|@
f <@*|@fixed>@ <|@
tid v1632 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3504 
=== Succesors ===
trueSuccessor: v1629 
falseSuccessor: v1631 
=== Usages ===
=== Predecessor ===
v3645 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3504 #trueSuccessor: v1629 #falseSuccessor: v1631  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: v110|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=v110|DWORD[.]} v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v110|DWORD[.]} 
locals: v114|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=v110|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v110|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction CMP [v110|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} state [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j3094 
=== Usages ===
=== Predecessor ===
v1632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3094  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3094 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3109 
=== Usages ===
v3816 v3817 
=== Predecessor ===
v1629 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3109  <|@  <|@
f <@~|@floating>@ <|@
tid v3816 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3094 
index: - 
=== Succesors ===
=== Usages ===
j3109 v3111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3094 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3109 <|@
result v118|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3816 
=== Succesors ===
next: j3110 
=== Usages ===
j3505 j3115 v3869 
=== Predecessor ===
j3094 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3816 #next: j3110  <|@  <|@
f <@~|@floating>@ <|@
tid v3817 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3094 
index: - 
=== Succesors ===
=== Usages ===
j3110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3094 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3110 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3817 
=== Succesors ===
next: v3102 
=== Usages ===
v3099 
=== Predecessor ===
j3109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3817 #next: v3102  <|@  <|@
f <@~|@floating>@ <|@
tid j3505 <|@
result v119|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3109 
y: j1866 
=== Succesors ===
=== Usages ===
v3099 v3111 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3109 y: j1866  <|@  <|@
f <@~|@floating>@ <|@
tid v3099 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@782e90
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3110 
y: j3505 
=== Succesors ===
=== Usages ===
v3102 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3110 y: j3505  <|@  <|@
f <@*|@fixed>@ <|@
tid v3102 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3099 
=== Succesors ===
trueSuccessor: v3100 
falseSuccessor: v3101 
=== Usages ===
=== Predecessor ===
j3110 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3099 #trueSuccessor: v3100 #falseSuccessor: v3101  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = LEA [v118|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v119|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4575888835103545851
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3105 
=== Usages ===
=== Predecessor ===
v3102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3105 <|@
result v120|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@39bb4106
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?276 
arguments: v2920 i3492 i1797 
=== Succesors ===
next: j3106 
=== Usages ===
j3106 
=== Predecessor ===
v3100 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?276 arguments: v2920 i3492 i1797 #next: j3106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3106 <|@
result v120|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3105 
=== Succesors ===
next: v3116 
=== Usages ===
j3115 
=== Predecessor ===
a3105 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3105 #next: v3116  <|@  <|@
f <@*|@fixed>@ <|@
tid v3116 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3113 
=== Predecessor ===
j3106 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: v110|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=v110|DWORD[.]} v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v110|DWORD[.]} 
locals: v114|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=v110|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v110|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v120|QWORD[.]] destination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4605500002653506857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3111 
=== Usages ===
=== Predecessor ===
v3102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3111 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3816 
value: j3505 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3108 
=== Usages ===
=== Predecessor ===
v3101 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3816 value: j3505 stateAfter: - lastLocationAccess: - #next: v3108  <|@  <|@
f <@~|@floating>@ <|@
tid v3869 <|@
result [v118|QWORD + 232] <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j3109 
index: - 
=== Succesors ===
=== Usages ===
v3108 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3109 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3869 
=== Succesors ===
next: v3114 
=== Usages ===
=== Predecessor ===
v3111 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3869 #next: v3114  <|@  <|@
f <@*|@fixed>@ <|@
tid v3114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3113 
=== Predecessor ===
v3108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v119|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v118|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v118|QWORD] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3115 <|@
result v121|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3113 
values: j3109 j3106 
=== Succesors ===
=== Usages ===
v3873 v3777 j2129 a2127 v3819 v3818 v3870 v3871 v3872 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3113 values: j3109 j3106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3114 v3116 
=== Succesors ===
next: a2127 
=== Usages ===
j3115 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3114 v3116 #next: a2127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2127 <|@
result v122|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3115 
=== Succesors ===
next: a2130 
=== Usages ===
a2139 
=== Predecessor ===
v3113 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3115 #next: a2130  <|@  <|@
f <@~|@floating>@ <|@
tid j2129 <|@
result v123|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3115 
y: j1072 
=== Succesors ===
=== Usages ===
a2130 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3115 y: j1072  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2130 <|@
result v124|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2129 
=== Succesors ===
next: j3125 
=== Usages ===
a2140 
=== Predecessor ===
a2127 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2129 #next: j3125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3125 <|@
result v125|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3832 
=== Succesors ===
next: v3126 
=== Usages ===
v3126 
=== Predecessor ===
a2130 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3832 #next: v3126  <|@  <|@
f <@~|@floating>@ <|@
tid v3818 <|@
result [v121|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3115 
index: - 
=== Succesors ===
=== Usages ===
v3126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3115 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3126 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3818 
value: j3125 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3129 
=== Usages ===
=== Predecessor ===
j3125 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3818 value: j3125 stateAfter: - lastLocationAccess: - #next: v3129  <|@  <|@
f <@~|@floating>@ <|@
tid v3819 <|@
result [v121|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3115 
index: - 
=== Succesors ===
=== Usages ===
v3129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3115 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3819 
value: v3473 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2135 
=== Usages ===
=== Predecessor ===
v3126 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3819 value: v3473 stateAfter: - lastLocationAccess: - #next: v2135  <|@  <|@
f <@~|@floating>@ <|@
tid v3777 <|@
result [v121|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3115 
index: - 
=== Succesors ===
=== Usages ===
v2135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3115 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2135 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3777 
value: a3637 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j3136 
=== Usages ===
=== Predecessor ===
v3129 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3777 value: a3637 stateAfter: - lastLocationAccess: - #next: j3136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3136 <|@
result v126|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3850 
=== Succesors ===
next: v3137 
=== Usages ===
v3137 
=== Predecessor ===
v2135 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3850 #next: v3137  <|@  <|@
f <@~|@floating>@ <|@
tid v3870 <|@
result [v121|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j3115 
index: - 
=== Succesors ===
=== Usages ===
v3137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3115 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3870 
value: j3136 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3140 
=== Usages ===
=== Predecessor ===
j3136 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3870 value: j3136 stateAfter: - lastLocationAccess: - #next: v3140  <|@  <|@
f <@~|@floating>@ <|@
tid v3871 <|@
result [v121|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3115 
index: - 
=== Succesors ===
=== Usages ===
v3140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3115 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3140 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3871 
value: v3476 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3144 
=== Usages ===
=== Predecessor ===
v3137 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3871 value: v3476 stateAfter: - lastLocationAccess: - #next: v3144  <|@  <|@
f <@~|@floating>@ <|@
tid v3872 <|@
result [v121|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3115 
index: - 
=== Succesors ===
=== Usages ===
v3144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3115 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3144 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3872 
value: a3637 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3146 
=== Usages ===
=== Predecessor ===
v3140 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3872 value: a3637 stateAfter: - lastLocationAccess: - #next: v3146  <|@  <|@
f <@~|@floating>@ <|@
tid v3873 <|@
result [v121|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j3115 
index: - 
=== Succesors ===
=== Usages ===
v3146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3115 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3146 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3873 
value: a2059 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2139 
=== Usages ===
=== Predecessor ===
v3144 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3873 value: a2059 stateAfter: - lastLocationAccess: - #next: a2139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2139 <|@
result v122|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2127 
=== Succesors ===
next: a2140 
=== Usages ===
v3730 ?787 a919 a917 j3147 
=== Predecessor ===
v3146 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2127 #next: a2140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2140 <|@
result v124|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2130 
=== Succesors ===
next: v2141 
=== Usages ===
a1200 
=== Predecessor ===
a2139 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2130 #next: v2141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2141 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j3646 
=== Usages ===
=== Predecessor ===
a2140 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j3646  <|@  <|@
f <@~|@floating>@ <|@
tid v3729 <|@
result [v112|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3639 
=== Succesors ===
=== Usages ===
j3646 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3646 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$stateOff
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3729 
=== Succesors ===
next: i1202 
=== Usages ===
v3730 
=== Predecessor ===
v2141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3729 #next: i1202  <|@  <|@
f <@~|@floating>@ <|@
tid v3730 <|@
result [v122|QWORD[.] + v127|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2139 
index: j3646 
=== Succesors ===
=== Usages ===
i1202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2139 index: j3646  <|@  <|@
f <@~|@floating>@ <|@
tid a1200 <|@
result v128|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2140 
=== Succesors ===
=== Usages ===
i1202 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1202 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ANY_LOCATION
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3730 
expectedValue: a3637 
newValue: a1200 
stateAfter: - 
=== Succesors ===
next: j3147 
=== Usages ===
?543 i544 i908 
=== Predecessor ===
j3646 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v3730 expectedValue: a3637 newValue: a1200 stateAfter: - #next: j3147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3147 <|@
result v122|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2139 
=== Succesors ===
next: v3151 
=== Usages ===
j3148 
=== Predecessor ===
i1202 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2139 #next: v3151  <|@  <|@
f <@~|@floating>@ <|@
tid j3148 <|@
result v131|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$146/1524633570@1cec0275
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3147 
y: i2993 
=== Succesors ===
=== Usages ===
v3820 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3147 y: i2993  <|@  <|@
f <@~|@floating>@ <|@
tid v3820 <|@
result [v131|QWORD[*] + v32|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3148 
index: j2997 
=== Succesors ===
=== Usages ===
v3151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3148 index: j2997  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3151 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3820 
value: i2999 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1636 
=== Usages ===
=== Predecessor ===
j3147 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3820 value: i2999 stateAfter: - lastLocationAccess: - #next: v1636  <|@  <|@
tid ?547 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<Promise.forwardInterruptsTo(Future)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 506
stackSize: 0
=== Inputs ===
outerFrameState: ?299 
values: a780 a751 - - - - - - - - 
=== Succesors ===
=== Usages ===
?543 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?299 values: a780 a751 - - - - - - - -  <|@  <|@
tid ?787 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a780 
materializedValue: a2139 
=== Succesors ===
=== Usages ===
?543 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a780 materializedValue: a2139  <|@  <|@
tid ?543 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Promise.cas(Object, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 453
stackSize: 1
=== Inputs ===
outerFrameState: ?547 
values: - - - i1202 
virtualObjectMappings: ?787 ?760 ?782 
=== Succesors ===
=== Usages ===
v2664 a3648 v3649 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?547 values: - - - i1202 virtualObjectMappings: ?787 ?760 ?782  <|@  <|@
f <@~|@floating>@ <|@
tid i544 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$115/1567088237@42498438
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$116/1100921398@1fb26baa
inputBits: 32
resultBits: 1
stamp: i1
=== Inputs ===
value: i1202 
=== Succesors ===
=== Usages ===
i545 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1202  <|@  <|@
f <@~|@floating>@ <|@
tid i545 <|@
result v132|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1701538656@15c1f08d
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/999668238@1b27ce49
inputAlwaysPositive: false
inputBits: 1
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i544 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i544  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i545 
y: i153 
=== Succesors ===
=== Usages ===
v1636 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i545 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v296 
=== Succesors ===
trueSuccessor: v1635 
falseSuccessor: v1633 
=== Usages ===
=== Predecessor ===
v3151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v296 #trueSuccessor: v1635 #falseSuccessor: v1633  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE v121|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[*] = LEA [v121|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE v123|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [v21|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD[*]], y: v125|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v121|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD[*] + 12], y: v110|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOV [v23|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD[*] + 16], y: v126|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v121|QWORD[*] + 24] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD[*] + 28], y: v110|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD[*] + 32], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [v112|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD[.] = COMPRESSPOINTER (input: v124|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = MOVE v110|DWORD[.] moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = CAS (address: [v122|QWORD[.] + v127|QWORD * 1], cmpValue: rax|DWORD[.], newValue: v128|DWORD[.]) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: v130|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[*] = SHR v122|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v131|QWORD[*] + v32|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = AND v129|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v132|DWORD, y: v132|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1635 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2660 
=== Usages ===
=== Predecessor ===
v1636 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2660  <|@  <|@
f <@~|@floating>@ <|@
tid i2661 <|@
result int[-307987|0xfffffffffffb4ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -307987
stableDimension: 0
stamp: i32 [-307987] ⇊00000000fffb4ced ⇈00000000fffb4ced
stampKind: i32
value: int[-307987|0xfffffffffffb4ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2662 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2659 
=== Predecessor ===
v1635 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-307987|0xfffffffffffb4ced]] destination: B79 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B84" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3647 
=== Usages ===
=== Predecessor ===
v1636 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3647 <|@
result v133|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Local$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Local$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3712 
=== Succesors ===
next: a3648 
=== Usages ===
v3731 
=== Predecessor ===
v1633 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3712 #next: a3648  <|@  <|@
f <@~|@floating>@ <|@
tid v3731 <|@
result [v133|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3647 
=== Succesors ===
=== Usages ===
a3648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3648 <|@
result v134|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Local$.localCtx
nullCheck: true
stamp: n Ljava/lang/ThreadLocal;
=== Inputs ===
stateBefore: ?543 
guard: - 
address: v3731 
=== Succesors ===
next: v3649 
=== Usages ===
a1209 v3821 
=== Predecessor ===
a3647 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?543 guard: - address: v3731 #next: v3649  <|@  <|@
f <@~|@floating>@ <|@
tid v3821 <|@
result [v134|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3648 
=== Succesors ===
=== Usages ===
v3649 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3649 <|@
result v135|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?543 
guard: - 
address: v3821 
=== Succesors ===
next: v1212 
=== Usages ===
v3732 
=== Predecessor ===
a3648 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?543 guard: - address: v3821 #next: v1212  <|@  <|@
f <@~|@floating>@ <|@
tid v3732 <|@
result [v135|DWORD * 8 + 520] <|@
d <@d|@=== Debug Properties ===
displacement: 520
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3649 
=== Succesors ===
=== Usages ===
v1212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3649  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1212 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v3732 
=== Succesors ===
next: v1648 
=== Usages ===
v706 
=== Predecessor ===
v3649 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3732 #next: v1648  <|@  <|@
f <@~|@floating>@ <|@
tid v706 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1212 
y: v650 
=== Succesors ===
=== Usages ===
v1648 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1212 y: v650  <|@  <|@
f <@*|@fixed>@ <|@
tid v1648 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v706 
=== Succesors ===
trueSuccessor: v1645 
falseSuccessor: v1647 
=== Usages ===
=== Predecessor ===
v1212 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v706 #trueSuccessor: v1645 #falseSuccessor: v1647  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|DWORD[.] = MOV [v34|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v129|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v122|QWORD[.] v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v122|QWORD[.] 
locals: v114|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction v134|DWORD[.] = MOV [v133|DWORD[.] * 8 + 16] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v129|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v122|QWORD[.] v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v122|QWORD[.] 
locals: v114|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction v135|DWORD = MOV [v134|DWORD[.] * 8 + 8] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: [v135|DWORD * 8 + 520]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3650 
=== Usages ===
=== Predecessor ===
v1648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3650 <|@
result v136|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Thread.threadLocals
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3745 
=== Succesors ===
next: v559 
=== Usages ===
a2576 v1404 
=== Predecessor ===
v1645 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3745 #next: v559  <|@  <|@
f <@~|@floating>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3650 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3650  <|@  <|@
f <@~|@floating>@ <|@
tid a1209 <|@
result v137|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a Ljava/lang/ThreadLocal;
=== Inputs ===
value: a3648 
=== Succesors ===
=== Usages ===
a911 a913 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3648  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 7.839287703504969E-8
=== Inputs ===
condition: v1404 
=== Succesors ===
trueSuccessor: v557 
falseSuccessor: v558 
=== Usages ===
=== Predecessor ===
a3650 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1404 #trueSuccessor: v557 #falseSuccessor: v558  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|DWORD[.] = MOV [v39|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = UNCOMPRESSPOINTER (input: v134|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v136|DWORD[.], y: v136|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 7.839287703504969E-8 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B124" 
    xhandlers
    flags 
    probability 4499457912450120107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v559 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v565  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
v557 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v137|QWORD[.], v122|QWORD[.]] destination: B82 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B120" 
    xhandlers
    flags 
    probability 4605573989781659870
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v904 
=== Usages ===
=== Predecessor ===
v559 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v904  <|@  <|@
f <@*|@fixed>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
v558 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|DWORD, v137|QWORD[.], v114|QWORD[.], v136|DWORD[.], v122|QWORD[.]] destination: B83 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2669 
=== Usages ===
=== Predecessor ===
v1648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2669  <|@  <|@
f <@~|@floating>@ <|@
tid i2670 <|@
result int[-310579|0xfffffffffffb42cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -310579
stableDimension: 0
stamp: i32 [-310579] ⇊00000000fffb42cd ⇈00000000fffb42cd
stampKind: i32
value: int[-310579|0xfffffffffffb42cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2662 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2659 
=== Predecessor ===
v1647 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-310579|0xfffffffffffb42cd]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B79" "B84" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2662 <|@
result v138|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-310579 - -307987] ⇊00000000fffb40c5 ⇈00000000fffb4ffd
valueDescription: i32
=== Inputs ===
merge: v2659 
values: i2661 i2670 
=== Succesors ===
=== Usages ===
v2664 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2659 values: i2661 i2670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2660 v2669 
=== Succesors ===
next: v2664 
=== Usages ===
i2662 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2660 v2669 #next: v2664  <|@  <|@
f <@*|@fixed>@ <|@
tid v2664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?543 
actionAndReason: i2662 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2659 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?543 actionAndReason: i2662 speculation: a2581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v138|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v129|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v122|QWORD[.] v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v122|QWORD[.] 
locals: v114|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2602 
=== Usages ===
=== Predecessor ===
v1632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2602  <|@  <|@
f <@~|@floating>@ <|@
tid i2604 <|@
result int[-304435|0xfffffffffffb5acd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -304435
stableDimension: 0
stamp: i32 [-304435] ⇊00000000fffb5acd ⇈00000000fffb5acd
stampKind: i32
value: int[-304435|0xfffffffffffb5acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2602 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?276 
actionAndReason: i2604 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1631 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?276 actionAndReason: i2604 speculation: a2581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -304435 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: v110|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=v110|DWORD[.]} v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v110|DWORD[.]} 
locals: v114|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=v110|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v110|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2691 
=== Usages ===
=== Predecessor ===
v1596 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2691  <|@  <|@
f <@~|@floating>@ <|@
tid i2692 <|@
result int[-295955|0xfffffffffffb7bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -295955
stableDimension: 0
stamp: i32 [-295955] ⇊00000000fffb7bed ⇈00000000fffb7bed
stampKind: i32
value: int[-295955|0xfffffffffffb7bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2691 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2679 
=== Predecessor ===
v1595 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-295955|0xfffffffffffb7bed]] destination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2689 
=== Usages ===
=== Predecessor ===
v1592 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2689  <|@  <|@
f <@~|@floating>@ <|@
tid i2690 <|@
result int[-294195|0xfffffffffffb82cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -294195
stableDimension: 0
stamp: i32 [-294195] ⇊00000000fffb82cd ⇈00000000fffb82cd
stampKind: i32
value: int[-294195|0xfffffffffffb82cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2689 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2679 
=== Predecessor ===
v1591 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-294195|0xfffffffffffb82cd]] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B87" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2682 <|@
result v139|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-298251 - -294195] ⇊00000000fffb00c5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v2679 
values: i2690 i2692 
=== Succesors ===
=== Usages ===
v2684 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2679 values: i2690 i2692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2689 v2691 
=== Succesors ===
next: v2684 
=== Usages ===
i2682 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2689 v2691 #next: v2684  <|@  <|@
f <@*|@fixed>@ <|@
tid v2684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?839 
actionAndReason: i2682 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2679 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?839 actionAndReason: i2682 speculation: a2581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v139|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v139|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v84|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v83|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v83|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v83|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:4, 27, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4592384876561998876
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1938 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1942 
=== Usages ===
=== Predecessor ===
v1940 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1942  <|@  <|@
f <@~|@floating>@ <|@
tid i1941 <|@
result v140|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i32
=== Inputs ===
x: i1925 
y: i1797 
=== Succesors ===
=== Usages ===
i1925 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1925 y: i1797  <|@  <|@
f <@*|@fixed>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1924 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1938 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1924  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = INC v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v140|DWORD] destination: B90 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B92" 
    xhandlers
    flags 
    probability 4595601733539563714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1924 
=== Succesors ===
next: v844 
=== Usages ===
=== Predecessor ===
v1929 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1924 #next: v844  <|@  <|@
f <@*|@fixed>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
v1928 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD[.], v73|QWORD[.]] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" "B91" 
    successors "B93" "B186" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a845 <|@
result v141|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Lscala/Option;
valueDescription: a -
=== Inputs ===
merge: v841 
values: a441 a1128 
=== Succesors ===
=== Usages ===
a2176 ?852 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v841 values: a441 a1128  <|@  <|@
f <@~|@floating>@ <|@
tid a1039 <|@
result v142|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v841 
values: a1145 a1135 
=== Succesors ===
=== Usages ===
v3735 v3822 ?843 v3733 a1240 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v841 values: a1145 a1135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v842 v844 
=== Succesors ===
next: v3651 
=== Usages ===
a845 a1039 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v842 v844 #next: v3651  <|@  <|@
f <@~|@floating>@ <|@
tid v3822 <|@
result [v142|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1039 
index: - 
=== Succesors ===
=== Usages ===
v3651 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1039 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3651 <|@
result v143|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3822 
=== Succesors ===
next: v1652 
=== Usages ===
v3512 
=== Predecessor ===
v841 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3822 #next: v1652  <|@  <|@
f <@~|@floating>@ <|@
tid v3512 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3651 
y: v3476 
=== Succesors ===
=== Usages ===
v1652 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3651 y: v3476  <|@  <|@
tid ?852 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a762 
values: a845 a1881 a72 
=== Succesors ===
=== Usages ===
?843 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a762 values: a845 a1881 a72  <|@  <|@
tid ?843 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 761
stackSize: 1
=== Inputs ===
outerFrameState: ?256 
values: a71 a762 - - - - - - - - - a1039 
virtualObjectMappings: ?761 ?852 ?760 ?754 
=== Succesors ===
=== Usages ===
v2698 a3172 a3653 a3656 v3914 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?256 values: a71 a762 - - - - - - - - - a1039 virtualObjectMappings: ?761 ?852 ?760 ?754  <|@  <|@
f <@*|@fixed>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3512 
=== Succesors ===
trueSuccessor: v1649 
falseSuccessor: v1651 
=== Usages ===
=== Predecessor ===
v3651 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3512 #trueSuccessor: v1649 #falseSuccessor: v1651  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v141|QWORD[.], v142|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOV [v142|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v143|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B185" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3652 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3652  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3652 <|@
result v144|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$WaitQueue$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3707 
=== Succesors ===
next: a3653 
=== Usages ===
v3734 
=== Predecessor ===
v1649 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3707 #next: a3653  <|@  <|@
f <@~|@floating>@ <|@
tid v3734 <|@
result [v144|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3652 
=== Succesors ===
=== Usages ===
a3653 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3652  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3653 <|@
result v145|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.Empty
nullCheck: true
stamp: n -
=== Inputs ===
stateBefore: ?843 
guard: - 
address: v3734 
=== Succesors ===
next: a3654 
=== Usages ===
v1406 
=== Predecessor ===
a3652 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?843 guard: - address: v3734 #next: a3654  <|@  <|@
f <@~|@floating>@ <|@
tid v3733 <|@
result [v142|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1039 
index: - 
=== Succesors ===
=== Usages ===
a3654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1039 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3654 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$Transforming.waitq
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v3733 
=== Succesors ===
next: v1660 
=== Usages ===
v1406 
=== Predecessor ===
a3653 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3733 #next: v1660  <|@  <|@
f <@~|@floating>@ <|@
tid v1406 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3653 
y: a3654 
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a3653 y: a3654  <|@  <|@
f <@*|@fixed>@ <|@
tid v1660 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1406 
=== Succesors ===
trueSuccessor: v1657 
falseSuccessor: v1659 
=== Usages ===
=== Predecessor ===
a3654 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1406 #trueSuccessor: v1657 #falseSuccessor: v1659  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|DWORD[.] = MOV [v2|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v142|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v141|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v141|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v141|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction v145|DWORD[.] = MOV [v144|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v145|DWORD[.], y: [v142|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3655 
=== Usages ===
=== Predecessor ===
v1660 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3655 <|@
result v146|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3706 
=== Succesors ===
next: a3656 
=== Usages ===
v3737 v3736 
=== Predecessor ===
v1657 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3706 #next: a3656  <|@  <|@
f <@~|@floating>@ <|@
tid v3736 <|@
result [v146|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3655 
=== Succesors ===
=== Usages ===
a3656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3656 <|@
result v147|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$unsafe
nullCheck: true
stamp: n# Lsun/misc/Unsafe;
=== Inputs ===
stateBefore: ?843 
guard: - 
address: v3736 
=== Succesors ===
next: v3914 
=== Usages ===
v3914 
=== Predecessor ===
a3655 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?843 guard: - address: v3736 #next: v3914  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?843 
object: a3656 
=== Succesors ===
next: j3161 
=== Usages ===
=== Predecessor ===
a3656 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?843 object: a3656 #next: j3161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3161 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3176 
=== Usages ===
v3823 v3824 
=== Predecessor ===
v3914 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3176  <|@  <|@
f <@~|@floating>@ <|@
tid v3823 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3161 
index: - 
=== Succesors ===
=== Usages ===
j3176 v3178 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3161 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3176 <|@
result v148|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3823 
=== Succesors ===
next: j3177 
=== Usages ===
j3514 j3182 v3874 
=== Predecessor ===
j3161 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3823 #next: j3177  <|@  <|@
f <@~|@floating>@ <|@
tid v3824 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3161 
index: - 
=== Succesors ===
=== Usages ===
j3177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3161 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3177 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3824 
=== Succesors ===
next: v3169 
=== Usages ===
v3166 
=== Predecessor ===
j3176 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3824 #next: v3169  <|@  <|@
f <@~|@floating>@ <|@
tid j3514 <|@
result v149|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3176 
y: j3513 
=== Succesors ===
=== Usages ===
v3166 v3178 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3176 y: j3513  <|@  <|@
f <@~|@floating>@ <|@
tid v3166 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@782e90
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3177 
y: j3514 
=== Succesors ===
=== Usages ===
v3169 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3177 y: j3514  <|@  <|@
f <@*|@fixed>@ <|@
tid v3169 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3166 
=== Succesors ===
trueSuccessor: v3167 
falseSuccessor: v3168 
=== Usages ===
=== Predecessor ===
j3177 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3166 #trueSuccessor: v3167 #falseSuccessor: v3168  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v146|DWORD[.] = MOV [v0|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v142|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v141|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v141|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v141|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction v147|DWORD[.] = MOV [v146|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v142|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v141|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v141|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v141|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v147|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = LEA [v148|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4565877976503276579
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3172 
=== Usages ===
=== Predecessor ===
v3169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3172 <|@
result v150|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@39bb4106
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?843 
arguments: v2920 i3516 i1797 
=== Succesors ===
next: j3173 
=== Usages ===
j3173 
=== Predecessor ===
v3167 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?843 arguments: v2920 i3516 i1797 #next: j3173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3173 <|@
result v150|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3172 
=== Succesors ===
next: v3183 
=== Usages ===
j3182 
=== Predecessor ===
a3172 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3172 #next: v3183  <|@  <|@
f <@*|@fixed>@ <|@
tid v3183 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3180 
=== Predecessor ===
j3173 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v142|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v141|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v141|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v141|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v150|QWORD[.]] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4595537396906387982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3178 
=== Usages ===
=== Predecessor ===
v3169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3178 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3823 
value: j3514 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3175 
=== Usages ===
=== Predecessor ===
v3168 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3823 value: j3514 stateAfter: - lastLocationAccess: - #next: v3175  <|@  <|@
f <@~|@floating>@ <|@
tid v3874 <|@
result [v148|QWORD + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j3176 
index: - 
=== Succesors ===
=== Usages ===
v3175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3176 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3874 
=== Succesors ===
next: v3181 
=== Usages ===
=== Predecessor ===
v3178 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3874 #next: v3181  <|@  <|@
f <@*|@fixed>@ <|@
tid v3181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3180 
=== Predecessor ===
v3175 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v149|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v148|QWORD + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v148|QWORD] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3182 <|@
result v151|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3180 
values: j3176 j3173 
=== Succesors ===
=== Usages ===
v3793 v3825 j2164 j2167 a2162 v3826 v3881 v3875 v3876 v3877 v3878 v3879 v3880 v3882 v3883 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3180 values: j3176 j3173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3180 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3181 v3183 
=== Succesors ===
next: a2162 
=== Usages ===
j3182 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3181 v3183 #next: a2162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2162 <|@
result v152|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3182 
=== Succesors ===
next: a2165 
=== Usages ===
a2183 
=== Predecessor ===
v3180 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3182 #next: a2165  <|@  <|@
f <@~|@floating>@ <|@
tid j2164 <|@
result v153|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3182 
y: j1943 
=== Succesors ===
=== Usages ===
a2165 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3182 y: j1943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2165 <|@
result v154|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2164 
=== Succesors ===
next: a2168 
=== Usages ===
a2184 a2171 
=== Predecessor ===
a2162 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2164 #next: a2168  <|@  <|@
f <@~|@floating>@ <|@
tid j2167 <|@
result v155|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3182 
y: j1810 
=== Succesors ===
=== Usages ===
a2168 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3182 y: j1810  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2168 <|@
result v156|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2167 
=== Succesors ===
next: j3192 
=== Usages ===
a2185 a2177 
=== Predecessor ===
a2165 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2167 #next: j3192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3192 <|@
result v157|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3850 
=== Succesors ===
next: v3193 
=== Usages ===
v3193 
=== Predecessor ===
a2168 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3850 #next: v3193  <|@  <|@
f <@~|@floating>@ <|@
tid v3825 <|@
result [v151|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3193 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3825 
value: j3192 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3196 
=== Usages ===
=== Predecessor ===
j3192 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3825 value: j3192 stateAfter: - lastLocationAccess: - #next: v3196  <|@  <|@
f <@~|@floating>@ <|@
tid v3826 <|@
result [v151|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3196 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3826 
value: v3476 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3200 
=== Usages ===
=== Predecessor ===
v3193 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3826 value: v3476 stateAfter: - lastLocationAccess: - #next: v3200  <|@  <|@
f <@~|@floating>@ <|@
tid v3875 <|@
result [v151|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2171 <|@
result v158|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2165 
=== Succesors ===
=== Usages ===
v3200 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3875 
value: a2171 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a3657 
=== Usages ===
=== Predecessor ===
v3196 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3875 value: a2171 stateAfter: - lastLocationAccess: - #next: a3657  <|@  <|@
f <@~|@floating>@ <|@
tid v3735 <|@
result [v142|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1039 
index: - 
=== Succesors ===
=== Usages ===
a3657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1039 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3657 <|@
result v159|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$Transforming.other
nullCheck: false
stamp: n Lcom/twitter/util/Future;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3735 
=== Succesors ===
next: v3202 
=== Usages ===
v3202 
=== Predecessor ===
v3200 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3735 #next: v3202  <|@  <|@
f <@~|@floating>@ <|@
tid v3876 <|@
result [v151|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3876 
value: a3657 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j3207 
=== Usages ===
=== Predecessor ===
a3657 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3876 value: a3657 stateAfter: - lastLocationAccess: - #next: j3207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3207 <|@
result v160|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3853 
=== Succesors ===
next: v3208 
=== Usages ===
v3208 
=== Predecessor ===
v3202 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3853 #next: v3208  <|@  <|@
f <@~|@floating>@ <|@
tid v3877 <|@
result [v151|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3208 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3877 
value: j3207 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3211 
=== Usages ===
=== Predecessor ===
j3207 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3877 value: j3207 stateAfter: - lastLocationAccess: - #next: v3211  <|@  <|@
f <@~|@floating>@ <|@
tid v3878 <|@
result [v151|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3211 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3878 
value: v3495 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3215 
=== Usages ===
=== Predecessor ===
v3208 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3878 value: v3495 stateAfter: - lastLocationAccess: - #next: v3215  <|@  <|@
f <@~|@floating>@ <|@
tid v3879 <|@
result [v151|QWORD[*] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2176 <|@
result v161|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n [Lscala/Option;
=== Inputs ===
value: a845 
=== Succesors ===
=== Usages ===
v3215 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3215 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3879 
value: a2176 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3217 
=== Usages ===
=== Predecessor ===
v3211 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3879 value: a2176 stateAfter: - lastLocationAccess: - #next: v3217  <|@  <|@
f <@~|@floating>@ <|@
tid v3880 <|@
result [v151|QWORD[*] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3217 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3880 
value: a2059 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3219 
=== Usages ===
=== Predecessor ===
v3215 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3880 value: a2059 stateAfter: - lastLocationAccess: - #next: v3219  <|@  <|@
f <@~|@floating>@ <|@
tid v3881 <|@
result [v151|QWORD[*] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2177 <|@
result v162|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2168 
=== Succesors ===
=== Usages ===
v3219 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3219 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3881 
value: a2177 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j3224 
=== Usages ===
=== Predecessor ===
v3217 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3881 value: a2177 stateAfter: - lastLocationAccess: - #next: j3224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3224 <|@
result v163|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3854 
=== Succesors ===
next: v3225 
=== Usages ===
v3225 
=== Predecessor ===
v3219 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3854 #next: v3225  <|@  <|@
f <@~|@floating>@ <|@
tid v3882 <|@
result [v151|QWORD[*] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3225 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3882 
value: j3224 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3228 
=== Usages ===
=== Predecessor ===
j3224 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3882 value: j3224 stateAfter: - lastLocationAccess: - #next: v3228  <|@  <|@
f <@~|@floating>@ <|@
tid v3883 <|@
result [v151|QWORD[*] + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v3228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3883 
value: v3501 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2182 
=== Usages ===
=== Predecessor ===
v3225 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3883 value: v3501 stateAfter: - lastLocationAccess: - #next: v2182  <|@  <|@
f <@~|@floating>@ <|@
tid v3793 <|@
result [v151|QWORD[*] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: j3182 
index: - 
=== Succesors ===
=== Usages ===
v2182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3793 
value: a2508 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2183 
=== Usages ===
=== Predecessor ===
v3228 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3793 value: a2508 stateAfter: - lastLocationAccess: - #next: a2183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2183 <|@
result v152|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2162 
=== Succesors ===
next: a2184 
=== Usages ===
a1241 
=== Predecessor ===
v2182 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2162 #next: a2184  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2184 <|@
result v154|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2165 
=== Succesors ===
next: a2185 
=== Usages ===
?775 
=== Predecessor ===
a2183 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2165 #next: a2185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2185 <|@
result v156|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2168 
=== Succesors ===
next: v2186 
=== Usages ===
?776 
=== Predecessor ===
a2184 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2168 #next: v2186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2186 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j3658 
=== Usages ===
=== Predecessor ===
a2185 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j3658  <|@  <|@
f <@~|@floating>@ <|@
tid v3737 <|@
result [v146|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3655 
=== Succesors ===
=== Usages ===
j3658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3658 <|@
result v164|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$stateOff
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3737 
=== Succesors ===
next: i1243 
=== Usages ===
v3738 
=== Predecessor ===
v2186 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3737 #next: i1243  <|@  <|@
f <@~|@floating>@ <|@
tid v3738 <|@
result [v20|QWORD[.] + v164|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1883 
index: j3658 
=== Succesors ===
=== Usages ===
i1243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1883 index: j3658  <|@  <|@
f <@~|@floating>@ <|@
tid a1240 <|@
result v165|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/lang/Object;
=== Inputs ===
value: a1039 
=== Succesors ===
=== Usages ===
i1243 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1039  <|@  <|@
f <@~|@floating>@ <|@
tid a1241 <|@
result v166|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2183 
=== Succesors ===
=== Usages ===
i1243 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1243 <|@
result v167|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ANY_LOCATION
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3738 
expectedValue: a1240 
newValue: a1241 
stateAfter: - 
=== Succesors ===
next: j3231 
=== Usages ===
?476 i477 
=== Predecessor ===
j3658 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v3738 expectedValue: a1240 newValue: a1241 stateAfter: - #next: j3231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3231 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1883 
=== Succesors ===
next: v3235 
=== Usages ===
j3232 
=== Predecessor ===
i1243 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1883 #next: v3235  <|@  <|@
f <@~|@floating>@ <|@
tid j3232 <|@
result v169|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$146/1524633570@1cec0275
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3231 
y: i2993 
=== Succesors ===
=== Usages ===
v3827 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3231 y: i2993  <|@  <|@
f <@~|@floating>@ <|@
tid v3827 <|@
result [v169|QWORD[*] + v32|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3232 
index: j2997 
=== Succesors ===
=== Usages ===
v3235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3232 index: j2997  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3235 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3827 
value: i2999 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1672 
=== Usages ===
=== Predecessor ===
j3231 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3827 value: i2999 stateAfter: - lastLocationAccess: - #next: v1672  <|@  <|@
tid ?480 <|@
d <@d|@=== Debug Properties ===
bci: 159
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 769
stackSize: 0
=== Inputs ===
outerFrameState: ?256 
values: a71 a762 - - - - - - - - - 
=== Succesors ===
=== Usages ===
?476 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?256 values: a71 a762 - - - - - - - - -  <|@  <|@
tid ?775 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a762 
materializedValue: a2184 
=== Succesors ===
=== Usages ===
?476 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a762 materializedValue: a2184  <|@  <|@
tid ?776 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a72 
materializedValue: a2185 
=== Succesors ===
=== Usages ===
?476 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a72 materializedValue: a2185  <|@  <|@
tid ?476 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Promise.cas(Object, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 453
stackSize: 1
=== Inputs ===
outerFrameState: ?480 
values: - - - i1243 
virtualObjectMappings: ?761 ?775 ?760 ?776 
=== Succesors ===
=== Usages ===
v2636 v3908 a3661 a3664 v3909 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?480 values: - - - i1243 virtualObjectMappings: ?761 ?775 ?760 ?776  <|@  <|@
f <@~|@floating>@ <|@
tid i477 <|@
result v167|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$115/1567088237@42498438
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$116/1100921398@1fb26baa
inputBits: 32
resultBits: 1
stamp: i1
=== Inputs ===
value: i1243 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1243  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
result v170|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1701538656@15c1f08d
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/999668238@1b27ce49
inputAlwaysPositive: false
inputBits: 1
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i477 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i477  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i478 
y: i153 
=== Succesors ===
=== Usages ===
v1672 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i478 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1672 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v252 
=== Succesors ===
trueSuccessor: v1671 
falseSuccessor: v1669 
=== Usages ===
=== Predecessor ===
v3235 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v252 #trueSuccessor: v1671 #falseSuccessor: v1669  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v151|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = MOVE v151|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[*] = LEA [v151|QWORD[*] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE v153|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[*] = LEA [v151|QWORD[*] + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v155|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = MOV [v23|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v151|QWORD[*]], y: v157|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v151|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v158|DWORD[.] = COMPRESSPOINTER (input: v154|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v151|QWORD[*] + 12], y: v158|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v159|DWORD[.] = MOV [v142|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v151|QWORD[*] + 16], y: v159|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = MOV [v44|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v151|QWORD[*] + 24], y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v151|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v161|DWORD[.] = COMPRESSPOINTER (input: v141|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v151|QWORD[*] + 36], y: v161|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v151|QWORD[*] + 40], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|DWORD[.] = COMPRESSPOINTER (input: v156|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v151|QWORD[*] + 44], y: v162|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = MOV [v43|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v151|QWORD[*] + 48], y: v163|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v151|QWORD[*] + 56] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v151|QWORD[*] + 60] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$7/390800101@687091653] <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = MOV [v146|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v165|DWORD[.] = COMPRESSPOINTER (input: v142|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v166|DWORD[.] = COMPRESSPOINTER (input: v152|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = MOVE v165|DWORD[.] moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = CAS (address: [v20|QWORD[.] + v164|QWORD * 1], cmpValue: rax|DWORD[.], newValue: v166|DWORD[.]) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr   -1  <|@ instruction v167|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: v168|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[*] = SHR v20|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v169|QWORD[*] + v32|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v170|DWORD = AND v167|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v170|DWORD, y: v170|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2636 
=== Usages ===
=== Predecessor ===
v1672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2636  <|@  <|@
f <@~|@floating>@ <|@
tid i2633 <|@
result int[-318483|0xfffffffffffb23ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -318483
stableDimension: 0
stamp: i32 [-318483] ⇊00000000fffb23ed ⇈00000000fffb23ed
stampKind: i32
value: int[-318483|0xfffffffffffb23ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?476 
actionAndReason: i2633 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1671 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?476 actionAndReason: i2633 speculation: a2581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -318483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v167|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: v20|QWORD[.] v154|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] v156|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction DEOPT info [bci:18, 159, 27, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3659 
=== Usages ===
=== Predecessor ===
v1672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3659 <|@
result v171|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3706 
=== Succesors ===
next: v3908 
=== Usages ===
a1246 v3908 
=== Predecessor ===
v1669 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3706 #next: v3908  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3908 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?476 
object: a3659 
=== Succesors ===
next: a3660 
=== Usages ===
=== Predecessor ===
a3659 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?476 object: a3659 #next: a3660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3660 <|@
result v172|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$WaitQueue$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3707 
=== Succesors ===
next: a3661 
=== Usages ===
v3739 
=== Predecessor ===
v3908 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3707 #next: a3661  <|@  <|@
f <@~|@floating>@ <|@
tid v3739 <|@
result [v172|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3660 
=== Succesors ===
=== Usages ===
a3661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3661 <|@
result v173|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.Empty
nullCheck: true
stamp: n -
=== Inputs ===
stateBefore: ?476 
guard: - 
address: v3739 
=== Succesors ===
next: v1256 
=== Usages ===
?1027 v2252 v3297 v3829 i1275 ?974 
=== Predecessor ===
a3660 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?476 guard: - address: v3739 #next: v1256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a3662 
=== Usages ===
=== Predecessor ===
a3661 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a3662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3662 <|@
result v174|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise.state
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3727 
=== Succesors ===
next: v1257 
=== Usages ===
?1017 v2901 v3828 
=== Predecessor ===
v1256 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3727 #next: v1257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a3663 
=== Usages ===
=== Predecessor ===
a3662 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a3663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3663 <|@
result v175|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3706 
=== Succesors ===
next: a3664 
=== Usages ===
v3741 v3740 
=== Predecessor ===
v1257 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3706 #next: a3664  <|@  <|@
f <@~|@floating>@ <|@
tid v3740 <|@
result [v175|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3663 
=== Succesors ===
=== Usages ===
a3664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3664 <|@
result v176|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$unsafe
nullCheck: true
stamp: n# Lsun/misc/Unsafe;
=== Inputs ===
stateBefore: ?476 
guard: - 
address: v3740 
=== Succesors ===
next: v3909 
=== Usages ===
v3909 
=== Predecessor ===
a3663 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?476 guard: - address: v3740 #next: v3909  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3909 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?476 
object: a3664 
=== Succesors ===
next: v2190 
=== Usages ===
=== Predecessor ===
a3664 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?476 object: a3664 #next: v2190  <|@  <|@
f <@~|@floating>@ <|@
tid v3828 <|@
result [v174|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3662 
=== Succesors ===
=== Usages ===
v3665 v3667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3662  <|@  <|@
f <@~|@floating>@ <|@
tid v2901 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3662 
=== Succesors ===
=== Usages ===
v2209 v2190 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3662  <|@  <|@
tid ?1027 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a780 
values: a3661 
=== Succesors ===
=== Usages ===
?974 ?1017 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a780 values: a3661  <|@  <|@
f <@~|@floating>@ <|@
tid a1246 <|@
result v177|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# Lcom/twitter/util/Promise$;
=== Inputs ===
value: a3659 
=== Succesors ===
=== Usages ===
a960 ?966 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3659  <|@  <|@
tid ?966 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Promise$.interrupts(Future)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 329
stackSize: 1
=== Inputs ===
outerFrameState: ?118 
values: a1246 a751 a780 
=== Succesors ===
=== Usages ===
?987 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?118 values: a1246 a751 a780  <|@  <|@
tid ?987 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Promise$$anon$3.<init>(Future)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 330
stackSize: 0
=== Inputs ===
outerFrameState: ?966 
values: - - 
=== Succesors ===
=== Usages ===
?974 ?1006 ?1022 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?966 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v2190 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v2901 
=== Succesors ===
trueSuccessor: v2189 
falseSuccessor: v2188 
=== Usages ===
=== Predecessor ===
v3909 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2901 #trueSuccessor: v2189 #falseSuccessor: v2188  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|DWORD[.] = MOV [v0|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v167|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: v20|QWORD[.] v154|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] v156|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v171|DWORD[.] * 8] state [bci:18, 159, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v172|DWORD[.] = MOV [v2|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v167|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: v20|QWORD[.] v154|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] v156|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction v173|DWORD[.] = MOV [v172|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 159, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v174|DWORD[.] = MOV [v16|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v175|DWORD[.] = MOV [v0|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v167|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: v20|QWORD[.] v154|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] v156|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction v176|DWORD[.] = MOV [v175|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 159, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v167|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: v20|QWORD[.] v154|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] v156|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v176|DWORD[.] * 8] state [bci:18, 159, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v177|QWORD[.] = UNCOMPRESSPOINTER (input: v171|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v174|DWORD[.], y: v174|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    probability 4580804192411133072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2200 
=== Usages ===
=== Predecessor ===
v2190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2200  <|@  <|@
f <@*|@fixed>@ <|@
tid v2200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2850 
=== Predecessor ===
v2189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4594958362668583204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2188 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3665 
=== Usages ===
=== Predecessor ===
v2190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3665 <|@
result v178|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3828 
=== Succesors ===
next: v3666 
=== Usages ===
v3778 
=== Predecessor ===
v2188 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3828 #next: v3666  <|@  <|@
f <@~|@floating>@ <|@
tid v3778 <|@
result [v178|DWORD * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3665 
=== Succesors ===
=== Usages ===
v3666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3666 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3778 
=== Succesors ===
next: v2855 
=== Usages ===
v2194 
=== Predecessor ===
v3665 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3778 #next: v2855  <|@  <|@
f <@~|@floating>@ <|@
tid v2194 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3666 
y: v1798 
=== Succesors ===
=== Usages ===
v2855 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3666 y: v1798  <|@  <|@
f <@*|@fixed>@ <|@
tid v2855 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v2194 
=== Succesors ===
trueSuccessor: v2853 
falseSuccessor: v2852 
=== Usages ===
=== Predecessor ===
v3666 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2194 #trueSuccessor: v2853 #falseSuccessor: v2852  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v178|DWORD = MOV [v174|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: [v178|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2766 
=== Usages ===
=== Predecessor ===
v2855 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2766  <|@  <|@
f <@~|@floating>@ <|@
tid i2767 <|@
result int[-322067|0xfffffffffffb15ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -322067
stableDimension: 0
stamp: i32 [-322067] ⇊00000000fffb15ed ⇈00000000fffb15ed
stampKind: i32
value: int[-322067|0xfffffffffffb15ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2768 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2765 
=== Predecessor ===
v2853 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-322067|0xfffffffffffb15ed]] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    probability 4594958362668583204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2856 
=== Usages ===
=== Predecessor ===
v2855 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2856  <|@  <|@
f <@*|@fixed>@ <|@
tid v2856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2850 
=== Predecessor ===
v2852 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B100" "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2850 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2200 v2856 
=== Succesors ===
next: v2209 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2200 v2856 #next: v2209  <|@  <|@
f <@*|@fixed>@ <|@
tid v2209 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v2901 
=== Succesors ===
trueSuccessor: v2208 
falseSuccessor: v2207 
=== Usages ===
=== Predecessor ===
v2850 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2901 #trueSuccessor: v2208 #falseSuccessor: v2207  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v174|DWORD[.], y: v174|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B110" 
    xhandlers
    flags 
    probability 4580804192411133072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2219 
=== Usages ===
=== Predecessor ===
v2209 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2219  <|@  <|@
f <@*|@fixed>@ <|@
tid v2219 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2860 
=== Predecessor ===
v2208 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B109" 
    xhandlers
    flags 
    probability 4594958362668583204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2207 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3667 
=== Usages ===
=== Predecessor ===
v2209 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3667 <|@
result v179|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3828 
=== Succesors ===
next: v3668 
=== Usages ===
v3779 
=== Predecessor ===
v2207 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3828 #next: v3668  <|@  <|@
f <@~|@floating>@ <|@
tid v3779 <|@
result [v179|DWORD * 8 + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3667 
=== Succesors ===
=== Usages ===
v3668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3668 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3779 
=== Succesors ===
next: v2865 
=== Usages ===
v2213 
=== Predecessor ===
v3667 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3779 #next: v2865  <|@  <|@
f <@~|@floating>@ <|@
tid v2213 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3668 
y: v1819 
=== Succesors ===
=== Usages ===
v2865 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3668 y: v1819  <|@  <|@
f <@*|@fixed>@ <|@
tid v2865 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v2213 
=== Succesors ===
trueSuccessor: v2863 
falseSuccessor: v2862 
=== Usages ===
=== Predecessor ===
v3668 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2213 #trueSuccessor: v2863 #falseSuccessor: v2862  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = MOV [v174|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: [v179|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2863 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2771 
=== Usages ===
=== Predecessor ===
v2865 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2771  <|@  <|@
f <@~|@floating>@ <|@
tid i2772 <|@
result int[-322323|0xfffffffffffb14ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -322323
stableDimension: 0
stamp: i32 [-322323] ⇊00000000fffb14ed ⇈00000000fffb14ed
stampKind: i32
value: int[-322323|0xfffffffffffb14ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2768 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2765 
=== Predecessor ===
v2863 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-322323|0xfffffffffffb14ed]] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B107" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2768 <|@
result v180|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-322323 - -322067] ⇊00000000fffb14ed ⇈00000000fffb15ed
valueDescription: i32
=== Inputs ===
merge: v2765 
values: i2767 i2772 
=== Succesors ===
=== Usages ===
v2770 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2765 values: i2767 i2772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2766 v2771 
=== Succesors ===
next: v2770 
=== Usages ===
i2768 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2766 v2771 #next: v2770  <|@  <|@
tid ?1022 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Promise.forwardInterruptsTo(Future)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 503
stackSize: 0
=== Inputs ===
outerFrameState: ?987 
values: a780 a751 - - - - - - - - 
=== Succesors ===
=== Usages ===
?1017 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?987 values: a780 a751 - - - - - - - -  <|@  <|@
tid ?1017 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.isDefined()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 840
stackSize: 1
=== Inputs ===
outerFrameState: ?1022 
values: a751 - - - a3662 
virtualObjectMappings: ?760 ?1027 ?782 
=== Succesors ===
=== Usages ===
v2770 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1022 values: a751 - - - a3662 virtualObjectMappings: ?760 ?1027 ?782  <|@  <|@
f <@*|@fixed>@ <|@
tid v2770 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1017 
actionAndReason: i2768 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2765 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1017 actionAndReason: i2768 speculation: a2581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v180|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v180|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.isDefined(Promise.scala:840) [bci: 4]
stack: v174|DWORD[.] 
locals: v16|QWORD[.] - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:503) [bci: 1]
locals: vobject:Promise$$anon$3:0{state=v173|DWORD[.]} v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v173|DWORD[.]} 
locals: v177|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=v173|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v173|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:4, 1, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B110" 
    xhandlers
    flags 
    probability 4594958362668583204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2862 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2866 
=== Usages ===
=== Predecessor ===
v2865 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2866  <|@  <|@
f <@*|@fixed>@ <|@
tid v2866 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2860 
=== Predecessor ===
v2862 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B105" "B109" 
    successors "B111" "B184" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2219 v2866 
=== Succesors ===
next: v3669 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2219 v2866 #next: v3669  <|@  <|@
tid ?974 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<Promise.forwardInterruptsTo(Future)>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 504
stackSize: 1
=== Inputs ===
outerFrameState: ?987 
values: a780 a751 - - - - - - - - a3661 
virtualObjectMappings: ?1027 ?760 ?782 
=== Succesors ===
=== Usages ===
v2750 a3258 v3669 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?987 values: a780 a751 - - - - - - - - a3661 virtualObjectMappings: ?1027 ?760 ?782  <|@  <|@
f <@~|@floating>@ <|@
tid v3829 <|@
result [v173|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3661 
=== Succesors ===
=== Usages ===
v3669 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3669 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?974 
guard: - 
address: v3829 
=== Succesors ===
next: v1704 
=== Usages ===
v3531 
=== Predecessor ===
v2860 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?974 guard: - address: v3829 #next: v1704  <|@  <|@
f <@~|@floating>@ <|@
tid v3531 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3669 
y: v3467 
=== Succesors ===
=== Usages ===
v1704 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3669 y: v3467  <|@  <|@
f <@*|@fixed>@ <|@
tid v1704 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3531 
=== Succesors ===
trueSuccessor: v1701 
falseSuccessor: v1703 
=== Usages ===
=== Predecessor ===
v3669 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3531 #trueSuccessor: v1701 #falseSuccessor: v1703  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: v173|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=v173|DWORD[.]} v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v173|DWORD[.]} 
locals: v177|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=v173|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v173|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction CMP [v173|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} state [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1701 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j3247 
=== Usages ===
=== Predecessor ===
v1704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3247  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3247 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3262 
=== Usages ===
v3830 v3831 
=== Predecessor ===
v1701 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3262  <|@  <|@
f <@~|@floating>@ <|@
tid v3830 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3247 
index: - 
=== Succesors ===
=== Usages ===
j3262 v3264 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3247 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3262 <|@
result v181|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3830 
=== Succesors ===
next: j3263 
=== Usages ===
j3532 j3268 v3884 
=== Predecessor ===
j3247 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3830 #next: j3263  <|@  <|@
f <@~|@floating>@ <|@
tid v3831 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3247 
index: - 
=== Succesors ===
=== Usages ===
j3263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3247 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3263 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3831 
=== Succesors ===
next: v3255 
=== Usages ===
v3252 
=== Predecessor ===
j3262 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3831 #next: v3255  <|@  <|@
f <@~|@floating>@ <|@
tid j3532 <|@
result v182|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3262 
y: j1866 
=== Succesors ===
=== Usages ===
v3252 v3264 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3262 y: j1866  <|@  <|@
f <@~|@floating>@ <|@
tid v3252 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@782e90
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3263 
y: j3532 
=== Succesors ===
=== Usages ===
v3255 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3263 y: j3532  <|@  <|@
f <@*|@fixed>@ <|@
tid v3255 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3252 
=== Succesors ===
trueSuccessor: v3253 
falseSuccessor: v3254 
=== Usages ===
=== Predecessor ===
j3263 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3252 #trueSuccessor: v3253 #falseSuccessor: v3254  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v181|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v182|QWORD = LEA [v181|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v182|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4565877976503276579
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3258 
=== Usages ===
=== Predecessor ===
v3255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3258 <|@
result v183|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@39bb4106
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?974 
arguments: v2920 i3492 i1797 
=== Succesors ===
next: j3259 
=== Usages ===
j3259 
=== Predecessor ===
v3253 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?974 arguments: v2920 i3492 i1797 #next: j3259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3259 <|@
result v183|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3258 
=== Succesors ===
next: v3269 
=== Usages ===
j3268 
=== Predecessor ===
a3258 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3258 #next: v3269  <|@  <|@
f <@*|@fixed>@ <|@
tid v3269 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3266 
=== Predecessor ===
j3259 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: v173|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=v173|DWORD[.]} v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v173|DWORD[.]} 
locals: v177|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=v173|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v173|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction v183|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v183|QWORD[.]] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4595537396906387982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3264 
=== Usages ===
=== Predecessor ===
v3255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3264 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3830 
value: j3532 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3261 
=== Usages ===
=== Predecessor ===
v3254 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3830 value: j3532 stateAfter: - lastLocationAccess: - #next: v3261  <|@  <|@
f <@~|@floating>@ <|@
tid v3884 <|@
result [v181|QWORD + 232] <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j3262 
index: - 
=== Succesors ===
=== Usages ===
v3261 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3262 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3884 
=== Succesors ===
next: v3267 
=== Usages ===
=== Predecessor ===
v3264 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3884 #next: v3267  <|@  <|@
f <@*|@fixed>@ <|@
tid v3267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3266 
=== Predecessor ===
v3261 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v182|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v181|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v181|QWORD] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3268 <|@
result v184|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3266 
values: j3262 j3259 
=== Succesors ===
=== Usages ===
v3888 v3780 j2246 a2244 v3834 v3833 v3885 v3886 v3887 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3266 values: j3262 j3259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3267 v3269 
=== Succesors ===
next: a2244 
=== Usages ===
j3268 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3267 v3269 #next: a2244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2244 <|@
result v185|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3268 
=== Succesors ===
next: a2247 
=== Usages ===
a2256 
=== Predecessor ===
v3266 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3268 #next: a2247  <|@  <|@
f <@~|@floating>@ <|@
tid j2246 <|@
result v186|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3268 
y: j1072 
=== Succesors ===
=== Usages ===
a2247 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3268 y: j1072  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2247 <|@
result v187|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2246 
=== Succesors ===
next: j3278 
=== Usages ===
a2257 
=== Predecessor ===
a2244 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2246 #next: j3278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3278 <|@
result v188|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3832 
=== Succesors ===
next: v3279 
=== Usages ===
v3279 
=== Predecessor ===
a2247 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3832 #next: v3279  <|@  <|@
f <@~|@floating>@ <|@
tid v3833 <|@
result [v184|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3268 
index: - 
=== Succesors ===
=== Usages ===
v3279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3279 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3833 
value: j3278 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3282 
=== Usages ===
=== Predecessor ===
j3278 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3833 value: j3278 stateAfter: - lastLocationAccess: - #next: v3282  <|@  <|@
f <@~|@floating>@ <|@
tid v3834 <|@
result [v184|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3268 
index: - 
=== Succesors ===
=== Usages ===
v3282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3282 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3834 
value: v3473 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2252 
=== Usages ===
=== Predecessor ===
v3279 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3834 value: v3473 stateAfter: - lastLocationAccess: - #next: v2252  <|@  <|@
f <@~|@floating>@ <|@
tid v3780 <|@
result [v184|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3268 
index: - 
=== Succesors ===
=== Usages ===
v2252 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2252 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3780 
value: a3661 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j3289 
=== Usages ===
=== Predecessor ===
v3282 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3780 value: a3661 stateAfter: - lastLocationAccess: - #next: j3289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3289 <|@
result v189|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3850 
=== Succesors ===
next: v3290 
=== Usages ===
v3290 
=== Predecessor ===
v2252 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3850 #next: v3290  <|@  <|@
f <@~|@floating>@ <|@
tid v3885 <|@
result [v184|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j3268 
index: - 
=== Succesors ===
=== Usages ===
v3290 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3290 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3885 
value: j3289 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3293 
=== Usages ===
=== Predecessor ===
j3289 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3885 value: j3289 stateAfter: - lastLocationAccess: - #next: v3293  <|@  <|@
f <@~|@floating>@ <|@
tid v3886 <|@
result [v184|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3268 
index: - 
=== Succesors ===
=== Usages ===
v3293 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3293 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3886 
value: v3476 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3297 
=== Usages ===
=== Predecessor ===
v3290 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3886 value: v3476 stateAfter: - lastLocationAccess: - #next: v3297  <|@  <|@
f <@~|@floating>@ <|@
tid v3887 <|@
result [v184|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j3268 
index: - 
=== Succesors ===
=== Usages ===
v3297 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3297 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3887 
value: a3661 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3299 
=== Usages ===
=== Predecessor ===
v3293 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3887 value: a3661 stateAfter: - lastLocationAccess: - #next: v3299  <|@  <|@
f <@~|@floating>@ <|@
tid v3888 <|@
result [v184|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j3268 
index: - 
=== Succesors ===
=== Usages ===
v3299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3299 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3888 
value: a2059 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2256 
=== Usages ===
=== Predecessor ===
v3297 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3888 value: a2059 stateAfter: - lastLocationAccess: - #next: a2256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2256 <|@
result v185|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2244 
=== Succesors ===
next: a2257 
=== Usages ===
v3742 ?1031 a917 a919 j3300 
=== Predecessor ===
v3299 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2244 #next: a2257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2257 <|@
result v187|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2247 
=== Succesors ===
next: v2258 
=== Usages ===
a1273 
=== Predecessor ===
a2256 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2247 #next: v2258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2258 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j3670 
=== Usages ===
=== Predecessor ===
a2257 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j3670  <|@  <|@
f <@~|@floating>@ <|@
tid v3741 <|@
result [v175|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3663 
=== Succesors ===
=== Usages ===
j3670 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3670 <|@
result v190|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$stateOff
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3741 
=== Succesors ===
next: i1275 
=== Usages ===
v3742 
=== Predecessor ===
v2258 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3741 #next: i1275  <|@  <|@
f <@~|@floating>@ <|@
tid v3742 <|@
result [v185|QWORD[.] + v190|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2256 
index: j3670 
=== Succesors ===
=== Usages ===
i1275 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2256 index: j3670  <|@  <|@
f <@~|@floating>@ <|@
tid a1273 <|@
result v191|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2257 
=== Succesors ===
=== Usages ===
i1275 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1275 <|@
result v192|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ANY_LOCATION
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3742 
expectedValue: a3661 
newValue: a1273 
stateAfter: - 
=== Succesors ===
next: j3300 
=== Usages ===
?1003 i1004 i908 
=== Predecessor ===
j3670 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v3742 expectedValue: a3661 newValue: a1273 stateAfter: - #next: j3300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3300 <|@
result v185|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2256 
=== Succesors ===
next: v3304 
=== Usages ===
j3301 
=== Predecessor ===
i1275 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2256 #next: v3304  <|@  <|@
f <@~|@floating>@ <|@
tid j3301 <|@
result v194|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$146/1524633570@1cec0275
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3300 
y: i2993 
=== Succesors ===
=== Usages ===
v3835 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3300 y: i2993  <|@  <|@
f <@~|@floating>@ <|@
tid v3835 <|@
result [v194|QWORD[*] + v32|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3301 
index: j2997 
=== Succesors ===
=== Usages ===
v3304 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3301 index: j2997  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3304 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3835 
value: i2999 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1708 
=== Usages ===
=== Predecessor ===
j3300 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3835 value: i2999 stateAfter: - lastLocationAccess: - #next: v1708  <|@  <|@
tid ?1006 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<Promise.forwardInterruptsTo(Future)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 506
stackSize: 0
=== Inputs ===
outerFrameState: ?987 
values: a780 a751 - - - - - - - - 
=== Succesors ===
=== Usages ===
?1003 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?987 values: a780 a751 - - - - - - - -  <|@  <|@
tid ?1031 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a780 
materializedValue: a2256 
=== Succesors ===
=== Usages ===
?1003 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a780 materializedValue: a2256  <|@  <|@
tid ?1003 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Promise.cas(Object, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 453
stackSize: 1
=== Inputs ===
outerFrameState: ?1006 
values: - - - i1275 
virtualObjectMappings: ?1031 ?760 ?782 
=== Succesors ===
=== Usages ===
v2758 a3672 v3673 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1006 values: - - - i1275 virtualObjectMappings: ?1031 ?760 ?782  <|@  <|@
f <@~|@floating>@ <|@
tid i1004 <|@
result v192|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$115/1567088237@42498438
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$116/1100921398@1fb26baa
inputBits: 32
resultBits: 1
stamp: i1
=== Inputs ===
value: i1275 
=== Succesors ===
=== Usages ===
i1005 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1275  <|@  <|@
f <@~|@floating>@ <|@
tid i1005 <|@
result v195|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1701538656@15c1f08d
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/999668238@1b27ce49
inputAlwaysPositive: false
inputBits: 1
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1004 
=== Succesors ===
=== Usages ===
v985 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1004  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1005 
y: i153 
=== Succesors ===
=== Usages ===
v1708 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1005 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v985 
=== Succesors ===
trueSuccessor: v1707 
falseSuccessor: v1705 
=== Usages ===
=== Predecessor ===
v3304 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v985 #trueSuccessor: v1707 #falseSuccessor: v1705  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v184|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v185|QWORD[.] = MOVE v184|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v186|QWORD[*] = LEA [v184|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v187|QWORD[.] = MOVE v186|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v188|QWORD = MOV [v21|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v184|QWORD[*]], y: v188|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v184|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v184|QWORD[*] + 12], y: v173|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v189|QWORD = MOV [v23|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v184|QWORD[*] + 16], y: v189|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v184|QWORD[*] + 24] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v184|QWORD[*] + 28], y: v173|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v184|QWORD[*] + 32], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v190|QWORD = MOV [v175|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v191|DWORD[.] = COMPRESSPOINTER (input: v187|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = MOVE v173|DWORD[.] moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = CAS (address: [v185|QWORD[.] + v190|QWORD * 1], cmpValue: rax|DWORD[.], newValue: v191|DWORD[.]) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr   -1  <|@ instruction v192|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: v193|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v194|QWORD[*] = SHR v185|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v194|QWORD[*] + v32|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = AND v192|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v195|DWORD, y: v195|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2754 
=== Usages ===
=== Predecessor ===
v1708 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2754  <|@  <|@
f <@~|@floating>@ <|@
tid i2755 <|@
result int[-326675|0xfffffffffffb03ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -326675
stableDimension: 0
stamp: i32 [-326675] ⇊00000000fffb03ed ⇈00000000fffb03ed
stampKind: i32
value: int[-326675|0xfffffffffffb03ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2754 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2753 
=== Predecessor ===
v1707 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-326675|0xfffffffffffb03ed]] destination: B115 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B182" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3671 
=== Usages ===
=== Predecessor ===
v1708 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3671 <|@
result v196|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Local$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Local$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3712 
=== Succesors ===
next: a3672 
=== Usages ===
v3743 
=== Predecessor ===
v1705 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3712 #next: a3672  <|@  <|@
f <@~|@floating>@ <|@
tid v3743 <|@
result [v196|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3671 
=== Succesors ===
=== Usages ===
a3672 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3672 <|@
result v197|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Local$.localCtx
nullCheck: true
stamp: n Ljava/lang/ThreadLocal;
=== Inputs ===
stateBefore: ?1003 
guard: - 
address: v3743 
=== Succesors ===
next: v3673 
=== Usages ===
a1282 v3836 
=== Predecessor ===
a3671 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1003 guard: - address: v3743 #next: v3673  <|@  <|@
f <@~|@floating>@ <|@
tid v3836 <|@
result [v197|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3672 
=== Succesors ===
=== Usages ===
v3673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3673 <|@
result v198|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?1003 
guard: - 
address: v3836 
=== Succesors ===
next: v1285 
=== Usages ===
v3744 
=== Predecessor ===
a3672 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1003 guard: - address: v3836 #next: v1285  <|@  <|@
f <@~|@floating>@ <|@
tid v3744 <|@
result [v198|DWORD * 8 + 520] <|@
d <@d|@=== Debug Properties ===
displacement: 520
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3673 
=== Succesors ===
=== Usages ===
v1285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3673  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1285 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v3744 
=== Succesors ===
next: v1720 
=== Usages ===
v1025 
=== Predecessor ===
v3673 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3744 #next: v1720  <|@  <|@
f <@~|@floating>@ <|@
tid v1025 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1285 
y: v650 
=== Succesors ===
=== Usages ===
v1720 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1285 y: v650  <|@  <|@
f <@*|@fixed>@ <|@
tid v1720 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1025 
=== Succesors ===
trueSuccessor: v1717 
falseSuccessor: v1719 
=== Usages ===
=== Predecessor ===
v1285 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1025 #trueSuccessor: v1717 #falseSuccessor: v1719  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v196|DWORD[.] = MOV [v34|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v192|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v185|QWORD[.] v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v185|QWORD[.] 
locals: v177|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction v197|DWORD[.] = MOV [v196|DWORD[.] * 8 + 16] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v192|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v185|QWORD[.] v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v185|QWORD[.] 
locals: v177|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction v198|DWORD = MOV [v197|DWORD[.] * 8 + 8] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: [v198|DWORD * 8 + 520]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B118" "B119" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3674 
=== Usages ===
=== Predecessor ===
v1720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3674  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3674 <|@
result v199|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Thread.threadLocals
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3745 
=== Succesors ===
next: v1014 
=== Usages ===
a2576 v1415 
=== Predecessor ===
v1717 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3745 #next: v1014  <|@  <|@
f <@~|@floating>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3674 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3674  <|@  <|@
f <@~|@floating>@ <|@
tid a1282 <|@
result v200|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a Ljava/lang/ThreadLocal;
=== Inputs ===
value: a3672 
=== Succesors ===
=== Usages ===
a913 a911 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3672  <|@  <|@
f <@*|@fixed>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 7.839287703504969E-8
=== Inputs ===
condition: v1415 
=== Succesors ===
trueSuccessor: v1012 
falseSuccessor: v1013 
=== Usages ===
=== Predecessor ===
a3674 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1415 #trueSuccessor: v1012 #falseSuccessor: v1013  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v199|DWORD[.] = MOV [v39|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v200|QWORD[.] = UNCOMPRESSPOINTER (input: v197|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v199|DWORD[.], y: v199|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 7.839287703504969E-8 condition: = trueDestination: B117 -> B118 falseDestination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B124" 
    xhandlers
    flags 
    probability 4489543341119495866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1033 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1033  <|@  <|@
f <@*|@fixed>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
v1012 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v200|QWORD[.], v185|QWORD[.]] destination: B118 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" 
    xhandlers
    flags 
    probability 4595601733539564515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v906 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v906  <|@  <|@
f <@*|@fixed>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
v1013 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v192|DWORD, v200|QWORD[.], v177|QWORD[.], v199|DWORD[.], v185|QWORD[.]] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B83" "B119" 
    successors "B121" "B180" 
    xhandlers
    flags 
    probability 4607182418093917143
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i908 <|@
result v201|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v903 
values: i1202 i1275 
=== Succesors ===
=== Usages ===
?905 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v903 values: i1202 i1275  <|@  <|@
f <@~|@floating>@ <|@
tid a913 <|@
result v202|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/lang/ThreadLocal;
valueDescription: a -
=== Inputs ===
merge: v903 
values: a1209 a1282 
=== Succesors ===
=== Usages ===
?562 a911 v727 v3746 v1310 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v903 values: a1209 a1282  <|@  <|@
f <@~|@floating>@ <|@
tid a960 <|@
result v203|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/twitter/util/Promise$;
valueDescription: a -
=== Inputs ===
merge: v903 
values: a1172 a1246 
=== Succesors ===
=== Usages ===
?958 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v903 values: a1172 a1246  <|@  <|@
f <@~|@floating>@ <|@
tid a2576 <|@
result v204|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap;
valueDescription: n -
=== Inputs ===
merge: v903 
values: a3650 a3674 
=== Succesors ===
=== Usages ===
a2577 v3747 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v903 values: a3650 a3674  <|@  <|@
f <@~|@floating>@ <|@
tid a919 <|@
result v205|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/twitter/util/Promise$$anon$3;
valueDescription: a -
=== Inputs ===
merge: v903 
values: a2139 a2256 
=== Succesors ===
=== Usages ===
?943 a917 a920 a924 ?898 a920 a920 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v903 values: a2139 a2256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v904 v906 
=== Succesors ===
next: a3675 
=== Usages ===
i908 a913 a960 a2576 a919 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v904 v906 #next: a3675  <|@  <|@
f <@~|@floating>@ <|@
tid v3747 <|@
result [v204|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2576 
=== Succesors ===
=== Usages ===
a3675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3675 <|@
result v206|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap.table
nullCheck: false
stamp: n# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3747 
=== Succesors ===
next: i3676 
=== Usages ===
a1294 v3748 
=== Predecessor ===
v903 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3747 #next: i3676  <|@  <|@
tid ?958 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Promise$.interrupts(Future)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 329
stackSize: 1
=== Inputs ===
outerFrameState: ?118 
values: a960 a751 a780 
=== Succesors ===
=== Usages ===
?945 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?118 values: a960 a751 a780  <|@  <|@
tid ?945 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Promise$$anon$3.<init>(Future)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 330
stackSize: 0
=== Inputs ===
outerFrameState: ?958 
values: - - 
=== Succesors ===
=== Usages ===
?910 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?958 values: - -  <|@  <|@
tid ?910 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<Promise.forwardInterruptsTo(Future)>
duringCall: true
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 506
stackSize: 0
=== Inputs ===
outerFrameState: ?945 
values: a780 a751 - - - - - - - - 
=== Succesors ===
=== Usages ===
?905 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?945 values: a780 a751 - - - - - - - -  <|@  <|@
tid ?943 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a780 
materializedValue: a919 
=== Succesors ===
=== Usages ===
?905 ?827 ?2571 ?890 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a780 materializedValue: a919  <|@  <|@
tid ?905 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Promise.cas(Object, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 453
stackSize: 1
=== Inputs ===
outerFrameState: ?910 
values: - - - i908 
virtualObjectMappings: ?943 ?760 ?782 
=== Succesors ===
=== Usages ===
v2740 i3676 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?910 values: - - - i908 virtualObjectMappings: ?943 ?760 ?782  <|@  <|@
f <@~|@floating>@ <|@
tid v3748 <|@
result [v206|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3675 
=== Succesors ===
=== Usages ===
i3676 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3676 <|@
result v207|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?905 
guard: - 
address: v3748 
=== Succesors ===
next: i3677 
=== Usages ===
i715 v1301 
=== Predecessor ===
a3675 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?905 guard: - address: v3748 #next: i3677  <|@  <|@
f <@~|@floating>@ <|@
tid v3746 <|@
result [v202|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a913 
index: - 
=== Succesors ===
=== Usages ===
i3677 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a913 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3677 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal.threadLocalHashCode
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3746 
=== Succesors ===
next: v1728 
=== Usages ===
i716 
=== Predecessor ===
i3676 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3746 #next: v1728  <|@  <|@
f <@~|@floating>@ <|@
tid i715 <|@
result v208|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i3676 
y: i661 
=== Succesors ===
=== Usages ===
i716 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3676 y: i661  <|@  <|@
f <@~|@floating>@ <|@
tid i716 <|@
result v209|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$106/1828525263@267ef724
stamp: i32
=== Inputs ===
x: i715 
y: i3677 
=== Succesors ===
=== Usages ===
v3749 v1310 v1301 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i715 y: i3677  <|@  <|@
f <@~|@floating>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@782e90
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i716 
y: i3676 
=== Succesors ===
=== Usages ===
v1728 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i716 y: i3676  <|@  <|@
f <@*|@fixed>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1301 
=== Succesors ===
trueSuccessor: v1725 
falseSuccessor: v1727 
=== Usages ===
=== Predecessor ===
i3677 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1301 #trueSuccessor: v1725 #falseSuccessor: v1727  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v201|DWORD, v202|QWORD[.], v203|QWORD[.], v204|DWORD[.], v205|QWORD[.]] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v206|DWORD[.] = MOV [v204|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v201|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v205|QWORD[.] v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v205|QWORD[.] 
locals: v203|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction v207|DWORD = MOV [v206|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction v208|DWORD = DEC v207|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v209|DWORD = AND (x: v208|DWORD, ~y: [v202|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v207|DWORD, y: v209|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B120 -> B121 falseDestination: B120 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B140" 
    xhandlers
    flags 
    probability 4607182418093917143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3678 
=== Usages ===
a3678 
=== Predecessor ===
v1728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3678  <|@  <|@
f <@~|@floating>@ <|@
tid a1294 <|@
result v210|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a3675 
=== Succesors ===
=== Usages ===
v3749 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3675  <|@  <|@
f <@~|@floating>@ <|@
tid v3749 <|@
result [v210|QWORD[.] + v209|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1294 
index: i716 
=== Succesors ===
=== Usages ===
a3678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1294 index: i716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3678 <|@
result v211|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: v1725 
address: v3749 
=== Succesors ===
next: v722 
=== Usages ===
a1309 v1417 v3750 
=== Predecessor ===
v1725 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1725 address: v3749 #next: v722  <|@  <|@
f <@~|@floating>@ <|@
tid a1309 <|@
result v212|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a3678 
=== Succesors ===
=== Usages ===
v1310 a1043 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3678  <|@  <|@
f <@~|@floating>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3678 
=== Succesors ===
=== Usages ===
v722 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3678  <|@  <|@
f <@~|@floating>@ <|@
tid a2577 <|@
result v213|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
value: a2576 
=== Succesors ===
=== Usages ===
v1310 ?562 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2576  <|@  <|@
tid ?562 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 163
stackSize: 0
=== Inputs ===
outerFrameState: ?578 
values: a913 - a2577 - - 
=== Succesors ===
=== Usages ===
?827 ?734 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?578 values: a913 - a2577 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 3.527679190032315E-7
=== Inputs ===
condition: v1417 
=== Succesors ===
trueSuccessor: v720 
falseSuccessor: v721 
=== Usages ===
=== Predecessor ===
a3678 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1417 #trueSuccessor: v720 #falseSuccessor: v721  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v210|QWORD[.] = UNCOMPRESSPOINTER (input: v206|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v211|DWORD[.] = MOV [v210|QWORD[.] + v209|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v212|QWORD[.] = UNCOMPRESSPOINTER (input: v211|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v213|QWORD[.] = UNCOMPRESSPOINTER (input: v204|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v211|DWORD[.], y: v211|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.527679190032315E-7 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B123" "B139" 
    xhandlers
    flags 
    probability 4510263224435847550
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a731 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a731  <|@  <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
signature: [Ljdk.vm.ci.meta.JavaType;@284c0e
stamp: void
targetMethod: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>
=== Inputs ===
arguments: a2577 a913 i716 a1309 
=== Succesors ===
=== Usages ===
a731 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2577 a913 i716 a1309  <|@  <|@
tid ?734 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 0
=== Inputs ===
outerFrameState: ?562 
values: - - 
=== Succesors ===
=== Usages ===
?2571 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?562 values: - -  <|@  <|@
tid ?2571 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 419
stackSize: 0
=== Inputs ===
outerFrameState: ?734 
values: - - - - 
virtualObjectMappings: ?782 ?943 ?760 ?789 
=== Succesors ===
=== Usages ===
a731 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?734 values: - - - - virtualObjectMappings: ?782 ?943 ?760 ?789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a731 <|@
result v214|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 38
polymorphic: false
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
targetMethod: Direct#ThreadLocal$ThreadLocalMap.getEntryAfterMiss
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1310 
stateDuring: ?2571 
=== Succesors ===
next: v570 
=== Usages ===
v564 a1043 
=== Predecessor ===
v720 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1310 stateDuring: ?2571 #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a731 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a731  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 3.527674073959098E-7
=== Inputs ===
condition: v564 
=== Succesors ===
trueSuccessor: v569 
falseSuccessor: v568 
=== Usages ===
=== Predecessor ===
a731 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v564 #trueSuccessor: v569 #falseSuccessor: v568  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v202|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v209|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v212|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: v202|QWORD[.] - v213|QWORD[.] - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: v16|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} v205|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:38, 2, 16, 4, 19, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction v214|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v214|QWORD[.], y: v214|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.527674073959098E-7 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" 
    xhandlers
    flags 
    probability 4413953810109930006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v567  <|@  <|@
f <@*|@fixed>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
v569 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v202|QWORD[.], v205|QWORD[.]] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B82" "B123" "B118" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4500515635838651093
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a911 <|@
result v215|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/lang/ThreadLocal;
valueDescription: a -
=== Inputs ===
merge: v566 
values: a1209 a913 a1282 
=== Succesors ===
=== Usages ===
v1327 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v566 values: a1209 a913 a1282  <|@  <|@
f <@~|@floating>@ <|@
tid a917 <|@
result v216|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/twitter/util/Promise$$anon$3;
valueDescription: a -
=== Inputs ===
merge: v566 
values: a2139 a919 a2256 
=== Succesors ===
=== Usages ===
?790 a920 a924 ?937 a920 a920 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v566 values: a2139 a919 a2256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v565 v567 v1033 
=== Succesors ===
next: a575 
=== Usages ===
a911 a917 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v565 v567 v1033 #next: a575  <|@  <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@730d27db
stamp: void
targetMethod: HotSpotMethod<ThreadLocal.setInitialValue()>
=== Inputs ===
arguments: a911 
=== Succesors ===
=== Usages ===
a575 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a911  <|@  <|@
tid ?937 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a780 
materializedValue: a917 
=== Succesors ===
=== Usages ===
?323 ?576 ?2572 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a780 materializedValue: a917  <|@  <|@
tid ?2572 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 170
stackSize: 0
=== Inputs ===
outerFrameState: ?578 
values: - - - - - 
virtualObjectMappings: ?782 ?937 ?760 ?789 
=== Succesors ===
=== Usages ===
a575 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?578 values: - - - - - virtualObjectMappings: ?782 ?937 ?760 ?789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a575 <|@
result v217|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 34
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#ThreadLocal.setInitialValue
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1327 
stateDuring: ?2572 
=== Succesors ===
next: v2333 
=== Usages ===
?576 a877 v1329 v3839 ?790 a876 a877 a877 
=== Predecessor ===
v566 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1327 stateDuring: ?2572 #next: v2333  <|@  <|@
f <@~|@floating>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a575 
=== Succesors ===
=== Usages ===
v2333 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a575  <|@  <|@
f <@*|@fixed>@ <|@
tid v2333 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1329 
=== Succesors ===
trueSuccessor: v2332 
falseSuccessor: v2331 
=== Usages ===
=== Predecessor ===
a575 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1329 #trueSuccessor: v2332 #falseSuccessor: v2331  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v215|QWORD[.], v216|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v215|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: v16|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} v216|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:34, 4, 19, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v217|QWORD[.], y: v217|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B124 -> B125 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B128" 
    xhandlers
    flags 
    probability 4485820195411960387
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2875 
=== Usages ===
=== Predecessor ===
v2333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2875  <|@  <|@
f <@*|@fixed>@ <|@
tid v2875 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2873 
=== Predecessor ===
v2332 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B125 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" "B138" 
    xhandlers
    flags 
    probability 4499923315066361485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3679 
=== Usages ===
=== Predecessor ===
v2333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3679  <|@  <|@
f <@~|@floating>@ <|@
tid v3839 <|@
result [v217|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a575 
index: - 
=== Succesors ===
=== Usages ===
v3679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a575 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3679 <|@
result v218|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3839 
=== Succesors ===
next: v3680 
=== Usages ===
v3786 
=== Predecessor ===
v2331 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3839 #next: v3680  <|@  <|@
f <@~|@floating>@ <|@
tid v3786 <|@
result [v218|DWORD * 8 + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3679 
=== Succesors ===
=== Usages ===
v3680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3679  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3680 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3786 
=== Succesors ===
next: v3587 
=== Usages ===
v2337 
=== Predecessor ===
v3679 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3786 #next: v3587  <|@  <|@
f <@~|@floating>@ <|@
tid v2337 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3680 
y: v1885 
=== Succesors ===
=== Usages ===
v3587 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3680 y: v1885  <|@  <|@
f <@*|@fixed>@ <|@
tid v3587 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2337 
=== Succesors ===
trueSuccessor: v3586 
falseSuccessor: v2880 
=== Usages ===
=== Predecessor ===
v3680 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2337 #trueSuccessor: v3586 #falseSuccessor: v2880  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v218|DWORD = MOV [v217|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: [v218|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B126 -> B127 falseDestination: B126 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B128" 
    xhandlers
    flags 
    probability 4499923315066361485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2883 
=== Usages ===
=== Predecessor ===
v3587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2883  <|@  <|@
f <@*|@fixed>@ <|@
tid v2883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2873 
=== Predecessor ===
v3586 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B125" "B127" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4500515635838651093
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2875 v2883 
=== Succesors ===
next: v1334 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2875 v2883 #next: v1334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a3681 
=== Usages ===
=== Predecessor ===
v2873 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a3681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3681 <|@
result v219|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise.state
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3727 
=== Succesors ===
next: v1335 
=== Usages ===
a1333 v3840 
=== Predecessor ===
v1334 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3727 #next: v1335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v3682 
=== Usages ===
=== Predecessor ===
a3681 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v3682  <|@  <|@
f <@~|@floating>@ <|@
tid a1333 <|@
result v220|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a3681 
=== Succesors ===
=== Usages ===
a881 ?323 a881 a881 a1046 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3681  <|@  <|@
tid ?790 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a788 
values: a575 a917 a78 
=== Succesors ===
=== Usages ===
?323 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a788 values: a575 a917 a78  <|@  <|@
tid ?323 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 761
stackSize: 1
=== Inputs ===
outerFrameState: ?374 
values: a751 a788 - - - - - - - - - a1333 
virtualObjectMappings: ?760 ?790 ?937 ?782 
=== Succesors ===
=== Usages ===
v3682 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?374 values: a751 a788 - - - - - - - - - a1333 virtualObjectMappings: ?760 ?790 ?937 ?782  <|@  <|@
f <@~|@floating>@ <|@
tid v3840 <|@
result [v219|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3681 
=== Succesors ===
=== Usages ===
v3682 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3682 <|@
result v221|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?323 
guard: - 
address: v3840 
=== Succesors ===
next: v3683 
=== Usages ===
v3788 v3540 v3787 
=== Predecessor ===
v1335 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?323 guard: - address: v3840 #next: v3683  <|@  <|@
f <@~|@floating>@ <|@
tid v3787 <|@
result [v221|DWORD * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3682 
=== Succesors ===
=== Usages ===
v2387 v3683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3683 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SecondarySuperCache
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3787 
=== Succesors ===
next: v2359 
=== Usages ===
v2356 
=== Predecessor ===
v3682 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3787 #next: v2359  <|@  <|@
f <@~|@floating>@ <|@
tid v2356 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3683 
y: v1905 
=== Succesors ===
=== Usages ===
v2359 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3683 y: v1905  <|@  <|@
f <@*|@fixed>@ <|@
tid v2359 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2356 
=== Succesors ===
trueSuccessor: v2357 
falseSuccessor: v2358 
=== Usages ===
=== Predecessor ===
v3683 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2356 #trueSuccessor: v2357 #falseSuccessor: v2358  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v219|DWORD[.] = MOV [v16|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v220|QWORD[.] = UNCOMPRESSPOINTER (input: v219|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v220|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v217|QWORD[.],promise=v216|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v216|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v217|QWORD[.],promise=v216|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v217|QWORD[.] v216|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction v221|DWORD = MOV [v219|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: [v221|DWORD * 8 + 24]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B128 -> B129 falseDestination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B154" 
    xhandlers
    flags 
    probability 4496012036211280597
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v869 
=== Usages ===
=== Predecessor ===
v2359 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v869  <|@  <|@
f <@*|@fixed>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
v2357 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v217|QWORD[.], v216|QWORD[.], v220|QWORD[.]] destination: B129 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    probability 4496012036211280597
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2363 
=== Usages ===
=== Predecessor ===
v2359 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2363  <|@  <|@
f <@~|@floating>@ <|@
tid v3540 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3682 
y: v3486 
=== Succesors ===
=== Usages ===
v2363 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3682 y: v3486  <|@  <|@
f <@*|@fixed>@ <|@
tid v2363 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3540 
=== Succesors ===
trueSuccessor: v2361 
falseSuccessor: v2362 
=== Usages ===
=== Predecessor ===
v2358 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3540 #trueSuccessor: v2361 #falseSuccessor: v2362  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v221|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B130 -> B131 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B154" 
    xhandlers
    flags 
    probability 4491508436583910101
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2568 
=== Usages ===
=== Predecessor ===
v2363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2568  <|@  <|@
f <@*|@fixed>@ <|@
tid v2568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
v2361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v217|QWORD[.], v216|QWORD[.], v220|QWORD[.]] destination: B131 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4491508436583910101
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j2384 
=== Usages ===
=== Predecessor ===
v2363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2384  <|@  <|@
f <@~|@floating>@ <|@
tid v3788 <|@
result [v221|DWORD * 8 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3682 
=== Succesors ===
=== Usages ===
j2384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2384 <|@
result v222|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3788 
=== Succesors ===
next: i2385 
=== Usages ===
v3789 v3790 
=== Predecessor ===
v2362 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3788 #next: i2385  <|@  <|@
f <@~|@floating>@ <|@
tid v3789 <|@
result [v222|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2384 
index: - 
=== Succesors ===
=== Usages ===
i2385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2384 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2385 <|@
result v223|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3789 
=== Succesors ===
next: v2366 
=== Usages ===
v2369 
=== Predecessor ===
j2384 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3789 #next: v2366  <|@  <|@
f <@*|@fixed>@ <|@
tid v2366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2367 
=== Predecessor ===
i2385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v222|QWORD = MOV [v221|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v223|DWORD = MOV [v222|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B136" 
    successors "B134" "B137" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4494046954179436995
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2368 <|@
result v224|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v2367 
values: i153 i2382 
=== Succesors ===
=== Usages ===
v2369 i2373 i2382 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2367 values: i153 i2382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2367 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2366 
=== Succesors ===
next: v2372 
=== Usages ===
i2368 v2371 v2380 v2383 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2366 #next: v2372  <|@  <|@
f <@~|@floating>@ <|@
tid v2369 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3652e6c3
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2368 
y: i2385 
=== Succesors ===
=== Usages ===
v2372 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2368 y: i2385  <|@  <|@
f <@*|@fixed>@ <|@
tid v2372 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2369 
=== Succesors ===
trueSuccessor: v2370 
falseSuccessor: v2371 
=== Usages ===
=== Predecessor ===
v2367 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2369 #trueSuccessor: v2370 #falseSuccessor: v2371  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v224|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v223|DWORD, y: v224|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B133 -> B134 falseDestination: B133 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4489543354552066499
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j2386 
=== Usages ===
=== Predecessor ===
v2372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2386  <|@  <|@
f <@~|@floating>@ <|@
tid i2373 <|@
result v225|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$15/433673915@1f3c8b47
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2368 
y: i1931 
=== Succesors ===
=== Usages ===
i2374 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2368 y: i1931  <|@  <|@
f <@~|@floating>@ <|@
tid i2374 <|@
result v226|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2373 
y: i1930 
=== Succesors ===
=== Usages ===
j2375 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2373 y: i1930  <|@  <|@
f <@~|@floating>@ <|@
tid j2375 <|@
result v227|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$13/1218083739@248602d1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$14/1566400895@795fae70
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2374 
=== Succesors ===
=== Usages ===
v3790 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2374  <|@  <|@
f <@~|@floating>@ <|@
tid v3790 <|@
result [v222|QWORD + v227|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2384 
index: j2375 
=== Succesors ===
=== Usages ===
j2386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2384 index: j2375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2386 <|@
result v228|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3790 
=== Succesors ===
next: v2381 
=== Usages ===
v2377 
=== Predecessor ===
v2370 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3790 #next: v2381  <|@  <|@
f <@~|@floating>@ <|@
tid v2377 <|@
result v228|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: Klass*
=== Inputs ===
input: j2386 
=== Succesors ===
=== Usages ===
v2378 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j2386  <|@  <|@
f <@~|@floating>@ <|@
tid v2378 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2377 
y: v1905 
=== Succesors ===
=== Usages ===
v2381 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2377 y: v1905  <|@  <|@
f <@*|@fixed>@ <|@
tid v2381 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v2378 
=== Succesors ===
trueSuccessor: v2380 
falseSuccessor: v2379 
=== Usages ===
=== Predecessor ===
j2386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2378 #trueSuccessor: v2380 #falseSuccessor: v2379  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v225|DWORD = SHL v224|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v226|DWORD = LEA [v225|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v227|QWORD = MOVSXD v226|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v228|QWORD = MOV [v222|QWORD + v227|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v228|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B154" 
    xhandlers
    flags 
    probability 4483347409861011408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2367 
=== Succesors ===
next: v2387 
=== Usages ===
=== Predecessor ===
v2381 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2367 #next: v2387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2387 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3787 
value: v1905 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2567 
=== Usages ===
=== Predecessor ===
v2380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3787 value: v1905 stateAfter: - lastLocationAccess: - #next: v2567  <|@  <|@
f <@*|@fixed>@ <|@
tid v2567 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
v2387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v221|DWORD * 8 + 24], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v217|QWORD[.], v216|QWORD[.], v220|QWORD[.]] destination: B135 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B133" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4486158664424697307
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2383 
=== Usages ===
=== Predecessor ===
v2381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2383  <|@  <|@
f <@~|@floating>@ <|@
tid i2382 <|@
result v229|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i32
=== Inputs ===
x: i2368 
y: i1797 
=== Succesors ===
=== Usages ===
i2368 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2368 y: i1797  <|@  <|@
f <@*|@fixed>@ <|@
tid v2383 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2367 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2379 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2367  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v229|DWORD = INC v224|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v229|DWORD] destination: B136 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B167" 
    xhandlers
    flags 
    probability 4489543354552066499
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2371 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2367 
=== Succesors ===
next: v873 
=== Usages ===
=== Predecessor ===
v2372 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2367 #next: v873  <|@  <|@
f <@*|@fixed>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v872 
=== Predecessor ===
v2371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v217|QWORD[.], v220|QWORD[.], v216|QWORD[.]] destination: B137 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2880 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1730 
=== Usages ===
=== Predecessor ===
v3587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1730  <|@  <|@
tid ?576 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 170
stackSize: 1
=== Inputs ===
outerFrameState: ?578 
values: - - - - - a575 
virtualObjectMappings: ?782 ?937 ?760 ?789 
=== Succesors ===
=== Usages ===
v1730 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?578 values: - - - - - a575 virtualObjectMappings: ?782 ?937 ?760 ?789  <|@  <|@
f <@*|@fixed>@ <|@
tid v1730 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1331
reason: ClassCastException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?576 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2880 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?576  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -340771 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37]
stack: v217|QWORD[.] 
locals: - - - - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: v16|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} v216|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:37, 4, 19, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B142" 
    xhandlers
    flags 
    probability 4510263222085147689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v826 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v826  <|@  <|@
f <@*|@fixed>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
v568 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v214|QWORD[.]] destination: B139 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B141" "B179" 
    xhandlers
    flags 
    probability 4607182414916466455
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3684 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3684  <|@  <|@
f <@~|@floating>@ <|@
tid v3750 <|@
result [v211|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3678 
=== Succesors ===
=== Usages ===
a3684 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3678  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3684 <|@
result v230|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.referent
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3750 
=== Succesors ===
next: v1740 
=== Usages ===
a1313 
=== Predecessor ===
v721 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3750 #next: v1740  <|@  <|@
f <@~|@floating>@ <|@
tid a1313 <|@
result v231|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a3684 
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3684  <|@  <|@
f <@~|@floating>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a913 
y: a1313 
=== Succesors ===
=== Usages ===
v1740 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a913 y: a1313  <|@  <|@
f <@*|@fixed>@ <|@
tid v1740 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v727 
=== Succesors ===
trueSuccessor: v1737 
falseSuccessor: v1739 
=== Usages ===
=== Predecessor ===
a3684 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v727 #trueSuccessor: v1737 #falseSuccessor: v1739  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v230|DWORD[.] = MOV [v211|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v231|QWORD[.] = UNCOMPRESSPOINTER (input: v230|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v231|QWORD[.], y: v202|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B140 -> B141 falseDestination: B140 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" 
    xhandlers
    flags 
    probability 4607182414916466455
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v1740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v726  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: Reference.referent
stamp: void
=== Inputs ===
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v1737 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v828  <|@  <|@
f <@*|@fixed>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
v726 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v212|QWORD[.]] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B139" "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4607182418093916022
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1043 <|@
result v232|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
valueDescription: a -
=== Inputs ===
merge: v825 
values: a731 a1309 
=== Succesors ===
=== Usages ===
v3751 ?827 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v825 values: a731 a1309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v826 v828 
=== Succesors ===
next: a3685 
=== Usages ===
a1043 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v826 v828 #next: a3685  <|@  <|@
f <@~|@floating>@ <|@
tid v3751 <|@
result [v232|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1043 
index: - 
=== Succesors ===
=== Usages ===
a3685 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1043 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3685 <|@
result v233|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap$Entry.value
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3751 
=== Succesors ===
next: v2262 
=== Usages ===
a1317 v1319 v3837 
=== Predecessor ===
v825 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3751 #next: v2262  <|@  <|@
f <@~|@floating>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a3685 
=== Succesors ===
=== Usages ===
v2262 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3685  <|@  <|@
f <@*|@fixed>@ <|@
tid v2262 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1319 
=== Succesors ===
trueSuccessor: v2261 
falseSuccessor: v2260 
=== Usages ===
=== Predecessor ===
a3685 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1319 #trueSuccessor: v2261 #falseSuccessor: v2260  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v232|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v233|DWORD[.] = MOV [v232|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v233|DWORD[.], y: v233|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B146" 
    xhandlers
    flags 
    probability 4591870179502076611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2890 
=== Usages ===
=== Predecessor ===
v2262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2890  <|@  <|@
f <@*|@fixed>@ <|@
tid v2890 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2888 
=== Predecessor ===
v2261 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B143 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B178" 
    xhandlers
    flags 
    probability 4606281698239052062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3686 
=== Usages ===
=== Predecessor ===
v2262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3686  <|@  <|@
f <@~|@floating>@ <|@
tid v3837 <|@
result [v233|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3685 
=== Succesors ===
=== Usages ===
v3686 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3686 <|@
result v234|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3837 
=== Succesors ===
next: v3687 
=== Usages ===
v3781 
=== Predecessor ===
v2260 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3837 #next: v3687  <|@  <|@
f <@~|@floating>@ <|@
tid v3781 <|@
result [v234|DWORD * 8 + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3686 
=== Succesors ===
=== Usages ===
v3687 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3687 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3781 
=== Succesors ===
next: v3595 
=== Usages ===
v2266 
=== Predecessor ===
v3686 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3781 #next: v3595  <|@  <|@
f <@~|@floating>@ <|@
tid v2266 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3687 
y: v1885 
=== Succesors ===
=== Usages ===
v3595 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3687 y: v1885  <|@  <|@
f <@*|@fixed>@ <|@
tid v3595 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2266 
=== Succesors ===
trueSuccessor: v3594 
falseSuccessor: v2895 
=== Usages ===
=== Predecessor ===
v3687 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2266 #trueSuccessor: v3594 #falseSuccessor: v2895  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v234|DWORD = MOV [v233|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: [v234|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" 
    xhandlers
    flags 
    probability 4606281698239052062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2898 
=== Usages ===
=== Predecessor ===
v3595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2898  <|@  <|@
f <@*|@fixed>@ <|@
tid v2898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2888 
=== Predecessor ===
v3594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" 
    successors "B147" "B148" 
    xhandlers
    flags 
    probability 4607182418093916022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2890 v2898 
=== Succesors ===
next: v1324 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2890 v2898 #next: v1324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a3688 
=== Usages ===
=== Predecessor ===
v2888 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a3688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3688 <|@
result v235|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise.state
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3727 
=== Succesors ===
next: v1325 
=== Usages ===
a1323 v3838 
=== Predecessor ===
v1324 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3727 #next: v1325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v3689 
=== Usages ===
=== Predecessor ===
a3688 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v3689  <|@  <|@
f <@~|@floating>@ <|@
tid a1323 <|@
result v236|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a3688 
=== Succesors ===
=== Usages ===
a881 ?890 a881 a881 a1046 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3688  <|@  <|@
f <@~|@floating>@ <|@
tid a1317 <|@
result v237|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a3685 
=== Succesors ===
=== Usages ===
a877 a877 ?898 a877 a876 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3685  <|@  <|@
tid ?898 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a788 
values: a1317 a919 a78 
=== Succesors ===
=== Usages ===
?890 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a788 values: a1317 a919 a78  <|@  <|@
tid ?890 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 761
stackSize: 1
=== Inputs ===
outerFrameState: ?374 
values: a751 a788 - - - - - - - - - a1323 
virtualObjectMappings: ?760 ?898 ?943 ?782 
=== Succesors ===
=== Usages ===
v3689 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?374 values: a751 a788 - - - - - - - - - a1323 virtualObjectMappings: ?760 ?898 ?943 ?782  <|@  <|@
f <@~|@floating>@ <|@
tid v3838 <|@
result [v235|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3688 
=== Succesors ===
=== Usages ===
v3689 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3689 <|@
result v238|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?890 
guard: - 
address: v3838 
=== Succesors ===
next: v3690 
=== Usages ===
v3783 v3539 v3782 
=== Predecessor ===
v1325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?890 guard: - address: v3838 #next: v3690  <|@  <|@
f <@~|@floating>@ <|@
tid v3782 <|@
result [v238|DWORD * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3689 
=== Succesors ===
=== Usages ===
v2316 v3690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3690 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SecondarySuperCache
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v3782 
=== Succesors ===
next: v2288 
=== Usages ===
v2285 
=== Predecessor ===
v3689 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3782 #next: v2288  <|@  <|@
f <@~|@floating>@ <|@
tid v2285 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3690 
y: v1905 
=== Succesors ===
=== Usages ===
v2288 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3690 y: v1905  <|@  <|@
f <@*|@fixed>@ <|@
tid v2288 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2285 
=== Succesors ===
trueSuccessor: v2286 
falseSuccessor: v2287 
=== Usages ===
=== Predecessor ===
v3690 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2285 #trueSuccessor: v2286 #falseSuccessor: v2287  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v235|DWORD[.] = MOV [v16|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v236|QWORD[.] = UNCOMPRESSPOINTER (input: v235|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v237|QWORD[.] = UNCOMPRESSPOINTER (input: v233|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v236|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v237|QWORD[.],promise=v205|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v205|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v237|QWORD[.],promise=v205|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v237|QWORD[.] v205|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction v238|DWORD = MOV [v235|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: [v238|DWORD * 8 + 24]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B154" 
    xhandlers
    flags 
    probability 4602678818466545526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v2288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v871  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
v2286 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v237|QWORD[.], v205|QWORD[.], v236|QWORD[.]] destination: B147 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4602678818466545526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2292 
=== Usages ===
=== Predecessor ===
v2288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2292  <|@  <|@
f <@~|@floating>@ <|@
tid v3539 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3689 
y: v3486 
=== Succesors ===
=== Usages ===
v2292 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3689 y: v3486  <|@  <|@
f <@*|@fixed>@ <|@
tid v2292 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3539 
=== Succesors ===
trueSuccessor: v2290 
falseSuccessor: v2291 
=== Usages ===
=== Predecessor ===
v2287 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3539 #trueSuccessor: v2290 #falseSuccessor: v2291  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v238|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B154" 
    xhandlers
    flags 
    probability 4598175218839175030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2566 
=== Usages ===
=== Predecessor ===
v2292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2566  <|@  <|@
f <@*|@fixed>@ <|@
tid v2566 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
v2290 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v237|QWORD[.], v205|QWORD[.], v236|QWORD[.]] destination: B149 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4598175218839175030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j2313 
=== Usages ===
=== Predecessor ===
v2292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2313  <|@  <|@
f <@~|@floating>@ <|@
tid v3783 <|@
result [v238|DWORD * 8 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3689 
=== Succesors ===
=== Usages ===
j2313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2313 <|@
result v239|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3783 
=== Succesors ===
next: i2314 
=== Usages ===
v3784 v3785 
=== Predecessor ===
v2291 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3783 #next: i2314  <|@  <|@
f <@~|@floating>@ <|@
tid v3784 <|@
result [v239|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2313 
index: - 
=== Succesors ===
=== Usages ===
i2314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2313 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2314 <|@
result v240|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3784 
=== Succesors ===
next: v2295 
=== Usages ===
v2298 
=== Predecessor ===
j2313 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3784 #next: v2295  <|@  <|@
f <@*|@fixed>@ <|@
tid v2295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2296 
=== Predecessor ===
i2314 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v239|QWORD = MOV [v238|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v240|DWORD = MOV [v239|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B165" 
    successors "B152" "B166" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4600105333166934210
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2297 <|@
result v241|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v2296 
values: i153 i2311 
=== Succesors ===
=== Usages ===
v2298 i2302 i2311 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2296 values: i153 i2311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2296 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2295 
=== Succesors ===
next: v2301 
=== Usages ===
i2297 v2300 v2309 v2312 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2295 #next: v2301  <|@  <|@
f <@~|@floating>@ <|@
tid v2298 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3652e6c3
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2297 
y: i2314 
=== Succesors ===
=== Usages ===
v2301 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2297 y: i2314  <|@  <|@
f <@*|@fixed>@ <|@
tid v2301 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2298 
=== Succesors ===
trueSuccessor: v2299 
falseSuccessor: v2300 
=== Usages ===
=== Predecessor ===
v2296 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2298 #trueSuccessor: v2299 #falseSuccessor: v2300  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v241|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v240|DWORD, y: v241|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B165" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4595601733539563714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j2315 
=== Usages ===
=== Predecessor ===
v2301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2315  <|@  <|@
f <@~|@floating>@ <|@
tid i2302 <|@
result v242|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$15/433673915@1f3c8b47
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2297 
y: i1931 
=== Succesors ===
=== Usages ===
i2303 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2297 y: i1931  <|@  <|@
f <@~|@floating>@ <|@
tid i2303 <|@
result v243|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2302 
y: i1930 
=== Succesors ===
=== Usages ===
j2304 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2302 y: i1930  <|@  <|@
f <@~|@floating>@ <|@
tid j2304 <|@
result v244|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$13/1218083739@248602d1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$14/1566400895@795fae70
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2303 
=== Succesors ===
=== Usages ===
v3785 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2303  <|@  <|@
f <@~|@floating>@ <|@
tid v3785 <|@
result [v239|QWORD + v244|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2313 
index: j2304 
=== Succesors ===
=== Usages ===
j2315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2313 index: j2304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2315 <|@
result v245|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3785 
=== Succesors ===
next: v2310 
=== Usages ===
v2306 
=== Predecessor ===
v2299 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3785 #next: v2310  <|@  <|@
f <@~|@floating>@ <|@
tid v2306 <|@
result v245|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: Klass*
=== Inputs ===
input: j2315 
=== Succesors ===
=== Usages ===
v2307 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j2315  <|@  <|@
f <@~|@floating>@ <|@
tid v2307 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2306 
y: v1905 
=== Succesors ===
=== Usages ===
v2310 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2306 y: v1905  <|@  <|@
f <@*|@fixed>@ <|@
tid v2310 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v2307 
=== Succesors ===
trueSuccessor: v2309 
falseSuccessor: v2308 
=== Usages ===
=== Predecessor ===
j2315 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2307 #trueSuccessor: v2309 #falseSuccessor: v2308  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v242|DWORD = SHL v241|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v243|DWORD = LEA [v242|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v244|QWORD = MOVSXD v243|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v245|QWORD = MOV [v239|QWORD + v244|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v245|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B152 -> B153 falseDestination: B152 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B154" 
    xhandlers
    flags 
    probability 4589811391262387560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2296 
=== Succesors ===
next: v2316 
=== Usages ===
=== Predecessor ===
v2310 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2296 #next: v2316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2316 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3782 
value: v1905 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2565 
=== Usages ===
=== Predecessor ===
v2309 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3782 value: v1905 stateAfter: - lastLocationAccess: - #next: v2565  <|@  <|@
f <@*|@fixed>@ <|@
tid v2565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
v2316 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v238|DWORD * 8 + 24], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v237|QWORD[.], v205|QWORD[.], v236|QWORD[.]] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B129" "B147" "B153" "B149" "B135" "B131" 
    successors "B155" "B163" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a877 <|@
result v246|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Lscala/Option;
valueDescription: a -
=== Inputs ===
merge: v868 
values: a575 a1317 a1317 a1317 a575 a575 
=== Succesors ===
=== Usages ===
a2426 ?882 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v868 values: a575 a1317 a1317 a1317 a575 a575  <|@  <|@
f <@~|@floating>@ <|@
tid a920 <|@
result v247|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/twitter/util/Promise$$anon$3;
valueDescription: a -
=== Inputs ===
merge: v868 
values: a917 a919 a919 a919 a917 a917 
=== Succesors ===
=== Usages ===
a2427 v745 ?882 ?940 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v868 values: a917 a919 a919 a919 a917 a917  <|@  <|@
f <@~|@floating>@ <|@
tid a881 <|@
result v248|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v868 
values: a1333 a1323 a1323 a1323 a1333 a1333 
=== Succesors ===
=== Usages ===
v3841 v619 ?870 a1354 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v868 values: a1333 a1323 a1323 a1323 a1333 a1333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v869 v871 v2565 v2566 v2567 v2568 
=== Succesors ===
next: a3691 
=== Usages ===
a877 a920 a881 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v869 v871 v2565 v2566 v2567 v2568 #next: a3691  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3691 <|@
result v249|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$WaitQueue$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3707 
=== Succesors ===
next: v3915 
=== Usages ===
v3752 v3915 
=== Predecessor ===
v868 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3707 #next: v3915  <|@  <|@
tid ?882 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a788 
values: a877 a920 a78 
=== Succesors ===
=== Usages ===
?870 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a788 values: a877 a920 a78  <|@  <|@
tid ?940 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a780 
materializedValue: a920 
=== Succesors ===
=== Usages ===
?870 ?635 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a780 materializedValue: a920  <|@  <|@
tid ?870 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 761
stackSize: 1
=== Inputs ===
outerFrameState: ?374 
values: a751 a788 - - - - - - - - - a881 
virtualObjectMappings: ?760 ?882 ?940 ?782 
=== Succesors ===
=== Usages ===
v2712 a3336 v3915 a3693 v3916 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?374 values: a751 a788 - - - - - - - - - a881 virtualObjectMappings: ?760 ?882 ?940 ?782  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3915 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?870 
object: a3691 
=== Succesors ===
next: a3692 
=== Usages ===
=== Predecessor ===
a3691 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?870 object: a3691 #next: a3692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3692 <|@
result v250|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3706 
=== Succesors ===
next: a3693 
=== Usages ===
v3754 v3753 
=== Predecessor ===
v3915 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3706 #next: a3693  <|@  <|@
f <@~|@floating>@ <|@
tid v3753 <|@
result [v250|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3692 
=== Succesors ===
=== Usages ===
a3693 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3693 <|@
result v251|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$unsafe
nullCheck: true
stamp: n# Lsun/misc/Unsafe;
=== Inputs ===
stateBefore: ?870 
guard: - 
address: v3753 
=== Succesors ===
next: v3916 
=== Usages ===
v3916 
=== Predecessor ===
a3692 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?870 guard: - address: v3753 #next: v3916  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?870 
object: a3693 
=== Succesors ===
next: v3694 
=== Usages ===
=== Predecessor ===
a3693 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?870 object: a3693 #next: v3694  <|@  <|@
f <@~|@floating>@ <|@
tid v3841 <|@
result [v248|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a881 
index: - 
=== Succesors ===
=== Usages ===
v3694 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a881 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3694 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3841 
=== Succesors ===
next: v1764 
=== Usages ===
v3541 
=== Predecessor ===
v3916 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3841 #next: v1764  <|@  <|@
f <@~|@floating>@ <|@
tid v3541 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3694 
y: v3467 
=== Succesors ===
=== Usages ===
v1764 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3694 y: v3467  <|@  <|@
f <@*|@fixed>@ <|@
tid v1764 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3541 
=== Succesors ===
trueSuccessor: v1761 
falseSuccessor: v1763 
=== Usages ===
=== Predecessor ===
v3694 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3541 #trueSuccessor: v1761 #falseSuccessor: v1763  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v246|QWORD[.], v247|QWORD[.], v248|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v249|DWORD[.] = MOV [v2|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v248|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v246|QWORD[.],promise=v247|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v247|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v246|QWORD[.],promise=v247|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v246|QWORD[.] v247|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v249|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction v250|DWORD[.] = MOV [v0|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v248|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v246|QWORD[.],promise=v247|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v247|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v246|QWORD[.],promise=v247|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v246|QWORD[.] v247|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction v251|DWORD[.] = MOV [v250|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v248|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v246|QWORD[.],promise=v247|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v247|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v246|QWORD[.],promise=v247|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v246|QWORD[.] v247|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v251|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction CMP [v248|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B162" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3695 
=== Usages ===
=== Predecessor ===
v1764 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3695  <|@  <|@
f <@~|@floating>@ <|@
tid v3752 <|@
result [v249|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3691 
=== Succesors ===
=== Usages ===
a3695 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3691  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3695 <|@
result v252|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.Empty
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v3752 
=== Succesors ===
next: v1768 
=== Usages ===
a1343 
=== Predecessor ===
v1761 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3752 #next: v1768  <|@  <|@
f <@~|@floating>@ <|@
tid a1343 <|@
result v253|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a -
=== Inputs ===
value: a3695 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3695  <|@  <|@
f <@~|@floating>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a881 
y: a1343 
=== Succesors ===
=== Usages ===
v1768 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a881 y: a1343  <|@  <|@
f <@*|@fixed>@ <|@
tid v1768 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v619 
=== Succesors ===
trueSuccessor: v1765 
falseSuccessor: v1767 
=== Usages ===
=== Predecessor ===
a3695 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v619 #trueSuccessor: v1765 #falseSuccessor: v1767  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v252|DWORD[.] = MOV [v249|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v253|QWORD[.] = UNCOMPRESSPOINTER (input: v252|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v253|QWORD[.], y: v248|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B155 -> B156 falseDestination: B155 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" "B158" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j3325 
=== Usages ===
=== Predecessor ===
v1768 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j3325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3325 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3340 
=== Usages ===
v3842 v3843 
=== Predecessor ===
v1765 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3340  <|@  <|@
f <@~|@floating>@ <|@
tid v3842 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3325 
index: - 
=== Succesors ===
=== Usages ===
j3340 v3342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3325 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3340 <|@
result v254|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3842 
=== Succesors ===
next: j3341 
=== Usages ===
j3542 j3346 v3889 
=== Predecessor ===
j3325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3842 #next: j3341  <|@  <|@
f <@~|@floating>@ <|@
tid v3843 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3325 
index: - 
=== Succesors ===
=== Usages ===
j3341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3325 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3341 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3843 
=== Succesors ===
next: v3333 
=== Usages ===
v3330 
=== Predecessor ===
j3340 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3843 #next: v3333  <|@  <|@
f <@~|@floating>@ <|@
tid j3542 <|@
result v255|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3340 
y: j1866 
=== Succesors ===
=== Usages ===
v3330 v3342 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3340 y: j1866  <|@  <|@
f <@~|@floating>@ <|@
tid v3330 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@782e90
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3341 
y: j3542 
=== Succesors ===
=== Usages ===
v3333 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3341 y: j3542  <|@  <|@
f <@*|@fixed>@ <|@
tid v3333 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3330 
=== Succesors ===
trueSuccessor: v3331 
falseSuccessor: v3332 
=== Usages ===
=== Predecessor ===
j3341 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3330 #trueSuccessor: v3331 #falseSuccessor: v3332  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v254|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v255|QWORD = LEA [v254|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v255|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B156 -> B157 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4575888835103545851
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3336 
=== Usages ===
=== Predecessor ===
v3333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3336 <|@
result v256|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@39bb4106
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?870 
arguments: v2920 i3492 i1797 
=== Succesors ===
next: j3337 
=== Usages ===
j3337 
=== Predecessor ===
v3331 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?870 arguments: v2920 i3492 i1797 #next: j3337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3337 <|@
result v256|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3336 
=== Succesors ===
next: v3347 
=== Usages ===
j3346 
=== Predecessor ===
a3336 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3336 #next: v3347  <|@  <|@
f <@*|@fixed>@ <|@
tid v3347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3344 
=== Predecessor ===
j3337 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v248|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v246|QWORD[.],promise=v247|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v247|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v246|QWORD[.],promise=v247|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v246|QWORD[.] v247|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction v256|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v256|QWORD[.]] destination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4605500002653506857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3342 
=== Usages ===
=== Predecessor ===
v3333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3842 
value: j3542 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3339 
=== Usages ===
=== Predecessor ===
v3332 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3842 value: j3542 stateAfter: - lastLocationAccess: - #next: v3339  <|@  <|@
f <@~|@floating>@ <|@
tid v3889 <|@
result [v254|QWORD + 232] <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j3340 
index: - 
=== Succesors ===
=== Usages ===
v3339 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3340 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3889 
=== Succesors ===
next: v3345 
=== Usages ===
=== Predecessor ===
v3342 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3889 #next: v3345  <|@  <|@
f <@*|@fixed>@ <|@
tid v3345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3344 
=== Predecessor ===
v3339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v255|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v254|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v254|QWORD] destination: B158 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" "B157" 
    successors "B160" "B161" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3346 <|@
result v257|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3344 
values: j3340 j3337 
=== Succesors ===
=== Usages ===
v3794 v3844 j2422 a2420 v3845 v3890 v3891 v3892 v3893 v3894 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3344 values: j3340 j3337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3345 v3347 
=== Succesors ===
next: a2420 
=== Usages ===
j3346 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3345 v3347 #next: a2420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2420 <|@
result v258|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3346 
=== Succesors ===
next: a2423 
=== Usages ===
a2435 
=== Predecessor ===
v3344 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3346 #next: a2423  <|@  <|@
f <@~|@floating>@ <|@
tid j2422 <|@
result v259|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3346 
y: j1943 
=== Succesors ===
=== Usages ===
a2423 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3346 y: j1943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2423 <|@
result v260|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2422 
=== Succesors ===
next: j3356 
=== Usages ===
a2436 a2428 
=== Predecessor ===
a2420 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2422 #next: j3356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3356 <|@
result v261|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3853 
=== Succesors ===
next: v3357 
=== Usages ===
v3357 
=== Predecessor ===
a2423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3853 #next: v3357  <|@  <|@
f <@~|@floating>@ <|@
tid v3844 <|@
result [v257|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3346 
index: - 
=== Succesors ===
=== Usages ===
v3357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3346 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3844 
value: j3356 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3360 
=== Usages ===
=== Predecessor ===
j3356 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3844 value: j3356 stateAfter: - lastLocationAccess: - #next: v3360  <|@  <|@
f <@~|@floating>@ <|@
tid v3845 <|@
result [v257|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3346 
index: - 
=== Succesors ===
=== Usages ===
v3360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3346 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3360 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3845 
value: v3495 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3364 
=== Usages ===
=== Predecessor ===
v3357 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3845 value: v3495 stateAfter: - lastLocationAccess: - #next: v3364  <|@  <|@
f <@~|@floating>@ <|@
tid v3890 <|@
result [v257|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3346 
index: - 
=== Succesors ===
=== Usages ===
v3364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3346 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2426 <|@
result v262|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n [Lscala/Option;
=== Inputs ===
value: a877 
=== Succesors ===
=== Usages ===
v3364 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3364 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3890 
value: a2426 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3366 
=== Usages ===
=== Predecessor ===
v3360 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3890 value: a2426 stateAfter: - lastLocationAccess: - #next: v3366  <|@  <|@
f <@~|@floating>@ <|@
tid v3891 <|@
result [v257|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j3346 
index: - 
=== Succesors ===
=== Usages ===
v3366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3346 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2427 <|@
result v263|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Lcom/twitter/util/Promise$$anon$3;
=== Inputs ===
value: a920 
=== Succesors ===
=== Usages ===
v3366 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3891 
value: a2427 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3368 
=== Usages ===
=== Predecessor ===
v3364 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3891 value: a2427 stateAfter: - lastLocationAccess: - #next: v3368  <|@  <|@
f <@~|@floating>@ <|@
tid v3892 <|@
result [v257|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j3346 
index: - 
=== Succesors ===
=== Usages ===
v3368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3346 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2428 <|@
result v264|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2423 
=== Succesors ===
=== Usages ===
v3368 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3892 
value: a2428 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j3373 
=== Usages ===
=== Predecessor ===
v3366 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3892 value: a2428 stateAfter: - lastLocationAccess: - #next: j3373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3373 <|@
result v265|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3854 
=== Succesors ===
next: v3374 
=== Usages ===
v3374 
=== Predecessor ===
v3368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3854 #next: v3374  <|@  <|@
f <@~|@floating>@ <|@
tid v3893 <|@
result [v257|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3346 
index: - 
=== Succesors ===
=== Usages ===
v3374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3346 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3374 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3893 
value: j3373 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3377 
=== Usages ===
=== Predecessor ===
j3373 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3893 value: j3373 stateAfter: - lastLocationAccess: - #next: v3377  <|@  <|@
f <@~|@floating>@ <|@
tid v3894 <|@
result [v257|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j3346 
index: - 
=== Succesors ===
=== Usages ===
v3377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3346 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3377 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3894 
value: v3501 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2434 
=== Usages ===
=== Predecessor ===
v3374 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3894 value: v3501 stateAfter: - lastLocationAccess: - #next: v2434  <|@  <|@
f <@~|@floating>@ <|@
tid v3794 <|@
result [v257|QWORD[*] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j3346 
index: - 
=== Succesors ===
=== Usages ===
v2434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3346 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3794 
value: a2545 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2435 
=== Usages ===
=== Predecessor ===
v3377 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3794 value: a2545 stateAfter: - lastLocationAccess: - #next: a2435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2435 <|@
result v258|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2420 
=== Succesors ===
next: a2436 
=== Usages ===
a1355 ?794 
=== Predecessor ===
v2434 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2420 #next: a2436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2436 <|@
result v260|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2423 
=== Succesors ===
next: v2437 
=== Usages ===
?795 
=== Predecessor ===
a2435 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2423 #next: v2437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2437 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j3696 
=== Usages ===
=== Predecessor ===
a2436 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j3696  <|@  <|@
f <@~|@floating>@ <|@
tid v3754 <|@
result [v250|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3692 
=== Succesors ===
=== Usages ===
j3696 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3696 <|@
result v266|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$stateOff
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3754 
=== Succesors ===
next: i1357 
=== Usages ===
v3755 
=== Predecessor ===
v2437 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3754 #next: i1357  <|@  <|@
f <@~|@floating>@ <|@
tid v3755 <|@
result [v16|QWORD[.] + v266|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1881 
index: j3696 
=== Succesors ===
=== Usages ===
i1357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1881 index: j3696  <|@  <|@
f <@~|@floating>@ <|@
tid a1354 <|@
result v267|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/lang/Object;
=== Inputs ===
value: a881 
=== Succesors ===
=== Usages ===
i1357 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a881  <|@  <|@
f <@~|@floating>@ <|@
tid a1355 <|@
result v268|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2435 
=== Succesors ===
=== Usages ===
i1357 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1357 <|@
result v269|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ANY_LOCATION
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3755 
expectedValue: a1354 
newValue: a1355 
stateAfter: - 
=== Succesors ===
next: j3380 
=== Usages ===
?635 i636 
=== Predecessor ===
j3696 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v3755 expectedValue: a1354 newValue: a1355 stateAfter: - #next: j3380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3380 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1881 
=== Succesors ===
next: v3384 
=== Usages ===
j3381 
=== Predecessor ===
i1357 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1881 #next: v3384  <|@  <|@
f <@~|@floating>@ <|@
tid j3381 <|@
result v271|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$146/1524633570@1cec0275
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3380 
y: i2993 
=== Succesors ===
=== Usages ===
v3846 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3380 y: i2993  <|@  <|@
f <@~|@floating>@ <|@
tid v3846 <|@
result [v271|QWORD[*] + v32|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3381 
index: j2997 
=== Succesors ===
=== Usages ===
v3384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3381 index: j2997  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3384 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3846 
value: i2999 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1772 
=== Usages ===
=== Predecessor ===
j3380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3846 value: i2999 stateAfter: - lastLocationAccess: - #next: v1772  <|@  <|@
f <@~|@floating>@ <|@
tid i636 <|@
result v269|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$115/1567088237@42498438
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$116/1100921398@1fb26baa
inputBits: 32
resultBits: 1
stamp: i1
=== Inputs ===
value: i1357 
=== Succesors ===
=== Usages ===
i637 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1357  <|@  <|@
f <@~|@floating>@ <|@
tid i637 <|@
result v272|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1701538656@15c1f08d
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/999668238@1b27ce49
inputAlwaysPositive: false
inputBits: 1
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i636 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i636  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i637 
y: i153 
=== Succesors ===
=== Usages ===
v1772 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i637 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1772 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v344 
=== Succesors ===
trueSuccessor: v1771 
falseSuccessor: v1769 
=== Usages ===
=== Predecessor ===
v3384 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v344 #trueSuccessor: v1771 #falseSuccessor: v1769  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v257|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v258|QWORD[.] = MOVE v257|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v259|QWORD[*] = LEA [v257|QWORD[*] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v260|QWORD[.] = MOVE v259|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v261|QWORD = MOV [v44|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v257|QWORD[*]], y: v261|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v257|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v262|DWORD[.] = COMPRESSPOINTER (input: v246|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v257|QWORD[*] + 12], y: v262|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v263|DWORD[.] = COMPRESSPOINTER (input: v247|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v257|QWORD[*] + 16], y: v263|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v264|DWORD[.] = COMPRESSPOINTER (input: v260|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v257|QWORD[*] + 20], y: v264|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v265|QWORD = MOV [v43|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v257|QWORD[*] + 24], y: v265|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v257|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v257|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$10/1594373685@321311106] <|@ <|@
      nr   -1  <|@ instruction v266|QWORD = MOV [v250|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v267|DWORD[.] = COMPRESSPOINTER (input: v248|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v268|DWORD[.] = COMPRESSPOINTER (input: v258|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = MOVE v267|DWORD[.] moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = CAS (address: [v16|QWORD[.] + v266|QWORD * 1], cmpValue: rax|DWORD[.], newValue: v268|DWORD[.]) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v270|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr   -1  <|@ instruction v269|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: v270|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v271|QWORD[*] = SHR v16|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v271|QWORD[*] + v32|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v272|DWORD = AND v269|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v272|DWORD, y: v272|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B159 -> B160 falseDestination: B159 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1770 
=== Usages ===
=== Predecessor ===
v1772 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1770  <|@  <|@
tid ?639 <|@
d <@d|@=== Debug Properties ===
bci: 33
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 763
stackSize: 0
=== Inputs ===
outerFrameState: ?374 
values: a751 a788 - - - - - - - - - 
=== Succesors ===
=== Usages ===
?635 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?374 values: a751 a788 - - - - - - - - -  <|@  <|@
tid ?794 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a788 
materializedValue: a2435 
=== Succesors ===
=== Usages ===
?635 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a788 materializedValue: a2435  <|@  <|@
tid ?795 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a78 
materializedValue: a2436 
=== Succesors ===
=== Usages ===
?635 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a78 materializedValue: a2436  <|@  <|@
tid ?635 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Promise.cas(Object, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 453
stackSize: 1
=== Inputs ===
outerFrameState: ?639 
values: - - - i1357 
virtualObjectMappings: ?760 ?794 ?940 ?795 
=== Succesors ===
=== Usages ===
v1770 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?639 values: - - - i1357 virtualObjectMappings: ?760 ?794 ?940 ?795  <|@  <|@
f <@*|@fixed>@ <|@
tid v1770 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1358
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?635 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1771 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?635  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -347667 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v269|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: v16|QWORD[.] v258|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v247|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] v260|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
>@ <|@ instruction DEOPT info [bci:18, 33, 27, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1769 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v1772 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a920 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1769 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a920 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v247|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B164" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2719 
=== Usages ===
=== Predecessor ===
v1768 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2719  <|@  <|@
f <@~|@floating>@ <|@
tid i2720 <|@
result int[-344083|0xfffffffffffabfed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -344083
stableDimension: 0
stamp: i32 [-344083] ⇊00000000fffabfed ⇈00000000fffabfed
stampKind: i32
value: int[-344083|0xfffffffffffabfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2710 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2707 
=== Predecessor ===
v1767 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-344083|0xfffffffffffabfed]] destination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B164" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2717 
=== Usages ===
=== Predecessor ===
v1764 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2717  <|@  <|@
f <@~|@floating>@ <|@
tid i2718 <|@
result int[-342323|0xfffffffffffac6cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -342323
stableDimension: 0
stamp: i32 [-342323] ⇊00000000fffac6cd ⇈00000000fffac6cd
stampKind: i32
value: int[-342323|0xfffffffffffac6cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2710 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2707 
=== Predecessor ===
v1763 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-342323|0xfffffffffffac6cd]] destination: B163 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" "B162" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2710 <|@
result v273|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-346379 - -342323] ⇊00000000fffa80c5 ⇈00000000fffafffd
valueDescription: i32
=== Inputs ===
merge: v2707 
values: i2718 i2720 
=== Succesors ===
=== Usages ===
v2712 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2707 values: i2718 i2720  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2707 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2717 v2719 
=== Succesors ===
next: v2712 
=== Usages ===
i2710 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2717 v2719 #next: v2712  <|@  <|@
f <@*|@fixed>@ <|@
tid v2712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?870 
actionAndReason: i2710 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2707 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?870 actionAndReason: i2710 speculation: a2581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v273|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v273|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v248|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v246|QWORD[.],promise=v247|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v247|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v246|QWORD[.],promise=v247|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v246|QWORD[.] v247|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:4, 27, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B151" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4592384876561998876
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2312 
=== Usages ===
=== Predecessor ===
v2310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2312  <|@  <|@
f <@~|@floating>@ <|@
tid i2311 <|@
result v274|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i32
=== Inputs ===
x: i2297 
y: i1797 
=== Succesors ===
=== Usages ===
i2297 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2297 y: i1797  <|@  <|@
f <@*|@fixed>@ <|@
tid v2312 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2296 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2308 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2296  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v274|DWORD = INC v241|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v274|DWORD] destination: B165 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B167" 
    xhandlers
    flags 
    probability 4595601733539563714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2296 
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v2301 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2296 #next: v875  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v872 
=== Predecessor ===
v2300 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v237|QWORD[.], v236|QWORD[.], v205|QWORD[.]] destination: B166 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B137" "B166" 
    successors "B168" "B176" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a876 <|@
result v275|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Lscala/Option;
valueDescription: a -
=== Inputs ===
merge: v872 
values: a575 a1317 
=== Succesors ===
=== Usages ===
a2471 ?883 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v872 values: a575 a1317  <|@  <|@
f <@~|@floating>@ <|@
tid a1046 <|@
result v276|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v872 
values: a1333 a1323 
=== Succesors ===
=== Usages ===
v3758 v3847 ?874 v3756 a1382 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v872 values: a1333 a1323  <|@  <|@
f <@~|@floating>@ <|@
tid a924 <|@
result v277|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/twitter/util/Promise$$anon$3;
valueDescription: a -
=== Inputs ===
merge: v872 
values: a917 a919 
=== Succesors ===
=== Usages ===
a2472 v746 ?883 ?941 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v872 values: a917 a919  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v873 v875 
=== Succesors ===
next: v3697 
=== Usages ===
a876 a1046 a924 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v873 v875 #next: v3697  <|@  <|@
f <@~|@floating>@ <|@
tid v3847 <|@
result [v276|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1046 
index: - 
=== Succesors ===
=== Usages ===
v3697 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1046 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3697 <|@
result v278|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3847 
=== Succesors ===
next: v1776 
=== Usages ===
v3550 
=== Predecessor ===
v872 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3847 #next: v1776  <|@  <|@
f <@~|@floating>@ <|@
tid v3550 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v3697 
y: v3476 
=== Succesors ===
=== Usages ===
v1776 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v3697 y: v3476  <|@  <|@
tid ?883 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a788 
values: a876 a924 a78 
=== Succesors ===
=== Usages ===
?874 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a788 values: a876 a924 a78  <|@  <|@
tid ?941 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a780 
materializedValue: a924 
=== Succesors ===
=== Usages ===
?874 ?610 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a780 materializedValue: a924  <|@  <|@
tid ?874 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 761
stackSize: 1
=== Inputs ===
outerFrameState: ?374 
values: a751 a788 - - - - - - - - - a1046 
virtualObjectMappings: ?760 ?883 ?941 ?782 
=== Succesors ===
=== Usages ===
v2726 a3401 a3699 a3702 v3917 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?374 values: a751 a788 - - - - - - - - - a1046 virtualObjectMappings: ?760 ?883 ?941 ?782  <|@  <|@
f <@*|@fixed>@ <|@
tid v1776 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3550 
=== Succesors ===
trueSuccessor: v1773 
falseSuccessor: v1775 
=== Usages ===
=== Predecessor ===
v3697 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3550 #trueSuccessor: v1773 #falseSuccessor: v1775  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v275|QWORD[.], v276|QWORD[.], v277|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v278|DWORD = MOV [v276|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v278|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B167 -> B168 falseDestination: B167 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B169" "B175" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3698 
=== Usages ===
=== Predecessor ===
v1776 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3698  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3698 <|@
result v279|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$WaitQueue$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3707 
=== Succesors ===
next: a3699 
=== Usages ===
v3757 
=== Predecessor ===
v1773 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3707 #next: a3699  <|@  <|@
f <@~|@floating>@ <|@
tid v3757 <|@
result [v279|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3698 
=== Succesors ===
=== Usages ===
a3699 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3698  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3699 <|@
result v280|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$WaitQueue$.Empty
nullCheck: true
stamp: n -
=== Inputs ===
stateBefore: ?874 
guard: - 
address: v3757 
=== Succesors ===
next: a3700 
=== Usages ===
v1422 
=== Predecessor ===
a3698 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?874 guard: - address: v3757 #next: a3700  <|@  <|@
f <@~|@floating>@ <|@
tid v3756 <|@
result [v276|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1046 
index: - 
=== Succesors ===
=== Usages ===
a3700 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1046 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3700 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$Transforming.waitq
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v3756 
=== Succesors ===
next: v1784 
=== Usages ===
v1422 
=== Predecessor ===
a3699 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3756 #next: v1784  <|@  <|@
f <@~|@floating>@ <|@
tid v1422 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3699 
y: a3700 
=== Succesors ===
=== Usages ===
v1784 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a3699 y: a3700  <|@  <|@
f <@*|@fixed>@ <|@
tid v1784 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1422 
=== Succesors ===
trueSuccessor: v1781 
falseSuccessor: v1783 
=== Usages ===
=== Predecessor ===
a3700 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1422 #trueSuccessor: v1781 #falseSuccessor: v1783  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v279|DWORD[.] = MOV [v2|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v276|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v275|QWORD[.],promise=v277|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v277|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v275|QWORD[.],promise=v277|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v275|QWORD[.] v277|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction v280|DWORD[.] = MOV [v279|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v280|DWORD[.], y: [v276|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B170" "B171" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1781 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3701 
=== Usages ===
=== Predecessor ===
v1784 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3701 <|@
result v281|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.MODULE$
nullCheck: false
stamp: n# Lcom/twitter/util/Promise$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3706 
=== Succesors ===
next: a3702 
=== Usages ===
v3760 v3759 
=== Predecessor ===
v1781 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3706 #next: a3702  <|@  <|@
f <@~|@floating>@ <|@
tid v3759 <|@
result [v281|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3701 
=== Succesors ===
=== Usages ===
a3702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3702 <|@
result v282|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$unsafe
nullCheck: true
stamp: n# Lsun/misc/Unsafe;
=== Inputs ===
stateBefore: ?874 
guard: - 
address: v3759 
=== Succesors ===
next: v3917 
=== Usages ===
v3917 
=== Predecessor ===
a3701 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?874 guard: - address: v3759 #next: v3917  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?874 
object: a3702 
=== Succesors ===
next: j3390 
=== Usages ===
=== Predecessor ===
a3702 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?874 object: a3702 #next: j3390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3390 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j3405 
=== Usages ===
v3848 v3849 
=== Predecessor ===
v3917 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j3405  <|@  <|@
f <@~|@floating>@ <|@
tid v3848 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j3390 
index: - 
=== Succesors ===
=== Usages ===
j3405 v3407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3390 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3405 <|@
result v283|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3848 
=== Succesors ===
next: j3406 
=== Usages ===
j3551 j3411 v3895 
=== Predecessor ===
j3390 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3848 #next: j3406  <|@  <|@
f <@~|@floating>@ <|@
tid v3849 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j3390 
index: - 
=== Succesors ===
=== Usages ===
j3406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3390 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3406 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3849 
=== Succesors ===
next: v3398 
=== Usages ===
v3395 
=== Predecessor ===
j3405 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3849 #next: v3398  <|@  <|@
f <@~|@floating>@ <|@
tid j3551 <|@
result v284|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3405 
y: j3513 
=== Succesors ===
=== Usages ===
v3395 v3407 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3405 y: j3513  <|@  <|@
f <@~|@floating>@ <|@
tid v3395 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@782e90
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3406 
y: j3551 
=== Succesors ===
=== Usages ===
v3398 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j3406 y: j3551  <|@  <|@
f <@*|@fixed>@ <|@
tid v3398 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@144c7be2 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v3395 
=== Succesors ===
trueSuccessor: v3396 
falseSuccessor: v3397 
=== Usages ===
=== Predecessor ===
j3406 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3395 #trueSuccessor: v3396 #falseSuccessor: v3397  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v281|DWORD[.] = MOV [v0|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v276|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v275|QWORD[.],promise=v277|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v277|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v275|QWORD[.],promise=v277|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v275|QWORD[.] v277|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction v282|DWORD[.] = MOV [v281|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v276|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v275|QWORD[.],promise=v277|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v277|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v275|QWORD[.],promise=v277|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v275|QWORD[.] v277|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v282|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction v283|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v284|QWORD = LEA [v283|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v284|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B169 -> B170 falseDestination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4565877976503276579
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a3401 
=== Usages ===
=== Predecessor ===
v3398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3401  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3401 <|@
result v285|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@39bb4106
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?874 
arguments: v2920 i3516 i1797 
=== Succesors ===
next: j3402 
=== Usages ===
j3402 
=== Predecessor ===
v3396 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?874 arguments: v2920 i3516 i1797 #next: j3402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3402 <|@
result v285|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3401 
=== Succesors ===
next: v3412 
=== Usages ===
j3411 
=== Predecessor ===
a3401 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3401 #next: v3412  <|@  <|@
f <@*|@fixed>@ <|@
tid v3412 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3409 
=== Predecessor ===
j3402 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v276|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v275|QWORD[.],promise=v277|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v277|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v275|QWORD[.],promise=v277|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v275|QWORD[.] v277|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction v285|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v285|QWORD[.]] destination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4595537396906387982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3407 
=== Usages ===
=== Predecessor ===
v3398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3407 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3848 
value: j3551 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3404 
=== Usages ===
=== Predecessor ===
v3397 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3848 value: j3551 stateAfter: - lastLocationAccess: - #next: v3404  <|@  <|@
f <@~|@floating>@ <|@
tid v3895 <|@
result [v283|QWORD + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j3405 
index: - 
=== Succesors ===
=== Usages ===
v3404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3895 
=== Succesors ===
next: v3410 
=== Usages ===
=== Predecessor ===
v3407 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3895 #next: v3410  <|@  <|@
f <@*|@fixed>@ <|@
tid v3410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3409 
=== Predecessor ===
v3404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v284|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v283|QWORD + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v283|QWORD] destination: B171 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" "B170" 
    successors "B173" "B174" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3411 <|@
result v286|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3409 
values: j3405 j3402 
=== Succesors ===
=== Usages ===
v3795 v3851 j2459 j2462 a2457 v3852 v3902 v3896 v3897 v3898 v3899 v3900 v3901 v3903 v3904 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3409 values: j3405 j3402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3410 v3412 
=== Succesors ===
next: a2457 
=== Usages ===
j3411 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3410 v3412 #next: a2457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2457 <|@
result v287|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j3411 
=== Succesors ===
next: a2460 
=== Usages ===
a2479 
=== Predecessor ===
v3409 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j3411 #next: a2460  <|@  <|@
f <@~|@floating>@ <|@
tid j2459 <|@
result v288|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3411 
y: j1943 
=== Succesors ===
=== Usages ===
a2460 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3411 y: j1943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2460 <|@
result v289|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2459 
=== Succesors ===
next: a2463 
=== Usages ===
a2480 a2466 
=== Predecessor ===
a2457 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2459 #next: a2463  <|@  <|@
f <@~|@floating>@ <|@
tid j2462 <|@
result v290|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/911023534@7e59b445
stamp: i64
=== Inputs ===
x: j3411 
y: j1810 
=== Succesors ===
=== Usages ===
a2463 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3411 y: j1810  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2463 <|@
result v291|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2462 
=== Succesors ===
next: j3421 
=== Usages ===
a2481 a2473 
=== Predecessor ===
a2460 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2462 #next: j3421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3421 <|@
result v292|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3850 
=== Succesors ===
next: v3422 
=== Usages ===
v3422 
=== Predecessor ===
a2463 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3850 #next: v3422  <|@  <|@
f <@~|@floating>@ <|@
tid v3851 <|@
result [v286|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3422 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3851 
value: j3421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3425 
=== Usages ===
=== Predecessor ===
j3421 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3851 value: j3421 stateAfter: - lastLocationAccess: - #next: v3425  <|@  <|@
f <@~|@floating>@ <|@
tid v3852 <|@
result [v286|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3425 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3852 
value: v3476 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3429 
=== Usages ===
=== Predecessor ===
v3422 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3852 value: v3476 stateAfter: - lastLocationAccess: - #next: v3429  <|@  <|@
f <@~|@floating>@ <|@
tid v3896 <|@
result [v286|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3429 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2466 <|@
result v293|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2460 
=== Succesors ===
=== Usages ===
v3429 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2460  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3429 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3896 
value: a2466 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a3703 
=== Usages ===
=== Predecessor ===
v3425 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3896 value: a2466 stateAfter: - lastLocationAccess: - #next: a3703  <|@  <|@
f <@~|@floating>@ <|@
tid v3758 <|@
result [v276|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1046 
index: - 
=== Succesors ===
=== Usages ===
a3703 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1046 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3703 <|@
result v294|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$Transforming.other
nullCheck: false
stamp: n Lcom/twitter/util/Future;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3758 
=== Succesors ===
next: v3431 
=== Usages ===
v3431 
=== Predecessor ===
v3429 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3758 #next: v3431  <|@  <|@
f <@~|@floating>@ <|@
tid v3897 <|@
result [v286|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3431 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3431 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3897 
value: a3703 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j3436 
=== Usages ===
=== Predecessor ===
a3703 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3897 value: a3703 stateAfter: - lastLocationAccess: - #next: j3436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3436 <|@
result v295|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3853 
=== Succesors ===
next: v3437 
=== Usages ===
v3437 
=== Predecessor ===
v3431 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3853 #next: v3437  <|@  <|@
f <@~|@floating>@ <|@
tid v3898 <|@
result [v286|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3437 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3898 
value: j3436 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3440 
=== Usages ===
=== Predecessor ===
j3436 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3898 value: j3436 stateAfter: - lastLocationAccess: - #next: v3440  <|@  <|@
f <@~|@floating>@ <|@
tid v3899 <|@
result [v286|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3440 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3899 
value: v3495 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3444 
=== Usages ===
=== Predecessor ===
v3437 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3899 value: v3495 stateAfter: - lastLocationAccess: - #next: v3444  <|@  <|@
f <@~|@floating>@ <|@
tid v3900 <|@
result [v286|QWORD[*] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2471 <|@
result v296|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n [Lscala/Option;
=== Inputs ===
value: a876 
=== Succesors ===
=== Usages ===
v3444 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a876  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3444 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3900 
value: a2471 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3446 
=== Usages ===
=== Predecessor ===
v3440 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3900 value: a2471 stateAfter: - lastLocationAccess: - #next: v3446  <|@  <|@
f <@~|@floating>@ <|@
tid v3901 <|@
result [v286|QWORD[*] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2472 <|@
result v297|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Lcom/twitter/util/Promise$$anon$3;
=== Inputs ===
value: a924 
=== Succesors ===
=== Usages ===
v3446 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a924  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3446 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3901 
value: a2472 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3448 
=== Usages ===
=== Predecessor ===
v3444 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3901 value: a2472 stateAfter: - lastLocationAccess: - #next: v3448  <|@  <|@
f <@~|@floating>@ <|@
tid v3902 <|@
result [v286|QWORD[*] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2473 <|@
result v298|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2463 
=== Succesors ===
=== Usages ===
v3448 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3448 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3902 
value: a2473 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j3453 
=== Usages ===
=== Predecessor ===
v3446 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3902 value: a2473 stateAfter: - lastLocationAccess: - #next: j3453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3453 <|@
result v299|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3854 
=== Succesors ===
next: v3454 
=== Usages ===
v3454 
=== Predecessor ===
v3448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3854 #next: v3454  <|@  <|@
f <@~|@floating>@ <|@
tid v3903 <|@
result [v286|QWORD[*] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3454 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3903 
value: j3453 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3457 
=== Usages ===
=== Predecessor ===
j3453 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3903 value: j3453 stateAfter: - lastLocationAccess: - #next: v3457  <|@  <|@
f <@~|@floating>@ <|@
tid v3904 <|@
result [v286|QWORD[*] + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v3457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3457 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3904 
value: v3501 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2478 
=== Usages ===
=== Predecessor ===
v3454 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3904 value: v3501 stateAfter: - lastLocationAccess: - #next: v2478  <|@  <|@
f <@~|@floating>@ <|@
tid v3795 <|@
result [v286|QWORD[*] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: j3411 
index: - 
=== Succesors ===
=== Usages ===
v2478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3795 
value: a2545 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2479 
=== Usages ===
=== Predecessor ===
v3457 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3795 value: a2545 stateAfter: - lastLocationAccess: - #next: a2479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2479 <|@
result v287|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2457 
=== Succesors ===
next: a2480 
=== Usages ===
a1383 
=== Predecessor ===
v2478 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2457 #next: a2480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2480 <|@
result v289|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2460 
=== Succesors ===
next: a2481 
=== Usages ===
?801 
=== Predecessor ===
a2479 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2460 #next: a2481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2481 <|@
result v291|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a2463 
=== Succesors ===
next: v2482 
=== Usages ===
?802 
=== Predecessor ===
a2480 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2463 #next: v2482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2482 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j3704 
=== Usages ===
=== Predecessor ===
a2481 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j3704  <|@  <|@
f <@~|@floating>@ <|@
tid v3760 <|@
result [v281|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3701 
=== Succesors ===
=== Usages ===
j3704 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3704 <|@
result v300|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Promise$.com$twitter$util$Promise$$stateOff
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3760 
=== Succesors ===
next: i1385 
=== Usages ===
v3761 
=== Predecessor ===
v2482 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3760 #next: i1385  <|@  <|@
f <@~|@floating>@ <|@
tid v3761 <|@
result [v16|QWORD[.] + v300|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1881 
index: j3704 
=== Succesors ===
=== Usages ===
i1385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1881 index: j3704  <|@  <|@
f <@~|@floating>@ <|@
tid a1382 <|@
result v301|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/lang/Object;
=== Inputs ===
value: a1046 
=== Succesors ===
=== Usages ===
i1385 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1046  <|@  <|@
f <@~|@floating>@ <|@
tid a1383 <|@
result v302|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a2479 
=== Succesors ===
=== Usages ===
i1385 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1385 <|@
result v303|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ANY_LOCATION
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3761 
expectedValue: a1382 
newValue: a1383 
stateAfter: - 
=== Succesors ===
next: j3460 
=== Usages ===
?610 i611 
=== Predecessor ===
j3704 >@ <|@
instruction <@LogicCompareAndSwap|@org.graalvm.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v3761 expectedValue: a1382 newValue: a1383 stateAfter: - #next: j3460  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3460 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1881 
=== Succesors ===
next: v3464 
=== Usages ===
j3461 
=== Predecessor ===
i1385 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1881 #next: v3464  <|@  <|@
f <@~|@floating>@ <|@
tid j3461 <|@
result v305|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$146/1524633570@1cec0275
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j3460 
y: i2993 
=== Succesors ===
=== Usages ===
v3855 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3460 y: i2993  <|@  <|@
f <@~|@floating>@ <|@
tid v3855 <|@
result [v305|QWORD[*] + v32|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3461 
index: j2997 
=== Succesors ===
=== Usages ===
v3464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3461 index: j2997  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3464 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3855 
value: i2999 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1796 
=== Usages ===
=== Predecessor ===
j3460 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3855 value: i2999 stateAfter: - lastLocationAccess: - #next: v1796  <|@  <|@
f <@~|@floating>@ <|@
tid i611 <|@
result v303|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$115/1567088237@42498438
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$116/1100921398@1fb26baa
inputBits: 32
resultBits: 1
stamp: i1
=== Inputs ===
value: i1385 
=== Succesors ===
=== Usages ===
i612 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1385  <|@  <|@
f <@~|@floating>@ <|@
tid i612 <|@
result v306|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1701538656@15c1f08d
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/999668238@1b27ce49
inputAlwaysPositive: false
inputBits: 1
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i611 
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i611  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i612 
y: i153 
=== Succesors ===
=== Usages ===
v1796 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i612 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1796 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v1795 
falseSuccessor: v1793 
=== Usages ===
=== Predecessor ===
v3464 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v1795 #falseSuccessor: v1793  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v286|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v287|QWORD[.] = MOVE v286|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v288|QWORD[*] = LEA [v286|QWORD[*] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v289|QWORD[.] = MOVE v288|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v290|QWORD[*] = LEA [v286|QWORD[*] + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v291|QWORD[.] = MOVE v290|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v292|QWORD = MOV [v23|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v286|QWORD[*]], y: v292|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v286|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v293|DWORD[.] = COMPRESSPOINTER (input: v289|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v286|QWORD[*] + 12], y: v293|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v294|DWORD[.] = MOV [v276|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v286|QWORD[*] + 16], y: v294|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v295|QWORD = MOV [v44|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v286|QWORD[*] + 24], y: v295|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v286|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v296|DWORD[.] = COMPRESSPOINTER (input: v275|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v286|QWORD[*] + 36], y: v296|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v297|DWORD[.] = COMPRESSPOINTER (input: v277|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v286|QWORD[*] + 40], y: v297|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v298|DWORD[.] = COMPRESSPOINTER (input: v291|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v286|QWORD[*] + 44], y: v298|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v299|QWORD = MOV [v43|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v286|QWORD[*] + 48], y: v299|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v286|QWORD[*] + 56] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v286|QWORD[*] + 60] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$10/1594373685@321311106] <|@ <|@
      nr   -1  <|@ instruction v300|QWORD = MOV [v281|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v301|DWORD[.] = COMPRESSPOINTER (input: v276|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v302|DWORD[.] = COMPRESSPOINTER (input: v287|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = MOVE v301|DWORD[.] moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = CAS (address: [v16|QWORD[.] + v300|QWORD * 1], cmpValue: rax|DWORD[.], newValue: v302|DWORD[.]) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v304|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr   -1  <|@ instruction v303|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: v304|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v305|QWORD[*] = SHR v16|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v305|QWORD[*] + v32|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v306|DWORD = AND v303|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v306|DWORD, y: v306|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1795 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1794 
=== Usages ===
=== Predecessor ===
v1796 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1794  <|@  <|@
tid ?614 <|@
d <@d|@=== Debug Properties ===
bci: 159
code: ResolvedJavaMethodBytecode<Promise.continue(Promise$K)>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 769
stackSize: 0
=== Inputs ===
outerFrameState: ?374 
values: a751 a788 - - - - - - - - - 
=== Succesors ===
=== Usages ===
?610 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?374 values: a751 a788 - - - - - - - - -  <|@  <|@
tid ?801 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a788 
materializedValue: a2480 
=== Succesors ===
=== Usages ===
?610 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a788 materializedValue: a2480  <|@  <|@
tid ?802 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a78 
materializedValue: a2481 
=== Succesors ===
=== Usages ===
?610 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a78 materializedValue: a2481  <|@  <|@
tid ?610 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Promise.cas(Object, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Promise.scala
sourceLine: 453
stackSize: 1
=== Inputs ===
outerFrameState: ?614 
values: - - - i1385 
virtualObjectMappings: ?760 ?801 ?941 ?802 
=== Succesors ===
=== Usages ===
v1794 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?614 values: - - - i1385 virtualObjectMappings: ?760 ?801 ?941 ?802  <|@  <|@
f <@*|@fixed>@ <|@
tid v1794 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1386
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?610 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1795 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?610  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -354835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v303|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: v16|QWORD[.] v289|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v277|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] v291|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
>@ <|@ instruction DEOPT info [bci:18, 159, 27, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1793 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v1796 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v746  <|@  <|@
f <@*|@fixed>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a924 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1793 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a924 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v277|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2731 
=== Usages ===
=== Predecessor ===
v1784 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2731  <|@  <|@
f <@~|@floating>@ <|@
tid i2732 <|@
result int[-350483|0xfffffffffffaa6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -350483
stableDimension: 0
stamp: i32 [-350483] ⇊00000000fffaa6ed ⇈00000000fffaa6ed
stampKind: i32
value: int[-350483|0xfffffffffffaa6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2724 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2721 
=== Predecessor ===
v1783 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-350483|0xfffffffffffaa6ed]] destination: B175 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2727 
=== Usages ===
=== Predecessor ===
v1776 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2727  <|@  <|@
f <@~|@floating>@ <|@
tid i2728 <|@
result int[-347923|0xfffffffffffab0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -347923
stableDimension: 0
stamp: i32 [-347923] ⇊00000000fffab0ed ⇈00000000fffab0ed
stampKind: i32
value: int[-347923|0xfffffffffffab0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2724 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2721 
=== Predecessor ===
v1775 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-347923|0xfffffffffffab0ed]] destination: B176 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" "B175" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2724 <|@
result v307|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-353547 - -347923] ⇊00000000fffa80e5 ⇈00000000fffabefd
valueDescription: i32
=== Inputs ===
merge: v2721 
values: i2728 i2732 
=== Succesors ===
=== Usages ===
v2726 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2721 values: i2728 i2732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2727 v2731 
=== Succesors ===
next: v2726 
=== Usages ===
i2724 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2727 v2731 #next: v2726  <|@  <|@
f <@*|@fixed>@ <|@
tid v2726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?874 
actionAndReason: i2724 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2721 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?874 actionAndReason: i2724 speculation: a2581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v307|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v307|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v276|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v275|QWORD[.],promise=v277|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v277|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v275|QWORD[.],promise=v277|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v275|QWORD[.] v277|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:4, 27, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2895 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1742 
=== Usages ===
=== Predecessor ===
v3595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1742  <|@  <|@
tid ?827 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 1
=== Inputs ===
outerFrameState: ?562 
values: - - a1043 
virtualObjectMappings: ?782 ?943 ?760 ?789 
=== Succesors ===
=== Usages ===
v1742 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?562 values: - - a1043 virtualObjectMappings: ?782 ?943 ?760 ?789  <|@  <|@
f <@*|@fixed>@ <|@
tid v1742 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1321
reason: ClassCastException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?827 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2895 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?827  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -338211 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: v232|QWORD[.] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: v202|QWORD[.] - v213|QWORD[.] - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: v16|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} v205|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:5, 16, 4, 19, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1739 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2743 
=== Usages ===
=== Predecessor ===
v1740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2743  <|@  <|@
f <@~|@floating>@ <|@
tid i2744 <|@
result int[-336403|0xfffffffffffadded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -336403
stableDimension: 0
stamp: i32 [-336403] ⇊00000000fffadded ⇈00000000fffadded
stampKind: i32
value: int[-336403|0xfffffffffffadded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2738 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2735 
=== Predecessor ===
v1739 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-336403|0xfffffffffffadded]] destination: B179 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2741 
=== Usages ===
=== Predecessor ===
v1728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2741  <|@  <|@
f <@~|@floating>@ <|@
tid i2742 <|@
result int[-333339|0xfffffffffffae9e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -333339
stableDimension: 0
stamp: i32 [-333339] ⇊00000000fffae9e5 ⇈00000000fffae9e5
stampKind: i32
value: int[-333339|0xfffffffffffae9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2738 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2741 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2735 
=== Predecessor ===
v1727 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-333339|0xfffffffffffae9e5]] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" "B179" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2738 <|@
result v308|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-336403 - -331787] ⇊00000000fffac9e5 ⇈00000000fffafffd
valueDescription: i32
=== Inputs ===
merge: v2735 
values: i2742 i2744 
=== Succesors ===
=== Usages ===
v2740 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2735 values: i2742 i2744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2735 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2741 v2743 
=== Succesors ===
next: v2740 
=== Usages ===
i2738 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2741 v2743 #next: v2740  <|@  <|@
f <@*|@fixed>@ <|@
tid v2740 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?905 
actionAndReason: i2738 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2735 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?905 actionAndReason: i2738 speculation: a2581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v308|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v308|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v201|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v205|QWORD[.] v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v205|QWORD[.] 
locals: v203|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2763 
=== Usages ===
=== Predecessor ===
v1720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2763  <|@  <|@
f <@~|@floating>@ <|@
tid i2764 <|@
result int[-329267|0xfffffffffffaf9cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -329267
stableDimension: 0
stamp: i32 [-329267] ⇊00000000fffaf9cd ⇈00000000fffaf9cd
stampKind: i32
value: int[-329267|0xfffffffffffaf9cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2753 
=== Predecessor ===
v1719 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-329267|0xfffffffffffaf9cd]] destination: B182 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B115" "B182" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2756 <|@
result v309|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-329267 - -326675] ⇊00000000fffa00c5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v2753 
values: i2755 i2764 
=== Succesors ===
=== Usages ===
v2758 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2753 values: i2755 i2764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2753 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2754 v2763 
=== Succesors ===
next: v2758 
=== Usages ===
i2756 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2754 v2763 #next: v2758  <|@  <|@
f <@*|@fixed>@ <|@
tid v2758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1003 
actionAndReason: i2756 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2753 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1003 actionAndReason: i2756 speculation: a2581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v309|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v309|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v192|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v185|QWORD[.] v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v185|QWORD[.] 
locals: v177|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2750 
=== Usages ===
=== Predecessor ===
v1704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2750  <|@  <|@
f <@~|@floating>@ <|@
tid i2752 <|@
result int[-323123|0xfffffffffffb11cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -323123
stableDimension: 0
stamp: i32 [-323123] ⇊00000000fffb11cd ⇈00000000fffb11cd
stampKind: i32
value: int[-323123|0xfffffffffffb11cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2750 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?974 
actionAndReason: i2752 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1703 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?974 actionAndReason: i2752 speculation: a2581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -323123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: v173|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=v173|DWORD[.]} v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v173|DWORD[.]} 
locals: v177|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=v173|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v173|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B187" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2703 
=== Usages ===
=== Predecessor ===
v1660 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2703  <|@  <|@
f <@~|@floating>@ <|@
tid i2704 <|@
result int[-314131|0xfffffffffffb34ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -314131
stableDimension: 0
stamp: i32 [-314131] ⇊00000000fffb34ed ⇈00000000fffb34ed
stampKind: i32
value: int[-314131|0xfffffffffffb34ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2696 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2693 
=== Predecessor ===
v1659 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-314131|0xfffffffffffb34ed]] destination: B185 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B187" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2699 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2699  <|@  <|@
f <@~|@floating>@ <|@
tid i2700 <|@
result int[-311571|0xfffffffffffb3eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -311571
stableDimension: 0
stamp: i32 [-311571] ⇊00000000fffb3eed ⇈00000000fffb3eed
stampKind: i32
value: int[-311571|0xfffffffffffb3eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2696 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2693 
=== Predecessor ===
v1651 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-311571|0xfffffffffffb3eed]] destination: B186 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" "B185" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2696 <|@
result v310|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-317195 - -311571] ⇊00000000fffb20e5 ⇈00000000fffb3efd
valueDescription: i32
=== Inputs ===
merge: v2693 
values: i2700 i2704 
=== Succesors ===
=== Usages ===
v2698 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2693 values: i2700 i2704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2699 v2703 
=== Succesors ===
next: v2698 
=== Usages ===
i2696 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2699 v2703 #next: v2698  <|@  <|@
f <@*|@fixed>@ <|@
tid v2698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?843 
actionAndReason: i2696 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2693 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?843 actionAndReason: i2696 speculation: a2581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v310|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v310|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v142|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v141|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v141|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v141|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:4, 27, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2825 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1570 
=== Usages ===
=== Predecessor ===
v3579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1570  <|@  <|@
tid ?812 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 1
=== Inputs ===
outerFrameState: ?428 
values: - - a1036 
virtualObjectMappings: ?754 ?760 ?761 ?763 
=== Succesors ===
=== Usages ===
v1570 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?428 values: - - a1036 virtualObjectMappings: ?754 ?760 ?761 ?763  <|@  <|@
f <@*|@fixed>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1132
reason: ClassCastException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?812 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2825 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?812  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -289827 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: v69|QWORD[.] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: v41|QWORD[.] - v54|QWORD[.] - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: v20|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:5, 16, 4, 19, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B192" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2629 
=== Usages ===
=== Predecessor ===
v1568 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2629  <|@  <|@
f <@~|@floating>@ <|@
tid i2630 <|@
result int[-287763|0xfffffffffffb9bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -287763
stableDimension: 0
stamp: i32 [-287763] ⇊00000000fffb9bed ⇈00000000fffb9bed
stampKind: i32
value: int[-287763|0xfffffffffffb9bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2616 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2613 
=== Predecessor ===
v1567 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-287763|0xfffffffffffb9bed]] destination: B189 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B192" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2627 
=== Usages ===
=== Predecessor ===
v1556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2627  <|@  <|@
f <@~|@floating>@ <|@
tid i2628 <|@
result int[-284443|0xfffffffffffba8e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -284443
stableDimension: 0
stamp: i32 [-284443] ⇊00000000fffba8e5 ⇈00000000fffba8e5
stampKind: i32
value: int[-284443|0xfffffffffffba8e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2616 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2627 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2613 
=== Predecessor ===
v1555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-284443|0xfffffffffffba8e5]] destination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B192" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2623 
=== Usages ===
=== Predecessor ===
v1548 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2623  <|@  <|@
f <@~|@floating>@ <|@
tid i2624 <|@
result int[-279859|0xfffffffffffbbacd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -279859
stableDimension: 0
stamp: i32 [-279859] ⇊00000000fffbbacd ⇈00000000fffbbacd
stampKind: i32
value: int[-279859|0xfffffffffffbbacd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2616 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2613 
=== Predecessor ===
v1547 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-279859|0xfffffffffffbbacd]] destination: B191 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B18" "B191" "B190" "B189" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2616 <|@
result v311|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-287763 - -276499] ⇊00000000fffb80c5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v2613 
values: i2615 i2624 i2628 i2630 
=== Succesors ===
=== Usages ===
v2618 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2613 values: i2615 i2624 i2628 i2630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2614 v2623 v2627 v2629 
=== Succesors ===
next: v2618 
=== Usages ===
i2616 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2614 v2623 v2627 v2629 #next: v2618  <|@  <|@
f <@*|@fixed>@ <|@
tid v2618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?407 
actionAndReason: i2616 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2613 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?407 actionAndReason: i2616 speculation: a2581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v311|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v311|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v29|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v16|QWORD[.] v20|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v16|QWORD[.] 
locals: v1|DWORD[.] v20|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2594 
=== Usages ===
=== Predecessor ===
v1532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2594  <|@  <|@
f <@~|@floating>@ <|@
tid i2596 <|@
result int[-273459|0xfffffffffffbd3cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -273459
stableDimension: 0
stamp: i32 [-273459] ⇊00000000fffbd3cd ⇈00000000fffbd3cd
stampKind: i32
value: int[-273459|0xfffffffffffbd3cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2594 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?158 
actionAndReason: i2596 
speculation: a2581 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1531 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?158 actionAndReason: i2596 speculation: a2581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -273459 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: v5|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=v5|DWORD[.]} vobject:Promise:1{state=v5|DWORD[.]} - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v5|DWORD[.]} 
locals: v1|DWORD[.] vobject:Promise:1{state=v5|DWORD[.]} 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: vobject:Promise:1{state=v5|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: vobject:Promise:1{state=v5|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$$anon$3:0{state=v5|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v5|DWORD[.] 
vobject:Promise:1{state=v5|DWORD[.]} Lcom/twitter/util/Promise; v5|DWORD[.] 
vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:12, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@201e25c4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.FutureBench.notFused(Bench.scala:195) [bci: 0]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v1|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.FutureBench.notFused(Bench.scala:195) [bci: 0]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>} <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD[.], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v5|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: [v7|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>} <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD[.], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v5|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: [v9|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B193" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: v5|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=v5|DWORD[.]} vobject:Promise:1{state=v5|DWORD[.]} - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v5|DWORD[.]} 
locals: v1|DWORD[.] vobject:Promise:1{state=v5|DWORD[.]} 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: vobject:Promise:1{state=v5|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: vobject:Promise:1{state=v5|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$$anon$3:0{state=v5|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v5|DWORD[.] 
vobject:Promise:1{state=v5|DWORD[.]} Lcom/twitter/util/Promise; v5|DWORD[.] 
vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction CMP [v5|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} state [bci:12, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA [v11|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + 248] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE v15|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = LEA [v15|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[*] = LEA [v15|QWORD[*] + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE v19|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [v21|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[*]], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v15|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[*] + 12], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [v23|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[*] + 16], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v15|QWORD[*] + 24] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[*] + 28], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = COMPRESSPOINTER (input: v20|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[*] + 32], y: v25|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [v8|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[*] + 40], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v15|QWORD[*] + 48] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v15|QWORD[*] + 52], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [v1|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[.] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = MOVE v5|DWORD[.] moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = CAS (address: [v16|QWORD[.] + v27|QWORD * 1], cmpValue: rax|DWORD[.], newValue: v28|DWORD[.]) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: v30|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[*] = SHR v16|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v31|QWORD[*] + v32|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND v29|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B191" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Local$] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = MOV [v34|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v29|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v16|QWORD[.] v20|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v16|QWORD[.] 
locals: v1|DWORD[.] v20|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction v36|DWORD[.] = MOV [v35|DWORD[.] * 8 + 16] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v29|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v16|QWORD[.] v20|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v16|QWORD[.] 
locals: v1|DWORD[.] v20|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction v37|DWORD = MOV [v36|DWORD[.] * 8 + 8] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: [v37|DWORD * 8 + 520]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v39|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = COMPRESSPOINTER (input: v16|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>} <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD[.], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 7.839287703504969E-8 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B190" 
    xhandlers
    flags 
    probability 4607182418093917144
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[.] = MOV [v40|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v29|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v16|QWORD[.] v20|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v16|QWORD[.] 
locals: v1|DWORD[.] v20|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction v48|DWORD = MOV [v47|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = DEC v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = AND (x: v49|DWORD, ~y: [v36|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v48|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B42" 
    xhandlers
    flags 
    probability 4607182418093917144
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[.] = MOV [v51|QWORD[.] + v50|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v52|DWORD[.], y: v52|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.527679190032315E-7 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B43" "B189" 
    xhandlers
    flags 
    probability 4607182414916466456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|DWORD[.], y: [v52|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4607182414916466456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4607182418093916023
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[.] = MOV [v69|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v70|DWORD[.], y: v70|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B188" 
    xhandlers
    flags 
    probability 4606281698239052062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV [v70|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: [v71|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606281698239052062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4607182418093916022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD[.] = MOV [v20|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v72|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v73|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v74|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v74|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v74|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction v75|DWORD = MOV [v72|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: [v75|DWORD * 8 + 24]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4602678818466545526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v75|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4598175218839175030
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v75|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOV [v76|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595601733539563714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = SHL v78|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = LEA [v79|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVSXD v80|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOV [v76|QWORD + v81|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4592384876561998876
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = INC v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v140|DWORD] destination: B90 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B90" 
    successors "B54" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4600105333166934210
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B56" 
    xhandlers
    flags 
    probability 4602678818466545526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD[.], v73|QWORD[.]] destination: B49 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B31" "B49" "B55" "B51" "B37" "B33" 
    successors "B57" "B88" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|QWORD[.], v84|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[.] = MOV [v2|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v84|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v83|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v83|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v83|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v85|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[.] = MOV [v0|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v84|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v83|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v83|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v83|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction v87|DWORD[.] = MOV [v86|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v84|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v83|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v83|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v83|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v87|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction CMP [v84|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B87" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD[.] = MOV [v85|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = UNCOMPRESSPOINTER (input: v88|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|QWORD[.], y: v84|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = LEA [v90|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v91|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605500002653506857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v91|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v90|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v90|QWORD] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE v93|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[*] = LEA [v93|QWORD[*] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE v95|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV [v44|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v93|QWORD[*]], y: v97|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v93|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[.] = COMPRESSPOINTER (input: v83|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v93|QWORD[*] + 12], y: v98|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v93|QWORD[*] + 16], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD[.] = COMPRESSPOINTER (input: v96|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v93|QWORD[*] + 20], y: v99|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = MOV [v43|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v93|QWORD[*] + 24], y: v100|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v93|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v93|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$7/390800101@687091653] <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [v86|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD[.] = COMPRESSPOINTER (input: v84|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[.] = COMPRESSPOINTER (input: v94|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = MOVE v102|DWORD[.] moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = CAS (address: [v20|QWORD[.] + v101|QWORD * 1], cmpValue: rax|DWORD[.], newValue: v103|DWORD[.]) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: v105|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[*] = SHR v20|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v106|QWORD[*] + v32|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = AND v104|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v107|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD[.] = MOV [v0|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v104|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: v20|QWORD[.] v94|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] v96|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v108|DWORD[.] * 8] state [bci:18, 33, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v109|DWORD[.] = MOV [v2|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v104|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: v20|QWORD[.] v94|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] v96|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction v110|DWORD[.] = MOV [v109|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 33, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v111|DWORD[.] = MOV [v16|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD[.] = MOV [v0|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v104|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: v20|QWORD[.] v94|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] v96|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction v113|DWORD[.] = MOV [v112|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 33, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v104|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: v20|QWORD[.] v94|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] v96|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v113|DWORD[.] * 8] state [bci:18, 33, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = UNCOMPRESSPOINTER (input: v108|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v111|DWORD[.], y: v111|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4604834113280031363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v111|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: [v115|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604834113280031363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" "B67" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v111|DWORD[.], y: v111|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4604834113280031363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOV [v111|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: [v116|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604834113280031363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B69" "B73" 
    successors "B75" "B86" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: v110|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=v110|DWORD[.]} v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v110|DWORD[.]} 
locals: v114|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=v110|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v110|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction CMP [v110|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} state [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = LEA [v118|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v119|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4605500002653506857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v119|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v118|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v118|QWORD] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE v121|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[*] = LEA [v121|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE v123|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [v21|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD[*]], y: v125|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v121|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD[*] + 12], y: v110|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOV [v23|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD[*] + 16], y: v126|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v121|QWORD[*] + 24] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD[*] + 28], y: v110|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD[*] + 32], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [v112|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD[.] = COMPRESSPOINTER (input: v124|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = MOVE v110|DWORD[.] moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = CAS (address: [v122|QWORD[.] + v127|QWORD * 1], cmpValue: rax|DWORD[.], newValue: v128|DWORD[.]) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: v130|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[*] = SHR v122|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v131|QWORD[*] + v32|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = AND v129|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v132|DWORD, y: v132|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B84" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|DWORD[.] = MOV [v34|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v129|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v122|QWORD[.] v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v122|QWORD[.] 
locals: v114|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction v134|DWORD[.] = MOV [v133|DWORD[.] * 8 + 16] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v129|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v122|QWORD[.] v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v122|QWORD[.] 
locals: v114|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction v135|DWORD = MOV [v134|DWORD[.] * 8 + 8] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: [v135|DWORD * 8 + 520]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|DWORD[.] = MOV [v39|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = UNCOMPRESSPOINTER (input: v134|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v136|DWORD[.], y: v136|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 7.839287703504969E-8 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B120" 
    xhandlers
    flags 
    probability 4605573989781659870
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|DWORD, v137|QWORD[.], v114|QWORD[.], v136|DWORD[.], v122|QWORD[.]] destination: B83 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B83" "B119" 
    successors "B121" "B180" 
    xhandlers
    flags 
    probability 4607182418093917143
    begin_IR
      LIR
      nr   -1  <|@ instruction [v201|DWORD, v202|QWORD[.], v203|QWORD[.], v204|DWORD[.], v205|QWORD[.]] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v206|DWORD[.] = MOV [v204|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v201|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v205|QWORD[.] v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v205|QWORD[.] 
locals: v203|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction v207|DWORD = MOV [v206|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction v208|DWORD = DEC v207|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v209|DWORD = AND (x: v208|DWORD, ~y: [v202|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v207|DWORD, y: v209|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B120 -> B121 falseDestination: B120 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B140" 
    xhandlers
    flags 
    probability 4607182418093917143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v210|QWORD[.] = UNCOMPRESSPOINTER (input: v206|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v211|DWORD[.] = MOV [v210|QWORD[.] + v209|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v212|QWORD[.] = UNCOMPRESSPOINTER (input: v211|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v213|QWORD[.] = UNCOMPRESSPOINTER (input: v204|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v211|DWORD[.], y: v211|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.527679190032315E-7 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B141" "B179" 
    xhandlers
    flags 
    probability 4607182414916466455
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v230|DWORD[.] = MOV [v211|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v231|QWORD[.] = UNCOMPRESSPOINTER (input: v230|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v231|QWORD[.], y: v202|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B140 -> B141 falseDestination: B140 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" 
    xhandlers
    flags 
    probability 4607182414916466455
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v212|QWORD[.]] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B139" "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4607182418093916022
    begin_IR
      LIR
      nr   -1  <|@ instruction [v232|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v233|DWORD[.] = MOV [v232|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v233|DWORD[.], y: v233|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B178" 
    xhandlers
    flags 
    probability 4606281698239052062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v234|DWORD = MOV [v233|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: [v234|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" 
    xhandlers
    flags 
    probability 4606281698239052062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" 
    successors "B147" "B148" 
    xhandlers
    flags 
    probability 4607182418093916022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v235|DWORD[.] = MOV [v16|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v236|QWORD[.] = UNCOMPRESSPOINTER (input: v235|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v237|QWORD[.] = UNCOMPRESSPOINTER (input: v233|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v236|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v237|QWORD[.],promise=v205|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v205|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v237|QWORD[.],promise=v205|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v237|QWORD[.] v205|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction v238|DWORD = MOV [v235|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: [v238|DWORD * 8 + 24]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4602678818466545526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v238|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4598175218839175030
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v239|QWORD = MOV [v238|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v240|DWORD = MOV [v239|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B165" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4595601733539563714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v242|DWORD = SHL v241|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v243|DWORD = LEA [v242|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v244|QWORD = MOVSXD v243|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v245|QWORD = MOV [v239|QWORD + v244|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v245|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B152 -> B153 falseDestination: B152 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B151" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4592384876561998876
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v274|DWORD = INC v241|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v274|DWORD] destination: B165 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B165" 
    successors "B152" "B166" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4600105333166934210
    begin_IR
      LIR
      nr   -1  <|@ instruction [v241|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v240|DWORD, y: v241|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B154" 
    xhandlers
    flags 
    probability 4602678818466545526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v237|QWORD[.], v205|QWORD[.], v236|QWORD[.]] destination: B147 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B129" "B147" "B153" "B149" "B135" "B131" 
    successors "B155" "B163" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr   -1  <|@ instruction [v246|QWORD[.], v247|QWORD[.], v248|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v249|DWORD[.] = MOV [v2|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v248|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v246|QWORD[.],promise=v247|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v247|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v246|QWORD[.],promise=v247|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v246|QWORD[.] v247|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v249|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction v250|DWORD[.] = MOV [v0|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v248|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v246|QWORD[.],promise=v247|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v247|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v246|QWORD[.],promise=v247|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v246|QWORD[.] v247|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction v251|DWORD[.] = MOV [v250|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v248|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v246|QWORD[.],promise=v247|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v247|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v246|QWORD[.],promise=v247|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v246|QWORD[.] v247|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v251|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction CMP [v248|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B162" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v252|DWORD[.] = MOV [v249|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v253|QWORD[.] = UNCOMPRESSPOINTER (input: v252|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v253|QWORD[.], y: v248|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B155 -> B156 falseDestination: B155 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" "B158" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v254|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v255|QWORD = LEA [v254|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v255|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B156 -> B157 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4605500002653506857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v255|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v254|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v254|QWORD] destination: B158 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" "B157" 
    successors "B160" "B161" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr   -1  <|@ instruction [v257|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v258|QWORD[.] = MOVE v257|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v259|QWORD[*] = LEA [v257|QWORD[*] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v260|QWORD[.] = MOVE v259|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v261|QWORD = MOV [v44|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v257|QWORD[*]], y: v261|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v257|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v262|DWORD[.] = COMPRESSPOINTER (input: v246|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v257|QWORD[*] + 12], y: v262|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v263|DWORD[.] = COMPRESSPOINTER (input: v247|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v257|QWORD[*] + 16], y: v263|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v264|DWORD[.] = COMPRESSPOINTER (input: v260|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v257|QWORD[*] + 20], y: v264|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v265|QWORD = MOV [v43|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v257|QWORD[*] + 24], y: v265|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v257|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v257|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$10/1594373685@321311106] <|@ <|@
      nr   -1  <|@ instruction v266|QWORD = MOV [v250|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v267|DWORD[.] = COMPRESSPOINTER (input: v248|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v268|DWORD[.] = COMPRESSPOINTER (input: v258|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = MOVE v267|DWORD[.] moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = CAS (address: [v16|QWORD[.] + v266|QWORD * 1], cmpValue: rax|DWORD[.], newValue: v268|DWORD[.]) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v270|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr   -1  <|@ instruction v269|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: v270|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v271|QWORD[*] = SHR v16|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v271|QWORD[*] + v32|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v272|DWORD = AND v269|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v272|DWORD, y: v272|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B159 -> B160 falseDestination: B159 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v247|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B56" 
    xhandlers
    flags 
    probability 4598175218839175030
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD[.], v73|QWORD[.]] destination: B51 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B154" 
    xhandlers
    flags 
    probability 4598175218839175030
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v237|QWORD[.], v205|QWORD[.], v236|QWORD[.]] destination: B149 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B92" 
    xhandlers
    flags 
    probability 4595601733539563714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD[.], v73|QWORD[.]] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" "B91" 
    successors "B93" "B186" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr   -1  <|@ instruction [v141|QWORD[.], v142|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOV [v142|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v143|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B185" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|DWORD[.] = MOV [v2|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v142|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v141|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v141|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v141|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction v145|DWORD[.] = MOV [v144|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v145|DWORD[.], y: [v142|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v146|DWORD[.] = MOV [v0|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v142|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v141|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v141|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v141|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction v147|DWORD[.] = MOV [v146|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v142|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v141|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v141|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v141|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v147|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = LEA [v148|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4595537396906387982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v149|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v148|QWORD + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v148|QWORD] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr   -1  <|@ instruction [v151|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = MOVE v151|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[*] = LEA [v151|QWORD[*] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE v153|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[*] = LEA [v151|QWORD[*] + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v155|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = MOV [v23|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v151|QWORD[*]], y: v157|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v151|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v158|DWORD[.] = COMPRESSPOINTER (input: v154|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v151|QWORD[*] + 12], y: v158|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v159|DWORD[.] = MOV [v142|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v151|QWORD[*] + 16], y: v159|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = MOV [v44|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v151|QWORD[*] + 24], y: v160|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v151|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v161|DWORD[.] = COMPRESSPOINTER (input: v141|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v151|QWORD[*] + 36], y: v161|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v151|QWORD[*] + 40], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|DWORD[.] = COMPRESSPOINTER (input: v156|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v151|QWORD[*] + 44], y: v162|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = MOV [v43|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v151|QWORD[*] + 48], y: v163|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v151|QWORD[*] + 56] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v151|QWORD[*] + 60] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$7/390800101@687091653] <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = MOV [v146|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v165|DWORD[.] = COMPRESSPOINTER (input: v142|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v166|DWORD[.] = COMPRESSPOINTER (input: v152|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = MOVE v165|DWORD[.] moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = CAS (address: [v20|QWORD[.] + v164|QWORD * 1], cmpValue: rax|DWORD[.], newValue: v166|DWORD[.]) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr   -1  <|@ instruction v167|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: v168|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[*] = SHR v20|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v169|QWORD[*] + v32|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v170|DWORD = AND v167|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v170|DWORD, y: v170|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|DWORD[.] = MOV [v0|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v167|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: v20|QWORD[.] v154|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] v156|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v171|DWORD[.] * 8] state [bci:18, 159, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v172|DWORD[.] = MOV [v2|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v167|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: v20|QWORD[.] v154|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] v156|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction v173|DWORD[.] = MOV [v172|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 159, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v174|DWORD[.] = MOV [v16|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v175|DWORD[.] = MOV [v0|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v167|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: v20|QWORD[.] v154|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] v156|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction v176|DWORD[.] = MOV [v175|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 159, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v167|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: v20|QWORD[.] v154|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] v156|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v176|DWORD[.] * 8] state [bci:18, 159, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v177|QWORD[.] = UNCOMPRESSPOINTER (input: v171|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v174|DWORD[.], y: v174|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4594958362668583204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v178|DWORD = MOV [v174|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: [v178|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    probability 4594958362668583204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B100" "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v174|DWORD[.], y: v174|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B109" 
    xhandlers
    flags 
    probability 4594958362668583204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = MOV [v174|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: [v179|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B110" 
    xhandlers
    flags 
    probability 4594958362668583204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B105" "B109" 
    successors "B111" "B184" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: v173|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=v173|DWORD[.]} v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v173|DWORD[.]} 
locals: v177|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=v173|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v173|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction CMP [v173|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} state [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v181|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v182|QWORD = LEA [v181|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v182|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4595537396906387982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v182|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v181|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v181|QWORD] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr   -1  <|@ instruction [v184|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v185|QWORD[.] = MOVE v184|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v186|QWORD[*] = LEA [v184|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v187|QWORD[.] = MOVE v186|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v188|QWORD = MOV [v21|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v184|QWORD[*]], y: v188|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v184|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v184|QWORD[*] + 12], y: v173|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v189|QWORD = MOV [v23|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v184|QWORD[*] + 16], y: v189|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v184|QWORD[*] + 24] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v184|QWORD[*] + 28], y: v173|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v184|QWORD[*] + 32], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v190|QWORD = MOV [v175|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v191|DWORD[.] = COMPRESSPOINTER (input: v187|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = MOVE v173|DWORD[.] moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = CAS (address: [v185|QWORD[.] + v190|QWORD * 1], cmpValue: rax|DWORD[.], newValue: v191|DWORD[.]) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr   -1  <|@ instruction v192|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: v193|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v194|QWORD[*] = SHR v185|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v194|QWORD[*] + v32|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = AND v192|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v195|DWORD, y: v195|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B182" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v196|DWORD[.] = MOV [v34|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v192|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v185|QWORD[.] v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v185|QWORD[.] 
locals: v177|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction v197|DWORD[.] = MOV [v196|DWORD[.] * 8 + 16] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v192|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v185|QWORD[.] v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v185|QWORD[.] 
locals: v177|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction v198|DWORD = MOV [v197|DWORD[.] * 8 + 8] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: [v198|DWORD * 8 + 520]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B118" "B119" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v199|DWORD[.] = MOV [v39|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v200|QWORD[.] = UNCOMPRESSPOINTER (input: v197|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v199|DWORD[.], y: v199|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 7.839287703504969E-8 condition: = trueDestination: B117 -> B118 falseDestination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" 
    xhandlers
    flags 
    probability 4595601733539564515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v192|DWORD, v200|QWORD[.], v177|QWORD[.], v199|DWORD[.], v185|QWORD[.]] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B167" 
    xhandlers
    flags 
    probability 4595601733539563714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v237|QWORD[.], v236|QWORD[.], v205|QWORD[.]] destination: B166 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B137" "B166" 
    successors "B168" "B176" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr   -1  <|@ instruction [v275|QWORD[.], v276|QWORD[.], v277|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v278|DWORD = MOV [v276|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v278|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B167 -> B168 falseDestination: B167 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B169" "B175" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v279|DWORD[.] = MOV [v2|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v276|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v275|QWORD[.],promise=v277|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v277|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v275|QWORD[.],promise=v277|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v275|QWORD[.] v277|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction v280|DWORD[.] = MOV [v279|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v280|DWORD[.], y: [v276|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B170" "B171" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v281|DWORD[.] = MOV [v0|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v276|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v275|QWORD[.],promise=v277|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v277|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v275|QWORD[.],promise=v277|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v275|QWORD[.] v277|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction v282|DWORD[.] = MOV [v281|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v276|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v275|QWORD[.],promise=v277|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v277|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v275|QWORD[.],promise=v277|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v275|QWORD[.] v277|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v282|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction v283|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v284|QWORD = LEA [v283|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v284|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B169 -> B170 falseDestination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4595537396906387982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v284|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v283|QWORD + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v283|QWORD] destination: B171 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" "B170" 
    successors "B173" "B174" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr   -1  <|@ instruction [v286|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v287|QWORD[.] = MOVE v286|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v288|QWORD[*] = LEA [v286|QWORD[*] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v289|QWORD[.] = MOVE v288|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v290|QWORD[*] = LEA [v286|QWORD[*] + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v291|QWORD[.] = MOVE v290|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v292|QWORD = MOV [v23|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v286|QWORD[*]], y: v292|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v286|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v293|DWORD[.] = COMPRESSPOINTER (input: v289|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v286|QWORD[*] + 12], y: v293|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v294|DWORD[.] = MOV [v276|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v286|QWORD[*] + 16], y: v294|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v295|QWORD = MOV [v44|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v286|QWORD[*] + 24], y: v295|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v286|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v296|DWORD[.] = COMPRESSPOINTER (input: v275|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v286|QWORD[*] + 36], y: v296|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v297|DWORD[.] = COMPRESSPOINTER (input: v277|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v286|QWORD[*] + 40], y: v297|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v298|DWORD[.] = COMPRESSPOINTER (input: v291|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v286|QWORD[*] + 44], y: v298|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v299|QWORD = MOV [v43|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v286|QWORD[*] + 48], y: v299|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v286|QWORD[*] + 56] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v286|QWORD[*] + 60] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$10/1594373685@321311106] <|@ <|@
      nr   -1  <|@ instruction v300|QWORD = MOV [v281|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v301|DWORD[.] = COMPRESSPOINTER (input: v276|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v302|DWORD[.] = COMPRESSPOINTER (input: v287|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = MOVE v301|DWORD[.] moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD[.] = CAS (address: [v16|QWORD[.] + v300|QWORD * 1], cmpValue: rax|DWORD[.], newValue: v302|DWORD[.]) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v304|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr   -1  <|@ instruction v303|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: v304|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v305|QWORD[*] = SHR v16|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v305|QWORD[*] + v32|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v306|DWORD = AND v303|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v306|DWORD, y: v306|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v277|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591870179502076612
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B146" 
    xhandlers
    flags 
    probability 4591870179502076611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B143 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B74" 
    xhandlers
    flags 
    probability 4590583437316280435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 4590583437316280435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B154" 
    xhandlers
    flags 
    probability 4589811391262387560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v238|DWORD * 8 + 24], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v237|QWORD[.], v205|QWORD[.], v236|QWORD[.]] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589811391262387560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|DWORD * 8 + 24], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD[.], v73|QWORD[.]] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    probability 4580804192411133072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B110" 
    xhandlers
    flags 
    probability 4580804192411133072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v318|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v318|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: v5|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=v5|DWORD[.]} vobject:Promise:1{state=v5|DWORD[.]} - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v5|DWORD[.]} 
locals: v1|DWORD[.] vobject:Promise:1{state=v5|DWORD[.]} 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: vobject:Promise:1{state=v5|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: vobject:Promise:1{state=v5|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$$anon$3:0{state=v5|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v5|DWORD[.] 
vobject:Promise:1{state=v5|DWORD[.]} Lcom/twitter/util/Promise; v5|DWORD[.] 
vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:12, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4575888835103545851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v316|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v316|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: v110|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=v110|DWORD[.]} v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v110|DWORD[.]} 
locals: v114|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=v110|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v110|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v120|QWORD[.]] destination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4575888835103545851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v317|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v317|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v84|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v83|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v83|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v83|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|QWORD[.]] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4575888835103545851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v313|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v313|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v248|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v246|QWORD[.],promise=v247|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v247|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v246|QWORD[.],promise=v247|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v246|QWORD[.] v247|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction v256|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v256|QWORD[.]] destination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4565877976503276579
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v312|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v312|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v276|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v275|QWORD[.],promise=v277|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v277|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v275|QWORD[.],promise=v277|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v275|QWORD[.] v277|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction v285|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v285|QWORD[.]] destination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4565877976503276579
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v314|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v314|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: v173|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=v173|DWORD[.]} v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v173|DWORD[.]} 
locals: v177|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=v173|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v173|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction v183|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v183|QWORD[.]] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4565877976503276579
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v315|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v315|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v142|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v141|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v141|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v141|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v150|QWORD[.]] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B41" 
    xhandlers
    flags 
    probability 4510263224435847550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v50|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: v41|QWORD[.] - v54|QWORD[.] - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: v20|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:38, 2, 16, 4, 19, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v55|QWORD[.], y: v55|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.527674073959098E-7 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 4510263222085147689
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD[.]] destination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B123" "B139" 
    xhandlers
    flags 
    probability 4510263224435847550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v202|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v209|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v212|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: v202|QWORD[.] - v213|QWORD[.] - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: v16|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} v205|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:38, 2, 16, 4, 19, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction v214|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v214|QWORD[.], y: v214|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.527674073959098E-7 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B142" 
    xhandlers
    flags 
    probability 4510263222085147689
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v214|QWORD[.]] destination: B139 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4500515626435851651
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4500515635838651094
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: v20|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:34, 4, 19, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v56|QWORD[.], y: v56|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B40" 
    xhandlers
    flags 
    probability 4499923315066361486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOV [v56|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: [v57|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4499923315066361486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4500515635838651094
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[.] = MOV [v20|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v59|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v56|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v56|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v56|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction v60|DWORD = MOV [v58|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: [v60|DWORD * 8 + 24]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4496012036211280598
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v60|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4491508436583910102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [v60|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOV [v61|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4489543354552066500
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = SHL v63|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = LEA [v64|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVSXD v65|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [v61|QWORD + v66|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4486158664424697308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = INC v63|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|DWORD] destination: B38 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B38" 
    successors "B36" "B39" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4494046954179436996
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B124" 
    xhandlers
    flags 
    probability 4499457912450120107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v137|QWORD[.], v122|QWORD[.]] destination: B82 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B82" "B123" "B118" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4500515635838651093
    begin_IR
      LIR
      nr   -1  <|@ instruction [v215|QWORD[.], v216|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v215|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: v16|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} v216|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:34, 4, 19, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v217|QWORD[.], y: v217|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B124 -> B125 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" "B138" 
    xhandlers
    flags 
    probability 4499923315066361485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v218|DWORD = MOV [v217|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: [v218|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B126 -> B127 falseDestination: B126 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B128" 
    xhandlers
    flags 
    probability 4499923315066361485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B125" "B127" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4500515635838651093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v219|DWORD[.] = MOV [v16|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v220|QWORD[.] = UNCOMPRESSPOINTER (input: v219|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v220|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v217|QWORD[.],promise=v216|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v216|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v217|QWORD[.],promise=v216|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v217|QWORD[.] v216|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction v221|DWORD = MOV [v219|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: [v221|DWORD * 8 + 24]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B128 -> B129 falseDestination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    probability 4496012036211280597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v221|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B130 -> B131 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4491508436583910101
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v222|QWORD = MOV [v221|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v223|DWORD = MOV [v222|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4489543354552066499
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v225|DWORD = SHL v224|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v226|DWORD = LEA [v225|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v227|QWORD = MOVSXD v226|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v228|QWORD = MOV [v222|QWORD + v227|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v228|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B133" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4486158664424697307
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v229|DWORD = INC v224|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v229|DWORD] destination: B136 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B136" 
    successors "B134" "B137" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4494046954179436995
    begin_IR
      LIR
      nr   -1  <|@ instruction [v224|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v223|DWORD, y: v224|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B133 -> B134 falseDestination: B133 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B56" 
    xhandlers
    flags 
    probability 4496012036211280598
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.], v59|QWORD[.]] destination: B31 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B154" 
    xhandlers
    flags 
    probability 4496012036211280597
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v217|QWORD[.], v216|QWORD[.], v220|QWORD[.]] destination: B129 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B56" 
    xhandlers
    flags 
    probability 4491508436583910102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.], v59|QWORD[.]] destination: B33 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B154" 
    xhandlers
    flags 
    probability 4491508436583910101
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v217|QWORD[.], v216|QWORD[.], v220|QWORD[.]] destination: B131 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B92" 
    xhandlers
    flags 
    probability 4489543354552066500
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.], v59|QWORD[.]] destination: B39 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B167" 
    xhandlers
    flags 
    probability 4489543354552066499
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v217|QWORD[.], v220|QWORD[.], v216|QWORD[.]] destination: B137 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B124" 
    xhandlers
    flags 
    probability 4489543341119495866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v200|QWORD[.], v185|QWORD[.]] destination: B118 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    probability 4485820195411960388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B128" 
    xhandlers
    flags 
    probability 4485820195411960387
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B125 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B154" 
    xhandlers
    flags 
    probability 4483347409861011408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v221|DWORD * 8 + 24], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v217|QWORD[.], v216|QWORD[.], v220|QWORD[.]] destination: B135 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B56" 
    xhandlers
    flags 
    probability 4483347409861011408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|DWORD * 8 + 24], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.], v59|QWORD[.]] destination: B37 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4413953810109930006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" 
    xhandlers
    flags 
    probability 4413953810109930006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v202|QWORD[.], v205|QWORD[.]] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -289827 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: v69|QWORD[.] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: v41|QWORD[.] - v54|QWORD[.] - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: v20|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:5, 16, 4, 19, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -323123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: v173|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=v173|DWORD[.]} v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v173|DWORD[.]} 
locals: v177|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=v173|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v173|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B164" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-342323|0xfffffffffffac6cd]] destination: B163 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" "B162" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v273|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v273|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v248|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v246|QWORD[.],promise=v247|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v247|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v246|QWORD[.],promise=v247|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v246|QWORD[.] v247|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:4, 27, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B187" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-311571|0xfffffffffffb3eed]] destination: B186 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" "B185" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v310|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v310|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v142|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v141|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v141|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v141|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:4, 27, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-272659|0xfffffffffffbd6ed]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.isDefined(Promise.scala:840) [bci: 4]
stack: v5|DWORD[.] 
locals: vobject:Promise:0{state=v5|DWORD[.]} - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:503) [bci: 1]
locals: vobject:Promise$$anon$3:1{state=v5|DWORD[.]} vobject:Promise:0{state=v5|DWORD[.]} - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:1{state=v5|DWORD[.]} 
locals: v1|DWORD[.] vobject:Promise:0{state=v5|DWORD[.]} 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: vobject:Promise:0{state=v5|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: vobject:Promise:0{state=v5|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise:0{state=v5|DWORD[.]} Lcom/twitter/util/Promise; v5|DWORD[.] 
vobject:Promise$$anon$3:1{state=v5|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v5|DWORD[.] 
vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:4, 1, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -338211 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: v232|QWORD[.] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: v202|QWORD[.] - v213|QWORD[.] - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: v16|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} v205|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:5, 16, 4, 19, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-326675|0xfffffffffffb03ed]] destination: B115 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B115" "B182" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v309|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v309|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v192|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v185|QWORD[.] v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v185|QWORD[.] 
locals: v177|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-336403|0xfffffffffffadded]] destination: B179 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" "B179" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v308|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v308|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v201|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v205|QWORD[.] v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v205|QWORD[.] 
locals: v203|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-303635|0xfffffffffffb5ded]] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B71" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v117|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.isDefined(Promise.scala:840) [bci: 4]
stack: v111|DWORD[.] 
locals: v16|QWORD[.] - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:503) [bci: 1]
locals: vobject:Promise$$anon$3:0{state=v110|DWORD[.]} v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v110|DWORD[.]} 
locals: v114|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=v110|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v110|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:4, 1, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-310579|0xfffffffffffb42cd]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B79" "B84" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v138|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v129|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v122|QWORD[.] v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v122|QWORD[.] 
locals: v114|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-333339|0xfffffffffffae9e5]] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-347923|0xfffffffffffab0ed]] destination: B176 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" "B175" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v307|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v307|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v276|QWORD[.] 
locals: v16|QWORD[.] vobject:Promise$Transformer:0{saved=v275|QWORD[.],promise=v277|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v277|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=v275|QWORD[.],promise=v277|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; v275|QWORD[.] v277|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:4, 27, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-272403|0xfffffffffffbd7ed]] destination: B5 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-329267|0xfffffffffffaf9cd]] destination: B182 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B192" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-287763|0xfffffffffffb9bed]] destination: B189 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B18" "B191" "B190" "B189" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v311|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v311|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v29|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: v16|QWORD[.] v20|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: v16|QWORD[.] 
locals: v1|DWORD[.] v20|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -273459 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: v5|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=v5|DWORD[.]} vobject:Promise:1{state=v5|DWORD[.]} - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v5|DWORD[.]} 
locals: v1|DWORD[.] vobject:Promise:1{state=v5|DWORD[.]} 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: vobject:Promise:1{state=v5|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: vobject:Promise:1{state=v5|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$$anon$3:0{state=v5|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v5|DWORD[.] 
vobject:Promise:1{state=v5|DWORD[.]} Lcom/twitter/util/Promise; v5|DWORD[.] 
vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:12, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-350483|0xfffffffffffaa6ed]] destination: B175 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -292643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37]
stack: v56|QWORD[.] 
locals: - - - - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: v20|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:37, 4, 19, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -340771 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37]
stack: v217|QWORD[.] 
locals: - - - - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: v16|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} v216|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:37, 4, 19, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -299539 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v104|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: v20|QWORD[.] v94|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] v96|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction DEOPT info [bci:18, 33, 27, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -304435 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: v110|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=v110|DWORD[.]} v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v110|DWORD[.]} 
locals: v114|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=v110|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v110|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -354835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v303|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: v16|QWORD[.] v289|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v277|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] v291|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
>@ <|@ instruction DEOPT info [bci:18, 159, 27, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B192" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-279859|0xfffffffffffbbacd]] destination: B191 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B164" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-344083|0xfffffffffffabfed]] destination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-307987|0xfffffffffffb4ced]] destination: B79 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B192" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-276499|0xfffffffffffbc7ed]] destination: B18 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-294195|0xfffffffffffb82cd]] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B87" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v139|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v139|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: v84|QWORD[.] 
locals: v20|QWORD[.] vobject:Promise$Transformer:0{saved=v83|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=v83|QWORD[.],promise=v16|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; v83|QWORD[.] v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:4, 27, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -318483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v167|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: v20|QWORD[.] v154|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v20|QWORD[.] v156|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction DEOPT info [bci:18, 159, 27, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-322323|0xfffffffffffb14ed]] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B107" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v180|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v180|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.isDefined(Promise.scala:840) [bci: 4]
stack: v174|DWORD[.] 
locals: v16|QWORD[.] - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:503) [bci: 1]
locals: vobject:Promise$$anon$3:0{state=v173|DWORD[.]} v16|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=v173|DWORD[.]} 
locals: v177|QWORD[.] v16|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=v173|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; v173|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:4, 1, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B192" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-284443|0xfffffffffffba8e5]] destination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -347667 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: v269|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: v16|QWORD[.] v258|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - v247|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: v16|QWORD[.] v260|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
>@ <|@ instruction DEOPT info [bci:18, 33, 27, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B187" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-314131|0xfffffffffffb34ed]] destination: B185 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -275211 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.FutureBench.notFused(Bench.scala:195) [bci: 0]
locals: - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-303379|0xfffffffffffb5eed]] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-322067|0xfffffffffffb15ed]] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-295955|0xfffffffffffb7bed]] destination: B87 -> B89 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #10         // com.twitter.util.Promise$.MODULE$:com.twitter.util.Promise$
     3: invokevirtual #11         // com.twitter.util.Promise$.apply:()com.twitter.util.Promise
     6: invokedynamic #-40        // java.lang.invoke.LambdaForm$MH.2093631819.linkToTargetMethod:(java.lang.Object)java.lang.Object
    11: invokevirtual #21         // com.twitter.util.Future.map:(scala.Function1)com.twitter.util.Future
    14: invokedynamic #-41        // java.lang.invoke.LambdaForm$MH.2093631819.linkToTargetMethod:(java.lang.Object)java.lang.Object
    19: invokevirtual #3          // com.twitter.util.Future.map:(scala.Function1)com.twitter.util.Future
    22: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@201e25c4 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr    8  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
bench.FutureBench.notFused(Bench.scala:195) [bci: 0]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr   14  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rax:0, r10:0, r13:0, r14:0]
live-base-pointers: []
bench.FutureBench.notFused(Bench.scala:195) [bci: 0]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   18  <|@ instruction rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   20  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r11|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>} <|@ <|@
      nr   38  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rax|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   50  <|@ instruction CMP (x: r8|QWORD, y: [rax|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>} <|@ <|@
      nr   72  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   84  <|@ instruction CMP (x: r9|QWORD, y: [rax|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" "B193" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [r10:0, r11:0, r13:0, r14:0]
live-base-pointers: []
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: r11|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=r11|DWORD[.]} vobject:Promise:1{state=r11|DWORD[.]} - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=r11|DWORD[.]} 
locals: r14|DWORD[.] vobject:Promise:1{state=r11|DWORD[.]} 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: vobject:Promise:1{state=r11|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: vobject:Promise:1{state=r11|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$$anon$3:0{state=r11|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; r11|DWORD[.] 
vobject:Promise:1{state=r11|DWORD[.]} Lcom/twitter/util/Promise; r11|DWORD[.] 
vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} state [bci:12, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  120  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 248] instr: 0 <|@ <|@
      nr  162  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction stack:40|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[*] = LEA [rax|QWORD[*] + 40] size: QWORD <|@ <|@
      nr  178  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>} <|@ <|@
      nr  182  <|@ instruction rcx|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed} <|@ <|@
      nr  188  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  190  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr  192  <|@ instruction rcx|QWORD = MOV [rbp|QWORD + 168] size: QWORD <|@ <|@
      nr  194  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV [rax|QWORD[*] + 24] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr  198  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  200  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction MOV (x: [rax|QWORD[*] + 32], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [rax|QWORD[*] + 40], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV [rax|QWORD[*] + 48] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>;compressed} <|@ <|@
      nr  210  <|@ instruction MOV (x: [rax|QWORD[*] + 52], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  212  <|@ instruction rcx|QWORD = MOV [r14|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  214  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  216  <|@ instruction rax|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rax|DWORD[.] = CAS (address: [rbx|QWORD[.] + rcx|QWORD * 1], cmpValue: rax|DWORD[.], newValue: rsi|DWORD[.]) accessKind: DWORD <|@ <|@
      nr  220  <|@ instruction rax|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr  222  <|@ instruction r11|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr  224  <|@ instruction rax|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  226  <|@ instruction rcx|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr  228  <|@ instruction MOVB (x: [rax|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  230  <|@ instruction rax|DWORD = AND r11|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  232  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  234  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B191" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Local$] <|@ <|@
      nr  252  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r10:0, r13:0, stack:88, stack:100]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:44|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rbx|QWORD[.] rdx|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rbx|QWORD[.] 
locals: stack:28|DWORD[.] rdx|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
      nr  256  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, r10:0, r13:0, stack:88, stack:100]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:44|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rbx|QWORD[.] rdx|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rbx|QWORD[.] 
locals: stack:28|DWORD[.] rdx|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
      nr  258  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>} <|@ <|@
      nr  260  <|@ instruction CMP (x: r14|QWORD, y: [r11|DWORD * 8 + 520]) size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction r11|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD <|@ <|@
      nr  268  <|@ instruction stack:56|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction r14|DWORD[.] = MOV [r11|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  272  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  274  <|@ instruction stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr  280  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr  282  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>} <|@ <|@
      nr  284  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>} <|@ <|@
      nr  286  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  288  <|@ instruction BRANCH trueDestinationProbability: 7.839287703504969E-8 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B190" 
    xhandlers
    flags 
    probability 4607182418093917144
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rbx|DWORD[.] = MOV [r14|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  302  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, r10:0, r11:0, r13:0, r14:0, stack:64, stack:72, stack:88, stack:100]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:44|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: stack:40|QWORD[.] rdx|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: stack:40|QWORD[.] 
locals: stack:28|DWORD[.] rdx|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rcx|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
      nr  304  <|@ instruction rsi|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  306  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rax|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  308  <|@ instruction CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B42" 
    xhandlers
    flags 
    probability 4607182418093917144
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rcx|DWORD[.] = MOV [rbx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  318  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  322  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  324  <|@ instruction BRANCH trueDestinationProbability: 3.527679190032315E-7 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B43" "B189" 
    xhandlers
    flags 
    probability 4607182414916466456
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction CMP (x: rax|DWORD[.], y: [rcx|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  568  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4607182414916466456
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4607182418093916023
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  576  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  578  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  580  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B188" 
    xhandlers
    flags 
    probability 4606281698239052062
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction rsi|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  590  <|@ instruction CMP (x: r8|QWORD, y: [rsi|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606281698239052062
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4607182418093916022
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  602  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  604  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  606  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, r10:0, r11:0, r13:0, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: rcx|QWORD[.] 
locals: rdx|QWORD[.] vobject:Promise$Transformer:0{saved=rax|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=rax|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; rax|QWORD[.] stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr  608  <|@ instruction CMP (x: r9|QWORD, y: [rsi|DWORD * 8 + 24]) size: QWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4602678818466545526
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4598175218839175030
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction stack:92|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction rbx|QWORD = MOV [rsi|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr  656  <|@ instruction r14|DWORD = MOV [rbx|QWORD] size: DWORD <|@ <|@
      nr  658  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595601733539563714
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  670  <|@ instruction rsi|DWORD = SHL r8|DWORD y: 3 size: DWORD <|@ <|@
      nr  672  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 8] size: DWORD <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  676  <|@ instruction rsi|QWORD = MOV [rbx|QWORD + rsi|QWORD * 1] size: QWORD <|@ <|@
      nr  678  <|@ instruction CMP (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  680  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4592384876561998876
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr 1196  <|@ instruction JUMP ~[] destination: B90 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B90" 
    successors "B54" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4600105333166934210
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  664  <|@ instruction CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B56" 
    xhandlers
    flags 
    probability 4602678818466545526
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr  616  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction r14|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B49 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B31" "B49" "B55" "B51" "B37" "B33" 
    successors "B57" "B88" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  708  <|@ instruction rcx|DWORD[.] = MOV [rbx|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  710  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, r11:0, r13:0, r14:0, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: rax|QWORD[.] 
locals: rdx|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr  712  <|@ instruction r8|DWORD[.] = MOV [r14|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  714  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, r8:0, r11:0, r13:0, r14:0, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: rax|QWORD[.] 
locals: rdx|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction r10|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr  716  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, r8:0, r11:0, r13:0, r14:0, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: rax|QWORD[.] 
locals: rdx|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr  718  <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} <|@ <|@
      nr  720  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B87" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction rcx|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  728  <|@ instruction CMP (x: rcx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  730  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  736  <|@ instruction r10|QWORD = LEA [rcx|QWORD + 40] size: QWORD <|@ <|@
      nr  738  <|@ instruction CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  740  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605500002653506857
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  786  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 232] instr: 0 <|@ <|@
      nr  788  <|@ instruction rcx|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  794  <|@ instruction r10|QWORD[.] = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rbp|QWORD[*] = LEA [rcx|QWORD[*] + 24] size: QWORD <|@ <|@
      nr  798  <|@ instruction rbp|QWORD[.] = MOVE rbp|QWORD[*] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rbx|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr  802  <|@ instruction MOV (x: [rcx|QWORD[*]], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  804  <|@ instruction MOV [rcx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed} <|@ <|@
      nr  806  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  808  <|@ instruction MOV (x: [rcx|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  810  <|@ instruction MOV (x: [rcx|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  812  <|@ instruction rbx|DWORD[.] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  814  <|@ instruction MOV (x: [rcx|QWORD[*] + 20], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  816  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 168] size: QWORD <|@ <|@
      nr  818  <|@ instruction MOV (x: [rcx|QWORD[*] + 24], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  820  <|@ instruction MOV [rcx|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed} <|@ <|@
      nr  822  <|@ instruction MOV [rcx|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$7/390800101@687091653] <|@ <|@
      nr  824  <|@ instruction rcx|QWORD = MOV [r8|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  826  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  830  <|@ instruction rax|DWORD[.] = CAS (address: [rdx|QWORD[.] + rcx|QWORD * 1], cmpValue: rax|DWORD[.], newValue: r8|DWORD[.]) accessKind: DWORD <|@ <|@
      nr  832  <|@ instruction rax|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr  834  <|@ instruction r8|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr  836  <|@ instruction rax|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  838  <|@ instruction MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  840  <|@ instruction rax|DWORD = AND r8|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  842  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  858  <|@ instruction stack:96|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction stack:88|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction stack:104|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr  868  <|@ instruction rax|DWORD[.] = MOV [r14|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  870  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, r11:0, r14:0, stack:24, stack:40, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:96|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: rdx|QWORD[.] stack:104|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rbx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] stack:88|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:18, 33, 27, 2, 2, 7, 11] <|@ <|@
      nr  872  <|@ instruction r13|DWORD[.] = MOV [rcx|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  874  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, r11:0, r14:0, stack:24, stack:40, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:96|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: rdx|QWORD[.] stack:104|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rbx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] stack:88|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction r13|DWORD[.] = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 33, 27, 2, 2, 7, 11] <|@ <|@
      nr  876  <|@ instruction r10|DWORD[.] = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  878  <|@ instruction r8|DWORD[.] = MOV [r14|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  880  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, r8:0, r10:0, r11:0, r13:0, stack:24, stack:40, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:96|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: rdx|QWORD[.] stack:104|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rbx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] stack:88|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction rbp|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 33, 27, 2, 2, 7, 11] <|@ <|@
      nr  882  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, r8:0, r10:0, r11:0, r13:0, stack:24, stack:40, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:96|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: rdx|QWORD[.] stack:104|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rbx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] stack:88|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rbp|DWORD[.] * 8] state [bci:18, 33, 27, 2, 2, 7, 11] <|@ <|@
      nr  884  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  886  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  888  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4604834113280031363
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>} <|@ <|@
      nr  898  <|@ instruction rbp|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  900  <|@ instruction CMP (x: rdx|QWORD, y: [rbp|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  902  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604834113280031363
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" "B67" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  920  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B73" 
    xhandlers
    flags 
    probability 4604834113280031363
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  928  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>} <|@ <|@
      nr  930  <|@ instruction rbp|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  932  <|@ instruction CMP (x: rdx|QWORD, y: [rbp|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr  934  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604834113280031363
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B69" "B73" 
    successors "B75" "B86" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  958  <|@ st <@st|@reference-map: [rax:0, rbx:0, r8:0, r11:0, r13:0, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: r13|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=r13|DWORD[.]} rbx|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=r13|DWORD[.]} 
locals: rax|QWORD[.] rbx|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=r13|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; r13|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction CMP [r13|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} state [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr  960  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  964  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  966  <|@ instruction r10|QWORD = LEA [rdx|QWORD + 40] size: QWORD <|@ <|@
      nr  968  <|@ instruction CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  970  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4605500002653506857
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1018  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1020  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 232] instr: 0 <|@ <|@
      nr 1022  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr 1024  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>} // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1028  <|@ instruction rax|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1040  <|@ instruction rdi|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction r10|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr 1044  <|@ instruction MOV (x: [rax|QWORD[*]], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1046  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed} <|@ <|@
      nr 1048  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 1050  <|@ instruction r10|QWORD = MOV [rbp|QWORD + 168] size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1054  <|@ instruction MOV [rax|QWORD[*] + 24] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr 1056  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 1058  <|@ instruction MOV (x: [rax|QWORD[*] + 32], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1060  <|@ instruction r10|QWORD = MOV [r8|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 1062  <|@ instruction rdi|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1064  <|@ instruction rax|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1066  <|@ instruction rax|DWORD[.] = CAS (address: [rsi|QWORD[.] + r10|QWORD * 1], cmpValue: rax|DWORD[.], newValue: rdi|DWORD[.]) accessKind: DWORD <|@ <|@
      nr 1068  <|@ instruction rax|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr 1070  <|@ instruction r10|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr 1072  <|@ instruction rax|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1074  <|@ instruction MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1076  <|@ instruction rax|DWORD = AND r10|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr 1078  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1080  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B84" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1094  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>} <|@ <|@
      nr 1096  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Local$] <|@ <|@
      nr 1098  <|@ instruction rax|DWORD[.] = MOV [rdi|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 1100  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r10|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rsi|QWORD[.] rbx|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rsi|QWORD[.] 
locals: rdx|QWORD[.] rbx|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rbx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr 1102  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rsi:0, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r10|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rsi|QWORD[.] rbx|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rsi|QWORD[.] 
locals: rdx|QWORD[.] rbx|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rbx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction r8|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr 1104  <|@ instruction CMP (x: r11|QWORD, y: [r8|DWORD * 8 + 520]) size: QWORD <|@ <|@
      nr 1106  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1110  <|@ instruction r11|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction r11|DWORD[.] = MOV [r11|QWORD[.] + 80] size: DWORD <|@ <|@
      nr 1114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1116  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1118  <|@ instruction BRANCH trueDestinationProbability: 7.839287703504969E-8 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B120" 
    xhandlers
    flags 
    probability 4605573989781659870
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1128  <|@ instruction rcx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction rsi|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction JUMP ~[] destination: B83 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B83" "B119" 
    successors "B121" "B180" 
    xhandlers
    flags 
    probability 4607182418093917143
    begin_IR
      LIR
      nr 1662  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr 1664  <|@ instruction rdx|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 1666  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0, r11:0, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r10|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rcx|QWORD[.] stack:40|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rcx|QWORD[.] 
locals: r11|QWORD[.] stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: stack:40|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:40|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction r8|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr 1668  <|@ instruction rbx|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr 1670  <|@ instruction rbx|DWORD = AND (x: rbx|DWORD, ~y: [rax|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1672  <|@ instruction CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1674  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B120 -> B121 falseDestination: B120 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B140" 
    xhandlers
    flags 
    probability 4607182418093917143
    begin_IR
      LIR
      nr 1676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1678  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1680  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1682  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1684  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1686  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1688  <|@ instruction BRANCH trueDestinationProbability: 3.527679190032315E-7 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B141" "B179" 
    xhandlers
    flags 
    probability 4607182414916466455
    begin_IR
      LIR
      nr 1922  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1924  <|@ instruction rdx|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1926  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1928  <|@ instruction CMP (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr 1930  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B140 -> B141 falseDestination: B140 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" 
    xhandlers
    flags 
    probability 4607182414916466455
    begin_IR
      LIR
      nr 1932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1934  <|@ instruction JUMP ~[] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B139" "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4607182418093916022
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1938  <|@ instruction rdx|DWORD[.] = MOV [r8|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1940  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1942  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B178" 
    xhandlers
    flags 
    probability 4606281698239052062
    begin_IR
      LIR
      nr 1952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1954  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>} <|@ <|@
      nr 1956  <|@ instruction r11|DWORD = MOV [rdx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1958  <|@ instruction CMP (x: r10|QWORD, y: [r11|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr 1960  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" 
    xhandlers
    flags 
    probability 4606281698239052062
    begin_IR
      LIR
      nr 1962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1964  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>} <|@ <|@
      nr 1966  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1968  <|@ instruction JUMP ~[] destination: B145 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" 
    successors "B147" "B148" 
    xhandlers
    flags 
    probability 4607182418093916022
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1972  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1974  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1976  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1978  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, r10:0, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r10|QWORD[.] 
locals: rbx|QWORD[.] vobject:Promise$Transformer:0{saved=rdx|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rcx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=rdx|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; rdx|QWORD[.] rcx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr 1980  <|@ instruction CMP (x: rsi|QWORD, y: [r11|DWORD * 8 + 24]) size: QWORD <|@ <|@
      nr 1982  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4602678818466545526
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2002  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed} <|@ <|@
      nr 2004  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4598175218839175030
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2024  <|@ instruction rax|QWORD = MOV [r11|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr 2026  <|@ instruction r8|DWORD = MOV [rax|QWORD] size: DWORD <|@ <|@
      nr 2028  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2030  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B165" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4595601733539563714
    begin_IR
      LIR
      nr 2038  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2040  <|@ instruction r13|DWORD = SHL rdi|DWORD y: 3 size: DWORD <|@ <|@
      nr 2042  <|@ instruction r13|DWORD = LEA [r13|DWORD + 8] size: DWORD <|@ <|@
      nr 2044  <|@ instruction r13|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 2046  <|@ instruction r13|QWORD = MOV [rax|QWORD + r13|QWORD * 1] size: QWORD <|@ <|@
      nr 2048  <|@ instruction CMP (x: rsi|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr 2050  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B152 -> B153 falseDestination: B152 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B151" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4592384876561998876
    begin_IR
      LIR
      nr 2248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2250  <|@ instruction rdi|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr 2252  <|@ instruction JUMP ~[] destination: B165 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B165" 
    successors "B152" "B166" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4600105333166934210
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2034  <|@ instruction CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2036  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B154" 
    xhandlers
    flags 
    probability 4602678818466545526
    begin_IR
      LIR
      nr 1984  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1986  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1988  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1990  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr 1992  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 1994  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr 1996  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr 1998  <|@ instruction JUMP ~[] destination: B147 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B129" "B147" "B153" "B149" "B135" "B131" 
    successors "B155" "B163" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr 2070  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 2072  <|@ instruction rsi|DWORD[.] = MOV [r8|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 2074  <|@ st <@st|@reference-map: [rbx:0, rsi:0, rdi:0, r10:0, r13:0, r14:0, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r10|QWORD[.] 
locals: rbx|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - r14|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] r14|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr 2076  <|@ instruction r11|DWORD[.] = MOV [rdi|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 2078  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r11:0, r13:0, r14:0, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r10|QWORD[.] 
locals: rbx|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - r14|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] r14|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr 2080  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r11:0, r13:0, r14:0, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r10|QWORD[.] 
locals: rbx|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - r14|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] r14|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr 2082  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} <|@ <|@
      nr 2084  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B162" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr 2086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2088  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2090  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2092  <|@ instruction CMP (x: rsi|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 2094  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B155 -> B156 falseDestination: B155 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" "B158" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2098  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2100  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr 2102  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2104  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B156 -> B157 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4605500002653506857
    begin_IR
      LIR
      nr 2136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2138  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2140  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 232] instr: 0 <|@ <|@
      nr 2142  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2144  <|@ instruction JUMP ~[] destination: B158 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" "B157" 
    successors "B160" "B161" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr 2146  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2148  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2150  <|@ instruction rdx|QWORD[*] = LEA [rsi|QWORD[*] + 24] size: QWORD <|@ <|@
      nr 2152  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2154  <|@ instruction rax|QWORD = MOV [rax|QWORD + 168] size: QWORD <|@ <|@
      nr 2156  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD <|@ <|@
      nr 2158  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed} <|@ <|@
      nr 2160  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2162  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 2164  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2166  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 2168  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2170  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 2172  <|@ instruction rax|QWORD = MOV [rbp|QWORD + 168] size: QWORD <|@ <|@
      nr 2174  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rax|QWORD) size: QWORD <|@ <|@
      nr 2176  <|@ instruction MOV [rsi|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed} <|@ <|@
      nr 2178  <|@ instruction MOV [rsi|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$10/1594373685@321311106] <|@ <|@
      nr 2180  <|@ instruction rsi|QWORD = MOV [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 2182  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2184  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2186  <|@ instruction rax|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2188  <|@ instruction rax|DWORD[.] = CAS (address: [rbx|QWORD[.] + rsi|QWORD * 1], cmpValue: rax|DWORD[.], newValue: rcx|DWORD[.]) accessKind: DWORD <|@ <|@
      nr 2190  <|@ instruction rax|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr 2192  <|@ instruction r10|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr 2194  <|@ instruction rax|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2196  <|@ instruction MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2198  <|@ instruction rax|DWORD = AND r10|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr 2200  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2202  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B159 -> B160 falseDestination: B159 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr 2214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2216  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2218  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B56" 
    xhandlers
    flags 
    probability 4598175218839175030
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr  638  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr  640  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction r14|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B51 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B154" 
    xhandlers
    flags 
    probability 4598175218839175030
    begin_IR
      LIR
      nr 2006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2008  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2010  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2012  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr 2014  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 2016  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr 2018  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr 2020  <|@ instruction JUMP ~[] destination: B149 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B92" 
    xhandlers
    flags 
    probability 4595601733539563714
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1200  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" "B91" 
    successors "B93" "B186" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1206  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1208  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr 1210  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B185" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1214  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 1216  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r11:0, r13:0, r14:0, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: rcx|QWORD[.] 
locals: rdx|QWORD[.] vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; r14|QWORD[.] stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr 1218  <|@ instruction CMP (x: rax|DWORD[.], y: [rcx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1220  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1224  <|@ instruction r8|DWORD[.] = MOV [r13|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 1226  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r8:0, r11:0, r14:0, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: rcx|QWORD[.] 
locals: rdx|QWORD[.] vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; r14|QWORD[.] stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr 1228  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r8:0, r11:0, r14:0, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: rcx|QWORD[.] 
locals: rdx|QWORD[.] vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; r14|QWORD[.] stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr 1230  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1232  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 64] size: QWORD <|@ <|@
      nr 1234  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1236  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4595537396906387982
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1276  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1278  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 256] instr: 0 <|@ <|@
      nr 1280  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 1284  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1288  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1290  <|@ instruction r10|QWORD[*] = LEA [rax|QWORD[*] + 24] size: QWORD <|@ <|@
      nr 1292  <|@ instruction r10|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1294  <|@ instruction r13|QWORD[*] = LEA [rax|QWORD[*] + 48] size: QWORD <|@ <|@
      nr 1296  <|@ instruction r13|QWORD[.] = MOVE r13|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1298  <|@ instruction rbx|QWORD = MOV [rbp|QWORD + 168] size: QWORD <|@ <|@
      nr 1300  <|@ instruction MOV (x: [rax|QWORD[*]], y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1302  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr 1304  <|@ instruction rbx|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1306  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1308  <|@ instruction rbx|DWORD[.] = MOV [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1310  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1312  <|@ instruction rbx|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr 1314  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV [rax|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed} <|@ <|@
      nr 1318  <|@ instruction r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1320  <|@ instruction MOV (x: [rax|QWORD[*] + 36], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr 1322  <|@ instruction MOV (x: [rax|QWORD[*] + 40], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1324  <|@ instruction rbx|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1326  <|@ instruction MOV (x: [rax|QWORD[*] + 44], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1328  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 168] size: QWORD <|@ <|@
      nr 1330  <|@ instruction MOV (x: [rax|QWORD[*] + 48], y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1332  <|@ instruction MOV [rax|QWORD[*] + 56] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed} <|@ <|@
      nr 1334  <|@ instruction MOV [rax|QWORD[*] + 60] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$7/390800101@687091653] <|@ <|@
      nr 1336  <|@ instruction r8|QWORD = MOV [r8|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 1338  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1340  <|@ instruction r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1342  <|@ instruction rax|DWORD[.] = MOVE rcx|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1344  <|@ instruction rax|DWORD[.] = CAS (address: [rdx|QWORD[.] + r8|QWORD * 1], cmpValue: rax|DWORD[.], newValue: r9|DWORD[.]) accessKind: DWORD <|@ <|@
      nr 1346  <|@ instruction rax|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr 1348  <|@ instruction r8|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr 1350  <|@ instruction rax|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1352  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr 1354  <|@ instruction MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1356  <|@ instruction rax|DWORD = AND r8|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr 1358  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1360  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1374  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction stack:80|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction stack:104|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1380  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1382  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr 1384  <|@ instruction r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr 1386  <|@ instruction rax|DWORD[.] = MOV [r14|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 1388  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, r11:0, r14:0, stack:24, stack:48, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:92|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: rdx|QWORD[.] stack:104|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rcx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] stack:80|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:18, 159, 27, 2, 2, 7, 11] <|@ <|@
      nr 1390  <|@ instruction r10|DWORD[.] = MOV [rbx|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 1392  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, r11:0, r14:0, stack:24, stack:48, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:92|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: rdx|QWORD[.] stack:104|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rcx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] stack:80|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 159, 27, 2, 2, 7, 11] <|@ <|@
      nr 1394  <|@ instruction stack:108|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1396  <|@ instruction r8|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1398  <|@ instruction r13|DWORD[.] = MOV [r14|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 1400  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, r8:0, r11:0, r13:0, stack:20, stack:24, stack:48, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:92|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: rdx|QWORD[.] stack:104|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rcx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] stack:80|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction r10|DWORD[.] = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 159, 27, 2, 2, 7, 11] <|@ <|@
      nr 1402  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, r8:0, r11:0, r13:0, stack:20, stack:24, stack:48, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:92|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: rdx|QWORD[.] stack:104|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rcx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] stack:80|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:18, 159, 27, 2, 2, 7, 11] <|@ <|@
      nr 1404  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1406  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr 1408  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4594958362668583204
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1428  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>} <|@ <|@
      nr 1430  <|@ instruction rdx|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1432  <|@ instruction CMP (x: r10|QWORD, y: [rdx|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr 1434  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    probability 4594958362668583204
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1448  <|@ instruction r14|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1450  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>} <|@ <|@
      nr 1452  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Local$] <|@ <|@
      nr 1454  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>} <|@ <|@
      nr 1456  <|@ instruction rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1458  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>} <|@ <|@
      nr 1460  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B100" "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1464  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr 1466  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B109" 
    xhandlers
    flags 
    probability 4594958362668583204
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1476  <|@ instruction rcx|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1478  <|@ instruction CMP (x: rdx|QWORD, y: [rcx|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr 1480  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B110" 
    xhandlers
    flags 
    probability 4594958362668583204
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1502  <|@ instruction rdx|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1504  <|@ instruction JUMP ~[] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B105" "B109" 
    successors "B111" "B184" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1508  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rdi:0, r11:0, r13:0, r14:0, stack:20, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: rdx|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=rdx|DWORD[.]} rbx|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=rdx|DWORD[.]} 
locals: rax|QWORD[.] rbx|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=rdx|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; rdx|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} state [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr 1510  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1514  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1516  <|@ instruction r8|QWORD = LEA [rcx|QWORD + 40] size: QWORD <|@ <|@
      nr 1518  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1520  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4595537396906387982
    begin_IR
      LIR
      nr 1558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1560  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1562  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 232] instr: 0 <|@ <|@
      nr 1564  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1566  <|@ instruction rax|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1572  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rbx|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1576  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1578  <|@ instruction r10|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [rax|QWORD[*]], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed} <|@ <|@
      nr 1584  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1586  <|@ instruction r10|QWORD = MOV [rbp|QWORD + 168] size: QWORD <|@ <|@
      nr 1588  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1590  <|@ instruction MOV [rax|QWORD[*] + 24] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr 1592  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1594  <|@ instruction MOV (x: [rax|QWORD[*] + 32], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1596  <|@ instruction r10|QWORD = MOV [r13|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 1598  <|@ instruction rbx|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1600  <|@ instruction rax|DWORD[.] = MOVE rdx|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1602  <|@ instruction rax|DWORD[.] = CAS (address: [rcx|QWORD[.] + r10|QWORD * 1], cmpValue: rax|DWORD[.], newValue: rbx|DWORD[.]) accessKind: DWORD <|@ <|@
      nr 1604  <|@ instruction rax|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr 1606  <|@ instruction r10|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr 1608  <|@ instruction rax|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1610  <|@ instruction MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1612  <|@ instruction rax|DWORD = AND r10|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr 1614  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1616  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B182" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1630  <|@ instruction rax|DWORD[.] = MOV [rdi|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 1632  <|@ st <@st|@reference-map: [rcx:0, r8:0, r14:0, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r10|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rcx|QWORD[.] stack:40|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rcx|QWORD[.] 
locals: r8|QWORD[.] stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: stack:40|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:40|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr 1634  <|@ st <@st|@reference-map: [rax:0, rcx:0, r8:0, r14:0, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r10|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rcx|QWORD[.] stack:40|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rcx|QWORD[.] 
locals: r8|QWORD[.] stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: stack:40|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:40|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rdx|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr 1636  <|@ instruction CMP (x: rsi|QWORD, y: [rdx|DWORD * 8 + 520]) size: QWORD <|@ <|@
      nr 1638  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B118" "B119" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1642  <|@ instruction rsi|DWORD[.] = MOV [r14|QWORD[.] + 80] size: DWORD <|@ <|@
      nr 1644  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1646  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1648  <|@ instruction BRANCH trueDestinationProbability: 7.839287703504969E-8 condition: = trueDestination: B117 -> B118 falseDestination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" 
    xhandlers
    flags 
    probability 4595601733539564515
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1658  <|@ instruction r11|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1660  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B167" 
    xhandlers
    flags 
    probability 4595601733539563714
    begin_IR
      LIR
      nr 2254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2256  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2258  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2260  <|@ instruction JUMP ~[] destination: B166 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B137" "B166" 
    successors "B168" "B176" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 2262  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 2264  <|@ instruction rax|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 2266  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr 2268  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B167 -> B168 falseDestination: B167 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B169" "B175" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 2270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2272  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr 2274  <|@ instruction rax|DWORD[.] = MOV [r8|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 2276  <|@ st <@st|@reference-map: [rcx:0, rbx:0, r13:0, r14:0, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r14|QWORD[.] 
locals: rbx|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rcx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] rcx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr 2278  <|@ instruction CMP (x: rax|DWORD[.], y: [r14|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 2280  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B170" "B171" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 2282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2284  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr 2286  <|@ instruction r10|DWORD[.] = MOV [rdi|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 2288  <|@ st <@st|@reference-map: [rcx:0, rbx:0, r10:0, r13:0, r14:0, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r14|QWORD[.] 
locals: rbx|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rcx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] rcx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr 2290  <|@ st <@st|@reference-map: [rcx:0, rbx:0, r10:0, r13:0, r14:0, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r14|QWORD[.] 
locals: rbx|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rcx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] rcx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr 2292  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2294  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 64] size: QWORD <|@ <|@
      nr 2296  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2298  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B169 -> B170 falseDestination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4595537396906387982
    begin_IR
      LIR
      nr 2332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2334  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2336  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 256] instr: 0 <|@ <|@
      nr 2338  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 2340  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr 2342  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 2344  <|@ instruction JUMP ~[] destination: B171 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" "B170" 
    successors "B173" "B174" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 2346  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2348  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2350  <|@ instruction r11|QWORD[*] = LEA [rax|QWORD[*] + 24] size: QWORD <|@ <|@
      nr 2352  <|@ instruction r11|QWORD[.] = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2354  <|@ instruction r8|QWORD[*] = LEA [rax|QWORD[*] + 48] size: QWORD <|@ <|@
      nr 2356  <|@ instruction r8|QWORD[.] = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2358  <|@ instruction rbp|QWORD = MOV [rbp|QWORD + 168] size: QWORD <|@ <|@
      nr 2360  <|@ instruction MOV (x: [rax|QWORD[*]], y: rbp|QWORD) size: QWORD <|@ <|@
      nr 2362  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr 2364  <|@ instruction rbp|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2366  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr 2368  <|@ instruction rbp|DWORD[.] = MOV [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 2370  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr 2372  <|@ instruction rdi|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr 2374  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: rdi|QWORD) size: QWORD <|@ <|@
      nr 2376  <|@ instruction MOV [rax|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed} <|@ <|@
      nr 2378  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2380  <|@ instruction MOV (x: [rax|QWORD[*] + 36], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 2382  <|@ instruction rdi|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2384  <|@ instruction MOV (x: [rax|QWORD[*] + 40], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr 2386  <|@ instruction rdi|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2388  <|@ instruction MOV (x: [rax|QWORD[*] + 44], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr 2390  <|@ instruction rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD <|@ <|@
      nr 2392  <|@ instruction MOV (x: [rax|QWORD[*] + 48], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2394  <|@ instruction MOV [rax|QWORD[*] + 56] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed} <|@ <|@
      nr 2396  <|@ instruction MOV [rax|QWORD[*] + 60] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$10/1594373685@321311106] <|@ <|@
      nr 2398  <|@ instruction rsi|QWORD = MOV [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 2400  <|@ instruction r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2402  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2404  <|@ instruction rax|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2406  <|@ instruction rax|DWORD[.] = CAS (address: [rbx|QWORD[.] + rsi|QWORD * 1], cmpValue: rax|DWORD[.], newValue: rdx|DWORD[.]) accessKind: DWORD <|@ <|@
      nr 2408  <|@ instruction rax|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr 2410  <|@ instruction r10|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr 2412  <|@ instruction rax|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2414  <|@ instruction MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2416  <|@ instruction rax|DWORD = AND r10|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr 2418  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2420  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 2434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2436  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2438  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B48" 
    xhandlers
    flags 
    probability 4591870179502076612
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B45 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B146" 
    xhandlers
    flags 
    probability 4591870179502076611
    begin_IR
      LIR
      nr 1944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1946  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>} <|@ <|@
      nr 1948  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1950  <|@ instruction JUMP ~[] destination: B143 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B74" 
    xhandlers
    flags 
    probability 4590583437316280435
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    probability 4590583437316280435
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction JUMP ~[] destination: B64 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B154" 
    xhandlers
    flags 
    probability 4589811391262387560
    begin_IR
      LIR
      nr 2052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2054  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr 2056  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 2058  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr 2060  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr 2062  <|@ instruction MOV (x: [r11|DWORD * 8 + 24], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2064  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2066  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2068  <|@ instruction JUMP ~[] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589811391262387560
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction r8|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr  688  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr  690  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction r14|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction r13|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>} <|@ <|@
      nr  698  <|@ instruction MOV (x: [r13|DWORD * 8 + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr  700  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    probability 4580804192411133072
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1412  <|@ instruction r14|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>} <|@ <|@
      nr 1416  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Local$] <|@ <|@
      nr 1418  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>} <|@ <|@
      nr 1420  <|@ instruction rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1422  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>} <|@ <|@
      nr 1424  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B110" 
    xhandlers
    flags 
    probability 4580804192411133072
    begin_IR
      LIR
      nr 1468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1472  <|@ instruction JUMP ~[] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction r13|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  136  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [r13:0, stack:100]
live-base-pointers: []
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: r13|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=r13|DWORD[.]} vobject:Promise:1{state=r13|DWORD[.]} - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=r13|DWORD[.]} 
locals: stack:28|DWORD[.] vobject:Promise:1{state=r13|DWORD[.]} 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: vobject:Promise:1{state=r13|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: vobject:Promise:1{state=r13|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$$anon$3:0{state=r13|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; r13|DWORD[.] 
vobject:Promise:1{state=r13|DWORD[.]} Lcom/twitter/util/Promise; r13|DWORD[.] 
vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:12, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
      nr  140  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>} <|@ <|@
      nr  144  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>} <|@ <|@
      nr  146  <|@ instruction r11|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr  150  <|@ instruction r14|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction r13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4575888835103545851
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  974  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction stack:96|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction stack:108|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction r13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  984  <|@ instruction rsi|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  988  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  990  <|@ st <@st|@reference-map: [stack:20, stack:24, stack:32, stack:60, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: stack:108|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} stack:40|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} 
locals: stack:104|QWORD[.] stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; stack:108|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr  992  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction r8|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction r13|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr 1004  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr 1006  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>} <|@ <|@
      nr 1008  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr 1012  <|@ instruction r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr 1014  <|@ instruction JUMP ~[] destination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4575888835103545851
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction stack:96|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction stack:88|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction stack:80|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  760  <|@ st <@st|@reference-map: [r13:0, stack:32, stack:40, stack:48, stack:60, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: stack:88|QWORD[.] 
locals: stack:80|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:80|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr  762  <|@ instruction rcx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction r8|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr  770  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr  772  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr  776  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4575888835103545851
    begin_IR
      LIR
      nr 2106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2108  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2110  <|@ instruction stack:120|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 2114  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr 2116  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2118  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:8, stack:60, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: stack:120|QWORD[.] 
locals: stack:40|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - r14|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] r14|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr 2120  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2122  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2124  <|@ instruction r10|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2126  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr 2128  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 2130  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr 2132  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2134  <|@ instruction JUMP ~[] destination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4565877976503276579
    begin_IR
      LIR
      nr 2300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2302  <|@ instruction stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2304  <|@ instruction stack:120|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2306  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 2308  <|@ instruction rdx|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr 2310  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2312  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:8, stack:60, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r14|QWORD[.] 
locals: stack:40|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:120|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:120|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:120|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] stack:120|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr 2314  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2316  <|@ instruction r10|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2318  <|@ instruction rcx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2320  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr 2322  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 2324  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr 2326  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr 2328  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2330  <|@ instruction JUMP ~[] destination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4565877976503276579
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1524  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1526  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1528  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1530  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr 1532  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1534  <|@ st <@st|@reference-map: [r13:0, stack:20, stack:24, stack:60, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: stack:108|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} stack:40|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} 
locals: stack:104|QWORD[.] stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; stack:108|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr 1536  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1538  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1540  <|@ instruction rdx|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1542  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1544  <|@ instruction r14|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>} <|@ <|@
      nr 1548  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Local$] <|@ <|@
      nr 1550  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr 1552  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr 1554  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>} <|@ <|@
      nr 1556  <|@ instruction JUMP ~[] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4565877976503276579
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1240  <|@ instruction stack:92|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction stack:104|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction stack:80|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1250  <|@ instruction rdx|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr 1252  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1254  <|@ st <@st|@reference-map: [r14:0, stack:24, stack:36, stack:48, stack:60, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: stack:104|QWORD[.] 
locals: stack:80|QWORD[.] vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:80|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; r14|QWORD[.] stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr 1256  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1258  <|@ instruction r8|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction rcx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1262  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr 1264  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 1266  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1268  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr 1270  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1272  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B41" 
    xhandlers
    flags 
    probability 4510263224435847550
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction stack:80|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction r8|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ st <@st|@reference-map: [stack:40, stack:48, stack:60, stack:64, stack:72, stack:88]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: stack:64|QWORD[.] - stack:88|QWORD[.] - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: stack:80|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:80|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:38, 2, 16, 4, 19, 2, 2, 7, 11] <|@ <|@
      nr  346  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  348  <|@ instruction BRANCH trueDestinationProbability: 3.527674073959098E-7 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 4510263222085147689
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>} <|@ <|@
      nr  548  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>} <|@ <|@
      nr  550  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr  552  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr  560  <|@ instruction r13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B123" "B139" 
    xhandlers
    flags 
    probability 4510263224435847550
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1692  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1694  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1696  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1698  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1700  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1702  <|@ instruction stack:80|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1704  <|@ instruction stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1706  <|@ st <@st|@reference-map: [stack:8, stack:48, stack:72, stack:88]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: stack:120|QWORD[.] - stack:80|QWORD[.] - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: stack:40|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} stack:56|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:40|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:38, 2, 16, 4, 19, 2, 2, 7, 19] <|@ <|@
      nr 1708  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr 1710  <|@ instruction BRANCH trueDestinationProbability: 3.527674073959098E-7 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B142" 
    xhandlers
    flags 
    probability 4510263222085147689
    begin_IR
      LIR
      nr 1906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1908  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1910  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1912  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1914  <|@ instruction rax|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1916  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr 1918  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr 1920  <|@ instruction JUMP ~[] destination: B139 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4500515626435851651
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction stack:80|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4500515635838651094
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@reference-map: [stack:48, stack:60, stack:72, stack:88]
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: stack:80|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:80|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:34, 4, 19, 2, 2, 7, 11] <|@ <|@
      nr  360  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B40" 
    xhandlers
    flags 
    probability 4499923315066361486
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>} <|@ <|@
      nr  378  <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  380  <|@ instruction CMP (x: r8|QWORD, y: [rsi|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4499923315066361486
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>} <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4500515635838651094
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  396  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ st <@st|@reference-map: [rax:0, rdx:0, r11:0, stack:60, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r11|QWORD[.] 
locals: rdx|QWORD[.] vobject:Promise$Transformer:0{saved=rax|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=rax|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; rax|QWORD[.] stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr  400  <|@ instruction CMP (x: r9|QWORD, y: [r10|DWORD * 8 + 24]) size: QWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4496012036211280598
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed} <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4491508436583910102
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rcx|QWORD = MOV [r10|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr  454  <|@ instruction rbx|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  456  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4489543354552066500
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  468  <|@ instruction rsi|DWORD = SHL rdi|DWORD y: 3 size: DWORD <|@ <|@
      nr  470  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 8] size: DWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = MOV [rcx|QWORD + rsi|QWORD * 1] size: QWORD <|@ <|@
      nr  476  <|@ instruction CMP (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4486158664424697308
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction rdi|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B38 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B38" 
    successors "B36" "B39" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4494046954179436996
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  462  <|@ instruction CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B124" 
    xhandlers
    flags 
    probability 4499457912450120107
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1122  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~[] destination: B82 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B82" "B123" "B118" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4500515635838651093
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1722  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1724  <|@ st <@st|@reference-map: [stack:40, stack:88]
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: stack:40|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} stack:88|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:40|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:34, 4, 19, 2, 2, 7, 19] <|@ <|@
      nr 1726  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr 1728  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B124 -> B125 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" "B138" 
    xhandlers
    flags 
    probability 4499923315066361485
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1740  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>} <|@ <|@
      nr 1742  <|@ instruction r10|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1744  <|@ instruction CMP (x: r8|QWORD, y: [r10|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr 1746  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B126 -> B127 falseDestination: B126 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B128" 
    xhandlers
    flags 
    probability 4499923315066361485
    begin_IR
      LIR
      nr 1748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1750  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>} <|@ <|@
      nr 1752  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1754  <|@ instruction JUMP ~[] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B125" "B127" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4500515635838651093
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1758  <|@ instruction r10|DWORD[.] = MOV [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1760  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1762  <|@ st <@st|@reference-map: [rax:0, rdi:0, r11:0, stack:40, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r11|QWORD[.] 
locals: rdi|QWORD[.] vobject:Promise$Transformer:0{saved=rax|QWORD[.],promise=stack:88|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:88|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=rax|QWORD[.],promise=stack:88|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; rax|QWORD[.] stack:88|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr 1764  <|@ instruction CMP (x: r9|QWORD, y: [r10|DWORD * 8 + 24]) size: QWORD <|@ <|@
      nr 1766  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B128 -> B129 falseDestination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    probability 4496012036211280597
    begin_IR
      LIR
      nr 1790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1792  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed} <|@ <|@
      nr 1794  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B130 -> B131 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4491508436583910101
    begin_IR
      LIR
      nr 1818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1820  <|@ instruction r8|QWORD = MOV [r10|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr 1822  <|@ instruction rcx|DWORD = MOV [r8|QWORD] size: DWORD <|@ <|@
      nr 1824  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1826  <|@ instruction JUMP ~[] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4489543354552066499
    begin_IR
      LIR
      nr 1834  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1836  <|@ instruction rdx|DWORD = SHL rbx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1838  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 8] size: DWORD <|@ <|@
      nr 1840  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1842  <|@ instruction rdx|QWORD = MOV [r8|QWORD + rdx|QWORD * 1] size: QWORD <|@ <|@
      nr 1844  <|@ instruction CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1846  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B133" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4486158664424697307
    begin_IR
      LIR
      nr 1872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1874  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr 1876  <|@ instruction JUMP ~[] destination: B136 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B136" 
    successors "B134" "B137" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4494046954179436995
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1830  <|@ instruction CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1832  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B133 -> B134 falseDestination: B133 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B56" 
    xhandlers
    flags 
    probability 4496012036211280598
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr  412  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr  414  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr  416  <|@ instruction r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr  418  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B31 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B154" 
    xhandlers
    flags 
    probability 4496012036211280597
    begin_IR
      LIR
      nr 1768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1770  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1772  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1774  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1776  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr 1778  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 1780  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr 1782  <|@ instruction rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1784  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr 1786  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr 1788  <|@ instruction JUMP ~[] destination: B129 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B56" 
    xhandlers
    flags 
    probability 4491508436583910102
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr  438  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr  440  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr  442  <|@ instruction r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr  444  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B33 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B154" 
    xhandlers
    flags 
    probability 4491508436583910101
    begin_IR
      LIR
      nr 1796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1798  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1800  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1802  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1804  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr 1806  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 1808  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr 1810  <|@ instruction rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr 1814  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr 1816  <|@ instruction JUMP ~[] destination: B131 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B92" 
    xhandlers
    flags 
    probability 4489543354552066500
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction rcx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr  518  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr  522  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr  524  <|@ instruction r13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B39 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B167" 
    xhandlers
    flags 
    probability 4489543354552066499
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1880  <|@ instruction rcx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1882  <|@ instruction r14|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1884  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1886  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr 1888  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr 1890  <|@ instruction rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1892  <|@ instruction JUMP ~[] destination: B137 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B124" 
    xhandlers
    flags 
    probability 4489543341119495866
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1652  <|@ instruction stack:88|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1654  <|@ instruction JUMP ~[] destination: B118 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    probability 4485820195411960388
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>} <|@ <|@
      nr  368  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>} <|@ <|@
      nr  370  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B128" 
    xhandlers
    flags 
    probability 4485820195411960387
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1732  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>} <|@ <|@
      nr 1734  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1736  <|@ instruction JUMP ~[] destination: B125 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B154" 
    xhandlers
    flags 
    probability 4483347409861011408
    begin_IR
      LIR
      nr 1848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1850  <|@ instruction MOV (x: [r10|DWORD * 8 + 24], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1852  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1854  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1856  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1858  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr 1860  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 1862  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr 1864  <|@ instruction rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr 1868  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr 1870  <|@ instruction JUMP ~[] destination: B135 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B56" 
    xhandlers
    flags 
    probability 4483347409861011408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r10|DWORD * 8 + 24], y: r9|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr  490  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr  492  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr  494  <|@ instruction r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr  496  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr  500  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B37 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4413953810109930006
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" 
    xhandlers
    flags 
    probability 4413953810109930006
    begin_IR
      LIR
      nr 1712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1714  <|@ instruction stack:88|QWORD[.] = STACKMOVE stack:56|QWORD[.] size: QWORD <|@ <|@
      nr 1716  <|@ instruction rax|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1718  <|@ instruction JUMP ~[] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2556  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2558  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2560  <|@ instruction MOV [r15|QWORD + 668] y: -289827 size: DWORD <|@ <|@
      nr 2562  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2564  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rdi:0, r11:0, r14:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: rbx|QWORD[.] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: r11|QWORD[.] - r14|QWORD[.] - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: rdx|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:5, 16, 4, 19, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2520  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2522  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2524  <|@ instruction MOV [r15|QWORD + 668] y: -323123 size: DWORD <|@ <|@
      nr 2526  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2528  <|@ st <@st|@reference-map: [rdi:0, stack:20, stack:24]
live-base-pointers: []
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: stack:108|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} rdi|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} 
locals: stack:104|QWORD[.] rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; stack:108|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B164" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2232  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2234  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2236  <|@ instruction r10|DWORD = MOVE input: int[-342323|0xfffffffffffac6cd] <|@ <|@
      nr 2238  <|@ instruction JUMP ~[] destination: B163 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" "B162" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2240  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2242  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2244  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2246  <|@ st <@st|@reference-map: [rdi:0, r11:0, r13:0, r14:0]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r11|QWORD[.] 
locals: rdi|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - r14|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] r14|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:4, 27, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B187" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2540  <|@ instruction r10|DWORD = MOVE input: int[-311571|0xfffffffffffb3eed] <|@ <|@
      nr 2542  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2544  <|@ instruction JUMP ~[] destination: B186 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" "B185" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2546  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2548  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2550  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2552  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rdi:0, r14:0]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: rcx|QWORD[.] 
locals: rdx|QWORD[.] vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=rdi|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=rdi|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; r14|QWORD[.] rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:4, 27, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction r10|DWORD = MOVE input: int[-272659|0xfffffffffffbd6ed] <|@ <|@
      nr   92  <|@ instruction r13|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction stack:28|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: [r13:0, stack:100]
live-base-pointers: []
com.twitter.util.Promise.isDefined(Promise.scala:840) [bci: 4]
stack: r13|DWORD[.] 
locals: vobject:Promise:0{state=r13|DWORD[.]} - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:503) [bci: 1]
locals: vobject:Promise$$anon$3:1{state=r13|DWORD[.]} vobject:Promise:0{state=r13|DWORD[.]} - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:1{state=r13|DWORD[.]} 
locals: stack:28|DWORD[.] vobject:Promise:0{state=r13|DWORD[.]} 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: vobject:Promise:0{state=r13|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: vobject:Promise:0{state=r13|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise:0{state=r13|DWORD[.]} Lcom/twitter/util/Promise; r13|DWORD[.] 
vobject:Promise$$anon$3:1{state=r13|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; r13|DWORD[.] 
vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:4, 1, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2466  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2468  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2470  <|@ instruction MOV [r15|QWORD + 668] y: -338211 size: DWORD <|@ <|@
      nr 2472  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2474  <|@ st <@st|@reference-map: [rax:0, rsi:0, rdi:0, r8:0, stack:72]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: r8|QWORD[.] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: rax|QWORD[.] - rsi|QWORD[.] - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: rdi|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} stack:56|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:5, 16, 4, 19, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1620  <|@ instruction r11|DWORD = MOVE input: int[-326675|0xfffffffffffb03ed] <|@ <|@
      nr 1622  <|@ instruction stack:104|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1624  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1626  <|@ instruction JUMP ~[] destination: B115 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B115" "B182" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2510  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2512  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2514  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2516  <|@ st <@st|@reference-map: [rcx:0, rdi:0, stack:24]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r10|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rcx|QWORD[.] rdi|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rcx|QWORD[.] 
locals: stack:104|QWORD[.] rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdi|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2478  <|@ instruction r8|DWORD = MOVE input: int[-336403|0xfffffffffffadded] <|@ <|@
      nr 2480  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2482  <|@ instruction JUMP ~[] destination: B179 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" "B179" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2492  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2494  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr 2496  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2498  <|@ st <@st|@reference-map: [rcx:0, rdi:0, r11:0]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r10|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rcx|QWORD[.] rdi|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rcx|QWORD[.] 
locals: r11|QWORD[.] rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdi|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction r11|DWORD = MOVE input: int[-303635|0xfffffffffffb5ded] <|@ <|@
      nr  940  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B71" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  946  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  948  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  950  <|@ st <@st|@reference-map: [rax:0, rdi:0, r10:0, r13:0]
live-base-pointers: []
com.twitter.util.Promise.isDefined(Promise.scala:840) [bci: 4]
stack: r10|DWORD[.] 
locals: rdi|QWORD[.] - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:503) [bci: 1]
locals: vobject:Promise$$anon$3:0{state=r13|DWORD[.]} rdi|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=r13|DWORD[.]} 
locals: rax|QWORD[.] rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=r13|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; r13|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:4, 1, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1138  <|@ instruction r11|DWORD = MOVE input: int[-310579|0xfffffffffffb42cd] <|@ <|@
      nr 1140  <|@ instruction stack:104|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1144  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B79" "B84" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1148  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1150  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1152  <|@ st <@st|@reference-map: [rsi:0, rdi:0, stack:24]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r10|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rsi|QWORD[.] rdi|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rsi|QWORD[.] 
locals: stack:104|QWORD[.] rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdi|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2486  <|@ instruction r8|DWORD = MOVE input: int[-333339|0xfffffffffffae9e5] <|@ <|@
      nr 2488  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2490  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2450  <|@ instruction r10|DWORD = MOVE input: int[-347923|0xfffffffffffab0ed] <|@ <|@
      nr 2452  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2454  <|@ instruction JUMP ~[] destination: B176 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" "B175" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2456  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2458  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2460  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2462  <|@ st <@st|@reference-map: [rcx:0, rdi:0, r13:0, r14:0]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r14|QWORD[.] 
locals: rdi|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rcx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] rcx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:4, 27, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction r10|DWORD = MOVE input: int[-272403|0xfffffffffffbd7ed] <|@ <|@
      nr   58  <|@ instruction r13|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction stack:28|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B5 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2502  <|@ instruction r11|DWORD = MOVE input: int[-329267|0xfffffffffffaf9cd] <|@ <|@
      nr 2504  <|@ instruction stack:104|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2506  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2508  <|@ instruction JUMP ~[] destination: B182 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B192" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2568  <|@ instruction r10|DWORD = MOVE input: int[-287763|0xfffffffffffb9bed] <|@ <|@
      nr 2570  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 2572  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2574  <|@ instruction r14|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2576  <|@ instruction JUMP ~[] destination: B189 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B18" "B191" "B190" "B189" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 2602  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2604  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2606  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2608  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r14:0]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r11|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rdi|QWORD[.] rdx|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rdi|QWORD[.] 
locals: r14|DWORD[.] rdx|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2612  <|@ instruction r13|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2614  <|@ instruction stack:28|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2616  <|@ instruction MOV [r15|QWORD + 668] y: -273459 size: DWORD <|@ <|@
      nr 2618  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2620  <|@ st <@st|@reference-map: [r13:0, stack:100]
live-base-pointers: []
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: r13|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=r13|DWORD[.]} vobject:Promise:1{state=r13|DWORD[.]} - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=r13|DWORD[.]} 
locals: stack:28|DWORD[.] vobject:Promise:1{state=r13|DWORD[.]} 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: vobject:Promise:1{state=r13|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: vobject:Promise:1{state=r13|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$$anon$3:0{state=r13|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; r13|DWORD[.] 
vobject:Promise:1{state=r13|DWORD[.]} Lcom/twitter/util/Promise; r13|DWORD[.] 
vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:12, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2442  <|@ instruction r10|DWORD = MOVE input: int[-350483|0xfffffffffffaa6ed] <|@ <|@
      nr 2444  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2446  <|@ instruction JUMP ~[] destination: B175 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction MOV [r15|QWORD + 668] y: -292643 size: DWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  538  <|@ st <@st|@reference-map: [rax:0, rdx:0, rdi:0]
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37]
stack: rax|QWORD[.] 
locals: - - - - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: rdx|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:37, 4, 19, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1896  <|@ instruction r10|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1898  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1900  <|@ instruction MOV [r15|QWORD + 668] y: -340771 size: DWORD <|@ <|@
      nr 1902  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1904  <|@ st <@st|@reference-map: [rax:0, rdi:0, r10:0]
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37]
stack: rax|QWORD[.] 
locals: - - - - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: rdi|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} r10|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:37, 4, 19, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction MOV [r15|QWORD + 668] y: -299539 size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  854  <|@ st <@st|@reference-map: [rdx:0, rbp:0, rdi:0, r10:0]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r8|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: rdx|QWORD[.] r10|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] rbp|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction DEOPT info [bci:18, 33, 27, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1156  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction stack:108|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1160  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction MOV [r15|QWORD + 668] y: -304435 size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1166  <|@ st <@st|@reference-map: [rdi:0, stack:20, stack:24]
live-base-pointers: []
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: stack:108|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} rdi|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} 
locals: stack:104|QWORD[.] rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; stack:108|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2424  <|@ instruction stack:120|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2426  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2428  <|@ instruction MOV [r15|QWORD + 668] y: -354835 size: DWORD <|@ <|@
      nr 2430  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2432  <|@ st <@st|@reference-map: [rdi:0, r8:0, r11:0, stack:8]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r10|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: rdi|QWORD[.] r11|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:120|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] r8|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
>@ <|@ instruction DEOPT info [bci:18, 159, 27, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B192" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2592  <|@ instruction r10|DWORD = MOVE input: int[-279859|0xfffffffffffbbacd] <|@ <|@
      nr 2594  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 2596  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2598  <|@ instruction r14|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2600  <|@ instruction JUMP ~[] destination: B191 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B164" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2222  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2224  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2226  <|@ instruction r10|DWORD = MOVE input: int[-344083|0xfffffffffffabfed] <|@ <|@
      nr 2228  <|@ instruction JUMP ~[] destination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1084  <|@ instruction r11|DWORD = MOVE input: int[-307987|0xfffffffffffb4ced] <|@ <|@
      nr 1086  <|@ instruction stack:104|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1088  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction JUMP ~[] destination: B79 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B192" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction r10|DWORD = MOVE input: int[-276499|0xfffffffffffbc7ed] <|@ <|@
      nr  240  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B18 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1178  <|@ instruction r10|DWORD = MOVE input: int[-294195|0xfffffffffffb82cd] <|@ <|@
      nr 1180  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1182  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B87" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1186  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1188  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1190  <|@ st <@st|@reference-map: [rax:0, rdx:0, rdi:0, r13:0]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: rax|QWORD[.] 
locals: rdx|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rdi|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rdi|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:4, 27, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1364  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1366  <|@ instruction MOV [r15|QWORD + 668] y: -318483 size: DWORD <|@ <|@
      nr 1368  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1370  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r10:0, r13:0]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r8|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: rdx|QWORD[.] r10|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] r13|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction DEOPT info [bci:18, 159, 27, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1484  <|@ instruction r10|DWORD = MOVE input: int[-322323|0xfffffffffffb14ed] <|@ <|@
      nr 1486  <|@ instruction r11|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1490  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B107" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1494  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1496  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1498  <|@ st <@st|@reference-map: [rax:0, rdi:0, r8:0, r11:0]
live-base-pointers: []
com.twitter.util.Promise.isDefined(Promise.scala:840) [bci: 4]
stack: r8|DWORD[.] 
locals: rdi|QWORD[.] - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:503) [bci: 1]
locals: vobject:Promise$$anon$3:0{state=r11|DWORD[.]} rdi|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=r11|DWORD[.]} 
locals: rax|QWORD[.] rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=r11|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; r11|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:4, 1, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B192" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2580  <|@ instruction r10|DWORD = MOVE input: int[-284443|0xfffffffffffba8e5] <|@ <|@
      nr 2582  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 2584  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2586  <|@ instruction r14|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2588  <|@ instruction JUMP ~[] destination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2206  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2208  <|@ instruction MOV [r15|QWORD + 668] y: -347667 size: DWORD <|@ <|@
      nr 2210  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2212  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r8:0, r14:0]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r10|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: rdi|QWORD[.] r8|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - r14|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] rdx|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
>@ <|@ instruction DEOPT info [bci:18, 33, 27, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B187" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2532  <|@ instruction r10|DWORD = MOVE input: int[-314131|0xfffffffffffb34ed] <|@ <|@
      nr 2534  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2536  <|@ instruction JUMP ~[] destination: B185 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction MOV [r15|QWORD + 668] y: -275211 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.FutureBench.notFused(Bench.scala:195) [bci: 0]
locals: - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  906  <|@ instruction r11|DWORD = MOVE input: int[-303379|0xfffffffffffb5eed] <|@ <|@
      nr  908  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1438  <|@ instruction r10|DWORD = MOVE input: int[-322067|0xfffffffffffb15ed] <|@ <|@
      nr 1440  <|@ instruction r11|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1442  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1444  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1170  <|@ instruction r10|DWORD = MOVE input: int[-295955|0xfffffffffffb7bed] <|@ <|@
      nr 1172  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ instruction JUMP ~[] destination: B87 -> B89 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #10         // com.twitter.util.Promise$.MODULE$:com.twitter.util.Promise$
     3: invokevirtual #11         // com.twitter.util.Promise$.apply:()com.twitter.util.Promise
     6: invokedynamic #-40        // java.lang.invoke.LambdaForm$MH.2093631819.linkToTargetMethod:(java.lang.Object)java.lang.Object
    11: invokevirtual #21         // com.twitter.util.Future.map:(scala.Function1)com.twitter.util.Future
    14: invokedynamic #-41        // java.lang.invoke.LambdaForm$MH.2093631819.linkToTargetMethod:(java.lang.Object)java.lang.Object
    19: invokevirtual #3          // com.twitter.util.Future.map:(scala.Function1)com.twitter.util.Future
    22: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@201e25c4 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr    8  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
bench.FutureBench.notFused(Bench.scala:195) [bci: 0]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr   14  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rax:0, r10:0, r13:0, r14:0]
live-base-pointers: []
bench.FutureBench.notFused(Bench.scala:195) [bci: 0]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   18  <|@ instruction rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   20  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r11|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>} <|@ <|@
      nr   38  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rax|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   50  <|@ instruction CMP (x: r8|QWORD, y: [rax|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B13" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>} <|@ <|@
      nr   72  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B13 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   84  <|@ instruction CMP (x: r9|QWORD, y: [rax|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B14" "B193" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [r10:0, r11:0, r13:0, r14:0]
live-base-pointers: []
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: r11|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=r11|DWORD[.]} vobject:Promise:1{state=r11|DWORD[.]} - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=r11|DWORD[.]} 
locals: r14|DWORD[.] vobject:Promise:1{state=r11|DWORD[.]} 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: vobject:Promise:1{state=r11|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: vobject:Promise:1{state=r11|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$$anon$3:0{state=r11|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; r11|DWORD[.] 
vobject:Promise:1{state=r11|DWORD[.]} Lcom/twitter/util/Promise; r11|DWORD[.] 
vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} state [bci:12, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  120  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 248] instr: 0 <|@ <|@
      nr  162  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction stack:40|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[*] = LEA [rax|QWORD[*] + 40] size: QWORD <|@ <|@
      nr  178  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>} <|@ <|@
      nr  182  <|@ instruction rcx|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed} <|@ <|@
      nr  188  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  190  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr  192  <|@ instruction rcx|QWORD = MOV [rbp|QWORD + 168] size: QWORD <|@ <|@
      nr  194  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV [rax|QWORD[*] + 24] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr  198  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  200  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction MOV (x: [rax|QWORD[*] + 32], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [rax|QWORD[*] + 40], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV [rax|QWORD[*] + 48] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>;compressed} <|@ <|@
      nr  210  <|@ instruction MOV (x: [rax|QWORD[*] + 52], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  212  <|@ instruction rcx|QWORD = MOV [r14|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  214  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  216  <|@ instruction rax|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rax|DWORD[.] = CAS (address: [rbx|QWORD[.] + rcx|QWORD * 1], cmpValue: rax|DWORD[.], newValue: rsi|DWORD[.]) accessKind: DWORD <|@ <|@
      nr  220  <|@ instruction rax|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr  222  <|@ instruction r11|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr  224  <|@ instruction rax|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  226  <|@ instruction rcx|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr  228  <|@ instruction MOVB (x: [rax|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  230  <|@ instruction rax|DWORD = AND r11|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  232  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  234  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B191" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Local$] <|@ <|@
      nr  252  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r10:0, r13:0, stack:88, stack:100]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:44|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rbx|QWORD[.] rdx|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rbx|QWORD[.] 
locals: stack:28|DWORD[.] rdx|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
      nr  256  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, r10:0, r13:0, stack:88, stack:100]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:44|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rbx|QWORD[.] rdx|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rbx|QWORD[.] 
locals: stack:28|DWORD[.] rdx|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
      nr  258  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>} <|@ <|@
      nr  260  <|@ instruction CMP (x: r14|QWORD, y: [r11|DWORD * 8 + 520]) size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction r11|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD <|@ <|@
      nr  268  <|@ instruction stack:56|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction r14|DWORD[.] = MOV [r11|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  272  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  274  <|@ instruction stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr  280  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr  282  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>} <|@ <|@
      nr  284  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>} <|@ <|@
      nr  286  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  288  <|@ instruction BRANCH trueDestinationProbability: 7.839287703504969E-8 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B190" 
    xhandlers
    flags 
    probability 4607182418093917144
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rbx|DWORD[.] = MOV [r14|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  302  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, r10:0, r11:0, r13:0, r14:0, stack:64, stack:72, stack:88, stack:100]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:44|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: stack:40|QWORD[.] rdx|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: stack:40|QWORD[.] 
locals: stack:28|DWORD[.] rdx|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rcx|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
      nr  304  <|@ instruction rsi|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  306  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, ~y: [rax|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  308  <|@ instruction CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B42" 
    xhandlers
    flags 
    probability 4607182418093917144
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rcx|DWORD[.] = MOV [rbx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  318  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  322  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  324  <|@ instruction BRANCH trueDestinationProbability: 3.527679190032315E-7 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" "B189" 
    xhandlers
    flags 
    probability 4607182414916466456
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction CMP (x: rax|DWORD[.], y: [rcx|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  568  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B44 falseDestination: B42 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B48" "B46" 
    xhandlers
    flags 
    probability 4607182418093916023
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  576  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  578  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  580  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B48 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B48" "B188" 
    xhandlers
    flags 
    probability 4606281698239052062
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction rsi|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  590  <|@ instruction CMP (x: r8|QWORD, y: [rsi|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B48 falseDestination: B46 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4607182418093916022
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  602  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  604  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  606  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, r10:0, r11:0, r13:0, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: rcx|QWORD[.] 
locals: rdx|QWORD[.] vobject:Promise$Transformer:0{saved=rax|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=rax|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; rax|QWORD[.] stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr  608  <|@ instruction CMP (x: r9|QWORD, y: [rsi|DWORD * 8 + 24]) size: QWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4602678818466545526
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4598175218839175030
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction stack:92|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction rbx|QWORD = MOV [rsi|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr  656  <|@ instruction r14|DWORD = MOV [rbx|QWORD] size: DWORD <|@ <|@
      nr  658  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595601733539563714
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  670  <|@ instruction rsi|DWORD = SHL r8|DWORD y: 3 size: DWORD <|@ <|@
      nr  672  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 8] size: DWORD <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  676  <|@ instruction rsi|QWORD = MOV [rbx|QWORD + rsi|QWORD * 1] size: QWORD <|@ <|@
      nr  678  <|@ instruction CMP (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  680  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4592384876561998876
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1194  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr 1196  <|@ instruction JUMP ~[] destination: B90 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B90" 
    successors "B54" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4600105333166934210
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  664  <|@ instruction CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B56" 
    xhandlers
    flags 
    probability 4602678818466545526
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr  616  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction r14|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B49 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B31" "B49" "B55" "B51" "B37" "B33" 
    successors "B57" "B88" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  708  <|@ instruction rcx|DWORD[.] = MOV [rbx|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  710  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, r11:0, r13:0, r14:0, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: rax|QWORD[.] 
locals: rdx|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr  712  <|@ instruction r8|DWORD[.] = MOV [r14|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  714  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, r8:0, r11:0, r13:0, r14:0, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: rax|QWORD[.] 
locals: rdx|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction r10|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr  716  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, r8:0, r11:0, r13:0, r14:0, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: rax|QWORD[.] 
locals: rdx|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr  718  <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} <|@ <|@
      nr  720  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B87" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction rcx|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  728  <|@ instruction CMP (x: rcx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  730  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  736  <|@ instruction r10|QWORD = LEA [rcx|QWORD + 40] size: QWORD <|@ <|@
      nr  738  <|@ instruction CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  740  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605500002653506857
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  786  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 232] instr: 0 <|@ <|@
      nr  788  <|@ instruction rcx|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  794  <|@ instruction r10|QWORD[.] = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rbp|QWORD[*] = LEA [rcx|QWORD[*] + 24] size: QWORD <|@ <|@
      nr  798  <|@ instruction rbp|QWORD[.] = MOVE rbp|QWORD[*] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rbx|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr  802  <|@ instruction MOV (x: [rcx|QWORD[*]], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  804  <|@ instruction MOV [rcx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed} <|@ <|@
      nr  806  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  808  <|@ instruction MOV (x: [rcx|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  810  <|@ instruction MOV (x: [rcx|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  812  <|@ instruction rbx|DWORD[.] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  814  <|@ instruction MOV (x: [rcx|QWORD[*] + 20], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  816  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 168] size: QWORD <|@ <|@
      nr  818  <|@ instruction MOV (x: [rcx|QWORD[*] + 24], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  820  <|@ instruction MOV [rcx|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed} <|@ <|@
      nr  822  <|@ instruction MOV [rcx|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$7/390800101@687091653] <|@ <|@
      nr  824  <|@ instruction rcx|QWORD = MOV [r8|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  826  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  830  <|@ instruction rax|DWORD[.] = CAS (address: [rdx|QWORD[.] + rcx|QWORD * 1], cmpValue: rax|DWORD[.], newValue: r8|DWORD[.]) accessKind: DWORD <|@ <|@
      nr  832  <|@ instruction rax|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr  834  <|@ instruction r8|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr  836  <|@ instruction rax|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  838  <|@ instruction MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  840  <|@ instruction rax|DWORD = AND r8|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr  842  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B68" "B65" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  858  <|@ instruction stack:96|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction stack:88|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction stack:104|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr  868  <|@ instruction rax|DWORD[.] = MOV [r14|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  870  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, r11:0, r14:0, stack:24, stack:40, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:96|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: rdx|QWORD[.] stack:104|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rbx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] stack:88|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:18, 33, 27, 2, 2, 7, 11] <|@ <|@
      nr  872  <|@ instruction r13|DWORD[.] = MOV [rcx|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  874  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, r11:0, r14:0, stack:24, stack:40, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:96|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: rdx|QWORD[.] stack:104|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rbx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] stack:88|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction r13|DWORD[.] = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 33, 27, 2, 2, 7, 11] <|@ <|@
      nr  876  <|@ instruction r10|DWORD[.] = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  878  <|@ instruction r8|DWORD[.] = MOV [r14|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  880  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, r8:0, r10:0, r11:0, r13:0, stack:24, stack:40, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:96|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: rdx|QWORD[.] stack:104|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rbx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] stack:88|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction rbp|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 33, 27, 2, 2, 7, 11] <|@ <|@
      nr  882  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, r8:0, r10:0, r11:0, r13:0, stack:24, stack:40, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:96|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: rdx|QWORD[.] stack:104|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rbx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] stack:88|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rbp|DWORD[.] * 8] state [bci:18, 33, 27, 2, 2, 7, 11] <|@ <|@
      nr  884  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  886  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  888  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B68 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B68" 
    xhandlers
    flags 
    probability 4604834113280031363
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>} <|@ <|@
      nr  898  <|@ instruction rbp|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  900  <|@ instruction CMP (x: rdx|QWORD, y: [rbp|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  902  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" 
    successors "B74" "B70" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  920  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B74 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B74" 
    xhandlers
    flags 
    probability 4604834113280031363
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  928  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>} <|@ <|@
      nr  930  <|@ instruction rbp|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  932  <|@ instruction CMP (x: rdx|QWORD, y: [rbp|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr  934  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B68" "B70" 
    successors "B75" "B86" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  958  <|@ st <@st|@reference-map: [rax:0, rbx:0, r8:0, r11:0, r13:0, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: r13|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=r13|DWORD[.]} rbx|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=r13|DWORD[.]} 
locals: rax|QWORD[.] rbx|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=r13|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; r13|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction CMP [r13|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} state [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr  960  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  964  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  966  <|@ instruction r10|QWORD = LEA [rdx|QWORD + 40] size: QWORD <|@ <|@
      nr  968  <|@ instruction CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  970  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4605500002653506857
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1018  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1020  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 232] instr: 0 <|@ <|@
      nr 1022  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr 1024  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>} // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1028  <|@ instruction rax|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction rdi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1040  <|@ instruction rdi|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction r10|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr 1044  <|@ instruction MOV (x: [rax|QWORD[*]], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1046  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed} <|@ <|@
      nr 1048  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 1050  <|@ instruction r10|QWORD = MOV [rbp|QWORD + 168] size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1054  <|@ instruction MOV [rax|QWORD[*] + 24] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr 1056  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 1058  <|@ instruction MOV (x: [rax|QWORD[*] + 32], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1060  <|@ instruction r10|QWORD = MOV [r8|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 1062  <|@ instruction rdi|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1064  <|@ instruction rax|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1066  <|@ instruction rax|DWORD[.] = CAS (address: [rsi|QWORD[.] + r10|QWORD * 1], cmpValue: rax|DWORD[.], newValue: rdi|DWORD[.]) accessKind: DWORD <|@ <|@
      nr 1068  <|@ instruction rax|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr 1070  <|@ instruction r10|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr 1072  <|@ instruction rax|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1074  <|@ instruction MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1076  <|@ instruction rax|DWORD = AND r10|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr 1078  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1080  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B84" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1094  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>} <|@ <|@
      nr 1096  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Local$] <|@ <|@
      nr 1098  <|@ instruction rax|DWORD[.] = MOV [rdi|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 1100  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r10|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rsi|QWORD[.] rbx|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rsi|QWORD[.] 
locals: rdx|QWORD[.] rbx|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rbx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr 1102  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rsi:0, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r10|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rsi|QWORD[.] rbx|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rsi|QWORD[.] 
locals: rdx|QWORD[.] rbx|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rbx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction r8|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr 1104  <|@ instruction CMP (x: r11|QWORD, y: [r8|DWORD * 8 + 520]) size: QWORD <|@ <|@
      nr 1106  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1110  <|@ instruction r11|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction r11|DWORD[.] = MOV [r11|QWORD[.] + 80] size: DWORD <|@ <|@
      nr 1114  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1116  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1118  <|@ instruction BRANCH trueDestinationProbability: 7.839287703504969E-8 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B120" 
    xhandlers
    flags 
    probability 4605573989781659870
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1128  <|@ instruction rcx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction rsi|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1132  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction JUMP ~[] destination: B83 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B83" "B119" 
    successors "B121" "B180" 
    xhandlers
    flags 
    probability 4607182418093917143
    begin_IR
      LIR
      nr 1662  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr 1664  <|@ instruction rdx|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 1666  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0, r11:0, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r10|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rcx|QWORD[.] stack:40|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rcx|QWORD[.] 
locals: r11|QWORD[.] stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: stack:40|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:40|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction r8|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr 1668  <|@ instruction rbx|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr 1670  <|@ instruction rbx|DWORD = AND (x: rbx|DWORD, ~y: [rax|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1672  <|@ instruction CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1674  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B120 -> B121 falseDestination: B120 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B140" 
    xhandlers
    flags 
    probability 4607182418093917143
    begin_IR
      LIR
      nr 1676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1678  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1680  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1682  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1684  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1686  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1688  <|@ instruction BRANCH trueDestinationProbability: 3.527679190032315E-7 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B142" "B179" 
    xhandlers
    flags 
    probability 4607182414916466455
    begin_IR
      LIR
      nr 1922  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1924  <|@ instruction rdx|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1926  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1928  <|@ instruction CMP (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr 1930  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B140 -> B142 falseDestination: B140 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B139" "B140" 
    successors "B146" "B144" 
    xhandlers
    flags 
    probability 4607182418093916022
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1938  <|@ instruction rdx|DWORD[.] = MOV [r8|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1940  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1942  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B142 -> B146 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B146" "B178" 
    xhandlers
    flags 
    probability 4606281698239052062
    begin_IR
      LIR
      nr 1952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1954  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>} <|@ <|@
      nr 1956  <|@ instruction r11|DWORD = MOV [rdx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1958  <|@ instruction CMP (x: r10|QWORD, y: [r11|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr 1960  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B144 -> B146 falseDestination: B144 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B142" "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    probability 4607182418093916022
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1946  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>} <|@ <|@
      nr 1948  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1972  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1974  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1976  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1978  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, r10:0, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r10|QWORD[.] 
locals: rbx|QWORD[.] vobject:Promise$Transformer:0{saved=rdx|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rcx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=rdx|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; rdx|QWORD[.] rcx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr 1980  <|@ instruction CMP (x: rsi|QWORD, y: [r11|DWORD * 8 + 24]) size: QWORD <|@ <|@
      nr 1982  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4602678818466545526
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2002  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed} <|@ <|@
      nr 2004  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4598175218839175030
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2024  <|@ instruction rax|QWORD = MOV [r11|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr 2026  <|@ instruction r8|DWORD = MOV [rax|QWORD] size: DWORD <|@ <|@
      nr 2028  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2030  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B165" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4595601733539563714
    begin_IR
      LIR
      nr 2038  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2040  <|@ instruction r13|DWORD = SHL rdi|DWORD y: 3 size: DWORD <|@ <|@
      nr 2042  <|@ instruction r13|DWORD = LEA [r13|DWORD + 8] size: DWORD <|@ <|@
      nr 2044  <|@ instruction r13|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 2046  <|@ instruction r13|QWORD = MOV [rax|QWORD + r13|QWORD * 1] size: QWORD <|@ <|@
      nr 2048  <|@ instruction CMP (x: rsi|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr 2050  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B152 -> B153 falseDestination: B152 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B151" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4592384876561998876
    begin_IR
      LIR
      nr 2248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2250  <|@ instruction rdi|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr 2252  <|@ instruction JUMP ~[] destination: B165 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B165" 
    successors "B152" "B166" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4600105333166934210
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2034  <|@ instruction CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2036  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B154" 
    xhandlers
    flags 
    probability 4602678818466545526
    begin_IR
      LIR
      nr 1984  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1986  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1988  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1990  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr 1992  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 1994  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr 1996  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr 1998  <|@ instruction JUMP ~[] destination: B147 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B129" "B147" "B153" "B149" "B135" "B131" 
    successors "B155" "B163" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr 2070  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 2072  <|@ instruction rsi|DWORD[.] = MOV [r8|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 2074  <|@ st <@st|@reference-map: [rbx:0, rsi:0, rdi:0, r10:0, r13:0, r14:0, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r10|QWORD[.] 
locals: rbx|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - r14|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] r14|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr 2076  <|@ instruction r11|DWORD[.] = MOV [rdi|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 2078  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r11:0, r13:0, r14:0, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r10|QWORD[.] 
locals: rbx|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - r14|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] r14|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr 2080  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r11:0, r13:0, r14:0, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r10|QWORD[.] 
locals: rbx|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - r14|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] r14|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr 2082  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} <|@ <|@
      nr 2084  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B162" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr 2086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2088  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2090  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2092  <|@ instruction CMP (x: rsi|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 2094  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B155 -> B156 falseDestination: B155 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" "B158" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2098  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2100  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr 2102  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2104  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B156 -> B157 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4605500002653506857
    begin_IR
      LIR
      nr 2136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2138  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2140  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 232] instr: 0 <|@ <|@
      nr 2142  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2144  <|@ instruction JUMP ~[] destination: B158 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" "B157" 
    successors "B160" "B161" 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr 2146  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2148  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2150  <|@ instruction rdx|QWORD[*] = LEA [rsi|QWORD[*] + 24] size: QWORD <|@ <|@
      nr 2152  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2154  <|@ instruction rax|QWORD = MOV [rax|QWORD + 168] size: QWORD <|@ <|@
      nr 2156  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD <|@ <|@
      nr 2158  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed} <|@ <|@
      nr 2160  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2162  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 2164  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2166  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 2168  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2170  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 2172  <|@ instruction rax|QWORD = MOV [rbp|QWORD + 168] size: QWORD <|@ <|@
      nr 2174  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rax|QWORD) size: QWORD <|@ <|@
      nr 2176  <|@ instruction MOV [rsi|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed} <|@ <|@
      nr 2178  <|@ instruction MOV [rsi|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$10/1594373685@321311106] <|@ <|@
      nr 2180  <|@ instruction rsi|QWORD = MOV [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 2182  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2184  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2186  <|@ instruction rax|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2188  <|@ instruction rax|DWORD[.] = CAS (address: [rbx|QWORD[.] + rsi|QWORD * 1], cmpValue: rax|DWORD[.], newValue: rcx|DWORD[.]) accessKind: DWORD <|@ <|@
      nr 2190  <|@ instruction rax|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr 2192  <|@ instruction r10|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr 2194  <|@ instruction rax|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2196  <|@ instruction MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2198  <|@ instruction rax|DWORD = AND r10|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr 2200  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2202  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B159 -> B160 falseDestination: B159 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors 
    xhandlers
    flags 
    probability 4605573990361670801
    begin_IR
      LIR
      nr 2214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2216  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2218  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B56" 
    xhandlers
    flags 
    probability 4598175218839175030
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr  638  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr  640  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction r14|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B51 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B154" 
    xhandlers
    flags 
    probability 4598175218839175030
    begin_IR
      LIR
      nr 2006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2008  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2010  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2012  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr 2014  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 2016  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr 2018  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr 2020  <|@ instruction JUMP ~[] destination: B149 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B92" 
    xhandlers
    flags 
    probability 4595601733539563714
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1200  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" "B91" 
    successors "B93" "B186" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1206  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1208  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr 1210  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B185" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1214  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 1216  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r11:0, r13:0, r14:0, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: rcx|QWORD[.] 
locals: rdx|QWORD[.] vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; r14|QWORD[.] stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr 1218  <|@ instruction CMP (x: rax|DWORD[.], y: [rcx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1220  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1224  <|@ instruction r8|DWORD[.] = MOV [r13|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 1226  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r8:0, r11:0, r14:0, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: rcx|QWORD[.] 
locals: rdx|QWORD[.] vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; r14|QWORD[.] stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr 1228  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r8:0, r11:0, r14:0, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: rcx|QWORD[.] 
locals: rdx|QWORD[.] vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; r14|QWORD[.] stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr 1230  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1232  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 64] size: QWORD <|@ <|@
      nr 1234  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1236  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4595537396906387982
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1276  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1278  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 256] instr: 0 <|@ <|@
      nr 1280  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 1284  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1288  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1290  <|@ instruction r10|QWORD[*] = LEA [rax|QWORD[*] + 24] size: QWORD <|@ <|@
      nr 1292  <|@ instruction r10|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1294  <|@ instruction r13|QWORD[*] = LEA [rax|QWORD[*] + 48] size: QWORD <|@ <|@
      nr 1296  <|@ instruction r13|QWORD[.] = MOVE r13|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1298  <|@ instruction rbx|QWORD = MOV [rbp|QWORD + 168] size: QWORD <|@ <|@
      nr 1300  <|@ instruction MOV (x: [rax|QWORD[*]], y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1302  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr 1304  <|@ instruction rbx|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1306  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1308  <|@ instruction rbx|DWORD[.] = MOV [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1310  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1312  <|@ instruction rbx|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr 1314  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1316  <|@ instruction MOV [rax|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed} <|@ <|@
      nr 1318  <|@ instruction r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1320  <|@ instruction MOV (x: [rax|QWORD[*] + 36], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr 1322  <|@ instruction MOV (x: [rax|QWORD[*] + 40], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1324  <|@ instruction rbx|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1326  <|@ instruction MOV (x: [rax|QWORD[*] + 44], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1328  <|@ instruction rbx|QWORD = MOV [rsi|QWORD + 168] size: QWORD <|@ <|@
      nr 1330  <|@ instruction MOV (x: [rax|QWORD[*] + 48], y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1332  <|@ instruction MOV [rax|QWORD[*] + 56] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed} <|@ <|@
      nr 1334  <|@ instruction MOV [rax|QWORD[*] + 60] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$7/390800101@687091653] <|@ <|@
      nr 1336  <|@ instruction r8|QWORD = MOV [r8|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 1338  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1340  <|@ instruction r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1342  <|@ instruction rax|DWORD[.] = MOVE rcx|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1344  <|@ instruction rax|DWORD[.] = CAS (address: [rdx|QWORD[.] + r8|QWORD * 1], cmpValue: rax|DWORD[.], newValue: r9|DWORD[.]) accessKind: DWORD <|@ <|@
      nr 1346  <|@ instruction rax|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr 1348  <|@ instruction r8|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr 1350  <|@ instruction rax|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1352  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr 1354  <|@ instruction MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1356  <|@ instruction rax|DWORD = AND r8|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr 1358  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1360  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" "B101" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1374  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction stack:80|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction stack:104|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1380  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1382  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr 1384  <|@ instruction r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr 1386  <|@ instruction rax|DWORD[.] = MOV [r14|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 1388  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, r11:0, r14:0, stack:24, stack:48, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:92|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: rdx|QWORD[.] stack:104|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rcx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] stack:80|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:18, 159, 27, 2, 2, 7, 11] <|@ <|@
      nr 1390  <|@ instruction r10|DWORD[.] = MOV [rbx|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 1392  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, r11:0, r14:0, stack:24, stack:48, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:92|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: rdx|QWORD[.] stack:104|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rcx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] stack:80|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 159, 27, 2, 2, 7, 11] <|@ <|@
      nr 1394  <|@ instruction stack:108|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1396  <|@ instruction r8|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1398  <|@ instruction r13|DWORD[.] = MOV [r14|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 1400  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, r8:0, r11:0, r13:0, stack:20, stack:24, stack:48, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:92|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: rdx|QWORD[.] stack:104|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rcx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] stack:80|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction r10|DWORD[.] = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 159, 27, 2, 2, 7, 11] <|@ <|@
      nr 1402  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, r8:0, r11:0, r13:0, stack:20, stack:24, stack:48, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: stack:92|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: rdx|QWORD[.] stack:104|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rcx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] stack:80|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:18, 159, 27, 2, 2, 7, 11] <|@ <|@
      nr 1404  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1406  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr 1408  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B104 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B104" 
    xhandlers
    flags 
    probability 4594958362668583204
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1428  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>} <|@ <|@
      nr 1430  <|@ instruction rdx|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1432  <|@ instruction CMP (x: r10|QWORD, y: [rdx|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr 1434  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B99" "B101" 
    successors "B110" "B106" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1412  <|@ instruction r14|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>} <|@ <|@
      nr 1416  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Local$] <|@ <|@
      nr 1418  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>} <|@ <|@
      nr 1420  <|@ instruction rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1422  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>} <|@ <|@
      nr 1464  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr 1466  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B104 -> B110 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B110" 
    xhandlers
    flags 
    probability 4594958362668583204
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1476  <|@ instruction rcx|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1478  <|@ instruction CMP (x: rdx|QWORD, y: [rcx|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr 1480  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B104" "B106" 
    successors "B111" "B184" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1508  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rdi:0, r11:0, r13:0, r14:0, stack:20, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: rdx|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=rdx|DWORD[.]} rbx|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=rdx|DWORD[.]} 
locals: rax|QWORD[.] rbx|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=rdx|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; rdx|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} state [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr 1510  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1514  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1516  <|@ instruction r8|QWORD = LEA [rcx|QWORD + 40] size: QWORD <|@ <|@
      nr 1518  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1520  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4595537396906387982
    begin_IR
      LIR
      nr 1558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1560  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1562  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 232] instr: 0 <|@ <|@
      nr 1564  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1566  <|@ instruction rax|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1572  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rbx|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1576  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1578  <|@ instruction r10|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [rax|QWORD[*]], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed} <|@ <|@
      nr 1584  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1586  <|@ instruction r10|QWORD = MOV [rbp|QWORD + 168] size: QWORD <|@ <|@
      nr 1588  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1590  <|@ instruction MOV [rax|QWORD[*] + 24] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr 1592  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1594  <|@ instruction MOV (x: [rax|QWORD[*] + 32], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1596  <|@ instruction r10|QWORD = MOV [r13|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 1598  <|@ instruction rbx|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1600  <|@ instruction rax|DWORD[.] = MOVE rdx|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1602  <|@ instruction rax|DWORD[.] = CAS (address: [rcx|QWORD[.] + r10|QWORD * 1], cmpValue: rax|DWORD[.], newValue: rbx|DWORD[.]) accessKind: DWORD <|@ <|@
      nr 1604  <|@ instruction rax|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr 1606  <|@ instruction r10|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr 1608  <|@ instruction rax|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1610  <|@ instruction MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1612  <|@ instruction rax|DWORD = AND r10|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr 1614  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1616  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B182" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1630  <|@ instruction rax|DWORD[.] = MOV [rdi|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 1632  <|@ st <@st|@reference-map: [rcx:0, r8:0, r14:0, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r10|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rcx|QWORD[.] stack:40|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rcx|QWORD[.] 
locals: r8|QWORD[.] stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: stack:40|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:40|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr 1634  <|@ st <@st|@reference-map: [rax:0, rcx:0, r8:0, r14:0, stack:88]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r10|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rcx|QWORD[.] stack:40|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rcx|QWORD[.] 
locals: r8|QWORD[.] stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: stack:40|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:40|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rdx|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr 1636  <|@ instruction CMP (x: rsi|QWORD, y: [rdx|DWORD * 8 + 520]) size: QWORD <|@ <|@
      nr 1638  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B118" "B119" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 1640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1642  <|@ instruction rsi|DWORD[.] = MOV [r14|QWORD[.] + 80] size: DWORD <|@ <|@
      nr 1644  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1646  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1648  <|@ instruction BRANCH trueDestinationProbability: 7.839287703504969E-8 condition: = trueDestination: B117 -> B118 falseDestination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" 
    xhandlers
    flags 
    probability 4595601733539564515
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1658  <|@ instruction r11|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1660  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B167" 
    xhandlers
    flags 
    probability 4595601733539563714
    begin_IR
      LIR
      nr 2254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2256  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2258  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2260  <|@ instruction JUMP ~[] destination: B166 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B137" "B166" 
    successors "B168" "B176" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 2262  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 2264  <|@ instruction rax|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 2266  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr 2268  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B167 -> B168 falseDestination: B167 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B169" "B175" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 2270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2272  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr 2274  <|@ instruction rax|DWORD[.] = MOV [r8|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 2276  <|@ st <@st|@reference-map: [rcx:0, rbx:0, r13:0, r14:0, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r14|QWORD[.] 
locals: rbx|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rcx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] rcx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr 2278  <|@ instruction CMP (x: rax|DWORD[.], y: [r14|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 2280  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B170" "B171" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 2282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2284  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr 2286  <|@ instruction r10|DWORD[.] = MOV [rdi|QWORD[.] + 104] size: DWORD <|@ <|@
      nr 2288  <|@ st <@st|@reference-map: [rcx:0, rbx:0, r10:0, r13:0, r14:0, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r14|QWORD[.] 
locals: rbx|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rcx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] rcx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr 2290  <|@ st <@st|@reference-map: [rcx:0, rbx:0, r10:0, r13:0, r14:0, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r14|QWORD[.] 
locals: rbx|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rcx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rbx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] rcx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr 2292  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2294  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 64] size: QWORD <|@ <|@
      nr 2296  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2298  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B169 -> B170 falseDestination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4595537396906387982
    begin_IR
      LIR
      nr 2332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2334  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2336  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 256] instr: 0 <|@ <|@
      nr 2338  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 2340  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr 2342  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 2344  <|@ instruction JUMP ~[] destination: B171 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" "B170" 
    successors "B173" "B174" 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 2346  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2348  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2350  <|@ instruction r11|QWORD[*] = LEA [rax|QWORD[*] + 24] size: QWORD <|@ <|@
      nr 2352  <|@ instruction r11|QWORD[.] = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2354  <|@ instruction r8|QWORD[*] = LEA [rax|QWORD[*] + 48] size: QWORD <|@ <|@
      nr 2356  <|@ instruction r8|QWORD[.] = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2358  <|@ instruction rbp|QWORD = MOV [rbp|QWORD + 168] size: QWORD <|@ <|@
      nr 2360  <|@ instruction MOV (x: [rax|QWORD[*]], y: rbp|QWORD) size: QWORD <|@ <|@
      nr 2362  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed} <|@ <|@
      nr 2364  <|@ instruction rbp|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2366  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr 2368  <|@ instruction rbp|DWORD[.] = MOV [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 2370  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr 2372  <|@ instruction rdi|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr 2374  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: rdi|QWORD) size: QWORD <|@ <|@
      nr 2376  <|@ instruction MOV [rax|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed} <|@ <|@
      nr 2378  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2380  <|@ instruction MOV (x: [rax|QWORD[*] + 36], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 2382  <|@ instruction rdi|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2384  <|@ instruction MOV (x: [rax|QWORD[*] + 40], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr 2386  <|@ instruction rdi|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2388  <|@ instruction MOV (x: [rax|QWORD[*] + 44], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr 2390  <|@ instruction rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD <|@ <|@
      nr 2392  <|@ instruction MOV (x: [rax|QWORD[*] + 48], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2394  <|@ instruction MOV [rax|QWORD[*] + 56] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed} <|@ <|@
      nr 2396  <|@ instruction MOV [rax|QWORD[*] + 60] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$10/1594373685@321311106] <|@ <|@
      nr 2398  <|@ instruction rsi|QWORD = MOV [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 2400  <|@ instruction r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2402  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 2404  <|@ instruction rax|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2406  <|@ instruction rax|DWORD[.] = CAS (address: [rbx|QWORD[.] + rsi|QWORD * 1], cmpValue: rax|DWORD[.], newValue: rdx|DWORD[.]) accessKind: DWORD <|@ <|@
      nr 2408  <|@ instruction rax|DWORD = MOVE input: boolean[true|0x1] <|@ <|@
      nr 2410  <|@ instruction r10|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr 2412  <|@ instruction rax|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2414  <|@ instruction MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2416  <|@ instruction rax|DWORD = AND r10|DWORD alignment: 4 size: DWORD y: int[1|0x1] <|@ <|@
      nr 2418  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2420  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors 
    xhandlers
    flags 
    probability 4595601734043921846
    begin_IR
      LIR
      nr 2434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2436  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2438  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B154" 
    xhandlers
    flags 
    probability 4589811391262387560
    begin_IR
      LIR
      nr 2052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2054  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr 2056  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 2058  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr 2060  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr 2062  <|@ instruction MOV (x: [r11|DWORD * 8 + 24], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2064  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2066  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2068  <|@ instruction JUMP ~[] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589811391262387560
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction r8|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr  688  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr  690  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction r14|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction r13|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>} <|@ <|@
      nr  698  <|@ instruction MOV (x: [r13|DWORD * 8 + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr  700  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction r13|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  136  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [r13:0, stack:100]
live-base-pointers: []
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: r13|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=r13|DWORD[.]} vobject:Promise:1{state=r13|DWORD[.]} - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=r13|DWORD[.]} 
locals: stack:28|DWORD[.] vobject:Promise:1{state=r13|DWORD[.]} 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: vobject:Promise:1{state=r13|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: vobject:Promise:1{state=r13|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$$anon$3:0{state=r13|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; r13|DWORD[.] 
vobject:Promise:1{state=r13|DWORD[.]} Lcom/twitter/util/Promise; r13|DWORD[.] 
vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:12, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
      nr  140  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>} <|@ <|@
      nr  144  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>} <|@ <|@
      nr  146  <|@ instruction r11|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr  150  <|@ instruction r14|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction r13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4575888835103545851
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  974  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction stack:96|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction stack:108|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction r13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  984  <|@ instruction rsi|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  988  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  990  <|@ st <@st|@reference-map: [stack:20, stack:24, stack:32, stack:60, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: stack:108|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} stack:40|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} 
locals: stack:104|QWORD[.] stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; stack:108|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr  992  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction r8|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction r13|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr 1004  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr 1006  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>} <|@ <|@
      nr 1008  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr 1012  <|@ instruction r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr 1014  <|@ instruction JUMP ~[] destination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4575888835103545851
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction stack:96|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction stack:88|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction stack:80|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  760  <|@ st <@st|@reference-map: [r13:0, stack:32, stack:40, stack:48, stack:60, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: stack:88|QWORD[.] 
locals: stack:80|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:80|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr  762  <|@ instruction rcx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction r8|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr  770  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr  772  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr  776  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B159" 
    xhandlers
    flags 
    probability 4575888835103545851
    begin_IR
      LIR
      nr 2106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2108  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2110  <|@ instruction stack:120|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 2114  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr 2116  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2118  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:8, stack:60, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: stack:120|QWORD[.] 
locals: stack:40|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - r14|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] r14|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr 2120  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2122  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2124  <|@ instruction r10|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2126  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr 2128  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 2130  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr 2132  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2134  <|@ instruction JUMP ~[] destination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4565877976503276579
    begin_IR
      LIR
      nr 2300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2302  <|@ instruction stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2304  <|@ instruction stack:120|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2306  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 2308  <|@ instruction rdx|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr 2310  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2312  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:8, stack:60, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r14|QWORD[.] 
locals: stack:40|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:120|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:120|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:120|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] stack:120|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr 2314  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2316  <|@ instruction r10|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2318  <|@ instruction rcx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2320  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr 2322  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 2324  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr 2326  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr 2328  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2330  <|@ instruction JUMP ~[] destination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4565877976503276579
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1524  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1526  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1528  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1530  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr 1532  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1534  <|@ st <@st|@reference-map: [r13:0, stack:20, stack:24, stack:60, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: stack:108|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} stack:40|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} 
locals: stack:104|QWORD[.] stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; stack:108|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
      nr 1536  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1538  <|@ instruction r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1540  <|@ instruction rdx|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1542  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1544  <|@ instruction r14|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>} <|@ <|@
      nr 1548  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Local$] <|@ <|@
      nr 1550  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr 1552  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr 1554  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>} <|@ <|@
      nr 1556  <|@ instruction JUMP ~[] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4565877976503276579
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1240  <|@ instruction stack:92|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction stack:104|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction stack:80|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1250  <|@ instruction rdx|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr 1252  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1254  <|@ st <@st|@reference-map: [r14:0, stack:24, stack:36, stack:48, stack:60, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: stack:104|QWORD[.] 
locals: stack:80|QWORD[.] vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:80|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; r14|QWORD[.] stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr 1256  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1258  <|@ instruction r8|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1260  <|@ instruction rcx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1262  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr 1264  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 1266  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1268  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr 1270  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1272  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B41" 
    xhandlers
    flags 
    probability 4510263224435847550
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction stack:80|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction r8|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ st <@st|@reference-map: [stack:40, stack:48, stack:60, stack:64, stack:72, stack:88]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: stack:64|QWORD[.] - stack:88|QWORD[.] - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: stack:80|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:80|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:38, 2, 16, 4, 19, 2, 2, 7, 11] <|@ <|@
      nr  346  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  348  <|@ instruction BRANCH trueDestinationProbability: 3.527674073959098E-7 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 4510263222085147689
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>} <|@ <|@
      nr  548  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>} <|@ <|@
      nr  550  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr  552  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr  560  <|@ instruction r13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B123" "B139" 
    xhandlers
    flags 
    probability 4510263224435847550
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1692  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1694  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1698  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1700  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1702  <|@ instruction stack:80|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1704  <|@ instruction stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1706  <|@ st <@st|@reference-map: [stack:8, stack:48, stack:72, stack:88]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: stack:120|QWORD[.] - stack:80|QWORD[.] - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: stack:40|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} stack:56|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:40|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:38, 2, 16, 4, 19, 2, 2, 7, 19] <|@ <|@
      nr 1708  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr 1710  <|@ instruction BRANCH trueDestinationProbability: 3.527674073959098E-7 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B142" 
    xhandlers
    flags 
    probability 4510263222085147689
    begin_IR
      LIR
      nr 1906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1908  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1910  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1912  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1914  <|@ instruction rax|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1916  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr 1918  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr 1920  <|@ instruction JUMP ~[] destination: B139 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4500515626435851651
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction stack:80|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B30" "B28" 
    xhandlers
    flags 
    probability 4500515635838651094
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@reference-map: [stack:48, stack:60, stack:72, stack:88]
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: stack:80|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:80|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:34, 4, 19, 2, 2, 7, 11] <|@ <|@
      nr  360  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>} <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B30 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" "B40" 
    xhandlers
    flags 
    probability 4499923315066361486
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  380  <|@ instruction CMP (x: r8|QWORD, y: [rsi|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B30 falseDestination: B28 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4500515635838651094
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>} <|@ <|@
      nr  370  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  396  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr  398  <|@ st <@st|@reference-map: [rax:0, rdx:0, r11:0, stack:60, stack:72, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r11|QWORD[.] 
locals: rdx|QWORD[.] vobject:Promise$Transformer:0{saved=rax|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:40|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=rax|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; rax|QWORD[.] stack:40|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 11] <|@ <|@
      nr  400  <|@ instruction CMP (x: r9|QWORD, y: [r10|DWORD * 8 + 24]) size: QWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4496012036211280598
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed} <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4491508436583910102
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rcx|QWORD = MOV [r10|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr  454  <|@ instruction rbx|DWORD = MOV [rcx|QWORD] size: DWORD <|@ <|@
      nr  456  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4489543354552066500
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  468  <|@ instruction rsi|DWORD = SHL rdi|DWORD y: 3 size: DWORD <|@ <|@
      nr  470  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 8] size: DWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD = MOV [rcx|QWORD + rsi|QWORD * 1] size: QWORD <|@ <|@
      nr  476  <|@ instruction CMP (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4486158664424697308
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction rdi|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B38 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B38" 
    successors "B36" "B39" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4494046954179436996
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  462  <|@ instruction CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B124" 
    xhandlers
    flags 
    probability 4499457912450120107
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1122  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~[] destination: B82 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B82" "B123" "B118" 
    successors "B128" "B126" 
    xhandlers
    flags 
    probability 4500515635838651093
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1722  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1724  <|@ st <@st|@reference-map: [stack:40, stack:88]
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: stack:40|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} stack:88|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: stack:40|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:34, 4, 19, 2, 2, 7, 19] <|@ <|@
      nr 1726  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr 1728  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B124 -> B128 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B128" "B138" 
    xhandlers
    flags 
    probability 4499923315066361485
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1740  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>} <|@ <|@
      nr 1742  <|@ instruction r10|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1744  <|@ instruction CMP (x: r8|QWORD, y: [r10|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr 1746  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B126 -> B128 falseDestination: B126 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B124" "B126" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4500515635838651093
    begin_IR
      LIR
      nr 1756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1732  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>} <|@ <|@
      nr 1734  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1758  <|@ instruction r10|DWORD[.] = MOV [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1760  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3 <|@ <|@
      nr 1762  <|@ st <@st|@reference-map: [rax:0, rdi:0, r11:0, stack:40, stack:88]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r11|QWORD[.] 
locals: rdi|QWORD[.] vobject:Promise$Transformer:0{saved=rax|QWORD[.],promise=stack:88|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:88|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=rax|QWORD[.],promise=stack:88|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; rax|QWORD[.] stack:88|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 19] <|@ <|@
      nr 1764  <|@ instruction CMP (x: r9|QWORD, y: [r10|DWORD * 8 + 24]) size: QWORD <|@ <|@
      nr 1766  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B128 -> B129 falseDestination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B131" "B132" 
    xhandlers
    flags 
    probability 4496012036211280597
    begin_IR
      LIR
      nr 1790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1792  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed} <|@ <|@
      nr 1794  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B130 -> B131 falseDestination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B133" 
    xhandlers
    flags 
    probability 4491508436583910101
    begin_IR
      LIR
      nr 1818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1820  <|@ instruction r8|QWORD = MOV [r10|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr 1822  <|@ instruction rcx|DWORD = MOV [r8|QWORD] size: DWORD <|@ <|@
      nr 1824  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1826  <|@ instruction JUMP ~[] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4489543354552066499
    begin_IR
      LIR
      nr 1834  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1836  <|@ instruction rdx|DWORD = SHL rbx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1838  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 8] size: DWORD <|@ <|@
      nr 1840  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1842  <|@ instruction rdx|QWORD = MOV [r8|QWORD + rdx|QWORD * 1] size: QWORD <|@ <|@
      nr 1844  <|@ instruction CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1846  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B133" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4486158664424697307
    begin_IR
      LIR
      nr 1872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1874  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr 1876  <|@ instruction JUMP ~[] destination: B136 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B136" 
    successors "B134" "B137" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4494046954179436995
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1830  <|@ instruction CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1832  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B133 -> B134 falseDestination: B133 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B56" 
    xhandlers
    flags 
    probability 4496012036211280598
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr  412  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr  414  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr  416  <|@ instruction r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr  418  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B31 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B154" 
    xhandlers
    flags 
    probability 4496012036211280597
    begin_IR
      LIR
      nr 1768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1770  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1772  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1774  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1776  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr 1778  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 1780  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr 1782  <|@ instruction rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1784  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr 1786  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr 1788  <|@ instruction JUMP ~[] destination: B129 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B56" 
    xhandlers
    flags 
    probability 4491508436583910102
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr  438  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr  440  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr  442  <|@ instruction r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr  444  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B33 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B154" 
    xhandlers
    flags 
    probability 4491508436583910101
    begin_IR
      LIR
      nr 1796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1798  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1800  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1802  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1804  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr 1806  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 1808  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr 1810  <|@ instruction rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr 1814  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr 1816  <|@ instruction JUMP ~[] destination: B131 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B92" 
    xhandlers
    flags 
    probability 4489543354552066500
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction rcx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr  518  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr  522  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr  524  <|@ instruction r13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B39 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B167" 
    xhandlers
    flags 
    probability 4489543354552066499
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1880  <|@ instruction rcx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1882  <|@ instruction r14|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1884  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1886  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr 1888  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>} <|@ <|@
      nr 1890  <|@ instruction rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1892  <|@ instruction JUMP ~[] destination: B137 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B124" 
    xhandlers
    flags 
    probability 4489543341119495866
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1652  <|@ instruction stack:88|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1654  <|@ instruction JUMP ~[] destination: B118 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B154" 
    xhandlers
    flags 
    probability 4483347409861011408
    begin_IR
      LIR
      nr 1848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1850  <|@ instruction MOV (x: [r10|DWORD * 8 + 24], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1852  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1854  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1856  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1858  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr 1860  <|@ instruction rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr 1862  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr 1864  <|@ instruction rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr 1868  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr 1870  <|@ instruction JUMP ~[] destination: B135 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B56" 
    xhandlers
    flags 
    probability 4483347409861011408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r10|DWORD * 8 + 24], y: r9|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>} <|@ <|@
      nr  490  <|@ instruction r9|QWORD = MOVE input: long[4398039040|0x10624c000] <|@ <|@
      nr  492  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$] <|@ <|@
      nr  494  <|@ instruction r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$] <|@ <|@
      nr  496  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>} <|@ <|@
      nr  500  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B37 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" 
    xhandlers
    flags 
    probability 4413953810109930006
    begin_IR
      LIR
      nr 1712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1714  <|@ instruction stack:88|QWORD[.] = STACKMOVE stack:56|QWORD[.] size: QWORD <|@ <|@
      nr 1716  <|@ instruction rax|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1718  <|@ instruction JUMP ~[] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2556  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2558  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2560  <|@ instruction MOV [r15|QWORD + 668] y: -289827 size: DWORD <|@ <|@
      nr 2562  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2564  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rdi:0, r11:0, r14:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: rbx|QWORD[.] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: r11|QWORD[.] - r14|QWORD[.] - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: rdx|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:5, 16, 4, 19, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2520  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2522  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2524  <|@ instruction MOV [r15|QWORD + 668] y: -323123 size: DWORD <|@ <|@
      nr 2526  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2528  <|@ st <@st|@reference-map: [rdi:0, stack:20, stack:24]
live-base-pointers: []
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: stack:108|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} rdi|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} 
locals: stack:104|QWORD[.] rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; stack:108|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B164" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2232  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2234  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2236  <|@ instruction r10|DWORD = MOVE input: int[-342323|0xfffffffffffac6cd] <|@ <|@
      nr 2238  <|@ instruction JUMP ~[] destination: B163 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" "B162" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2240  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2242  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2244  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2246  <|@ st <@st|@reference-map: [rdi:0, r11:0, r13:0, r14:0]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r11|QWORD[.] 
locals: rdi|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - r14|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] r14|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:4, 27, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B187" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2540  <|@ instruction r10|DWORD = MOVE input: int[-311571|0xfffffffffffb3eed] <|@ <|@
      nr 2544  <|@ instruction JUMP ~[] destination: B186 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" "B185" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2546  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2542  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2548  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2550  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2552  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rdi:0, r14:0]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: rcx|QWORD[.] 
locals: rdx|QWORD[.] vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=rdi|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=rdi|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; r14|QWORD[.] rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:4, 27, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction r10|DWORD = MOVE input: int[-272659|0xfffffffffffbd6ed] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r13|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction stack:28|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: [r13:0, stack:100]
live-base-pointers: []
com.twitter.util.Promise.isDefined(Promise.scala:840) [bci: 4]
stack: r13|DWORD[.] 
locals: vobject:Promise:0{state=r13|DWORD[.]} - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:503) [bci: 1]
locals: vobject:Promise$$anon$3:1{state=r13|DWORD[.]} vobject:Promise:0{state=r13|DWORD[.]} - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:1{state=r13|DWORD[.]} 
locals: stack:28|DWORD[.] vobject:Promise:0{state=r13|DWORD[.]} 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: vobject:Promise:0{state=r13|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: vobject:Promise:0{state=r13|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise:0{state=r13|DWORD[.]} Lcom/twitter/util/Promise; r13|DWORD[.] 
vobject:Promise$$anon$3:1{state=r13|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; r13|DWORD[.] 
vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:4, 1, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2466  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2468  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2470  <|@ instruction MOV [r15|QWORD + 668] y: -338211 size: DWORD <|@ <|@
      nr 2472  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2474  <|@ st <@st|@reference-map: [rax:0, rsi:0, rdi:0, r8:0, stack:72]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: r8|QWORD[.] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: rax|QWORD[.] - rsi|QWORD[.] - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: rdi|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} stack:56|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:5, 16, 4, 19, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1620  <|@ instruction r11|DWORD = MOVE input: int[-326675|0xfffffffffffb03ed] <|@ <|@
      nr 1626  <|@ instruction JUMP ~[] destination: B115 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B115" "B182" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2510  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1622  <|@ instruction stack:104|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1624  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2512  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2514  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2516  <|@ st <@st|@reference-map: [rcx:0, rdi:0, stack:24]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r10|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rcx|QWORD[.] rdi|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rcx|QWORD[.] 
locals: stack:104|QWORD[.] rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdi|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2478  <|@ instruction r8|DWORD = MOVE input: int[-336403|0xfffffffffffadded] <|@ <|@
      nr 2482  <|@ instruction JUMP ~[] destination: B179 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" "B179" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2492  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2488  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2494  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr 2496  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2498  <|@ st <@st|@reference-map: [rcx:0, rdi:0, r11:0]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r10|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rcx|QWORD[.] rdi|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rcx|QWORD[.] 
locals: r11|QWORD[.] rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdi|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction r11|DWORD = MOVE input: int[-303635|0xfffffffffffb5ded] <|@ <|@
      nr  942  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B71" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  908  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  948  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  950  <|@ st <@st|@reference-map: [rax:0, rdi:0, r10:0, r13:0]
live-base-pointers: []
com.twitter.util.Promise.isDefined(Promise.scala:840) [bci: 4]
stack: r10|DWORD[.] 
locals: rdi|QWORD[.] - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:503) [bci: 1]
locals: vobject:Promise$$anon$3:0{state=r13|DWORD[.]} rdi|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=r13|DWORD[.]} 
locals: rax|QWORD[.] rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=r13|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; r13|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:4, 1, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1138  <|@ instruction r11|DWORD = MOVE input: int[-310579|0xfffffffffffb42cd] <|@ <|@
      nr 1144  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B79" "B84" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1086  <|@ instruction stack:104|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1088  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1150  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1152  <|@ st <@st|@reference-map: [rsi:0, rdi:0, stack:24]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r10|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rsi|QWORD[.] rdi|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rsi|QWORD[.] 
locals: stack:104|QWORD[.] rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdi|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B181" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2486  <|@ instruction r8|DWORD = MOVE input: int[-333339|0xfffffffffffae9e5] <|@ <|@
      nr 2490  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2450  <|@ instruction r10|DWORD = MOVE input: int[-347923|0xfffffffffffab0ed] <|@ <|@
      nr 2454  <|@ instruction JUMP ~[] destination: B176 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" "B175" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2456  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2452  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2458  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2460  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2462  <|@ st <@st|@reference-map: [rcx:0, rdi:0, r13:0, r14:0]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: r14|QWORD[.] 
locals: rdi|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rcx|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] rcx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:4, 27, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction r10|DWORD = MOVE input: int[-272403|0xfffffffffffbd7ed] <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B5 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B183" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2502  <|@ instruction r11|DWORD = MOVE input: int[-329267|0xfffffffffffaf9cd] <|@ <|@
      nr 2508  <|@ instruction JUMP ~[] destination: B182 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B192" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2568  <|@ instruction r10|DWORD = MOVE input: int[-287763|0xfffffffffffb9bed] <|@ <|@
      nr 2570  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 2572  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2574  <|@ instruction r14|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2576  <|@ instruction JUMP ~[] destination: B189 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B18" "B191" "B190" "B189" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 2602  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2604  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2606  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2608  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r14:0]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r11|DWORD 
locals: - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42]
locals: rdi|QWORD[.] rdx|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: rdi|QWORD[.] 
locals: r14|DWORD[.] rdx|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2612  <|@ instruction r13|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2614  <|@ instruction stack:28|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2616  <|@ instruction MOV [r15|QWORD + 668] y: -273459 size: DWORD <|@ <|@
      nr 2618  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2620  <|@ st <@st|@reference-map: [r13:0, stack:100]
live-base-pointers: []
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: r13|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=r13|DWORD[.]} vobject:Promise:1{state=r13|DWORD[.]} - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=r13|DWORD[.]} 
locals: stack:28|DWORD[.] vobject:Promise:1{state=r13|DWORD[.]} 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: vobject:Promise:1{state=r13|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: vobject:Promise:1{state=r13|DWORD[.]} vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$$anon$3:0{state=r13|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; r13|DWORD[.] 
vobject:Promise:1{state=r13|DWORD[.]} Lcom/twitter/util/Promise; r13|DWORD[.] 
vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:12, 6, 5, 7, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B177" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2442  <|@ instruction r10|DWORD = MOVE input: int[-350483|0xfffffffffffaa6ed] <|@ <|@
      nr 2446  <|@ instruction JUMP ~[] destination: B175 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction MOV [r15|QWORD + 668] y: -292643 size: DWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  538  <|@ st <@st|@reference-map: [rax:0, rdx:0, rdi:0]
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37]
stack: rax|QWORD[.] 
locals: - - - - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: rdx|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:37, 4, 19, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1896  <|@ instruction r10|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1898  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1900  <|@ instruction MOV [r15|QWORD + 668] y: -340771 size: DWORD <|@ <|@
      nr 1902  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1904  <|@ st <@st|@reference-map: [rax:0, rdi:0, r10:0]
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37]
stack: rax|QWORD[.] 
locals: - - - - - 
com.twitter.util.Local$.save(Local.scala:20) [bci: 4]
locals: - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19]
stack: rdi|QWORD[.] vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
locals: - vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} r10|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} Lcom/twitter/util/Promise$Transformer; Object[null] Object[null] Object[null] 
vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:37, 4, 19, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction MOV [r15|QWORD + 668] y: -299539 size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  854  <|@ st <@st|@reference-map: [rdx:0, rbp:0, rdi:0, r10:0]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r8|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: rdx|QWORD[.] r10|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] rbp|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction DEOPT info [bci:18, 33, 27, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1156  <|@ instruction stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction stack:108|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1160  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction MOV [r15|QWORD + 668] y: -304435 size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1166  <|@ st <@st|@reference-map: [rdi:0, stack:20, stack:24]
live-base-pointers: []
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12]
stack: stack:108|DWORD[.] 
locals: vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} rdi|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} 
locals: stack:104|QWORD[.] rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; stack:108|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:12, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2424  <|@ instruction stack:120|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2426  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2428  <|@ instruction MOV [r15|QWORD + 668] y: -354835 size: DWORD <|@ <|@
      nr 2430  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2432  <|@ st <@st|@reference-map: [rdi:0, r8:0, r11:0, stack:8]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r10|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: rdi|QWORD[.] r11|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - stack:120|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] r8|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
>@ <|@ instruction DEOPT info [bci:18, 159, 27, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B192" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2592  <|@ instruction r10|DWORD = MOVE input: int[-279859|0xfffffffffffbbacd] <|@ <|@
      nr 2594  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 2596  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2598  <|@ instruction r14|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2600  <|@ instruction JUMP ~[] destination: B191 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B164" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2222  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2224  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2226  <|@ instruction r10|DWORD = MOVE input: int[-344083|0xfffffffffffabfed] <|@ <|@
      nr 2228  <|@ instruction JUMP ~[] destination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1084  <|@ instruction r11|DWORD = MOVE input: int[-307987|0xfffffffffffb4ced] <|@ <|@
      nr 1090  <|@ instruction JUMP ~[] destination: B79 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B192" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction r10|DWORD = MOVE input: int[-276499|0xfffffffffffbc7ed] <|@ <|@
      nr  240  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B18 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1178  <|@ instruction r10|DWORD = MOVE input: int[-294195|0xfffffffffffb82cd] <|@ <|@
      nr 1182  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B87" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1180  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1188  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1190  <|@ st <@st|@reference-map: [rax:0, rdx:0, rdi:0, r13:0]
live-base-pointers: []
com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4]
stack: rax|QWORD[.] 
locals: rdx|QWORD[.] vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rdi|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rdi|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}} Lcom/twitter/util/Promise$Transformer; r13|QWORD[.] rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$7/390800101@687091653] 
>@ <|@ instruction DEOPT info [bci:4, 27, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1364  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1366  <|@ instruction MOV [r15|QWORD + 668] y: -318483 size: DWORD <|@ <|@
      nr 1368  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1370  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r10:0, r13:0]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r8|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159]
locals: rdx|QWORD[.] r10|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdx|QWORD[.] r13|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 11]
locals: - 
>@ <|@ instruction DEOPT info [bci:18, 159, 27, 2, 2, 7, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1484  <|@ instruction r10|DWORD = MOVE input: int[-322323|0xfffffffffffb14ed] <|@ <|@
      nr 1486  <|@ instruction r11|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1490  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B102" "B107" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1494  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1496  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1498  <|@ st <@st|@reference-map: [rax:0, rdi:0, r8:0, r11:0]
live-base-pointers: []
com.twitter.util.Promise.isDefined(Promise.scala:840) [bci: 4]
stack: r8|DWORD[.] 
locals: rdi|QWORD[.] - - - 
com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:503) [bci: 1]
locals: vobject:Promise$$anon$3:0{state=r11|DWORD[.]} rdi|QWORD[.] - - - - - - - - 
com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6]
locals: - - 
com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5]
stack: vobject:Promise$$anon$3:0{state=r11|DWORD[.]} 
locals: rax|QWORD[.] rdi|QWORD[.] 
com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} - 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
vobject:Promise$$anon$3:0{state=r11|DWORD[.]} Lcom/twitter/util/Promise$$anon$3; r11|DWORD[.] 
vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} Lcom/twitter/util/Future$$Lambda$8/112631710; Object[FutureBench$$Lambda$10/1594373685@321311106] 
>@ <|@ instruction DEOPT info [bci:4, 1, 6, 5, 7, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B192" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2580  <|@ instruction r10|DWORD = MOVE input: int[-284443|0xfffffffffffba8e5] <|@ <|@
      nr 2582  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 2584  <|@ instruction rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2586  <|@ instruction r14|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2588  <|@ instruction JUMP ~[] destination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2206  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2208  <|@ instruction MOV [r15|QWORD + 668] y: -347667 size: DWORD <|@ <|@
      nr 2210  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2212  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r8:0, r14:0]
live-base-pointers: []
com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18]
stack: r10|DWORD 
locals: - - - 
com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33]
locals: rdi|QWORD[.] r8|QWORD[.] - - - - - - - - - 
com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27]
locals: - - r14|QWORD[.] 
com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2]
locals: - - 
com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2]
locals: rdi|QWORD[.] rdx|QWORD[.] 
com.twitter.util.Future.map(Future.scala:1811) [bci: 7]
locals: - - 
bench.FutureBench.notFused(Bench.scala:195) [bci: 19]
locals: - 
>@ <|@ instruction DEOPT info [bci:18, 33, 27, 2, 2, 7, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B187" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2532  <|@ instruction r10|DWORD = MOVE input: int[-314131|0xfffffffffffb34ed] <|@ <|@
      nr 2536  <|@ instruction JUMP ~[] destination: B185 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction MOV [r15|QWORD + 668] y: -275211 size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.FutureBench.notFused(Bench.scala:195) [bci: 0]
locals: - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  906  <|@ instruction r11|DWORD = MOVE input: int[-303379|0xfffffffffffb5eed] <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1438  <|@ instruction r10|DWORD = MOVE input: int[-322067|0xfffffffffffb15ed] <|@ <|@
      nr 1440  <|@ instruction r11|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1442  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1444  <|@ instruction JUMP ~[] destination: B102 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1170  <|@ instruction r10|DWORD = MOVE input: int[-295955|0xfffffffffffb7bed] <|@ <|@
      nr 1174  <|@ instruction JUMP ~[] destination: B87 -> B89 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #10         // com.twitter.util.Promise$.MODULE$:com.twitter.util.Promise$
     3: invokevirtual #11         // com.twitter.util.Promise$.apply:()com.twitter.util.Promise
     6: invokedynamic #-40        // java.lang.invoke.LambdaForm$MH.2093631819.linkToTargetMethod:(java.lang.Object)java.lang.Object
    11: invokevirtual #21         // com.twitter.util.Future.map:(scala.Function1)com.twitter.util.Future
    14: invokedynamic #-41        // java.lang.invoke.LambdaForm$MH.2093631819.linkToTargetMethod:(java.lang.Object)java.lang.Object
    19: invokevirtual #3          // com.twitter.util.Future.map:(scala.Function1)com.twitter.util.Future
    22: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0   <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1090a1f78, value=0x10ad59e60]:0x10ad59e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@201e25c4 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 48 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 58 8 r14|DWORD[.] = MOV [r13|QWORD[.] + 104] size: DWORD  <||@
  Comment 62 10 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0]  <||@
  Comment 62 [r13:0, r14:0]at bench.FutureBench.notFused(Bench.scala:195) [bci: 0, duringCall: false, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 62 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 66 12 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 66 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 76 14 rax|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD  <||@
  Comment 80 16 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0]  <||@
  Comment 80 [rax:0, r10:0, r13:0, r14:0]at bench.FutureBench.notFused(Bench.scala:195) [bci: 0, duringCall: false, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 80 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 84 18 rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 92 20 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 94 22 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 100 block B2 null  <||@
  Comment 100 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 34 r11|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 108 36 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}  <||@
  Comment 108 {meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}}  <||@
  Comment 118 38 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 121 40 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4  <||@
  Comment 127 block B4 null  <||@
  Comment 127 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 127 48 rax|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 135 50 CMP (x: r8|QWORD, y: [rax|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 143 52 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B7  <||@
  Comment 149 block B7 null  <||@
  Comment 149 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 149 70 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>}  <||@
  Comment 149 {meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>}}  <||@
  Comment 159 72 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 162 74 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B13 falseDestination: B7 -> B9  <||@
  Comment 168 block B9 null  <||@
  Comment 168 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 168 82 rax|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 176 84 CMP (x: r9|QWORD, y: [rax|DWORD * 8 + 56]) size: QWORD  <||@
  Comment 184 86 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13  <||@
  Comment 190 block B13 null  <||@
  Comment 190 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 190 112 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} state [bci:12, 6, 5, 7, 2, 2, 7, 11]  <||@
  Comment 190 [r10:0, r11:0, r13:0, r14:0]at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12, duringCall: false, rethrow: false]
              |0                                              |1                                      |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=r11|DWORD[.]}  |vobject:Promise:1{state=r11|DWORD[.]}  |-  |-  |-  |-  |-  |-  |-  |- 
     stack:   |r11|DWORD[.]                                   |                                       |   |   |   |   |   |   |   |  
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1                                     
     locals:  |r14|DWORD[.]                                   |vobject:Promise:1{state=r11|DWORD[.]} 
     stack:   |vobject:Promise$$anon$3:0{state=r11|DWORD[.]}  |                                      
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1                                                                             |2 
     locals:  |vobject:Promise:1{state=r11|DWORD[.]}  |vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                                      |1                                                                            
     locals:  |vobject:Promise:1{state=r11|DWORD[.]}  |vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 190 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 190 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed}}  <||@
  Comment 202 114 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B193  <||@
  Comment 208 block B14 null  <||@
  Comment 208 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 208 118 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 212 120 rsi|QWORD = LEA [rax|QWORD + 56] size: QWORD  <||@
  Comment 216 122 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 220 124 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 226 block B16 null  <||@
  Comment 226 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 226 158 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 230 160 AMD64PREFETCH ~[rax|QWORD + 248] instr: 0  <||@
  Comment 237 162 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 237 164 JUMP ~[] destination: B16 -> B17  <||@
  Comment 237 block B17 null  <||@
  Comment 237 166 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 237 168 rbx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 240 170 stack:40|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 245 172 rsi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 249 174 rsi|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 249 176 rdx|QWORD[*] = LEA [rax|QWORD[*] + 40] size: QWORD  <||@
  Comment 253 178 rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 253 180 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}  <||@
  Comment 253 {meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}}  <||@
  Comment 263 182 rcx|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 270 184 MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 273 186 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed}  <||@
  Comment 273 {meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed}}  <||@
  Comment 280 188 MOV (x: [rax|QWORD[*] + 12], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 284 190 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}  <||@
  Comment 284 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}}  <||@
  Comment 294 192 rcx|QWORD = MOV [rbp|QWORD + 168] size: QWORD  <||@
  Comment 301 194 MOV (x: [rax|QWORD[*] + 16], y: rcx|QWORD) size: QWORD  <||@
  Comment 305 196 MOV [rax|QWORD[*] + 24] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}  <||@
  Comment 305 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}}  <||@
  Comment 312 198 MOV (x: [rax|QWORD[*] + 28], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 316 200 rcx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 323 202 MOV (x: [rax|QWORD[*] + 32], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 326 204 rcx|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 333 206 MOV (x: [rax|QWORD[*] + 40], y: rcx|QWORD) size: QWORD  <||@
  Comment 337 208 MOV [rax|QWORD[*] + 48] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>;compressed}  <||@
  Comment 337 {meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>;compressed}}  <||@
  Comment 344 210 MOV (x: [rax|QWORD[*] + 52], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 348 212 rcx|QWORD = MOV [r14|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 356 214 rsi|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 360 216 rax|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 363 218 rax|DWORD[.] = CAS (address: [rbx|QWORD[.] + rcx|QWORD * 1], cmpValue: rax|DWORD[.], newValue: rsi|DWORD[.]) accessKind: DWORD  <||@
  Comment 368 220 rax|DWORD = MOVE input: boolean[true|0x1]  <||@
  Comment 373 222 r11|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 383 224 rax|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 390 226 rcx|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 400 228 MOVB (x: [rax|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 404 230 rax|DWORD = AND r11|DWORD alignment: 4 size: DWORD y: int[1|0x1]  <||@
  Comment 407 {DataSection[0x0]}  <||@
  Comment 414 232 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 416 234 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 422 block B19 null  <||@
  Comment 422 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 422 246 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 427 248 stack:28|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 432 250 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Local$]  <||@
  Comment 432 {Object[Class:com.twitter.util.Local$]}  <||@
  Comment 442 252 rax|DWORD[.] = MOV [rsi|QWORD[.] + 104] size: DWORD  <||@
  Comment 445 254 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 11]  <||@
  Comment 445 [rdx:0, rbx:0, r10:0, r13:0, stack:88, stack:100]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:44|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rbx|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:28|DWORD[.]  |rdx|QWORD[.] 
     stack:   |rbx|QWORD[.]       |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                             |2 
     locals:  |rdx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 445 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 452 256 r11|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 11]  <||@
  Comment 452 [rax:0, rdx:0, rbx:0, r10:0, r13:0, stack:88, stack:100]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:44|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rbx|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:28|DWORD[.]  |rdx|QWORD[.] 
     stack:   |rbx|QWORD[.]       |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                             |2 
     locals:  |rdx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 452 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 460 258 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>}  <||@
  Comment 460 {meta{HotSpotMethod<ThreadLocal.getMap(Thread)>}}  <||@
  Comment 470 260 CMP (x: r14|QWORD, y: [r11|DWORD * 8 + 520]) size: QWORD  <||@
  Comment 478 262 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B191  <||@
  Comment 484 block B20 null  <||@
  Comment 484 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 484 266 r11|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD  <||@
  Comment 491 268 stack:56|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 496 270 r14|DWORD[.] = MOV [r11|QWORD[.] + 80] size: DWORD  <||@
  Comment 500 272 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 507 274 stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 512 276 r11|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 519 278 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 519 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 529 280 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 529 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 539 282 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}  <||@
  Comment 539 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}}  <||@
  Comment 549 284 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>}  <||@
  Comment 549 {meta{HotSpotType<[Lscala/Option;, resolved>}}  <||@
  Comment 559 286 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 562 288 BRANCH trueDestinationProbability: 7.839287703504969E-8 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 568 block B22 null  <||@
  Comment 568 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 568 300 rbx|DWORD[.] = MOV [r14|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 576 302 rcx|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 11]  <||@
  Comment 576 [rax:0, rdx:0, rbx:0, r10:0, r11:0, r13:0, r14:0, stack:64, stack:72, stack:88, stack:100]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:44|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:28|DWORD[.]  |rdx|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                             |2 
     locals:  |rdx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 576 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 583 304 rsi|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 587 306 rsi|DWORD = AND (x: rsi|DWORD, ~y: [rax|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 594 308 CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 596 310 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B190  <||@
  Comment 602 block B23 null  <||@
  Comment 602 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 602 314 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 606 316 rcx|DWORD[.] = MOV [rbx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 610 318 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 616 320 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 620 322 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 622 324 BRANCH trueDestinationProbability: 3.527679190032315E-7 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B42  <||@
  Comment 628 block B42 null  <||@
  Comment 628 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 628 566 CMP (x: rax|DWORD[.], y: [rcx|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 635 568 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B44 falseDestination: B42 -> B189  <||@
  Comment 641 block B44 null  <||@
  Comment 641 574 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 641 576 rax|DWORD[.] = MOV [rbx|QWORD[.] + 28] size: DWORD  <||@
  Comment 644 578 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 646 580 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B48 falseDestination: B44 -> B46  <||@
  Comment 652 block B46 null  <||@
  Comment 652 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 652 588 rsi|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 659 590 CMP (x: r8|QWORD, y: [rsi|DWORD * 8 + 56]) size: QWORD  <||@
  Comment 667 592 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B48 falseDestination: B46 -> B188  <||@
  Comment 673 block B48 null  <||@
  Comment 673 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 673 600 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 676 602 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 682 604 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 686 606 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 686 [rax:0, rcx:0, rdx:0, r10:0, r11:0, r13:0, stack:72, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                           |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |vobject:Promise$Transformer:0{saved=rax|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |rcx|QWORD[.]  |                                                                                                                                                            |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:40|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 686 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 693 608 CMP (x: r9|QWORD, y: [rsi|DWORD * 8 + 24]) size: QWORD  <||@
  Comment 701 610 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 707 block B50 null  <||@
  Comment 707 628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 707 630 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed}  <||@
  Comment 707 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed}}  <||@
  Comment 713 632 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52  <||@
  Comment 719 block B52 null  <||@
  Comment 719 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 719 652 stack:92|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 723 654 rbx|QWORD = MOV [rsi|DWORD * 8 + 32] size: QWORD  <||@
  Comment 731 656 r14|DWORD = MOV [rbx|QWORD] size: DWORD  <||@
  Comment 734 658 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 740 660 JUMP ~[] destination: B52 -> B53  <||@
  Comment 745 block B54 loop 1 depth 1 header:1924|LoopBegin  <||@
  Comment 745 668 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 752 670 rsi|DWORD = SHL r8|DWORD y: 3 size: DWORD  <||@
  Comment 758 672 rsi|DWORD = LEA [rsi|DWORD + 8] size: DWORD  <||@
  Comment 761 674 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 764 676 rsi|QWORD = MOV [rbx|QWORD + rsi|QWORD * 1] size: QWORD  <||@
  Comment 768 678 CMP (x: r9|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 771 680 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B90  <||@
  Comment 777 block B90 loop 1 depth 1 header:1924|LoopBegin  <||@
  Comment 777 1192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 777 1194 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 780 1196 JUMP ~[] destination: B90 -> B53  <||@
  Comment 780 block B53 loop 1 depth 1 header:1924|LoopBegin  <||@
  Comment 780 662 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 780 664 CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 783 666 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B91  <||@
  Comment 790 block B49 null  <||@
  Comment 790 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 790 614 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 790 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 800 616 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 810 618 rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 813 620 r14|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 816 622 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 819 624 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 822 626 JUMP ~[] destination: B49 -> B56  <||@
  Comment 822 block B56 null  <||@
  Comment 822 706 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 822 708 rcx|DWORD[.] = MOV [rbx|QWORD[.] + 104] size: DWORD  <||@
  Comment 825 710 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 825 [rax:0, rcx:0, rdx:0, r11:0, r13:0, r14:0, stack:72, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                           |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |rax|QWORD[.]  |                                                                                                                                                            |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:40|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 825 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 829 712 r8|DWORD[.] = MOV [r14|QWORD[.] + 104] size: DWORD  <||@
  Comment 833 714 r10|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 833 [rax:0, rcx:0, rdx:0, r8:0, r11:0, r13:0, r14:0, stack:72, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                           |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |rax|QWORD[.]  |                                                                                                                                                            |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:40|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 833 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 841 716 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 841 [rax:0, rcx:0, rdx:0, r8:0, r11:0, r13:0, r14:0, stack:72, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                           |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |rax|QWORD[.]  |                                                                                                                                                            |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:40|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 841 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 845 718 CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed}  <||@
  Comment 845 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed}}  <||@
  Comment 852 720 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B88  <||@
  Comment 858 block B57 null  <||@
  Comment 858 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 858 724 rcx|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 865 726 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 869 728 CMP (x: rcx|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 872 730 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B87  <||@
  Comment 878 block B58 null  <||@
  Comment 878 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 878 734 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 882 736 r10|QWORD = LEA [rcx|QWORD + 40] size: QWORD  <||@
  Comment 886 738 CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 890 740 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B60  <||@
  Comment 896 block B60 null  <||@
  Comment 896 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 896 784 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 900 786 AMD64PREFETCH ~[rcx|QWORD + 232] instr: 0  <||@
  Comment 907 788 rcx|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 907 790 JUMP ~[] destination: B60 -> B61  <||@
  Comment 907 block B61 null  <||@
  Comment 907 792 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 907 794 r10|QWORD[.] = MOVE rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 910 796 rbp|QWORD[*] = LEA [rcx|QWORD[*] + 24] size: QWORD  <||@
  Comment 914 798 rbp|QWORD[.] = MOVE rbp|QWORD[*] moveKind: QWORD  <||@
  Comment 914 800 rbx|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 921 802 MOV (x: [rcx|QWORD[*]], y: rbx|QWORD) size: QWORD  <||@
  Comment 924 804 MOV [rcx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed}  <||@
  Comment 924 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed}}  <||@
  Comment 931 806 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 935 808 MOV (x: [rcx|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 939 810 MOV (x: [rcx|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 943 812 rbx|DWORD[.] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 950 814 MOV (x: [rcx|QWORD[*] + 20], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 953 816 rbx|QWORD = MOV [rsi|QWORD + 168] size: QWORD  <||@
  Comment 960 818 MOV (x: [rcx|QWORD[*] + 24], y: rbx|QWORD) size: QWORD  <||@
  Comment 964 820 MOV [rcx|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed}  <||@
  Comment 964 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed}}  <||@
  Comment 971 822 MOV [rcx|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$7/390800101@687091653]  <||@
  Comment 971 {NarrowOop[FutureBench$$Lambda$7/390800101@687091653]}  <||@
  Comment 978 824 rcx|QWORD = MOV [r8|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 986 826 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 990 828 r8|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 997 830 rax|DWORD[.] = CAS (address: [rdx|QWORD[.] + rcx|QWORD * 1], cmpValue: rax|DWORD[.], newValue: r8|DWORD[.]) accessKind: DWORD  <||@
  Comment 1003 832 rax|DWORD = MOVE input: boolean[true|0x1]  <||@
  Comment 1008 834 r8|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 1018 836 rax|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1025 838 MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1029 840 rax|DWORD = AND r8|DWORD alignment: 4 size: DWORD y: int[1|0x1]  <||@
  Comment 1032 {DataSection[0x0]}  <||@
  Comment 1039 842 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1041 844 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 1047 block B63 null  <||@
  Comment 1047 856 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1047 858 stack:96|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1052 860 stack:88|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1057 862 stack:104|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1062 864 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1067 866 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 1067 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 1077 868 rax|DWORD[.] = MOV [r14|QWORD[.] + 104] size: DWORD  <||@
  Comment 1081 870 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:18, 33, 27, 2, 2, 7, 11]  <||@
  Comment 1081 [rax:0, rcx:0, rdx:0, rbx:0, r11:0, r14:0, stack:24, stack:40, stack:72, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:96|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33, duringCall: true, rethrow: false]
              |0             |1                   |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |stack:104|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rbx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rdx|QWORD[.]  |stack:88|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1081 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1085 872 r13|DWORD[.] = MOV [rcx|QWORD[.] + 104] size: DWORD  <||@
  Comment 1089 874 r13|DWORD[.] = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 33, 27, 2, 2, 7, 11]  <||@
  Comment 1089 [rax:0, rdx:0, rbx:0, r11:0, r14:0, stack:24, stack:40, stack:72, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:96|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33, duringCall: true, rethrow: false]
              |0             |1                   |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |stack:104|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rbx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rdx|QWORD[.]  |stack:88|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1089 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1097 876 r10|DWORD[.] = MOV [rbx|QWORD[.] + 12] size: DWORD  <||@
  Comment 1101 878 r8|DWORD[.] = MOV [r14|QWORD[.] + 104] size: DWORD  <||@
  Comment 1105 880 rbp|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 33, 27, 2, 2, 7, 11]  <||@
  Comment 1105 [rax:0, rdx:0, rbx:0, r8:0, r10:0, r11:0, r13:0, stack:24, stack:40, stack:72, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:96|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33, duringCall: true, rethrow: false]
              |0             |1                   |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |stack:104|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rbx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rdx|QWORD[.]  |stack:88|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1105 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1113 882 NULLCHECK [r12|QWORD[*] + rbp|DWORD[.] * 8] state [bci:18, 33, 27, 2, 2, 7, 11]  <||@
  Comment 1113 [rax:0, rdx:0, rbx:0, r8:0, r10:0, r11:0, r13:0, stack:24, stack:40, stack:72, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:96|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33, duringCall: true, rethrow: false]
              |0             |1                   |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |stack:104|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rbx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rdx|QWORD[.]  |stack:88|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1113 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1117 884 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1121 886 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1124 888 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B68 falseDestination: B63 -> B65  <||@
  Comment 1130 block B65 null  <||@
  Comment 1130 894 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1130 896 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}  <||@
  Comment 1130 {meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}}  <||@
  Comment 1140 898 rbp|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1148 900 CMP (x: rdx|QWORD, y: [rbp|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 1156 902 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B68  <||@
  Comment 1162 block B68 null  <||@
  Comment 1162 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1162 918 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1165 920 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B74 falseDestination: B68 -> B70  <||@
  Comment 1171 block B70 null  <||@
  Comment 1171 926 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1171 928 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>}  <||@
  Comment 1171 {meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>}}  <||@
  Comment 1181 930 rbp|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1189 932 CMP (x: rdx|QWORD, y: [rbp|DWORD * 8 + 56]) size: QWORD  <||@
  Comment 1197 934 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B74  <||@
  Comment 1203 block B74 null  <||@
  Comment 1203 956 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1203 958 CMP [r13|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} state [bci:12, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 1203 [rax:0, rbx:0, r8:0, r11:0, r13:0, stack:72, stack:88]at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12, duringCall: false, rethrow: false]
              |0                                              |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=r13|DWORD[.]}  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
     stack:   |r13|DWORD[.]                                   |              |   |   |   |   |   |   |   |  
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1            
     locals:  |rax|QWORD[.]                                   |rbx|QWORD[.] 
     stack:   |vobject:Promise$$anon$3:0{state=r13|DWORD[.]}  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1203 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1203 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed}}  <||@
  Comment 1215 960 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B86  <||@
  Comment 1221 block B75 null  <||@
  Comment 1221 962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1221 964 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1225 966 r10|QWORD = LEA [rdx|QWORD + 40] size: QWORD  <||@
  Comment 1229 968 CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1233 970 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77  <||@
  Comment 1239 block B77 null  <||@
  Comment 1239 1016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1239 1018 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 1243 1020 AMD64PREFETCH ~[rdx|QWORD + 232] instr: 0  <||@
  Comment 1250 1022 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}  <||@
  Comment 1250 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}}  <||@
  Comment 1260 1024 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}  <||@
  Comment 1260 {meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}}  <||@
  Comment 1270 1026 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1275 1028 rax|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1278 1030 rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1283 1032 JUMP ~[] destination: B77 -> B78  <||@
  Comment 1283 block B78 null  <||@
  Comment 1283 1034 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1283 1036 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1286 1038 rdi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 1290 1040 rdi|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD  <||@
  Comment 1290 1042 r10|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 1297 1044 MOV (x: [rax|QWORD[*]], y: r10|QWORD) size: QWORD  <||@
  Comment 1300 1046 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed}  <||@
  Comment 1300 {meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed}}  <||@
  Comment 1307 1048 MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1311 1050 r10|QWORD = MOV [rbp|QWORD + 168] size: QWORD  <||@
  Comment 1318 1052 MOV (x: [rax|QWORD[*] + 16], y: r10|QWORD) size: QWORD  <||@
  Comment 1322 1054 MOV [rax|QWORD[*] + 24] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}  <||@
  Comment 1322 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}}  <||@
  Comment 1329 1056 MOV (x: [rax|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1333 1058 MOV (x: [rax|QWORD[*] + 32], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 1337 1060 r10|QWORD = MOV [r8|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 1345 1062 rdi|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1349 1064 rax|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 1352 1066 rax|DWORD[.] = CAS (address: [rsi|QWORD[.] + r10|QWORD * 1], cmpValue: rax|DWORD[.], newValue: rdi|DWORD[.]) accessKind: DWORD  <||@
  Comment 1358 1068 rax|DWORD = MOVE input: boolean[true|0x1]  <||@
  Comment 1363 1070 r10|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 1373 1072 rax|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1380 1074 MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1384 1076 rax|DWORD = AND r10|DWORD alignment: 4 size: DWORD y: int[1|0x1]  <||@
  Comment 1387 {DataSection[0x0]}  <||@
  Comment 1394 1078 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1396 1080 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 1402 block B80 null  <||@
  Comment 1402 1092 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1402 1094 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>}  <||@
  Comment 1402 {meta{HotSpotMethod<ThreadLocal.getMap(Thread)>}}  <||@
  Comment 1412 1096 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Local$]  <||@
  Comment 1412 {Object[Class:com.twitter.util.Local$]}  <||@
  Comment 1422 1098 rax|DWORD[.] = MOV [rdi|QWORD[.] + 104] size: DWORD  <||@
  Comment 1425 1100 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 1425 [rdx:0, rbx:0, rsi:0, stack:72, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r10|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
     stack:   |rsi|QWORD[.]  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rbx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1425 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1432 1102 r8|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 1432 [rax:0, rdx:0, rbx:0, rsi:0, stack:72, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r10|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
     stack:   |rsi|QWORD[.]  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rbx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1432 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1440 1104 CMP (x: r11|QWORD, y: [r8|DWORD * 8 + 520]) size: QWORD  <||@
  Comment 1448 1106 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B84  <||@
  Comment 1454 block B81 null  <||@
  Comment 1454 1108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1454 1110 r11|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1459 1112 r11|DWORD[.] = MOV [r11|QWORD[.] + 80] size: DWORD  <||@
  Comment 1463 1114 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1467 1116 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 1470 1118 BRANCH trueDestinationProbability: 7.839287703504969E-8 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 1476 block B83 null  <||@
  Comment 1476 1126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1476 1128 rcx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1479 1130 rsi|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1482 1132 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1485 1134 JUMP ~[] destination: B83 -> B120  <||@
  Comment 1485 block B120 null  <||@
  Comment 1485 1662 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 1485 1664 rdx|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1492 1666 r8|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 1492 [rax:0, rcx:0, rdx:0, rsi:0, r11:0, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r10|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rcx|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |r11|QWORD[.]  |stack:40|QWORD[.] 
     stack:   |rcx|QWORD[.]  |                  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1                                                                               |2 
     locals:  |stack:40|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                              
     locals:  |stack:40|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1492 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1500 1668 rbx|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 1505 1670 rbx|DWORD = AND (x: rbx|DWORD, ~y: [rax|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1508 1672 CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1511 1674 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B120 -> B121 falseDestination: B120 -> B180  <||@
  Comment 1517 block B121 null  <||@
  Comment 1517 1676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1517 1678 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1521 1680 rdx|DWORD[.] = MOV [rdx|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1525 1682 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1532 1684 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1536 1686 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1538 1688 BRANCH trueDestinationProbability: 3.527679190032315E-7 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B140  <||@
  Comment 1544 block B140 null  <||@
  Comment 1544 1922 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1544 1924 rdx|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1551 1926 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1555 1928 CMP (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 1558 1930 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B140 -> B142 falseDestination: B140 -> B179  <||@
  Comment 1564 block B142 null  <||@
  Comment 1564 1936 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1564 1938 rdx|DWORD[.] = MOV [r8|QWORD[.] + 28] size: DWORD  <||@
  Comment 1568 1940 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1570 1942 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B142 -> B146 falseDestination: B142 -> B144  <||@
  Comment 1576 block B144 null  <||@
  Comment 1576 1952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1576 1954 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>}  <||@
  Comment 1576 {meta{HotSpotType<[Lscala/Option;, resolved>}}  <||@
  Comment 1586 1956 r11|DWORD = MOV [rdx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1594 1958 CMP (x: r10|QWORD, y: [r11|DWORD * 8 + 56]) size: QWORD  <||@
  Comment 1602 1960 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B144 -> B146 falseDestination: B144 -> B178  <||@
  Comment 1608 block B146 null  <||@
  Comment 1608 1970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1608 1946 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}  <||@
  Comment 1608 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}}  <||@
  Comment 1618 1948 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1623 1972 rax|DWORD[.] = MOV [rbx|QWORD[.] + 12] size: DWORD  <||@
  Comment 1626 1974 r10|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1633 1976 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1637 1978 r11|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 1637 [rcx:0, rdx:0, rbx:0, r10:0, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                        |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rbx|QWORD[.]  |vobject:Promise$Transformer:0{saved=rdx|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r10|QWORD[.]  |                                                                                                                                                         |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rcx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1637 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1645 1980 CMP (x: rsi|QWORD, y: [r11|DWORD * 8 + 24]) size: QWORD  <||@
  Comment 1653 1982 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148  <||@
  Comment 1659 block B148 null  <||@
  Comment 1659 2000 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1659 2002 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed}  <||@
  Comment 1659 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed}}  <||@
  Comment 1666 2004 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B150  <||@
  Comment 1672 block B150 null  <||@
  Comment 1672 2022 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1672 2024 rax|QWORD = MOV [r11|DWORD * 8 + 32] size: QWORD  <||@
  Comment 1680 2026 r8|DWORD = MOV [rax|QWORD] size: DWORD  <||@
  Comment 1683 2028 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1688 2030 JUMP ~[] destination: B150 -> B151  <||@
  Comment 1693 block B152 loop 3 depth 1 header:2296|LoopBegin  <||@
  Comment 1693 2038 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1696 2040 r13|DWORD = SHL rdi|DWORD y: 3 size: DWORD  <||@
  Comment 1703 2042 r13|DWORD = LEA [r13|DWORD + 8] size: DWORD  <||@
  Comment 1707 2044 r13|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1710 2046 r13|QWORD = MOV [rax|QWORD + r13|QWORD * 1] size: QWORD  <||@
  Comment 1714 2048 CMP (x: rsi|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1717 2050 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B152 -> B153 falseDestination: B152 -> B165  <||@
  Comment 1723 block B165 loop 3 depth 1 header:2296|LoopBegin  <||@
  Comment 1723 2248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1723 2250 rdi|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 1725 2252 JUMP ~[] destination: B165 -> B151  <||@
  Comment 1725 block B151 loop 3 depth 1 header:2296|LoopBegin  <||@
  Comment 1725 2032 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1725 2034 CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1728 2036 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B166  <||@
  Comment 1735 block B147 null  <||@
  Comment 1735 1984 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1735 1986 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1738 1988 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1741 1990 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 1741 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 1751 1992 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 1751 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 1761 1994 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 1761 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 1771 1996 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 1771 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 1781 1998 JUMP ~[] destination: B147 -> B154  <||@
  Comment 1781 block B154 null  <||@
  Comment 1781 2070 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1781 2072 rsi|DWORD[.] = MOV [r8|QWORD[.] + 104] size: DWORD  <||@
  Comment 1785 2074 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 1785 [rbx:0, rsi:0, rdi:0, r10:0, r13:0, r14:0, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                        |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rbx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r10|QWORD[.]  |                                                                                                                                                         |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r14|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1785 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1789 2076 r11|DWORD[.] = MOV [rdi|QWORD[.] + 104] size: DWORD  <||@
  Comment 1793 2078 rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 1793 [rbx:0, rsi:0, r10:0, r11:0, r13:0, r14:0, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                        |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rbx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r10|QWORD[.]  |                                                                                                                                                         |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r14|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1793 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1801 2080 NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 1801 [rbx:0, rsi:0, r10:0, r11:0, r13:0, r14:0, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                        |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rbx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r10|QWORD[.]  |                                                                                                                                                         |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r14|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1801 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1805 2082 CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed}  <||@
  Comment 1805 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed}}  <||@
  Comment 1813 2084 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B163  <||@
  Comment 1819 block B155 null  <||@
  Comment 1819 2086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1819 2088 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1826 2090 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1830 2092 CMP (x: rsi|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1833 2094 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B155 -> B156 falseDestination: B155 -> B162  <||@
  Comment 1839 block B156 null  <||@
  Comment 1839 2096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1839 2098 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1843 2100 rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD  <||@
  Comment 1847 2102 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1851 2104 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B156 -> B157 falseDestination: B156 -> B158  <||@
  Comment 1857 block B158 null  <||@
  Comment 1857 2136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1857 2138 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1861 2140 AMD64PREFETCH ~[rsi|QWORD + 232] instr: 0  <||@
  Comment 1868 2142 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1868 2144 JUMP ~[] destination: B158 -> B159  <||@
  Comment 1868 block B159 null  <||@
  Comment 1868 2146 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1868 2148 r8|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1871 2150 rdx|QWORD[*] = LEA [rsi|QWORD[*] + 24] size: QWORD  <||@
  Comment 1875 2152 rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 1875 2154 rax|QWORD = MOV [rax|QWORD + 168] size: QWORD  <||@
  Comment 1882 2156 MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD  <||@
  Comment 1885 2158 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed}  <||@
  Comment 1885 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed}}  <||@
  Comment 1892 2160 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1896 2162 MOV (x: [rsi|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1900 2164 rax|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1907 2166 MOV (x: [rsi|QWORD[*] + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1910 2168 rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1917 2170 MOV (x: [rsi|QWORD[*] + 20], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1920 2172 rax|QWORD = MOV [rbp|QWORD + 168] size: QWORD  <||@
  Comment 1927 2174 MOV (x: [rsi|QWORD[*] + 24], y: rax|QWORD) size: QWORD  <||@
  Comment 1931 2176 MOV [rsi|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed}  <||@
  Comment 1931 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed}}  <||@
  Comment 1938 2178 MOV [rsi|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$10/1594373685@321311106]  <||@
  Comment 1938 {NarrowOop[FutureBench$$Lambda$10/1594373685@321311106]}  <||@
  Comment 1945 2180 rsi|QWORD = MOV [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 1953 2182 r10|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1957 2184 rcx|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1964 2186 rax|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1967 2188 rax|DWORD[.] = CAS (address: [rbx|QWORD[.] + rsi|QWORD * 1], cmpValue: rax|DWORD[.], newValue: rcx|DWORD[.]) accessKind: DWORD  <||@
  Comment 1972 2190 rax|DWORD = MOVE input: boolean[true|0x1]  <||@
  Comment 1977 2192 r10|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 1987 2194 rax|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1994 2196 MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1998 2198 rax|DWORD = AND r10|DWORD alignment: 4 size: DWORD y: int[1|0x1]  <||@
  Comment 2001 {DataSection[0x0]}  <||@
  Comment 2008 2200 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2010 2202 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B159 -> B160 falseDestination: B159 -> B161  <||@
  Comment 2016 block B161 null  <||@
  Comment 2016 2214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2016 2216 rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2019 2218 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309  <||@
  Comment 2028 12  <||@
  Comment 2038 block B51 null  <||@
  Comment 2038 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2038 636 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 2038 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 2048 638 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 2058 640 rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2061 642 r14|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2064 644 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2067 646 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2070 648 JUMP ~[] destination: B51 -> B56  <||@
  Comment 2075 block B149 null  <||@
  Comment 2075 2006 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2075 2008 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2078 2010 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2081 2012 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 2081 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 2091 2014 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 2091 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 2101 2016 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 2101 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 2111 2018 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 2111 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 2121 2020 JUMP ~[] destination: B149 -> B154  <||@
  Comment 2126 block B91 null  <||@
  Comment 2126 1198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2126 1200 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2129 1202 JUMP ~[] destination: B91 -> B92  <||@
  Comment 2129 block B92 null  <||@
  Comment 2129 1204 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2129 1206 rax|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD  <||@
  Comment 2132 1208 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}  <||@
  Comment 2132 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}}  <||@
  Comment 2138 1210 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B186  <||@
  Comment 2144 block B93 null  <||@
  Comment 2144 1212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2144 1214 rax|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD  <||@
  Comment 2148 1216 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 2148 [rcx:0, rdx:0, r11:0, r13:0, r14:0, stack:72, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                           |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |rcx|QWORD[.]  |                                                                                                                                                            |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:40|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2148 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2155 1218 CMP (x: rax|DWORD[.], y: [rcx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 2158 1220 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B185  <||@
  Comment 2164 block B94 null  <||@
  Comment 2164 1222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2164 1224 r8|DWORD[.] = MOV [r13|QWORD[.] + 104] size: DWORD  <||@
  Comment 2168 1226 rax|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 2168 [rcx:0, rdx:0, r8:0, r11:0, r14:0, stack:72, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                           |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |rcx|QWORD[.]  |                                                                                                                                                            |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:40|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2168 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2176 1228 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 2176 [rcx:0, rdx:0, r8:0, r11:0, r14:0, stack:72, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                           |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |rcx|QWORD[.]  |                                                                                                                                                            |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:40|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2176 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2180 1230 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2184 1232 rsi|QWORD = LEA [rax|QWORD + 64] size: QWORD  <||@
  Comment 2188 1234 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2192 1236 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96  <||@
  Comment 2198 block B96 null  <||@
  Comment 2198 1274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2198 1276 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 2202 1278 AMD64PREFETCH ~[rax|QWORD + 256] instr: 0  <||@
  Comment 2209 1280 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2209 1282 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 2209 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 2219 1284 JUMP ~[] destination: B96 -> B97  <||@
  Comment 2219 block B97 null  <||@
  Comment 2219 1286 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2219 1288 r9|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 2222 1290 r10|QWORD[*] = LEA [rax|QWORD[*] + 24] size: QWORD  <||@
  Comment 2226 1292 r10|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD  <||@
  Comment 2226 1294 r13|QWORD[*] = LEA [rax|QWORD[*] + 48] size: QWORD  <||@
  Comment 2230 1296 r13|QWORD[.] = MOVE r13|QWORD[*] moveKind: QWORD  <||@
  Comment 2230 1298 rbx|QWORD = MOV [rbp|QWORD + 168] size: QWORD  <||@
  Comment 2237 1300 MOV (x: [rax|QWORD[*]], y: rbx|QWORD) size: QWORD  <||@
  Comment 2240 1302 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}  <||@
  Comment 2240 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}}  <||@
  Comment 2247 1304 rbx|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 2254 1306 MOV (x: [rax|QWORD[*] + 12], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 2257 1308 rbx|DWORD[.] = MOV [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 2260 1310 MOV (x: [rax|QWORD[*] + 16], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 2263 1312 rbx|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 2270 1314 MOV (x: [rax|QWORD[*] + 24], y: rbx|QWORD) size: QWORD  <||@
  Comment 2274 1316 MOV [rax|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed}  <||@
  Comment 2274 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed}}  <||@
  Comment 2281 1318 r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 2285 1320 MOV (x: [rax|QWORD[*] + 36], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 2289 1322 MOV (x: [rax|QWORD[*] + 40], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 2293 1324 rbx|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 2300 1326 MOV (x: [rax|QWORD[*] + 44], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 2303 1328 rbx|QWORD = MOV [rsi|QWORD + 168] size: QWORD  <||@
  Comment 2310 1330 MOV (x: [rax|QWORD[*] + 48], y: rbx|QWORD) size: QWORD  <||@
  Comment 2314 1332 MOV [rax|QWORD[*] + 56] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed}  <||@
  Comment 2314 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed}}  <||@
  Comment 2321 1334 MOV [rax|QWORD[*] + 60] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$7/390800101@687091653]  <||@
  Comment 2321 {NarrowOop[FutureBench$$Lambda$7/390800101@687091653]}  <||@
  Comment 2328 1336 r8|QWORD = MOV [r8|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 2336 1338 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 2340 1340 r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 2344 1342 rax|DWORD[.] = MOVE rcx|DWORD[.] moveKind: DWORD  <||@
  Comment 2346 1344 rax|DWORD[.] = CAS (address: [rdx|QWORD[.] + r8|QWORD * 1], cmpValue: rax|DWORD[.], newValue: r9|DWORD[.]) accessKind: DWORD  <||@
  Comment 2352 1346 rax|DWORD = MOVE input: boolean[true|0x1]  <||@
  Comment 2357 1348 r8|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 2367 1350 rax|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2374 1352 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 2384 1354 MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2388 1356 rax|DWORD = AND r8|DWORD alignment: 4 size: DWORD y: int[1|0x1]  <||@
  Comment 2391 {DataSection[0x0]}  <||@
  Comment 2398 1358 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2400 1360 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99  <||@
  Comment 2406 block B99 null  <||@
  Comment 2406 1372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2406 1374 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2411 1376 stack:80|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2416 1378 stack:104|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2421 1380 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2426 1382 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 2426 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 2436 1384 r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 2436 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 2446 1386 rax|DWORD[.] = MOV [r14|QWORD[.] + 104] size: DWORD  <||@
  Comment 2450 1388 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:18, 159, 27, 2, 2, 7, 11]  <||@
  Comment 2450 [rax:0, rcx:0, rdx:0, rbx:0, r11:0, r14:0, stack:24, stack:48, stack:72, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:92|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159, duringCall: true, rethrow: false]
              |0             |1                   |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |stack:104|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rcx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rdx|QWORD[.]  |stack:80|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2450 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2454 1390 r10|DWORD[.] = MOV [rbx|QWORD[.] + 104] size: DWORD  <||@
  Comment 2458 1392 r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 159, 27, 2, 2, 7, 11]  <||@
  Comment 2458 [rax:0, rcx:0, rdx:0, r11:0, r14:0, stack:24, stack:48, stack:72, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:92|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159, duringCall: true, rethrow: false]
              |0             |1                   |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |stack:104|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rcx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rdx|QWORD[.]  |stack:80|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2458 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2466 1394 stack:108|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 2471 1396 r8|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 2475 1398 r13|DWORD[.] = MOV [r14|QWORD[.] + 104] size: DWORD  <||@
  Comment 2479 1400 r10|DWORD[.] = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 159, 27, 2, 2, 7, 11]  <||@
  Comment 2479 [rax:0, rcx:0, rdx:0, r8:0, r11:0, r13:0, stack:20, stack:24, stack:48, stack:72, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:92|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159, duringCall: true, rethrow: false]
              |0             |1                   |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |stack:104|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rcx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rdx|QWORD[.]  |stack:80|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2479 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2487 1402 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:18, 159, 27, 2, 2, 7, 11]  <||@
  Comment 2487 [rax:0, rcx:0, rdx:0, r8:0, r11:0, r13:0, stack:20, stack:24, stack:48, stack:72, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:92|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159, duringCall: true, rethrow: false]
              |0             |1                   |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |stack:104|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rcx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rdx|QWORD[.]  |stack:80|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2487 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2491 1404 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 2495 1406 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 2498 1408 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B104 falseDestination: B99 -> B101  <||@
  Comment 2504 block B101 null  <||@
  Comment 2504 1426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2504 1428 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}  <||@
  Comment 2504 {meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}}  <||@
  Comment 2514 1430 rdx|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 2522 1432 CMP (x: r10|QWORD, y: [rdx|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 2530 1434 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B104  <||@
  Comment 2536 block B104 null  <||@
  Comment 2536 1462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2536 1412 r14|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2541 1414 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>}  <||@
  Comment 2541 {meta{HotSpotMethod<ThreadLocal.getMap(Thread)>}}  <||@
  Comment 2551 1416 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Local$]  <||@
  Comment 2551 {Object[Class:com.twitter.util.Local$]}  <||@
  Comment 2561 1418 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}  <||@
  Comment 2561 {meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}}  <||@
  Comment 2571 1420 rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2574 1422 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>}  <||@
  Comment 2574 {meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>}}  <||@
  Comment 2584 1464 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 2587 1466 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B104 -> B110 falseDestination: B104 -> B106  <||@
  Comment 2593 block B106 null  <||@
  Comment 2593 1474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2593 1476 rcx|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 2601 1478 CMP (x: rdx|QWORD, y: [rcx|DWORD * 8 + 56]) size: QWORD  <||@
  Comment 2609 1480 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B110  <||@
  Comment 2615 block B110 null  <||@
  Comment 2615 1506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2615 1470 rdx|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD  <||@
  Comment 2619 1508 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} state [bci:12, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 2619 [rax:0, rdx:0, rbx:0, rdi:0, r11:0, r13:0, r14:0, stack:20, stack:72, stack:88]at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12, duringCall: false, rethrow: false]
              |0                                              |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=rdx|DWORD[.]}  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
     stack:   |rdx|DWORD[.]                                   |              |   |   |   |   |   |   |   |  
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1            
     locals:  |rax|QWORD[.]                                   |rbx|QWORD[.] 
     stack:   |vobject:Promise$$anon$3:0{state=rdx|DWORD[.]}  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2619 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2619 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed}}  <||@
  Comment 2630 1510 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B184  <||@
  Comment 2636 block B111 null  <||@
  Comment 2636 1512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2636 1514 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2640 1516 r8|QWORD = LEA [rcx|QWORD + 40] size: QWORD  <||@
  Comment 2644 1518 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2648 1520 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B113  <||@
  Comment 2654 block B113 null  <||@
  Comment 2654 1558 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2654 1560 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 2658 1562 AMD64PREFETCH ~[rcx|QWORD + 232] instr: 0  <||@
  Comment 2665 1564 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2668 1566 rax|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 2671 1568 JUMP ~[] destination: B113 -> B114  <||@
  Comment 2671 block B114 null  <||@
  Comment 2671 1570 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2671 1572 rcx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 2674 1574 rbx|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 2678 1576 rbx|QWORD[.] = MOVE rbx|QWORD[*] moveKind: QWORD  <||@
  Comment 2678 1578 r10|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 2685 1580 MOV (x: [rax|QWORD[*]], y: r10|QWORD) size: QWORD  <||@
  Comment 2688 1582 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed}  <||@
  Comment 2688 {meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed}}  <||@
  Comment 2695 1584 MOV (x: [rax|QWORD[*] + 12], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 2698 1586 r10|QWORD = MOV [rbp|QWORD + 168] size: QWORD  <||@
  Comment 2705 1588 MOV (x: [rax|QWORD[*] + 16], y: r10|QWORD) size: QWORD  <||@
  Comment 2709 1590 MOV [rax|QWORD[*] + 24] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}  <||@
  Comment 2709 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}}  <||@
  Comment 2716 1592 MOV (x: [rax|QWORD[*] + 28], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 2719 1594 MOV (x: [rax|QWORD[*] + 32], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 2723 1596 r10|QWORD = MOV [r13|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 2731 1598 rbx|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 2735 1600 rax|DWORD[.] = MOVE rdx|DWORD[.] moveKind: DWORD  <||@
  Comment 2737 1602 rax|DWORD[.] = CAS (address: [rcx|QWORD[.] + r10|QWORD * 1], cmpValue: rax|DWORD[.], newValue: rbx|DWORD[.]) accessKind: DWORD  <||@
  Comment 2743 1604 rax|DWORD = MOVE input: boolean[true|0x1]  <||@
  Comment 2748 1606 r10|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 2758 1608 rax|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2765 1610 MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2769 1612 rax|DWORD = AND r10|DWORD alignment: 4 size: DWORD y: int[1|0x1]  <||@
  Comment 2772 {DataSection[0x0]}  <||@
  Comment 2779 1614 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2781 1616 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116  <||@
  Comment 2787 block B116 null  <||@
  Comment 2787 1628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2787 1630 rax|DWORD[.] = MOV [rdi|QWORD[.] + 104] size: DWORD  <||@
  Comment 2790 1632 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 2790 [rcx:0, r8:0, r14:0, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r10|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rcx|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |r8|QWORD[.]   |stack:40|QWORD[.] 
     stack:   |rcx|QWORD[.]  |                  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1                                                                               |2 
     locals:  |stack:40|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                              
     locals:  |stack:40|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2790 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2797 1634 rdx|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 2797 [rax:0, rcx:0, r8:0, r14:0, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r10|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rcx|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |r8|QWORD[.]   |stack:40|QWORD[.] 
     stack:   |rcx|QWORD[.]  |                  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1                                                                               |2 
     locals:  |stack:40|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                              
     locals:  |stack:40|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2797 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2804 1636 CMP (x: rsi|QWORD, y: [rdx|DWORD * 8 + 520]) size: QWORD  <||@
  Comment 2812 1638 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B182  <||@
  Comment 2818 block B117 null  <||@
  Comment 2818 1640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2818 1642 rsi|DWORD[.] = MOV [r14|QWORD[.] + 80] size: DWORD  <||@
  Comment 2822 1644 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 2826 1646 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 2828 1648 BRANCH trueDestinationProbability: 7.839287703504969E-8 condition: = trueDestination: B117 -> B118 falseDestination: B117 -> B119  <||@
  Comment 2834 block B119 null  <||@
  Comment 2834 1656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2834 1658 r11|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2837 1660 JUMP ~[] destination: B119 -> B120  <||@
  Comment 2842 block B166 null  <||@
  Comment 2842 2254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2842 2256 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2845 2258 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2848 2260 JUMP ~[] destination: B166 -> B167  <||@
  Comment 2848 block B167 null  <||@
  Comment 2848 2262 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 2848 2264 rax|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD  <||@
  Comment 2852 2266 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}  <||@
  Comment 2852 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}}  <||@
  Comment 2858 2268 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B167 -> B168 falseDestination: B167 -> B176  <||@
  Comment 2864 block B168 null  <||@
  Comment 2864 2270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2864 2272 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 2864 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 2874 2274 rax|DWORD[.] = MOV [r8|QWORD[.] + 104] size: DWORD  <||@
  Comment 2878 2276 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 2878 [rcx:0, rbx:0, r13:0, r14:0, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                        |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rbx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r14|QWORD[.]  |                                                                                                                                                         |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rcx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2878 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2885 2278 CMP (x: rax|DWORD[.], y: [r14|QWORD[.] + 12]) size: DWORD  <||@
  Comment 2889 2280 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B175  <||@
  Comment 2895 block B169 null  <||@
  Comment 2895 2282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2895 2284 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 2895 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 2905 2286 r10|DWORD[.] = MOV [rdi|QWORD[.] + 104] size: DWORD  <||@
  Comment 2909 2288 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 2909 [rcx:0, rbx:0, r10:0, r13:0, r14:0, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                        |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rbx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r14|QWORD[.]  |                                                                                                                                                         |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rcx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2909 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2917 2290 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 2917 [rcx:0, rbx:0, r10:0, r13:0, r14:0, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                        |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rbx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r14|QWORD[.]  |                                                                                                                                                         |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rcx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2917 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2921 2292 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2925 2294 rsi|QWORD = LEA [rax|QWORD + 64] size: QWORD  <||@
  Comment 2929 2296 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2933 2298 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B169 -> B170 falseDestination: B169 -> B171  <||@
  Comment 2939 block B171 null  <||@
  Comment 2939 2332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2939 2334 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 2943 2336 AMD64PREFETCH ~[rax|QWORD + 256] instr: 0  <||@
  Comment 2950 2338 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2950 2340 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 2950 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 2960 2342 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 2960 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 2970 2344 JUMP ~[] destination: B171 -> B172  <||@
  Comment 2970 block B172 null  <||@
  Comment 2970 2346 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2970 2348 rdx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 2973 2350 r11|QWORD[*] = LEA [rax|QWORD[*] + 24] size: QWORD  <||@
  Comment 2977 2352 r11|QWORD[.] = MOVE r11|QWORD[*] moveKind: QWORD  <||@
  Comment 2977 2354 r8|QWORD[*] = LEA [rax|QWORD[*] + 48] size: QWORD  <||@
  Comment 2981 2356 r8|QWORD[.] = MOVE r8|QWORD[*] moveKind: QWORD  <||@
  Comment 2981 2358 rbp|QWORD = MOV [rbp|QWORD + 168] size: QWORD  <||@
  Comment 2988 2360 MOV (x: [rax|QWORD[*]], y: rbp|QWORD) size: QWORD  <||@
  Comment 2991 2362 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}  <||@
  Comment 2991 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}}  <||@
  Comment 2998 2364 rbp|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 3005 2366 MOV (x: [rax|QWORD[*] + 12], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 3008 2368 rbp|DWORD[.] = MOV [r14|QWORD[.] + 16] size: DWORD  <||@
  Comment 3012 2370 MOV (x: [rax|QWORD[*] + 16], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 3015 2372 rdi|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 3022 2374 MOV (x: [rax|QWORD[*] + 24], y: rdi|QWORD) size: QWORD  <||@
  Comment 3026 2376 MOV [rax|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed}  <||@
  Comment 3026 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed}}  <||@
  Comment 3033 2378 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 3037 2380 MOV (x: [rax|QWORD[*] + 36], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 3041 2382 rdi|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 3048 2384 MOV (x: [rax|QWORD[*] + 40], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 3051 2386 rdi|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 3058 2388 MOV (x: [rax|QWORD[*] + 44], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 3061 2390 rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD  <||@
  Comment 3068 2392 MOV (x: [rax|QWORD[*] + 48], y: rsi|QWORD) size: QWORD  <||@
  Comment 3072 2394 MOV [rax|QWORD[*] + 56] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed}  <||@
  Comment 3072 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed}}  <||@
  Comment 3079 2396 MOV [rax|QWORD[*] + 60] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$10/1594373685@321311106]  <||@
  Comment 3079 {NarrowOop[FutureBench$$Lambda$10/1594373685@321311106]}  <||@
  Comment 3086 2398 rsi|QWORD = MOV [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 3094 2400 r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 3098 2402 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 3102 2404 rax|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 3105 2406 rax|DWORD[.] = CAS (address: [rbx|QWORD[.] + rsi|QWORD * 1], cmpValue: rax|DWORD[.], newValue: rdx|DWORD[.]) accessKind: DWORD  <||@
  Comment 3110 2408 rax|DWORD = MOVE input: boolean[true|0x1]  <||@
  Comment 3115 2410 r10|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 3125 2412 rax|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 3132 2414 MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 3136 2416 rax|DWORD = AND r10|DWORD alignment: 4 size: DWORD y: int[1|0x1]  <||@
  Comment 3139 {DataSection[0x0]}  <||@
  Comment 3146 2418 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 3148 2420 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B174  <||@
  Comment 3154 block B174 null  <||@
  Comment 3154 2434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3154 2436 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 3157 2438 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309  <||@
  Comment 3166 12  <||@
  Comment 3176 block B153 null  <||@
  Comment 3176 2052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3176 2054 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 3176 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 3186 2056 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 3186 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 3196 2058 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 3196 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 3206 2060 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 3206 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 3216 2062 MOV (x: [r11|DWORD * 8 + 24], y: rsi|QWORD) size: QWORD  <||@
  Comment 3224 2064 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 3227 2066 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3230 2068 JUMP ~[] destination: B153 -> B154  <||@
  Comment 3235 block B55 null  <||@
  Comment 3235 682 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3235 684 r8|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 3238 686 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 3238 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 3248 688 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 3258 690 rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3261 692 r14|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 3264 694 r13|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3269 696 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}  <||@
  Comment 3269 {meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}}  <||@
  Comment 3279 698 MOV (x: [r13|DWORD * 8 + 24], y: r8|QWORD) size: QWORD  <||@
  Comment 3287 700 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3290 702 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 3293 704 JUMP ~[] destination: B55 -> B56  <||@
  Comment 3298 block B15 null  <||@
  Comment 3298 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3298 128 r13|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 3301 130 stack:28|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 3306 132 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3306 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3316 134 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 3321 136 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3326 138 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:12, 6, 5, 7, 2, 2, 7, 11]  <||@
  Comment 3326 {Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3331 [r13:0, stack:100]at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12, duringCall: false, rethrow: false]
              |0                                              |1                                      |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=r13|DWORD[.]}  |vobject:Promise:1{state=r13|DWORD[.]}  |-  |-  |-  |-  |-  |-  |-  |- 
     stack:   |r13|DWORD[.]                                   |                                       |   |   |   |   |   |   |   |  
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1                                     
     locals:  |stack:28|DWORD[.]                              |vobject:Promise:1{state=r13|DWORD[.]} 
     stack:   |vobject:Promise$$anon$3:0{state=r13|DWORD[.]}  |                                      
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1                                                                             |2 
     locals:  |vobject:Promise:1{state=r13|DWORD[.]}  |vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                                      |1                                                                            
     locals:  |vobject:Promise:1{state=r13|DWORD[.]}  |vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 3332 140 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3332 142 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>}  <||@
  Comment 3332 {meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>}}  <||@
  Comment 3342 144 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}  <||@
  Comment 3342 {meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}}  <||@
  Comment 3352 146 r11|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 3355 148 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 3355 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 3365 150 r14|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 3370 152 r13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 3370 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 3380 154 JUMP ~[] destination: B15 -> B17  <||@
  Comment 3385 block B76 null  <||@
  Comment 3385 972 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3385 974 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3390 976 stack:96|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 3395 978 stack:108|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 3400 980 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 3405 982 r13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3405 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3415 984 rsi|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 3418 986 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 3423 988 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3428 990 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:12, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 3428 {Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3433 [stack:20, stack:24, stack:32, stack:60, stack:72, stack:88]at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12, duringCall: false, rethrow: false]
              |0                                                    |1                  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]}  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
     stack:   |stack:108|DWORD[.]                                   |                   |   |   |   |   |   |   |   |  
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                                    |1                 
     locals:  |stack:104|QWORD[.]                                   |stack:40|QWORD[.] 
     stack:   |vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]}  |                  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1                                                                               |2 
     locals:  |stack:40|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                              
     locals:  |stack:40|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 3434 992 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3434 994 rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3439 996 r8|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD  <||@
  Comment 3444 998 r13|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD  <||@
  Comment 3449 1000 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 3454 1002 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 3464 1004 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}  <||@
  Comment 3464 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}}  <||@
  Comment 3474 1006 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}  <||@
  Comment 3474 {meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}}  <||@
  Comment 3484 1008 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3489 1010 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 3489 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 3499 1012 r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 3499 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 3509 1014 JUMP ~[] destination: B76 -> B78  <||@
  Comment 3514 block B59 null  <||@
  Comment 3514 742 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3514 744 stack:96|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 3519 746 stack:88|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3524 748 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 3529 750 stack:80|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3534 752 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3534 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3544 754 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 3547 756 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 3552 758 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3557 760 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 3557 {Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3562 [r13:0, stack:32, stack:40, stack:48, stack:60, stack:72, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0                  |1                                                                                                                                                           |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |stack:80|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |stack:88|QWORD[.]  |                                                                                                                                                            |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:40|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                            
     locals:  |stack:80|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 3563 762 rcx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3566 764 r8|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD  <||@
  Comment 3571 766 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 3576 768 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 3576 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 3586 770 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 3586 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 3596 772 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 3601 774 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 3611 776 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 3616 778 r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 3616 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 3626 780 JUMP ~[] destination: B59 -> B61  <||@
  Comment 3631 block B157 null  <||@
  Comment 3631 2106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3631 2108 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 3636 2110 stack:120|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3641 2112 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3641 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3651 2114 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 3656 2116 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3661 2118 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 3661 {Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3666 [r13:0, r14:0, stack:8, stack:60, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0                   |1                                                                                                                                                        |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |stack:40|QWORD[.]   |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |stack:120|QWORD[.]  |                                                                                                                                                         |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r14|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                              
     locals:  |stack:40|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 3667 2120 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3670 2122 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 3675 2124 r10|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 3680 2126 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 3680 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 3690 2128 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 3690 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 3700 2130 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 3710 2132 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3715 2134 JUMP ~[] destination: B157 -> B159  <||@
  Comment 3720 block B170 null  <||@
  Comment 3720 2300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3720 2302 stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 3725 2304 stack:120|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 3730 2306 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3730 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3740 2308 rdx|DWORD = MOVE input: int[12|0xc]  <||@
  Comment 3745 2310 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3750 2312 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 3750 {Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3755 [r13:0, r14:0, stack:8, stack:60, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0                  |1                                                                                                                                                              |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |stack:40|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:120|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r14|QWORD[.]       |                                                                                                                                                               |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                  
     locals:  |-  |-  |stack:120|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                              
     locals:  |stack:40|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 3756 2314 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3756 2316 r10|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 3761 2318 rcx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 3766 2320 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 3766 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 3776 2322 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 3776 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 3786 2324 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 3796 2326 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}  <||@
  Comment 3796 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}}  <||@
  Comment 3806 2328 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3811 2330 JUMP ~[] destination: B170 -> B172  <||@
  Comment 3816 block B112 null  <||@
  Comment 3816 1522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3816 1524 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3821 1526 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 3826 1528 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3826 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3836 1530 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 3841 1532 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3846 1534 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:12, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 3846 {Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3851 [r13:0, stack:20, stack:24, stack:60, stack:72, stack:88]at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12, duringCall: false, rethrow: false]
              |0                                                    |1                  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]}  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
     stack:   |stack:108|DWORD[.]                                   |                   |   |   |   |   |   |   |   |  
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                                    |1                 
     locals:  |stack:104|QWORD[.]                                   |stack:40|QWORD[.] 
     stack:   |vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]}  |                  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1                                                                               |2 
     locals:  |stack:40|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                              
     locals:  |stack:40|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 3852 1536 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3852 1538 r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3857 1540 rdx|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD  <||@
  Comment 3861 1542 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 3866 1544 r14|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 3871 1546 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>}  <||@
  Comment 3871 {meta{HotSpotMethod<ThreadLocal.getMap(Thread)>}}  <||@
  Comment 3881 1548 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Local$]  <||@
  Comment 3881 {Object[Class:com.twitter.util.Local$]}  <||@
  Comment 3891 1550 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 3901 1552 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}  <||@
  Comment 3901 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}}  <||@
  Comment 3911 1554 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}  <||@
  Comment 3911 {meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}}  <||@
  Comment 3921 1556 JUMP ~[] destination: B112 -> B114  <||@
  Comment 3926 block B95 null  <||@
  Comment 3926 1238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3926 1240 stack:92|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 3931 1242 stack:104|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 3936 1244 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 3941 1246 stack:80|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3946 1248 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3946 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3956 1250 rdx|DWORD = MOVE input: int[12|0xc]  <||@
  Comment 3961 1252 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3966 1254 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 3966 {Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3971 [r14:0, stack:24, stack:36, stack:48, stack:60, stack:72, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0                   |1                                                                                                                                                           |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |stack:80|QWORD[.]   |vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |stack:104|QWORD[.]  |                                                                                                                                                            |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:40|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                            
     locals:  |stack:80|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 3972 1256 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3972 1258 r8|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 3977 1260 rcx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3982 1262 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 3982 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 3992 1264 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 3992 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 4002 1266 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 4007 1268 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}  <||@
  Comment 4007 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}}  <||@
  Comment 4017 1270 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 4022 1272 JUMP ~[] destination: B95 -> B97  <||@
  Comment 4027 block B24 null  <||@
  Comment 4027 326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4027 328 rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4029 330 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 4034 332 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 4039 334 stack:80|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 4044 336 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 4047 338 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4050 340 r8|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 4053 342 stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 4058 344 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:38, 2, 16, 4, 19, 2, 2, 7, 11]  <||@
  Comment 4058 9  <||@
  Comment 4063 {HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>}  <||@
  Comment 4068 [stack:40, stack:48, stack:60, stack:64, stack:72, stack:88]at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2                  |3  |4 
     locals:  |stack:64|QWORD[.]  |-  |stack:88|QWORD[.]  |-  |- 
  at com.twitter.util.Local$.save(Local.scala:20) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                                                                                      |2                                                                                     
     locals:  |-                  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}           |stack:40|QWORD[.]                                                                     
     stack:   |stack:80|QWORD[.]  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]}  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                            
     locals:  |stack:80|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 4069 346 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 4072 348 BRANCH trueDestinationProbability: 3.527674073959098E-7 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B41  <||@
  Comment 4078 block B41 null  <||@
  Comment 4078 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4078 542 rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4081 544 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 4086 546 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>}  <||@
  Comment 4086 {meta{HotSpotType<[Lscala/Option;, resolved>}}  <||@
  Comment 4096 548 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}  <||@
  Comment 4096 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}}  <||@
  Comment 4106 550 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 4106 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 4116 552 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 4121 554 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}  <||@
  Comment 4121 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}}  <||@
  Comment 4131 556 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 4136 558 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 4136 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 4146 560 r13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 4146 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 4156 562 JUMP ~[] destination: B41 -> B44  <||@
  Comment 4161 block B122 null  <||@
  Comment 4161 1690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4161 1692 stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 4166 1694 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4169 1698 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4172 1700 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 4174 1702 stack:80|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4179 1704 stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4184 1706 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:38, 2, 16, 4, 19, 2, 2, 7, 19]  <||@
  Comment 4184 9  <||@
  Comment 4191 {HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>}  <||@
  Comment 4196 [stack:8, stack:48, stack:72, stack:88]at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0                   |1  |2                  |3  |4 
     locals:  |stack:120|QWORD[.]  |-  |stack:80|QWORD[.]  |-  |- 
  at com.twitter.util.Local$.save(Local.scala:20) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                                                                                      |2                                                                                     
     locals:  |-                  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}         |stack:56|QWORD[.]                                                                     
     stack:   |stack:40|QWORD[.]  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]}  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                              
     locals:  |stack:40|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 4197 1708 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 4200 1710 BRANCH trueDestinationProbability: 3.527674073959098E-7 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B139  <||@
  Comment 4206 block B139 null  <||@
  Comment 4206 1906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4206 1908 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4209 1910 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 4214 1912 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 4219 1914 rax|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 4224 1916 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 4234 1918 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}  <||@
  Comment 4234 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}}  <||@
  Comment 4244 1920 JUMP ~[] destination: B139 -> B142  <||@
  Comment 4249 block B21 null  <||@
  Comment 4249 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4249 292 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 4254 294 stack:80|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 4259 296 JUMP ~[] destination: B21 -> B26  <||@
  Comment 4259 block B26 null  <||@
  Comment 4259 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4259 356 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 4264 358 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:34, 4, 19, 2, 2, 7, 11]  <||@
  Comment 4264 9  <||@
  Comment 4271 {HotSpotMethod<ThreadLocal.setInitialValue()>}  <||@
  Comment 4276 [stack:48, stack:60, stack:72, stack:88]at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at com.twitter.util.Local$.save(Local.scala:20) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                                                                                      |2                                                                                     
     locals:  |-                  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}           |stack:40|QWORD[.]                                                                     
     stack:   |stack:80|QWORD[.]  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]}  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                            
     locals:  |stack:80|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 4277 360 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 4280 366 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>}  <||@
  Comment 4280 {meta{HotSpotType<[Lscala/Option;, resolved>}}  <||@
  Comment 4290 362 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B30 falseDestination: B26 -> B28  <||@
  Comment 4296 block B28 null  <||@
  Comment 4296 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4296 378 rsi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 4299 380 CMP (x: r8|QWORD, y: [rsi|DWORD * 8 + 56]) size: QWORD  <||@
  Comment 4307 382 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B30 falseDestination: B28 -> B40  <||@
  Comment 4313 block B30 null  <||@
  Comment 4313 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4313 368 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}  <||@
  Comment 4313 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}}  <||@
  Comment 4323 370 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 4328 394 r10|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 4332 396 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 4339 398 r10|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 4339 [rax:0, rdx:0, r11:0, stack:60, stack:72, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                           |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |vobject:Promise$Transformer:0{saved=rax|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r11|QWORD[.]  |                                                                                                                                                            |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:40|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 4339 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4347 400 CMP (x: r9|QWORD, y: [r10|DWORD * 8 + 24]) size: QWORD  <||@
  Comment 4355 402 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 4361 block B32 null  <||@
  Comment 4361 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4361 426 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed}  <||@
  Comment 4361 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed}}  <||@
  Comment 4368 428 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 4374 block B34 null  <||@
  Comment 4374 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4374 452 rcx|QWORD = MOV [r10|DWORD * 8 + 32] size: QWORD  <||@
  Comment 4382 454 rbx|DWORD = MOV [rcx|QWORD] size: DWORD  <||@
  Comment 4384 456 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 4389 458 JUMP ~[] destination: B34 -> B35  <||@
  Comment 4394 block B36 loop 0 depth 1 header:1999|LoopBegin  <||@
  Comment 4394 466 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4400 468 rsi|DWORD = SHL rdi|DWORD y: 3 size: DWORD  <||@
  Comment 4405 470 rsi|DWORD = LEA [rsi|DWORD + 8] size: DWORD  <||@
  Comment 4408 472 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 4411 474 rsi|QWORD = MOV [rcx|QWORD + rsi|QWORD * 1] size: QWORD  <||@
  Comment 4415 476 CMP (x: r9|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 4418 478 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38  <||@
  Comment 4424 block B38 loop 0 depth 1 header:1999|LoopBegin  <||@
  Comment 4424 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4424 506 rdi|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 4426 508 JUMP ~[] destination: B38 -> B35  <||@
  Comment 4426 block B35 loop 0 depth 1 header:1999|LoopBegin  <||@
  Comment 4426 460 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4426 462 CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 4428 464 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B39  <||@
  Comment 4435 block B82 null  <||@
  Comment 4435 1120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4435 1122 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4440 1124 JUMP ~[] destination: B82 -> B124  <||@
  Comment 4440 block B124 null  <||@
  Comment 4440 1720 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 4440 1722 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4443 1724 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:34, 4, 19, 2, 2, 7, 19]  <||@
  Comment 4443 9  <||@
  Comment 4447 {HotSpotMethod<ThreadLocal.setInitialValue()>}  <||@
  Comment 4452 [stack:40, stack:88]at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at com.twitter.util.Local$.save(Local.scala:20) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                                                                                      |2                                                                                     
     locals:  |-                  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}         |stack:88|QWORD[.]                                                                     
     stack:   |stack:40|QWORD[.]  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]}  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                              
     locals:  |stack:40|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 4453 1726 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 4456 1728 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B124 -> B128 falseDestination: B124 -> B126  <||@
  Comment 4462 block B126 null  <||@
  Comment 4462 1738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4462 1740 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>}  <||@
  Comment 4462 {meta{HotSpotType<[Lscala/Option;, resolved>}}  <||@
  Comment 4472 1742 r10|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 4476 1744 CMP (x: r8|QWORD, y: [r10|DWORD * 8 + 56]) size: QWORD  <||@
  Comment 4484 1746 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B126 -> B128 falseDestination: B126 -> B138  <||@
  Comment 4490 block B128 null  <||@
  Comment 4490 1756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4490 1732 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}  <||@
  Comment 4490 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}}  <||@
  Comment 4500 1734 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4505 1758 r10|DWORD[.] = MOV [rdi|QWORD[.] + 12] size: DWORD  <||@
  Comment 4509 1760 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 4516 1762 r10|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 4516 [rax:0, rdi:0, r11:0, stack:40, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                             |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdi|QWORD[.]  |vobject:Promise$Transformer:0{saved=rax|QWORD[.],promise=stack:88|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r11|QWORD[.]  |                                                                                                                                                              |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:88|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 4516 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4524 1764 CMP (x: r9|QWORD, y: [r10|DWORD * 8 + 24]) size: QWORD  <||@
  Comment 4532 1766 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B128 -> B129 falseDestination: B128 -> B130  <||@
  Comment 4538 block B130 null  <||@
  Comment 4538 1790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4538 1792 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed}  <||@
  Comment 4538 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed}}  <||@
  Comment 4545 1794 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B130 -> B131 falseDestination: B130 -> B132  <||@
  Comment 4551 block B132 null  <||@
  Comment 4551 1818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4551 1820 r8|QWORD = MOV [r10|DWORD * 8 + 32] size: QWORD  <||@
  Comment 4559 1822 rcx|DWORD = MOV [r8|QWORD] size: DWORD  <||@
  Comment 4562 1824 rbx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 4567 1826 JUMP ~[] destination: B132 -> B133  <||@
  Comment 4572 block B134 loop 2 depth 1 header:2367|LoopBegin  <||@
  Comment 4572 1834 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4576 1836 rdx|DWORD = SHL rbx|DWORD y: 3 size: DWORD  <||@
  Comment 4581 1838 rdx|DWORD = LEA [rdx|DWORD + 8] size: DWORD  <||@
  Comment 4584 1840 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 4587 1842 rdx|QWORD = MOV [r8|QWORD + rdx|QWORD * 1] size: QWORD  <||@
  Comment 4591 1844 CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 4594 1846 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136  <||@
  Comment 4600 block B136 loop 2 depth 1 header:2367|LoopBegin  <||@
  Comment 4600 1872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4600 1874 rbx|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 4602 1876 JUMP ~[] destination: B136 -> B133  <||@
  Comment 4602 block B133 loop 2 depth 1 header:2367|LoopBegin  <||@
  Comment 4602 1828 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4602 1830 CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 4604 1832 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B133 -> B134 falseDestination: B133 -> B137  <||@
  Comment 4611 block B31 null  <||@
  Comment 4611 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4611 406 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4614 408 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 4614 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 4624 410 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 4624 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 4634 412 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 4644 414 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 4644 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 4654 416 r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 4654 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 4664 418 rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4667 420 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 4672 422 JUMP ~[] destination: B31 -> B56  <||@
  Comment 4677 block B129 null  <||@
  Comment 4677 1768 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4677 1770 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4680 1772 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 4685 1774 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4688 1776 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 4688 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 4698 1778 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 4698 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 4708 1780 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 4718 1782 rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 4721 1784 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 4721 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 4731 1786 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 4731 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 4741 1788 JUMP ~[] destination: B129 -> B154  <||@
  Comment 4746 block B33 null  <||@
  Comment 4746 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4746 432 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4749 434 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 4749 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 4759 436 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 4759 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 4769 438 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 4779 440 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 4779 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 4789 442 r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 4789 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 4799 444 rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4802 446 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 4807 448 JUMP ~[] destination: B33 -> B56  <||@
  Comment 4812 block B131 null  <||@
  Comment 4812 1796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4812 1798 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4815 1800 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 4820 1802 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4823 1804 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 4823 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 4833 1806 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 4833 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 4843 1808 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 4853 1810 rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 4856 1812 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 4856 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 4866 1814 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 4866 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 4876 1816 JUMP ~[] destination: B131 -> B154  <||@
  Comment 4881 block B39 null  <||@
  Comment 4881 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4881 512 rcx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4884 514 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4887 516 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 4887 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 4897 518 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 4902 520 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}  <||@
  Comment 4902 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}}  <||@
  Comment 4912 522 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 4912 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 4922 524 r13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 4922 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 4932 526 JUMP ~[] destination: B39 -> B92  <||@
  Comment 4937 block B137 null  <||@
  Comment 4937 1878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4937 1880 rcx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 4942 1882 r14|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4945 1884 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4948 1886 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 4958 1888 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}  <||@
  Comment 4958 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}}  <||@
  Comment 4968 1890 rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 4971 1892 JUMP ~[] destination: B137 -> B167  <||@
  Comment 4976 block B118 null  <||@
  Comment 4976 1650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4976 1652 stack:88|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 4981 1654 JUMP ~[] destination: B118 -> B124  <||@
  Comment 4986 block B135 null  <||@
  Comment 4986 1848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4986 1850 MOV (x: [r10|DWORD * 8 + 24], y: r9|QWORD) size: QWORD  <||@
  Comment 4994 1852 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4997 1854 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 5002 1856 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 5005 1858 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 5005 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 5015 1860 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 5015 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 5025 1862 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 5035 1864 rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 5038 1866 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 5038 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 5048 1868 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 5048 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 5058 1870 JUMP ~[] destination: B135 -> B154  <||@
  Comment 5063 block B37 null  <||@
  Comment 5063 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5063 482 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5068 484 MOV (x: [r10|DWORD * 8 + 24], y: r9|QWORD) size: QWORD  <||@
  Comment 5076 486 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 5079 488 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 5079 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 5089 490 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 5099 492 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 5099 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 5109 494 r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 5109 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 5119 496 rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 5122 498 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 5122 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 5132 500 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 5137 502 JUMP ~[] destination: B37 -> B56  <||@
  Comment 5142 block B123 null  <||@
  Comment 5142 1712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5142 1714 stack:88|QWORD[.] = STACKMOVE stack:56|QWORD[.] size: QWORD  <||@
  Comment 5152 1716 rax|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 5157 1718 JUMP ~[] destination: B123 -> B124  <||@
  Comment 5162 block B188 null  <||@
  Comment 5162 2554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5162 2556 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 5167 2558 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5172 2560 MOV [r15|QWORD + 668] y: -289827 size: DWORD  <||@
  Comment 5183 2562 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5190 2564 DEOPT info [bci:5, 16, 4, 19, 2, 2, 7, 11]  <||@
  Comment 5190 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5195 [rdx:0, rbx:0, rdi:0, r11:0, r14:0]at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rbx|QWORD[.]  |  
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2             |3  |4 
     locals:  |r11|QWORD[.]  |-  |r14|QWORD[.]  |-  |- 
  at com.twitter.util.Local$.save(Local.scala:20) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19, duringCall: true, rethrow: false]
              |0             |1                                                                                      |2                                                                                     
     locals:  |-             |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}           |rdi|QWORD[.]                                                                          
     stack:   |rdx|QWORD[.]  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]}  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5196 block B184 null  <||@
  Comment 5196 2518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5196 2520 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 5201 2522 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5204 2524 MOV [r15|QWORD + 668] y: -323123 size: DWORD  <||@
  Comment 5215 2526 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5222 2528 DEOPT info [bci:12, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 5222 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5227 [rdi:0, stack:20, stack:24]at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12, duringCall: false, rethrow: false]
              |0                                                    |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]}  |rdi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
     stack:   |stack:108|DWORD[.]                                   |              |   |   |   |   |   |   |   |  
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                                    |1            
     locals:  |stack:104|QWORD[.]                                   |rdi|QWORD[.] 
     stack:   |vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]}  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5228 block B163 null  <||@
  Comment 5228 2230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5228 2232 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5231 2234 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5234 2236 r10|DWORD = MOVE input: int[-342323|0xfffffffffffac6cd]  <||@
  Comment 5240 2238 JUMP ~[] destination: B163 -> B164  <||@
  Comment 5240 block B164 null  <||@
  Comment 5240 2240 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5240 2242 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5247 2244 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5254 2246 DEOPT info [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 5254 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5259 [rdi:0, r11:0, r13:0, r14:0]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                        |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdi|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r11|QWORD[.]  |                                                                                                                                                         |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r14|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5260 block B186 null  <||@
  Comment 5260 2538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5260 2540 r10|DWORD = MOVE input: int[-311571|0xfffffffffffb3eed]  <||@
  Comment 5266 2544 JUMP ~[] destination: B186 -> B187  <||@
  Comment 5266 block B187 null  <||@
  Comment 5266 2546 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5266 2542 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5271 2548 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5278 2550 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5285 2552 DEOPT info [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 5285 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5290 [rcx:0, rdx:0, rdi:0, r14:0]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                      |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=rdi|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |rcx|QWORD[.]  |                                                                                                                                                       |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rdi|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5291 block B10 null  <||@
  Comment 5291 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5291 90 r10|DWORD = MOVE input: int[-272659|0xfffffffffffbd6ed]  <||@
  Comment 5297 96 JUMP ~[] destination: B10 -> B11  <||@
  Comment 5297 block B11 null  <||@
  Comment 5297 98 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5297 58 r13|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 5300 60 stack:28|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 5305 100 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5312 102 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5319 104 DEOPT info [bci:4, 1, 6, 5, 7, 2, 2, 7, 11]  <||@
  Comment 5319 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5324 [r13:0, stack:100]at com.twitter.util.Promise.isDefined(Promise.scala:840) [bci: 4, duringCall: false, rethrow: false]
              |0                                      |1  |2  |3 
     locals:  |vobject:Promise:0{state=r13|DWORD[.]}  |-  |-  |- 
     stack:   |r13|DWORD[.]                           |   |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:503) [bci: 1, duringCall: true, rethrow: false]
              |0                                              |1                                      |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:1{state=r13|DWORD[.]}  |vobject:Promise:0{state=r13|DWORD[.]}  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1                                     
     locals:  |stack:28|DWORD[.]                              |vobject:Promise:0{state=r13|DWORD[.]} 
     stack:   |vobject:Promise$$anon$3:1{state=r13|DWORD[.]}  |                                      
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1                                                                             |2 
     locals:  |vobject:Promise:0{state=r13|DWORD[.]}  |vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                                      |1                                                                            
     locals:  |vobject:Promise:0{state=r13|DWORD[.]}  |vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5325 block B178 null  <||@
  Comment 5325 2464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5325 2466 stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 5330 2468 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5335 2470 MOV [r15|QWORD + 668] y: -338211 size: DWORD  <||@
  Comment 5346 2472 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5353 2474 DEOPT info [bci:5, 16, 4, 19, 2, 2, 7, 19]  <||@
  Comment 5353 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5358 [rax:0, rsi:0, rdi:0, r8:0, stack:72]at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5, duringCall: false, rethrow: false]
              |0            |1 
     locals:  |-            |- 
     stack:   |r8|QWORD[.]  |  
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2             |3  |4 
     locals:  |rax|QWORD[.]  |-  |rsi|QWORD[.]  |-  |- 
  at com.twitter.util.Local$.save(Local.scala:20) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19, duringCall: true, rethrow: false]
              |0             |1                                                                                      |2                                                                                     
     locals:  |-             |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}         |stack:56|QWORD[.]                                                                     
     stack:   |rdi|QWORD[.]  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]}  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5359 block B115 null  <||@
  Comment 5359 1618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5359 1620 r11|DWORD = MOVE input: int[-326675|0xfffffffffffb03ed]  <||@
  Comment 5365 1626 JUMP ~[] destination: B115 -> B183  <||@
  Comment 5365 block B183 null  <||@
  Comment 5365 2510 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5365 1622 stack:104|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 5370 1624 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5375 2512 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5382 2514 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5389 2516 DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 5389 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5394 [rcx:0, rdi:0, stack:24]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r10|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rcx|QWORD[.]  |rdi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1            
     locals:  |stack:104|QWORD[.]  |rdi|QWORD[.] 
     stack:   |rcx|QWORD[.]        |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rdi|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5395 block B179 null  <||@
  Comment 5395 2476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5395 2478 r8|DWORD = MOVE input: int[-336403|0xfffffffffffadded]  <||@
  Comment 5401 2482 JUMP ~[] destination: B179 -> B181  <||@
  Comment 5401 block B181 null  <||@
  Comment 5401 2492 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5401 2488 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5406 2494 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 5413 2496 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5420 2498 DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 5420 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5425 [rcx:0, rdi:0, r11:0]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r10|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rcx|QWORD[.]  |rdi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r11|QWORD[.]  |rdi|QWORD[.] 
     stack:   |rcx|QWORD[.]  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rdi|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5426 block B71 null  <||@
  Comment 5426 936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5426 938 r11|DWORD = MOVE input: int[-303635|0xfffffffffffb5ded]  <||@
  Comment 5432 942 JUMP ~[] destination: B71 -> B72  <||@
  Comment 5432 block B72 null  <||@
  Comment 5432 944 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5432 908 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5435 946 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5442 948 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5449 950 DEOPT info [bci:4, 1, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 5449 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5454 [rax:0, rdi:0, r10:0, r13:0]at com.twitter.util.Promise.isDefined(Promise.scala:840) [bci: 4, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rdi|QWORD[.]  |-  |-  |- 
     stack:   |r10|DWORD[.]  |   |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:503) [bci: 1, duringCall: true, rethrow: false]
              |0                                              |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=r13|DWORD[.]}  |rdi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1            
     locals:  |rax|QWORD[.]                                   |rdi|QWORD[.] 
     stack:   |vobject:Promise$$anon$3:0{state=r13|DWORD[.]}  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5455 block B84 null  <||@
  Comment 5455 1136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5455 1138 r11|DWORD = MOVE input: int[-310579|0xfffffffffffb42cd]  <||@
  Comment 5461 1144 JUMP ~[] destination: B84 -> B85  <||@
  Comment 5461 block B85 null  <||@
  Comment 5461 1146 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5461 1086 stack:104|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5466 1088 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5469 1148 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5476 1150 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5483 1152 DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 5483 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5488 [rsi:0, rdi:0, stack:24]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r10|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1            
     locals:  |stack:104|QWORD[.]  |rdi|QWORD[.] 
     stack:   |rsi|QWORD[.]        |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rdi|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5489 block B180 null  <||@
  Comment 5489 2484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5489 2486 r8|DWORD = MOVE input: int[-333339|0xfffffffffffae9e5]  <||@
  Comment 5495 2490 JUMP ~[] destination: B180 -> B181  <||@
  Comment 5497 block B176 null  <||@
  Comment 5497 2448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5497 2450 r10|DWORD = MOVE input: int[-347923|0xfffffffffffab0ed]  <||@
  Comment 5503 2454 JUMP ~[] destination: B176 -> B177  <||@
  Comment 5503 block B177 null  <||@
  Comment 5503 2456 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5503 2452 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5506 2458 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5513 2460 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5520 2462 DEOPT info [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 5520 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5525 [rcx:0, rdi:0, r13:0, r14:0]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                        |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdi|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r14|QWORD[.]  |                                                                                                                                                         |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rcx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5526 block B5 null  <||@
  Comment 5526 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5526 56 r10|DWORD = MOVE input: int[-272403|0xfffffffffffbd7ed]  <||@
  Comment 5532 62 JUMP ~[] destination: B5 -> B11  <||@
  Comment 5537 block B182 null  <||@
  Comment 5537 2500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5537 2502 r11|DWORD = MOVE input: int[-329267|0xfffffffffffaf9cd]  <||@
  Comment 5543 2508 JUMP ~[] destination: B182 -> B183  <||@
  Comment 5548 block B189 null  <||@
  Comment 5548 2566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5548 2568 r10|DWORD = MOVE input: int[-287763|0xfffffffffffb9bed]  <||@
  Comment 5554 2570 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 5559 2572 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5564 2574 r14|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 5569 2576 JUMP ~[] destination: B189 -> B192  <||@
  Comment 5569 block B192 null  <||@
  Comment 5569 2602 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5569 2604 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5576 2606 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5583 2608 DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 11]  <||@
  Comment 5583 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5588 [rdx:0, rdi:0, r14:0]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r11|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rdi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r14|DWORD[.]  |rdx|QWORD[.] 
     stack:   |rdi|QWORD[.]  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                             |2 
     locals:  |rdx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5589 block B193 null  <||@
  Comment 5589 2610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5589 2612 r13|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 5592 2614 stack:28|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 5597 2616 MOV [r15|QWORD + 668] y: -273459 size: DWORD  <||@
  Comment 5608 2618 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5615 2620 DEOPT info [bci:12, 6, 5, 7, 2, 2, 7, 11]  <||@
  Comment 5615 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5620 [r13:0, stack:100]at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12, duringCall: false, rethrow: false]
              |0                                              |1                                      |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=r13|DWORD[.]}  |vobject:Promise:1{state=r13|DWORD[.]}  |-  |-  |-  |-  |-  |-  |-  |- 
     stack:   |r13|DWORD[.]                                   |                                       |   |   |   |   |   |   |   |  
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1                                     
     locals:  |stack:28|DWORD[.]                              |vobject:Promise:1{state=r13|DWORD[.]} 
     stack:   |vobject:Promise$$anon$3:0{state=r13|DWORD[.]}  |                                      
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1                                                                             |2 
     locals:  |vobject:Promise:1{state=r13|DWORD[.]}  |vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                                      |1                                                                            
     locals:  |vobject:Promise:1{state=r13|DWORD[.]}  |vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5621 block B175 null  <||@
  Comment 5621 2440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5621 2442 r10|DWORD = MOVE input: int[-350483|0xfffffffffffaa6ed]  <||@
  Comment 5627 2446 JUMP ~[] destination: B175 -> B177  <||@
  Comment 5629 block B40 null  <||@
  Comment 5629 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5629 530 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 5634 532 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5639 534 MOV [r15|QWORD + 668] y: -292643 size: DWORD  <||@
  Comment 5650 536 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5657 538 DEOPT info [bci:37, 4, 19, 2, 2, 7, 11]  <||@
  Comment 5657 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5662 [rax:0, rdx:0, rdi:0]at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |-             |-  |-  |-  |- 
     stack:   |rax|QWORD[.]  |   |   |   |  
  at com.twitter.util.Local$.save(Local.scala:20) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19, duringCall: true, rethrow: false]
              |0             |1                                                                                      |2                                                                                     
     locals:  |-             |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}           |rdi|QWORD[.]                                                                          
     stack:   |rdx|QWORD[.]  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]}  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5663 block B138 null  <||@
  Comment 5663 1894 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5663 1896 r10|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 5668 1898 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5673 1900 MOV [r15|QWORD + 668] y: -340771 size: DWORD  <||@
  Comment 5684 1902 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5691 1904 DEOPT info [bci:37, 4, 19, 2, 2, 7, 19]  <||@
  Comment 5691 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5696 [rax:0, rdi:0, r10:0]at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |-             |-  |-  |-  |- 
     stack:   |rax|QWORD[.]  |   |   |   |  
  at com.twitter.util.Local$.save(Local.scala:20) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19, duringCall: true, rethrow: false]
              |0             |1                                                                                      |2                                                                                     
     locals:  |-             |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}         |r10|QWORD[.]                                                                          
     stack:   |rdi|QWORD[.]  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]}  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5697 block B62 null  <||@
  Comment 5697 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5697 848 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5702 850 MOV [r15|QWORD + 668] y: -299539 size: DWORD  <||@
  Comment 5713 852 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5720 854 DEOPT info [bci:18, 33, 27, 2, 2, 7, 11]  <||@
  Comment 5720 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5725 [rdx:0, rbp:0, rdi:0, r10:0]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0         |1  |2 
     locals:  |-         |-  |- 
     stack:   |r8|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rdi|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbp|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5726 block B86 null  <||@
  Comment 5726 1154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5726 1156 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 5731 1158 stack:108|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 5736 1160 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5739 1162 MOV [r15|QWORD + 668] y: -304435 size: DWORD  <||@
  Comment 5750 1164 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5757 1166 DEOPT info [bci:12, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 5757 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5762 [rdi:0, stack:20, stack:24]at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12, duringCall: false, rethrow: false]
              |0                                                    |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]}  |rdi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
     stack:   |stack:108|DWORD[.]                                   |              |   |   |   |   |   |   |   |  
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                                    |1            
     locals:  |stack:104|QWORD[.]                                   |rdi|QWORD[.] 
     stack:   |vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]}  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5763 block B173 null  <||@
  Comment 5763 2422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5763 2424 stack:120|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 5768 2426 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5771 2428 MOV [r15|QWORD + 668] y: -354835 size: DWORD  <||@
  Comment 5782 2430 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5789 2432 DEOPT info [bci:18, 159, 27, 2, 2, 7, 19]  <||@
  Comment 5789 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5794 [rdi:0, r8:0, r11:0, stack:8]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r10|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdi|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                  
     locals:  |-  |-  |stack:120|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1           
     locals:  |rdi|QWORD[.]  |r8|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5795 block B191 null  <||@
  Comment 5795 2590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5795 2592 r10|DWORD = MOVE input: int[-279859|0xfffffffffffbbacd]  <||@
  Comment 5801 2594 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 5806 2596 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5809 2598 r14|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 5814 2600 JUMP ~[] destination: B191 -> B192  <||@
  Comment 5819 block B162 null  <||@
  Comment 5819 2220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5819 2222 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5822 2224 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5825 2226 r10|DWORD = MOVE input: int[-344083|0xfffffffffffabfed]  <||@
  Comment 5831 2228 JUMP ~[] destination: B162 -> B164  <||@
  Comment 5836 block B79 null  <||@
  Comment 5836 1082 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5836 1084 r11|DWORD = MOVE input: int[-307987|0xfffffffffffb4ced]  <||@
  Comment 5842 1090 JUMP ~[] destination: B79 -> B85  <||@
  Comment 5847 block B18 null  <||@
  Comment 5847 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5847 238 r10|DWORD = MOVE input: int[-276499|0xfffffffffffbc7ed]  <||@
  Comment 5853 240 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5856 242 JUMP ~[] destination: B18 -> B192  <||@
  Comment 5861 block B88 null  <||@
  Comment 5861 1176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5861 1178 r10|DWORD = MOVE input: int[-294195|0xfffffffffffb82cd]  <||@
  Comment 5867 1182 JUMP ~[] destination: B88 -> B89  <||@
  Comment 5867 block B89 null  <||@
  Comment 5867 1184 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5867 1180 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5872 1186 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5879 1188 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5886 1190 DEOPT info [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 5886 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5891 [rax:0, rdx:0, rdi:0, r13:0]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                      |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rdi|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |rax|QWORD[.]  |                                                                                                                                                       |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rdi|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5892 block B98 null  <||@
  Comment 5892 1362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5892 1364 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5897 1366 MOV [r15|QWORD + 668] y: -318483 size: DWORD  <||@
  Comment 5908 1368 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5915 1370 DEOPT info [bci:18, 159, 27, 2, 2, 7, 11]  <||@
  Comment 5915 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5920 [rdx:0, rdi:0, r10:0, r13:0]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0         |1  |2 
     locals:  |-         |-  |- 
     stack:   |r8|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rdi|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |r13|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5921 block B107 null  <||@
  Comment 5921 1482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5921 1484 r10|DWORD = MOVE input: int[-322323|0xfffffffffffb14ed]  <||@
  Comment 5927 1486 r11|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD  <||@
  Comment 5932 1488 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5935 1490 JUMP ~[] destination: B107 -> B108  <||@
  Comment 5935 block B108 null  <||@
  Comment 5935 1492 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5935 1494 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5942 1496 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5949 1498 DEOPT info [bci:4, 1, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 5949 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5954 [rax:0, rdi:0, r8:0, r11:0]at com.twitter.util.Promise.isDefined(Promise.scala:840) [bci: 4, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rdi|QWORD[.]  |-  |-  |- 
     stack:   |r8|DWORD[.]   |   |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:503) [bci: 1, duringCall: true, rethrow: false]
              |0                                              |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=r11|DWORD[.]}  |rdi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1            
     locals:  |rax|QWORD[.]                                   |rdi|QWORD[.] 
     stack:   |vobject:Promise$$anon$3:0{state=r11|DWORD[.]}  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5955 block B190 null  <||@
  Comment 5955 2578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5955 2580 r10|DWORD = MOVE input: int[-284443|0xfffffffffffba8e5]  <||@
  Comment 5961 2582 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 5966 2584 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5971 2586 r14|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 5976 2588 JUMP ~[] destination: B190 -> B192  <||@
  Comment 5981 block B160 null  <||@
  Comment 5981 2204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5981 2206 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5984 2208 MOV [r15|QWORD + 668] y: -347667 size: DWORD  <||@
  Comment 5995 2210 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 6002 2212 DEOPT info [bci:18, 33, 27, 2, 2, 7, 19]  <||@
  Comment 6002 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 6007 [rdx:0, rdi:0, r8:0, r14:0]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r10|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33, duringCall: true, rethrow: false]
              |0             |1            |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdi|QWORD[.]  |r8|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r14|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdi|QWORD[.]  |rdx|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 6008 block B185 null  <||@
  Comment 6008 2530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6008 2532 r10|DWORD = MOVE input: int[-314131|0xfffffffffffb34ed]  <||@
  Comment 6014 2536 JUMP ~[] destination: B185 -> B187  <||@
  Comment 6019 block B1 null  <||@
  Comment 6019 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6019 26 MOV [r15|QWORD + 668] y: -275211 size: DWORD  <||@
  Comment 6030 28 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 6037 30 DEOPT info [bci:0]  <||@
  Comment 6037 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 6042 []at bench.FutureBench.notFused(Bench.scala:195) [bci: 0, duringCall: false, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 6043 block B66 null  <||@
  Comment 6043 904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6043 906 r11|DWORD = MOVE input: int[-303379|0xfffffffffffb5eed]  <||@
  Comment 6049 910 JUMP ~[] destination: B66 -> B72  <||@
  Comment 6054 block B102 null  <||@
  Comment 6054 1436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6054 1438 r10|DWORD = MOVE input: int[-322067|0xfffffffffffb15ed]  <||@
  Comment 6060 1440 r11|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD  <||@
  Comment 6065 1442 rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 6068 1444 JUMP ~[] destination: B102 -> B108  <||@
  Comment 6073 block B87 null  <||@
  Comment 6073 1168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6073 1170 r10|DWORD = MOVE input: int[-295955|0xfffffffffffb7bed]  <||@
  Comment 6079 1174 JUMP ~[] destination: B87 -> B89  <||@
  Comment 6084 {Stub<ExceptionHandlerStub.exceptionHandler>@0x10b12b6e0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 6084 4  <||@
  Comment 6090 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1090a1f88, value=0x10ad5b500]:0x10ad5b500}  <||@
  Comment 6090 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1091[bench.FutureBench.notFused()]"
  method "HotSpotCompilation-1091[bench.FutureBench.notFused()]"
  date 1527100935700
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 10baa77c0   <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1090a1f78, value=0x10ad59e60]:0x10ad59e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@201e25c4 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 48 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 58 8 r14|DWORD[.] = MOV [r13|QWORD[.] + 104] size: DWORD  <||@
  Comment 62 10 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0]  <||@
  Comment 62 [r13:0, r14:0]at bench.FutureBench.notFused(Bench.scala:195) [bci: 0, duringCall: false, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 62 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 66 12 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 66 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 76 14 rax|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD  <||@
  Comment 80 16 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0]  <||@
  Comment 80 [rax:0, r10:0, r13:0, r14:0]at bench.FutureBench.notFused(Bench.scala:195) [bci: 0, duringCall: false, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 80 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 84 18 rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 92 20 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 94 22 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 100 block B2 null  <||@
  Comment 100 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 34 r11|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 108 36 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}  <||@
  Comment 108 {meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}}  <||@
  Comment 118 38 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 121 40 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4  <||@
  Comment 127 block B4 null  <||@
  Comment 127 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 127 48 rax|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 135 50 CMP (x: r8|QWORD, y: [rax|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 143 52 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B7  <||@
  Comment 149 block B7 null  <||@
  Comment 149 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 149 70 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>}  <||@
  Comment 149 {meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>}}  <||@
  Comment 159 72 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 162 74 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B13 falseDestination: B7 -> B9  <||@
  Comment 168 block B9 null  <||@
  Comment 168 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 168 82 rax|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 176 84 CMP (x: r9|QWORD, y: [rax|DWORD * 8 + 56]) size: QWORD  <||@
  Comment 184 86 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B13  <||@
  Comment 190 block B13 null  <||@
  Comment 190 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 190 112 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} state [bci:12, 6, 5, 7, 2, 2, 7, 11]  <||@
  Comment 190 [r10:0, r11:0, r13:0, r14:0]at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12, duringCall: false, rethrow: false]
              |0                                              |1                                      |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=r11|DWORD[.]}  |vobject:Promise:1{state=r11|DWORD[.]}  |-  |-  |-  |-  |-  |-  |-  |- 
     stack:   |r11|DWORD[.]                                   |                                       |   |   |   |   |   |   |   |  
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1                                     
     locals:  |r14|DWORD[.]                                   |vobject:Promise:1{state=r11|DWORD[.]} 
     stack:   |vobject:Promise$$anon$3:0{state=r11|DWORD[.]}  |                                      
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1                                                                             |2 
     locals:  |vobject:Promise:1{state=r11|DWORD[.]}  |vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                                      |1                                                                            
     locals:  |vobject:Promise:1{state=r11|DWORD[.]}  |vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 190 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 190 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed}}  <||@
  Comment 202 114 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B193  <||@
  Comment 208 block B14 null  <||@
  Comment 208 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 208 118 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 212 120 rsi|QWORD = LEA [rax|QWORD + 56] size: QWORD  <||@
  Comment 216 122 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 220 124 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 226 block B16 null  <||@
  Comment 226 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 226 158 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 230 160 AMD64PREFETCH ~[rax|QWORD + 248] instr: 0  <||@
  Comment 237 162 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 237 164 JUMP ~[] destination: B16 -> B17  <||@
  Comment 237 block B17 null  <||@
  Comment 237 166 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 237 168 rbx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 240 170 stack:40|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 245 172 rsi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 249 174 rsi|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 249 176 rdx|QWORD[*] = LEA [rax|QWORD[*] + 40] size: QWORD  <||@
  Comment 253 178 rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 253 180 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}  <||@
  Comment 253 {meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}}  <||@
  Comment 263 182 rcx|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 270 184 MOV (x: [rax|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 273 186 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed}  <||@
  Comment 273 {meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed}}  <||@
  Comment 280 188 MOV (x: [rax|QWORD[*] + 12], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 284 190 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}  <||@
  Comment 284 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}}  <||@
  Comment 294 192 rcx|QWORD = MOV [rbp|QWORD + 168] size: QWORD  <||@
  Comment 301 194 MOV (x: [rax|QWORD[*] + 16], y: rcx|QWORD) size: QWORD  <||@
  Comment 305 196 MOV [rax|QWORD[*] + 24] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}  <||@
  Comment 305 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}}  <||@
  Comment 312 198 MOV (x: [rax|QWORD[*] + 28], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 316 200 rcx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 323 202 MOV (x: [rax|QWORD[*] + 32], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 326 204 rcx|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 333 206 MOV (x: [rax|QWORD[*] + 40], y: rcx|QWORD) size: QWORD  <||@
  Comment 337 208 MOV [rax|QWORD[*] + 48] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>;compressed}  <||@
  Comment 337 {meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>;compressed}}  <||@
  Comment 344 210 MOV (x: [rax|QWORD[*] + 52], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 348 212 rcx|QWORD = MOV [r14|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 356 214 rsi|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 360 216 rax|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 363 218 rax|DWORD[.] = CAS (address: [rbx|QWORD[.] + rcx|QWORD * 1], cmpValue: rax|DWORD[.], newValue: rsi|DWORD[.]) accessKind: DWORD  <||@
  Comment 368 220 rax|DWORD = MOVE input: boolean[true|0x1]  <||@
  Comment 373 222 r11|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 383 224 rax|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 390 226 rcx|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 400 228 MOVB (x: [rax|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 404 230 rax|DWORD = AND r11|DWORD alignment: 4 size: DWORD y: int[1|0x1]  <||@
  Comment 407 {DataSection[0x0]}  <||@
  Comment 414 232 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 416 234 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 422 block B19 null  <||@
  Comment 422 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 422 246 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 427 248 stack:28|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 432 250 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Local$]  <||@
  Comment 432 {Object[Class:com.twitter.util.Local$]}  <||@
  Comment 442 252 rax|DWORD[.] = MOV [rsi|QWORD[.] + 104] size: DWORD  <||@
  Comment 445 254 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 11]  <||@
  Comment 445 [rdx:0, rbx:0, r10:0, r13:0, stack:88, stack:100]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:44|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rbx|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:28|DWORD[.]  |rdx|QWORD[.] 
     stack:   |rbx|QWORD[.]       |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                             |2 
     locals:  |rdx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 445 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 452 256 r11|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 11]  <||@
  Comment 452 [rax:0, rdx:0, rbx:0, r10:0, r13:0, stack:88, stack:100]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:44|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rbx|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:28|DWORD[.]  |rdx|QWORD[.] 
     stack:   |rbx|QWORD[.]       |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                             |2 
     locals:  |rdx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 452 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 460 258 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>}  <||@
  Comment 460 {meta{HotSpotMethod<ThreadLocal.getMap(Thread)>}}  <||@
  Comment 470 260 CMP (x: r14|QWORD, y: [r11|DWORD * 8 + 520]) size: QWORD  <||@
  Comment 478 262 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B191  <||@
  Comment 484 block B20 null  <||@
  Comment 484 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 484 266 r11|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD  <||@
  Comment 491 268 stack:56|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 496 270 r14|DWORD[.] = MOV [r11|QWORD[.] + 80] size: DWORD  <||@
  Comment 500 272 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 507 274 stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 512 276 r11|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 519 278 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 519 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 529 280 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 529 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 539 282 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}  <||@
  Comment 539 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}}  <||@
  Comment 549 284 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>}  <||@
  Comment 549 {meta{HotSpotType<[Lscala/Option;, resolved>}}  <||@
  Comment 559 286 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 562 288 BRANCH trueDestinationProbability: 7.839287703504969E-8 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 568 block B22 null  <||@
  Comment 568 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 568 300 rbx|DWORD[.] = MOV [r14|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 576 302 rcx|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 11]  <||@
  Comment 576 [rax:0, rdx:0, rbx:0, r10:0, r11:0, r13:0, r14:0, stack:64, stack:72, stack:88, stack:100]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:44|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:28|DWORD[.]  |rdx|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                             |2 
     locals:  |rdx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 576 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 583 304 rsi|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 587 306 rsi|DWORD = AND (x: rsi|DWORD, ~y: [rax|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 594 308 CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 596 310 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B190  <||@
  Comment 602 block B23 null  <||@
  Comment 602 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 602 314 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 606 316 rcx|DWORD[.] = MOV [rbx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 610 318 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 616 320 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 620 322 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 622 324 BRANCH trueDestinationProbability: 3.527679190032315E-7 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B42  <||@
  Comment 628 block B42 null  <||@
  Comment 628 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 628 566 CMP (x: rax|DWORD[.], y: [rcx|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 635 568 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B44 falseDestination: B42 -> B189  <||@
  Comment 641 block B44 null  <||@
  Comment 641 574 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 641 576 rax|DWORD[.] = MOV [rbx|QWORD[.] + 28] size: DWORD  <||@
  Comment 644 578 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 646 580 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B48 falseDestination: B44 -> B46  <||@
  Comment 652 block B46 null  <||@
  Comment 652 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 652 588 rsi|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 659 590 CMP (x: r8|QWORD, y: [rsi|DWORD * 8 + 56]) size: QWORD  <||@
  Comment 667 592 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B48 falseDestination: B46 -> B188  <||@
  Comment 673 block B48 null  <||@
  Comment 673 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 673 600 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 676 602 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 682 604 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 686 606 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 686 [rax:0, rcx:0, rdx:0, r10:0, r11:0, r13:0, stack:72, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                           |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |vobject:Promise$Transformer:0{saved=rax|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |rcx|QWORD[.]  |                                                                                                                                                            |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:40|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 686 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 693 608 CMP (x: r9|QWORD, y: [rsi|DWORD * 8 + 24]) size: QWORD  <||@
  Comment 701 610 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 707 block B50 null  <||@
  Comment 707 628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 707 630 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed}  <||@
  Comment 707 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed}}  <||@
  Comment 713 632 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52  <||@
  Comment 719 block B52 null  <||@
  Comment 719 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 719 652 stack:92|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 723 654 rbx|QWORD = MOV [rsi|DWORD * 8 + 32] size: QWORD  <||@
  Comment 731 656 r14|DWORD = MOV [rbx|QWORD] size: DWORD  <||@
  Comment 734 658 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 740 660 JUMP ~[] destination: B52 -> B53  <||@
  Comment 745 block B54 loop 1 depth 1 header:1924|LoopBegin  <||@
  Comment 745 668 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 752 670 rsi|DWORD = SHL r8|DWORD y: 3 size: DWORD  <||@
  Comment 758 672 rsi|DWORD = LEA [rsi|DWORD + 8] size: DWORD  <||@
  Comment 761 674 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 764 676 rsi|QWORD = MOV [rbx|QWORD + rsi|QWORD * 1] size: QWORD  <||@
  Comment 768 678 CMP (x: r9|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 771 680 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B90  <||@
  Comment 777 block B90 loop 1 depth 1 header:1924|LoopBegin  <||@
  Comment 777 1192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 777 1194 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 780 1196 JUMP ~[] destination: B90 -> B53  <||@
  Comment 780 block B53 loop 1 depth 1 header:1924|LoopBegin  <||@
  Comment 780 662 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 780 664 CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 783 666 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B91  <||@
  Comment 790 block B49 null  <||@
  Comment 790 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 790 614 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 790 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 800 616 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 810 618 rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 813 620 r14|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 816 622 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 819 624 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 822 626 JUMP ~[] destination: B49 -> B56  <||@
  Comment 822 block B56 null  <||@
  Comment 822 706 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 822 708 rcx|DWORD[.] = MOV [rbx|QWORD[.] + 104] size: DWORD  <||@
  Comment 825 710 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 825 [rax:0, rcx:0, rdx:0, r11:0, r13:0, r14:0, stack:72, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                           |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |rax|QWORD[.]  |                                                                                                                                                            |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:40|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 825 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 829 712 r8|DWORD[.] = MOV [r14|QWORD[.] + 104] size: DWORD  <||@
  Comment 833 714 r10|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 833 [rax:0, rcx:0, rdx:0, r8:0, r11:0, r13:0, r14:0, stack:72, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                           |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |rax|QWORD[.]  |                                                                                                                                                            |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:40|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 833 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 841 716 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 841 [rax:0, rcx:0, rdx:0, r8:0, r11:0, r13:0, r14:0, stack:72, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                           |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |rax|QWORD[.]  |                                                                                                                                                            |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:40|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 841 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 845 718 CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed}  <||@
  Comment 845 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed}}  <||@
  Comment 852 720 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B88  <||@
  Comment 858 block B57 null  <||@
  Comment 858 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 858 724 rcx|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 865 726 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 869 728 CMP (x: rcx|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 872 730 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B87  <||@
  Comment 878 block B58 null  <||@
  Comment 878 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 878 734 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 882 736 r10|QWORD = LEA [rcx|QWORD + 40] size: QWORD  <||@
  Comment 886 738 CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 890 740 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B60  <||@
  Comment 896 block B60 null  <||@
  Comment 896 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 896 784 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 900 786 AMD64PREFETCH ~[rcx|QWORD + 232] instr: 0  <||@
  Comment 907 788 rcx|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 907 790 JUMP ~[] destination: B60 -> B61  <||@
  Comment 907 block B61 null  <||@
  Comment 907 792 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 907 794 r10|QWORD[.] = MOVE rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 910 796 rbp|QWORD[*] = LEA [rcx|QWORD[*] + 24] size: QWORD  <||@
  Comment 914 798 rbp|QWORD[.] = MOVE rbp|QWORD[*] moveKind: QWORD  <||@
  Comment 914 800 rbx|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 921 802 MOV (x: [rcx|QWORD[*]], y: rbx|QWORD) size: QWORD  <||@
  Comment 924 804 MOV [rcx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed}  <||@
  Comment 924 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed}}  <||@
  Comment 931 806 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 935 808 MOV (x: [rcx|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 939 810 MOV (x: [rcx|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 943 812 rbx|DWORD[.] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 950 814 MOV (x: [rcx|QWORD[*] + 20], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 953 816 rbx|QWORD = MOV [rsi|QWORD + 168] size: QWORD  <||@
  Comment 960 818 MOV (x: [rcx|QWORD[*] + 24], y: rbx|QWORD) size: QWORD  <||@
  Comment 964 820 MOV [rcx|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed}  <||@
  Comment 964 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed}}  <||@
  Comment 971 822 MOV [rcx|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$7/390800101@687091653]  <||@
  Comment 971 {NarrowOop[FutureBench$$Lambda$7/390800101@687091653]}  <||@
  Comment 978 824 rcx|QWORD = MOV [r8|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 986 826 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 990 828 r8|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 997 830 rax|DWORD[.] = CAS (address: [rdx|QWORD[.] + rcx|QWORD * 1], cmpValue: rax|DWORD[.], newValue: r8|DWORD[.]) accessKind: DWORD  <||@
  Comment 1003 832 rax|DWORD = MOVE input: boolean[true|0x1]  <||@
  Comment 1008 834 r8|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 1018 836 rax|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1025 838 MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1029 840 rax|DWORD = AND r8|DWORD alignment: 4 size: DWORD y: int[1|0x1]  <||@
  Comment 1032 {DataSection[0x0]}  <||@
  Comment 1039 842 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1041 844 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 1047 block B63 null  <||@
  Comment 1047 856 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1047 858 stack:96|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1052 860 stack:88|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1057 862 stack:104|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1062 864 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1067 866 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 1067 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 1077 868 rax|DWORD[.] = MOV [r14|QWORD[.] + 104] size: DWORD  <||@
  Comment 1081 870 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:18, 33, 27, 2, 2, 7, 11]  <||@
  Comment 1081 [rax:0, rcx:0, rdx:0, rbx:0, r11:0, r14:0, stack:24, stack:40, stack:72, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:96|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33, duringCall: true, rethrow: false]
              |0             |1                   |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |stack:104|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rbx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rdx|QWORD[.]  |stack:88|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1081 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1085 872 r13|DWORD[.] = MOV [rcx|QWORD[.] + 104] size: DWORD  <||@
  Comment 1089 874 r13|DWORD[.] = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 33, 27, 2, 2, 7, 11]  <||@
  Comment 1089 [rax:0, rdx:0, rbx:0, r11:0, r14:0, stack:24, stack:40, stack:72, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:96|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33, duringCall: true, rethrow: false]
              |0             |1                   |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |stack:104|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rbx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rdx|QWORD[.]  |stack:88|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1089 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1097 876 r10|DWORD[.] = MOV [rbx|QWORD[.] + 12] size: DWORD  <||@
  Comment 1101 878 r8|DWORD[.] = MOV [r14|QWORD[.] + 104] size: DWORD  <||@
  Comment 1105 880 rbp|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 33, 27, 2, 2, 7, 11]  <||@
  Comment 1105 [rax:0, rdx:0, rbx:0, r8:0, r10:0, r11:0, r13:0, stack:24, stack:40, stack:72, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:96|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33, duringCall: true, rethrow: false]
              |0             |1                   |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |stack:104|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rbx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rdx|QWORD[.]  |stack:88|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1105 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1113 882 NULLCHECK [r12|QWORD[*] + rbp|DWORD[.] * 8] state [bci:18, 33, 27, 2, 2, 7, 11]  <||@
  Comment 1113 [rax:0, rdx:0, rbx:0, r8:0, r10:0, r11:0, r13:0, stack:24, stack:40, stack:72, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:96|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33, duringCall: true, rethrow: false]
              |0             |1                   |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |stack:104|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rbx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rdx|QWORD[.]  |stack:88|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1113 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1117 884 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1121 886 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1124 888 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B68 falseDestination: B63 -> B65  <||@
  Comment 1130 block B65 null  <||@
  Comment 1130 894 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1130 896 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}  <||@
  Comment 1130 {meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}}  <||@
  Comment 1140 898 rbp|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1148 900 CMP (x: rdx|QWORD, y: [rbp|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 1156 902 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B68  <||@
  Comment 1162 block B68 null  <||@
  Comment 1162 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1162 918 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1165 920 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B74 falseDestination: B68 -> B70  <||@
  Comment 1171 block B70 null  <||@
  Comment 1171 926 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1171 928 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>}  <||@
  Comment 1171 {meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>}}  <||@
  Comment 1181 930 rbp|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1189 932 CMP (x: rdx|QWORD, y: [rbp|DWORD * 8 + 56]) size: QWORD  <||@
  Comment 1197 934 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B74  <||@
  Comment 1203 block B74 null  <||@
  Comment 1203 956 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1203 958 CMP [r13|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} state [bci:12, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 1203 [rax:0, rbx:0, r8:0, r11:0, r13:0, stack:72, stack:88]at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12, duringCall: false, rethrow: false]
              |0                                              |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=r13|DWORD[.]}  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
     stack:   |r13|DWORD[.]                                   |              |   |   |   |   |   |   |   |  
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1            
     locals:  |rax|QWORD[.]                                   |rbx|QWORD[.] 
     stack:   |vobject:Promise$$anon$3:0{state=r13|DWORD[.]}  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1203 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1203 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed}}  <||@
  Comment 1215 960 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B86  <||@
  Comment 1221 block B75 null  <||@
  Comment 1221 962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1221 964 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1225 966 r10|QWORD = LEA [rdx|QWORD + 40] size: QWORD  <||@
  Comment 1229 968 CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1233 970 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B77  <||@
  Comment 1239 block B77 null  <||@
  Comment 1239 1016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1239 1018 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 1243 1020 AMD64PREFETCH ~[rdx|QWORD + 232] instr: 0  <||@
  Comment 1250 1022 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}  <||@
  Comment 1250 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}}  <||@
  Comment 1260 1024 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}  <||@
  Comment 1260 {meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}}  <||@
  Comment 1270 1026 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1275 1028 rax|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1278 1030 rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1283 1032 JUMP ~[] destination: B77 -> B78  <||@
  Comment 1283 block B78 null  <||@
  Comment 1283 1034 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1283 1036 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1286 1038 rdi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 1290 1040 rdi|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD  <||@
  Comment 1290 1042 r10|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 1297 1044 MOV (x: [rax|QWORD[*]], y: r10|QWORD) size: QWORD  <||@
  Comment 1300 1046 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed}  <||@
  Comment 1300 {meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed}}  <||@
  Comment 1307 1048 MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1311 1050 r10|QWORD = MOV [rbp|QWORD + 168] size: QWORD  <||@
  Comment 1318 1052 MOV (x: [rax|QWORD[*] + 16], y: r10|QWORD) size: QWORD  <||@
  Comment 1322 1054 MOV [rax|QWORD[*] + 24] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}  <||@
  Comment 1322 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}}  <||@
  Comment 1329 1056 MOV (x: [rax|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1333 1058 MOV (x: [rax|QWORD[*] + 32], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 1337 1060 r10|QWORD = MOV [r8|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 1345 1062 rdi|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1349 1064 rax|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 1352 1066 rax|DWORD[.] = CAS (address: [rsi|QWORD[.] + r10|QWORD * 1], cmpValue: rax|DWORD[.], newValue: rdi|DWORD[.]) accessKind: DWORD  <||@
  Comment 1358 1068 rax|DWORD = MOVE input: boolean[true|0x1]  <||@
  Comment 1363 1070 r10|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 1373 1072 rax|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1380 1074 MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1384 1076 rax|DWORD = AND r10|DWORD alignment: 4 size: DWORD y: int[1|0x1]  <||@
  Comment 1387 {DataSection[0x0]}  <||@
  Comment 1394 1078 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1396 1080 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 1402 block B80 null  <||@
  Comment 1402 1092 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1402 1094 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>}  <||@
  Comment 1402 {meta{HotSpotMethod<ThreadLocal.getMap(Thread)>}}  <||@
  Comment 1412 1096 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Local$]  <||@
  Comment 1412 {Object[Class:com.twitter.util.Local$]}  <||@
  Comment 1422 1098 rax|DWORD[.] = MOV [rdi|QWORD[.] + 104] size: DWORD  <||@
  Comment 1425 1100 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 1425 [rdx:0, rbx:0, rsi:0, stack:72, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r10|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
     stack:   |rsi|QWORD[.]  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rbx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1425 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1432 1102 r8|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 1432 [rax:0, rdx:0, rbx:0, rsi:0, stack:72, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r10|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
     stack:   |rsi|QWORD[.]  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rbx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1432 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1440 1104 CMP (x: r11|QWORD, y: [r8|DWORD * 8 + 520]) size: QWORD  <||@
  Comment 1448 1106 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B84  <||@
  Comment 1454 block B81 null  <||@
  Comment 1454 1108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1454 1110 r11|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1459 1112 r11|DWORD[.] = MOV [r11|QWORD[.] + 80] size: DWORD  <||@
  Comment 1463 1114 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1467 1116 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 1470 1118 BRANCH trueDestinationProbability: 7.839287703504969E-8 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 1476 block B83 null  <||@
  Comment 1476 1126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1476 1128 rcx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1479 1130 rsi|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1482 1132 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1485 1134 JUMP ~[] destination: B83 -> B120  <||@
  Comment 1485 block B120 null  <||@
  Comment 1485 1662 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 1485 1664 rdx|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1492 1666 r8|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 1492 [rax:0, rcx:0, rdx:0, rsi:0, r11:0, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r10|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rcx|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |r11|QWORD[.]  |stack:40|QWORD[.] 
     stack:   |rcx|QWORD[.]  |                  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1                                                                               |2 
     locals:  |stack:40|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                              
     locals:  |stack:40|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1492 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1500 1668 rbx|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 1505 1670 rbx|DWORD = AND (x: rbx|DWORD, ~y: [rax|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1508 1672 CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1511 1674 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B120 -> B121 falseDestination: B120 -> B180  <||@
  Comment 1517 block B121 null  <||@
  Comment 1517 1676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1517 1678 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1521 1680 rdx|DWORD[.] = MOV [rdx|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1525 1682 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1532 1684 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1536 1686 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1538 1688 BRANCH trueDestinationProbability: 3.527679190032315E-7 condition: = trueDestination: B121 -> B122 falseDestination: B121 -> B140  <||@
  Comment 1544 block B140 null  <||@
  Comment 1544 1922 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1544 1924 rdx|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1551 1926 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1555 1928 CMP (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 1558 1930 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B140 -> B142 falseDestination: B140 -> B179  <||@
  Comment 1564 block B142 null  <||@
  Comment 1564 1936 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1564 1938 rdx|DWORD[.] = MOV [r8|QWORD[.] + 28] size: DWORD  <||@
  Comment 1568 1940 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1570 1942 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B142 -> B146 falseDestination: B142 -> B144  <||@
  Comment 1576 block B144 null  <||@
  Comment 1576 1952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1576 1954 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>}  <||@
  Comment 1576 {meta{HotSpotType<[Lscala/Option;, resolved>}}  <||@
  Comment 1586 1956 r11|DWORD = MOV [rdx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1594 1958 CMP (x: r10|QWORD, y: [r11|DWORD * 8 + 56]) size: QWORD  <||@
  Comment 1602 1960 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B144 -> B146 falseDestination: B144 -> B178  <||@
  Comment 1608 block B146 null  <||@
  Comment 1608 1970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1608 1946 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}  <||@
  Comment 1608 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}}  <||@
  Comment 1618 1948 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1623 1972 rax|DWORD[.] = MOV [rbx|QWORD[.] + 12] size: DWORD  <||@
  Comment 1626 1974 r10|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1633 1976 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1637 1978 r11|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 1637 [rcx:0, rdx:0, rbx:0, r10:0, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                        |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rbx|QWORD[.]  |vobject:Promise$Transformer:0{saved=rdx|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r10|QWORD[.]  |                                                                                                                                                         |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rcx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1637 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1645 1980 CMP (x: rsi|QWORD, y: [r11|DWORD * 8 + 24]) size: QWORD  <||@
  Comment 1653 1982 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148  <||@
  Comment 1659 block B148 null  <||@
  Comment 1659 2000 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1659 2002 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed}  <||@
  Comment 1659 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed}}  <||@
  Comment 1666 2004 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B148 -> B149 falseDestination: B148 -> B150  <||@
  Comment 1672 block B150 null  <||@
  Comment 1672 2022 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1672 2024 rax|QWORD = MOV [r11|DWORD * 8 + 32] size: QWORD  <||@
  Comment 1680 2026 r8|DWORD = MOV [rax|QWORD] size: DWORD  <||@
  Comment 1683 2028 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1688 2030 JUMP ~[] destination: B150 -> B151  <||@
  Comment 1693 block B152 loop 3 depth 1 header:2296|LoopBegin  <||@
  Comment 1693 2038 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1696 2040 r13|DWORD = SHL rdi|DWORD y: 3 size: DWORD  <||@
  Comment 1703 2042 r13|DWORD = LEA [r13|DWORD + 8] size: DWORD  <||@
  Comment 1707 2044 r13|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1710 2046 r13|QWORD = MOV [rax|QWORD + r13|QWORD * 1] size: QWORD  <||@
  Comment 1714 2048 CMP (x: rsi|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1717 2050 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B152 -> B153 falseDestination: B152 -> B165  <||@
  Comment 1723 block B165 loop 3 depth 1 header:2296|LoopBegin  <||@
  Comment 1723 2248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1723 2250 rdi|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 1725 2252 JUMP ~[] destination: B165 -> B151  <||@
  Comment 1725 block B151 loop 3 depth 1 header:2296|LoopBegin  <||@
  Comment 1725 2032 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1725 2034 CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1728 2036 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B166  <||@
  Comment 1735 block B147 null  <||@
  Comment 1735 1984 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1735 1986 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1738 1988 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1741 1990 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 1741 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 1751 1992 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 1751 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 1761 1994 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 1761 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 1771 1996 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 1771 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 1781 1998 JUMP ~[] destination: B147 -> B154  <||@
  Comment 1781 block B154 null  <||@
  Comment 1781 2070 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1781 2072 rsi|DWORD[.] = MOV [r8|QWORD[.] + 104] size: DWORD  <||@
  Comment 1785 2074 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 1785 [rbx:0, rsi:0, rdi:0, r10:0, r13:0, r14:0, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                        |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rbx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r10|QWORD[.]  |                                                                                                                                                         |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r14|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1785 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1789 2076 r11|DWORD[.] = MOV [rdi|QWORD[.] + 104] size: DWORD  <||@
  Comment 1793 2078 rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 1793 [rbx:0, rsi:0, r10:0, r11:0, r13:0, r14:0, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                        |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rbx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r10|QWORD[.]  |                                                                                                                                                         |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r14|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1793 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1801 2080 NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 1801 [rbx:0, rsi:0, r10:0, r11:0, r13:0, r14:0, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                        |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rbx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r10|QWORD[.]  |                                                                                                                                                         |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r14|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1801 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1805 2082 CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed}  <||@
  Comment 1805 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed}}  <||@
  Comment 1813 2084 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B163  <||@
  Comment 1819 block B155 null  <||@
  Comment 1819 2086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1819 2088 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1826 2090 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1830 2092 CMP (x: rsi|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1833 2094 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B155 -> B156 falseDestination: B155 -> B162  <||@
  Comment 1839 block B156 null  <||@
  Comment 1839 2096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1839 2098 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1843 2100 rdx|QWORD = LEA [rsi|QWORD + 40] size: QWORD  <||@
  Comment 1847 2102 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1851 2104 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B156 -> B157 falseDestination: B156 -> B158  <||@
  Comment 1857 block B158 null  <||@
  Comment 1857 2136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1857 2138 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1861 2140 AMD64PREFETCH ~[rsi|QWORD + 232] instr: 0  <||@
  Comment 1868 2142 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1868 2144 JUMP ~[] destination: B158 -> B159  <||@
  Comment 1868 block B159 null  <||@
  Comment 1868 2146 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1868 2148 r8|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1871 2150 rdx|QWORD[*] = LEA [rsi|QWORD[*] + 24] size: QWORD  <||@
  Comment 1875 2152 rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 1875 2154 rax|QWORD = MOV [rax|QWORD + 168] size: QWORD  <||@
  Comment 1882 2156 MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD  <||@
  Comment 1885 2158 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed}  <||@
  Comment 1885 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed}}  <||@
  Comment 1892 2160 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1896 2162 MOV (x: [rsi|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1900 2164 rax|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1907 2166 MOV (x: [rsi|QWORD[*] + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1910 2168 rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1917 2170 MOV (x: [rsi|QWORD[*] + 20], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1920 2172 rax|QWORD = MOV [rbp|QWORD + 168] size: QWORD  <||@
  Comment 1927 2174 MOV (x: [rsi|QWORD[*] + 24], y: rax|QWORD) size: QWORD  <||@
  Comment 1931 2176 MOV [rsi|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed}  <||@
  Comment 1931 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed}}  <||@
  Comment 1938 2178 MOV [rsi|QWORD[*] + 36] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$10/1594373685@321311106]  <||@
  Comment 1938 {NarrowOop[FutureBench$$Lambda$10/1594373685@321311106]}  <||@
  Comment 1945 2180 rsi|QWORD = MOV [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 1953 2182 r10|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1957 2184 rcx|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 1964 2186 rax|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1967 2188 rax|DWORD[.] = CAS (address: [rbx|QWORD[.] + rsi|QWORD * 1], cmpValue: rax|DWORD[.], newValue: rcx|DWORD[.]) accessKind: DWORD  <||@
  Comment 1972 2190 rax|DWORD = MOVE input: boolean[true|0x1]  <||@
  Comment 1977 2192 r10|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 1987 2194 rax|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1994 2196 MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1998 2198 rax|DWORD = AND r10|DWORD alignment: 4 size: DWORD y: int[1|0x1]  <||@
  Comment 2001 {DataSection[0x0]}  <||@
  Comment 2008 2200 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2010 2202 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B159 -> B160 falseDestination: B159 -> B161  <||@
  Comment 2016 block B161 null  <||@
  Comment 2016 2214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2016 2216 rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2019 2218 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309  <||@
  Comment 2028 12  <||@
  Comment 2038 block B51 null  <||@
  Comment 2038 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2038 636 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 2038 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 2048 638 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 2058 640 rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2061 642 r14|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2064 644 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2067 646 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2070 648 JUMP ~[] destination: B51 -> B56  <||@
  Comment 2075 block B149 null  <||@
  Comment 2075 2006 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2075 2008 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2078 2010 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2081 2012 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 2081 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 2091 2014 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 2091 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 2101 2016 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 2101 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 2111 2018 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 2111 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 2121 2020 JUMP ~[] destination: B149 -> B154  <||@
  Comment 2126 block B91 null  <||@
  Comment 2126 1198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2126 1200 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2129 1202 JUMP ~[] destination: B91 -> B92  <||@
  Comment 2129 block B92 null  <||@
  Comment 2129 1204 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2129 1206 rax|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD  <||@
  Comment 2132 1208 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}  <||@
  Comment 2132 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}}  <||@
  Comment 2138 1210 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B186  <||@
  Comment 2144 block B93 null  <||@
  Comment 2144 1212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2144 1214 rax|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD  <||@
  Comment 2148 1216 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 2148 [rcx:0, rdx:0, r11:0, r13:0, r14:0, stack:72, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                           |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |rcx|QWORD[.]  |                                                                                                                                                            |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:40|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2148 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2155 1218 CMP (x: rax|DWORD[.], y: [rcx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 2158 1220 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B185  <||@
  Comment 2164 block B94 null  <||@
  Comment 2164 1222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2164 1224 r8|DWORD[.] = MOV [r13|QWORD[.] + 104] size: DWORD  <||@
  Comment 2168 1226 rax|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 2168 [rcx:0, rdx:0, r8:0, r11:0, r14:0, stack:72, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                           |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |rcx|QWORD[.]  |                                                                                                                                                            |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:40|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2168 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2176 1228 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 2176 [rcx:0, rdx:0, r8:0, r11:0, r14:0, stack:72, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                           |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |rcx|QWORD[.]  |                                                                                                                                                            |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:40|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2176 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2180 1230 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2184 1232 rsi|QWORD = LEA [rax|QWORD + 64] size: QWORD  <||@
  Comment 2188 1234 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2192 1236 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96  <||@
  Comment 2198 block B96 null  <||@
  Comment 2198 1274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2198 1276 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 2202 1278 AMD64PREFETCH ~[rax|QWORD + 256] instr: 0  <||@
  Comment 2209 1280 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2209 1282 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 2209 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 2219 1284 JUMP ~[] destination: B96 -> B97  <||@
  Comment 2219 block B97 null  <||@
  Comment 2219 1286 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2219 1288 r9|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 2222 1290 r10|QWORD[*] = LEA [rax|QWORD[*] + 24] size: QWORD  <||@
  Comment 2226 1292 r10|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD  <||@
  Comment 2226 1294 r13|QWORD[*] = LEA [rax|QWORD[*] + 48] size: QWORD  <||@
  Comment 2230 1296 r13|QWORD[.] = MOVE r13|QWORD[*] moveKind: QWORD  <||@
  Comment 2230 1298 rbx|QWORD = MOV [rbp|QWORD + 168] size: QWORD  <||@
  Comment 2237 1300 MOV (x: [rax|QWORD[*]], y: rbx|QWORD) size: QWORD  <||@
  Comment 2240 1302 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}  <||@
  Comment 2240 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}}  <||@
  Comment 2247 1304 rbx|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 2254 1306 MOV (x: [rax|QWORD[*] + 12], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 2257 1308 rbx|DWORD[.] = MOV [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 2260 1310 MOV (x: [rax|QWORD[*] + 16], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 2263 1312 rbx|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 2270 1314 MOV (x: [rax|QWORD[*] + 24], y: rbx|QWORD) size: QWORD  <||@
  Comment 2274 1316 MOV [rax|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed}  <||@
  Comment 2274 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed}}  <||@
  Comment 2281 1318 r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 2285 1320 MOV (x: [rax|QWORD[*] + 36], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 2289 1322 MOV (x: [rax|QWORD[*] + 40], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 2293 1324 rbx|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 2300 1326 MOV (x: [rax|QWORD[*] + 44], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 2303 1328 rbx|QWORD = MOV [rsi|QWORD + 168] size: QWORD  <||@
  Comment 2310 1330 MOV (x: [rax|QWORD[*] + 48], y: rbx|QWORD) size: QWORD  <||@
  Comment 2314 1332 MOV [rax|QWORD[*] + 56] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed}  <||@
  Comment 2314 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed}}  <||@
  Comment 2321 1334 MOV [rax|QWORD[*] + 60] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$7/390800101@687091653]  <||@
  Comment 2321 {NarrowOop[FutureBench$$Lambda$7/390800101@687091653]}  <||@
  Comment 2328 1336 r8|QWORD = MOV [r8|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 2336 1338 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 2340 1340 r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 2344 1342 rax|DWORD[.] = MOVE rcx|DWORD[.] moveKind: DWORD  <||@
  Comment 2346 1344 rax|DWORD[.] = CAS (address: [rdx|QWORD[.] + r8|QWORD * 1], cmpValue: rax|DWORD[.], newValue: r9|DWORD[.]) accessKind: DWORD  <||@
  Comment 2352 1346 rax|DWORD = MOVE input: boolean[true|0x1]  <||@
  Comment 2357 1348 r8|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 2367 1350 rax|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2374 1352 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 2384 1354 MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2388 1356 rax|DWORD = AND r8|DWORD alignment: 4 size: DWORD y: int[1|0x1]  <||@
  Comment 2391 {DataSection[0x0]}  <||@
  Comment 2398 1358 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2400 1360 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99  <||@
  Comment 2406 block B99 null  <||@
  Comment 2406 1372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2406 1374 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2411 1376 stack:80|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2416 1378 stack:104|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2421 1380 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2426 1382 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 2426 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 2436 1384 r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 2436 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 2446 1386 rax|DWORD[.] = MOV [r14|QWORD[.] + 104] size: DWORD  <||@
  Comment 2450 1388 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:18, 159, 27, 2, 2, 7, 11]  <||@
  Comment 2450 [rax:0, rcx:0, rdx:0, rbx:0, r11:0, r14:0, stack:24, stack:48, stack:72, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:92|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159, duringCall: true, rethrow: false]
              |0             |1                   |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |stack:104|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rcx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rdx|QWORD[.]  |stack:80|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2450 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2454 1390 r10|DWORD[.] = MOV [rbx|QWORD[.] + 104] size: DWORD  <||@
  Comment 2458 1392 r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 159, 27, 2, 2, 7, 11]  <||@
  Comment 2458 [rax:0, rcx:0, rdx:0, r11:0, r14:0, stack:24, stack:48, stack:72, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:92|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159, duringCall: true, rethrow: false]
              |0             |1                   |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |stack:104|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rcx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rdx|QWORD[.]  |stack:80|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2458 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2466 1394 stack:108|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 2471 1396 r8|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 2475 1398 r13|DWORD[.] = MOV [r14|QWORD[.] + 104] size: DWORD  <||@
  Comment 2479 1400 r10|DWORD[.] = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:18, 159, 27, 2, 2, 7, 11]  <||@
  Comment 2479 [rax:0, rcx:0, rdx:0, r8:0, r11:0, r13:0, stack:20, stack:24, stack:48, stack:72, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:92|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159, duringCall: true, rethrow: false]
              |0             |1                   |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |stack:104|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rcx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rdx|QWORD[.]  |stack:80|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2479 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2487 1402 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:18, 159, 27, 2, 2, 7, 11]  <||@
  Comment 2487 [rax:0, rcx:0, rdx:0, r8:0, r11:0, r13:0, stack:20, stack:24, stack:48, stack:72, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0               |1  |2 
     locals:  |-               |-  |- 
     stack:   |stack:92|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159, duringCall: true, rethrow: false]
              |0             |1                   |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |stack:104|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rcx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rdx|QWORD[.]  |stack:80|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2487 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2491 1404 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 2495 1406 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 2498 1408 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B104 falseDestination: B99 -> B101  <||@
  Comment 2504 block B101 null  <||@
  Comment 2504 1426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2504 1428 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}  <||@
  Comment 2504 {meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}}  <||@
  Comment 2514 1430 rdx|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 2522 1432 CMP (x: r10|QWORD, y: [rdx|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 2530 1434 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B104  <||@
  Comment 2536 block B104 null  <||@
  Comment 2536 1462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2536 1412 r14|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2541 1414 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>}  <||@
  Comment 2541 {meta{HotSpotMethod<ThreadLocal.getMap(Thread)>}}  <||@
  Comment 2551 1416 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Local$]  <||@
  Comment 2551 {Object[Class:com.twitter.util.Local$]}  <||@
  Comment 2561 1418 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}  <||@
  Comment 2561 {meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}}  <||@
  Comment 2571 1420 rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2574 1422 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>}  <||@
  Comment 2574 {meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>}}  <||@
  Comment 2584 1464 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 2587 1466 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B104 -> B110 falseDestination: B104 -> B106  <||@
  Comment 2593 block B106 null  <||@
  Comment 2593 1474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2593 1476 rcx|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 2601 1478 CMP (x: rdx|QWORD, y: [rcx|DWORD * 8 + 56]) size: QWORD  <||@
  Comment 2609 1480 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B110  <||@
  Comment 2615 block B110 null  <||@
  Comment 2615 1506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2615 1470 rdx|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD  <||@
  Comment 2619 1508 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed} state [bci:12, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 2619 [rax:0, rdx:0, rbx:0, rdi:0, r11:0, r13:0, r14:0, stack:20, stack:72, stack:88]at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12, duringCall: false, rethrow: false]
              |0                                              |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=rdx|DWORD[.]}  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
     stack:   |rdx|DWORD[.]                                   |              |   |   |   |   |   |   |   |  
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1            
     locals:  |rax|QWORD[.]                                   |rbx|QWORD[.] 
     stack:   |vobject:Promise$$anon$3:0{state=rdx|DWORD[.]}  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2619 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2619 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue$$anon$6;, resolved>;compressed}}  <||@
  Comment 2630 1510 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B184  <||@
  Comment 2636 block B111 null  <||@
  Comment 2636 1512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2636 1514 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2640 1516 r8|QWORD = LEA [rcx|QWORD + 40] size: QWORD  <||@
  Comment 2644 1518 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2648 1520 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B113  <||@
  Comment 2654 block B113 null  <||@
  Comment 2654 1558 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2654 1560 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 2658 1562 AMD64PREFETCH ~[rcx|QWORD + 232] instr: 0  <||@
  Comment 2665 1564 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2668 1566 rax|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 2671 1568 JUMP ~[] destination: B113 -> B114  <||@
  Comment 2671 block B114 null  <||@
  Comment 2671 1570 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2671 1572 rcx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 2674 1574 rbx|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 2678 1576 rbx|QWORD[.] = MOVE rbx|QWORD[*] moveKind: QWORD  <||@
  Comment 2678 1578 r10|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 2685 1580 MOV (x: [rax|QWORD[*]], y: r10|QWORD) size: QWORD  <||@
  Comment 2688 1582 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed}  <||@
  Comment 2688 {meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>;compressed}}  <||@
  Comment 2695 1584 MOV (x: [rax|QWORD[*] + 12], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 2698 1586 r10|QWORD = MOV [rbp|QWORD + 168] size: QWORD  <||@
  Comment 2705 1588 MOV (x: [rax|QWORD[*] + 16], y: r10|QWORD) size: QWORD  <||@
  Comment 2709 1590 MOV [rax|QWORD[*] + 24] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}  <||@
  Comment 2709 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}}  <||@
  Comment 2716 1592 MOV (x: [rax|QWORD[*] + 28], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 2719 1594 MOV (x: [rax|QWORD[*] + 32], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 2723 1596 r10|QWORD = MOV [r13|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 2731 1598 rbx|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 2735 1600 rax|DWORD[.] = MOVE rdx|DWORD[.] moveKind: DWORD  <||@
  Comment 2737 1602 rax|DWORD[.] = CAS (address: [rcx|QWORD[.] + r10|QWORD * 1], cmpValue: rax|DWORD[.], newValue: rbx|DWORD[.]) accessKind: DWORD  <||@
  Comment 2743 1604 rax|DWORD = MOVE input: boolean[true|0x1]  <||@
  Comment 2748 1606 r10|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 2758 1608 rax|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2765 1610 MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2769 1612 rax|DWORD = AND r10|DWORD alignment: 4 size: DWORD y: int[1|0x1]  <||@
  Comment 2772 {DataSection[0x0]}  <||@
  Comment 2779 1614 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2781 1616 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B114 -> B115 falseDestination: B114 -> B116  <||@
  Comment 2787 block B116 null  <||@
  Comment 2787 1628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2787 1630 rax|DWORD[.] = MOV [rdi|QWORD[.] + 104] size: DWORD  <||@
  Comment 2790 1632 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 2790 [rcx:0, r8:0, r14:0, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r10|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rcx|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |r8|QWORD[.]   |stack:40|QWORD[.] 
     stack:   |rcx|QWORD[.]  |                  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1                                                                               |2 
     locals:  |stack:40|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                              
     locals:  |stack:40|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2790 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2797 1634 rdx|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:18, 42, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 2797 [rax:0, rcx:0, r8:0, r14:0, stack:88]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r10|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1                  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rcx|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |r8|QWORD[.]   |stack:40|QWORD[.] 
     stack:   |rcx|QWORD[.]  |                  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1                                                                               |2 
     locals:  |stack:40|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                              
     locals:  |stack:40|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2797 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2804 1636 CMP (x: rsi|QWORD, y: [rdx|DWORD * 8 + 520]) size: QWORD  <||@
  Comment 2812 1638 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B182  <||@
  Comment 2818 block B117 null  <||@
  Comment 2818 1640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2818 1642 rsi|DWORD[.] = MOV [r14|QWORD[.] + 80] size: DWORD  <||@
  Comment 2822 1644 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 2826 1646 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 2828 1648 BRANCH trueDestinationProbability: 7.839287703504969E-8 condition: = trueDestination: B117 -> B118 falseDestination: B117 -> B119  <||@
  Comment 2834 block B119 null  <||@
  Comment 2834 1656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2834 1658 r11|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2837 1660 JUMP ~[] destination: B119 -> B120  <||@
  Comment 2842 block B166 null  <||@
  Comment 2842 2254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2842 2256 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2845 2258 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2848 2260 JUMP ~[] destination: B166 -> B167  <||@
  Comment 2848 block B167 null  <||@
  Comment 2848 2262 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 2848 2264 rax|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD  <||@
  Comment 2852 2266 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}  <||@
  Comment 2852 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}}  <||@
  Comment 2858 2268 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B167 -> B168 falseDestination: B167 -> B176  <||@
  Comment 2864 block B168 null  <||@
  Comment 2864 2270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2864 2272 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 2864 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 2874 2274 rax|DWORD[.] = MOV [r8|QWORD[.] + 104] size: DWORD  <||@
  Comment 2878 2276 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 2878 [rcx:0, rbx:0, r13:0, r14:0, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                        |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rbx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r14|QWORD[.]  |                                                                                                                                                         |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rcx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2878 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2885 2278 CMP (x: rax|DWORD[.], y: [r14|QWORD[.] + 12]) size: DWORD  <||@
  Comment 2889 2280 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B175  <||@
  Comment 2895 block B169 null  <||@
  Comment 2895 2282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2895 2284 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 2895 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 2905 2286 r10|DWORD[.] = MOV [rdi|QWORD[.] + 104] size: DWORD  <||@
  Comment 2909 2288 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 2909 [rcx:0, rbx:0, r10:0, r13:0, r14:0, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                        |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rbx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r14|QWORD[.]  |                                                                                                                                                         |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rcx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2909 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2917 2290 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 2917 [rcx:0, rbx:0, r10:0, r13:0, r14:0, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                        |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rbx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r14|QWORD[.]  |                                                                                                                                                         |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rcx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rbx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 2917 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2921 2292 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2925 2294 rsi|QWORD = LEA [rax|QWORD + 64] size: QWORD  <||@
  Comment 2929 2296 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2933 2298 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B169 -> B170 falseDestination: B169 -> B171  <||@
  Comment 2939 block B171 null  <||@
  Comment 2939 2332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2939 2334 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 2943 2336 AMD64PREFETCH ~[rax|QWORD + 256] instr: 0  <||@
  Comment 2950 2338 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2950 2340 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 2950 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 2960 2342 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 2960 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 2970 2344 JUMP ~[] destination: B171 -> B172  <||@
  Comment 2970 block B172 null  <||@
  Comment 2970 2346 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2970 2348 rdx|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 2973 2350 r11|QWORD[*] = LEA [rax|QWORD[*] + 24] size: QWORD  <||@
  Comment 2977 2352 r11|QWORD[.] = MOVE r11|QWORD[*] moveKind: QWORD  <||@
  Comment 2977 2354 r8|QWORD[*] = LEA [rax|QWORD[*] + 48] size: QWORD  <||@
  Comment 2981 2356 r8|QWORD[.] = MOVE r8|QWORD[*] moveKind: QWORD  <||@
  Comment 2981 2358 rbp|QWORD = MOV [rbp|QWORD + 168] size: QWORD  <||@
  Comment 2988 2360 MOV (x: [rax|QWORD[*]], y: rbp|QWORD) size: QWORD  <||@
  Comment 2991 2362 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}  <||@
  Comment 2991 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>;compressed}}  <||@
  Comment 2998 2364 rbp|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 3005 2366 MOV (x: [rax|QWORD[*] + 12], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 3008 2368 rbp|DWORD[.] = MOV [r14|QWORD[.] + 16] size: DWORD  <||@
  Comment 3012 2370 MOV (x: [rax|QWORD[*] + 16], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 3015 2372 rdi|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 3022 2374 MOV (x: [rax|QWORD[*] + 24], y: rdi|QWORD) size: QWORD  <||@
  Comment 3026 2376 MOV [rax|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed}  <||@
  Comment 3026 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>;compressed}}  <||@
  Comment 3033 2378 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 3037 2380 MOV (x: [rax|QWORD[*] + 36], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 3041 2382 rdi|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 3048 2384 MOV (x: [rax|QWORD[*] + 40], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 3051 2386 rdi|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 3058 2388 MOV (x: [rax|QWORD[*] + 44], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 3061 2390 rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD  <||@
  Comment 3068 2392 MOV (x: [rax|QWORD[*] + 48], y: rsi|QWORD) size: QWORD  <||@
  Comment 3072 2394 MOV [rax|QWORD[*] + 56] y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed}  <||@
  Comment 3072 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>;compressed}}  <||@
  Comment 3079 2396 MOV [rax|QWORD[*] + 60] y: -559030611 size: DWORD c: NarrowOop[FutureBench$$Lambda$10/1594373685@321311106]  <||@
  Comment 3079 {NarrowOop[FutureBench$$Lambda$10/1594373685@321311106]}  <||@
  Comment 3086 2398 rsi|QWORD = MOV [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 3094 2400 r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 3098 2402 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 3102 2404 rax|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 3105 2406 rax|DWORD[.] = CAS (address: [rbx|QWORD[.] + rsi|QWORD * 1], cmpValue: rax|DWORD[.], newValue: rdx|DWORD[.]) accessKind: DWORD  <||@
  Comment 3110 2408 rax|DWORD = MOVE input: boolean[true|0x1]  <||@
  Comment 3115 2410 r10|DWORD = CMOVE (falseValue: boolean[false|0x0], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 3125 2412 rax|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 3132 2414 MOVB (x: [rax|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 3136 2416 rax|DWORD = AND r10|DWORD alignment: 4 size: DWORD y: int[1|0x1]  <||@
  Comment 3139 {DataSection[0x0]}  <||@
  Comment 3146 2418 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 3148 2420 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B174  <||@
  Comment 3154 block B174 null  <||@
  Comment 3154 2434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3154 2436 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 3157 2438 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309  <||@
  Comment 3166 12  <||@
  Comment 3176 block B153 null  <||@
  Comment 3176 2052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3176 2054 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 3176 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 3186 2056 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 3186 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 3196 2058 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 3196 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 3206 2060 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 3206 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 3216 2062 MOV (x: [r11|DWORD * 8 + 24], y: rsi|QWORD) size: QWORD  <||@
  Comment 3224 2064 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 3227 2066 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3230 2068 JUMP ~[] destination: B153 -> B154  <||@
  Comment 3235 block B55 null  <||@
  Comment 3235 682 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3235 684 r8|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 3238 686 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 3238 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 3248 688 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 3258 690 rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3261 692 r14|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 3264 694 r13|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3269 696 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}  <||@
  Comment 3269 {meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}}  <||@
  Comment 3279 698 MOV (x: [r13|DWORD * 8 + 24], y: r8|QWORD) size: QWORD  <||@
  Comment 3287 700 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3290 702 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 3293 704 JUMP ~[] destination: B55 -> B56  <||@
  Comment 3298 block B15 null  <||@
  Comment 3298 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3298 128 r13|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 3301 130 stack:28|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 3306 132 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3306 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3316 134 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 3321 136 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3326 138 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:12, 6, 5, 7, 2, 2, 7, 11]  <||@
  Comment 3326 {Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3331 [r13:0, stack:100]at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12, duringCall: false, rethrow: false]
              |0                                              |1                                      |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=r13|DWORD[.]}  |vobject:Promise:1{state=r13|DWORD[.]}  |-  |-  |-  |-  |-  |-  |-  |- 
     stack:   |r13|DWORD[.]                                   |                                       |   |   |   |   |   |   |   |  
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1                                     
     locals:  |stack:28|DWORD[.]                              |vobject:Promise:1{state=r13|DWORD[.]} 
     stack:   |vobject:Promise$$anon$3:0{state=r13|DWORD[.]}  |                                      
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1                                                                             |2 
     locals:  |vobject:Promise:1{state=r13|DWORD[.]}  |vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                                      |1                                                                            
     locals:  |vobject:Promise:1{state=r13|DWORD[.]}  |vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 3332 140 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3332 142 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>}  <||@
  Comment 3332 {meta{HotSpotType<Lcom/twitter/util/Promise;, resolved>}}  <||@
  Comment 3342 144 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}  <||@
  Comment 3342 {meta{HotSpotType<Lcom/twitter/util/Try;, resolved>}}  <||@
  Comment 3352 146 r11|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 3355 148 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 3355 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 3365 150 r14|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 3370 152 r13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 3370 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 3380 154 JUMP ~[] destination: B15 -> B17  <||@
  Comment 3385 block B76 null  <||@
  Comment 3385 972 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3385 974 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3390 976 stack:96|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 3395 978 stack:108|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 3400 980 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 3405 982 r13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3405 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3415 984 rsi|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 3418 986 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 3423 988 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3428 990 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:12, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 3428 {Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3433 [stack:20, stack:24, stack:32, stack:60, stack:72, stack:88]at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12, duringCall: false, rethrow: false]
              |0                                                    |1                  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]}  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
     stack:   |stack:108|DWORD[.]                                   |                   |   |   |   |   |   |   |   |  
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                                    |1                 
     locals:  |stack:104|QWORD[.]                                   |stack:40|QWORD[.] 
     stack:   |vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]}  |                  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1                                                                               |2 
     locals:  |stack:40|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                              
     locals:  |stack:40|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 3434 992 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3434 994 rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3439 996 r8|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD  <||@
  Comment 3444 998 r13|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD  <||@
  Comment 3449 1000 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 3454 1002 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 3464 1004 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}  <||@
  Comment 3464 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}}  <||@
  Comment 3474 1006 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}  <||@
  Comment 3474 {meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}}  <||@
  Comment 3484 1008 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3489 1010 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 3489 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 3499 1012 r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 3499 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 3509 1014 JUMP ~[] destination: B76 -> B78  <||@
  Comment 3514 block B59 null  <||@
  Comment 3514 742 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3514 744 stack:96|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 3519 746 stack:88|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3524 748 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 3529 750 stack:80|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3534 752 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3534 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3544 754 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 3547 756 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 3552 758 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3557 760 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 3557 {Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3562 [r13:0, stack:32, stack:40, stack:48, stack:60, stack:72, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0                  |1                                                                                                                                                           |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |stack:80|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |stack:88|QWORD[.]  |                                                                                                                                                            |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:40|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                            
     locals:  |stack:80|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 3563 762 rcx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3566 764 r8|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD  <||@
  Comment 3571 766 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 3576 768 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 3576 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 3586 770 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 3586 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 3596 772 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 3601 774 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 3611 776 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 3616 778 r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 3616 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 3626 780 JUMP ~[] destination: B59 -> B61  <||@
  Comment 3631 block B157 null  <||@
  Comment 3631 2106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3631 2108 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 3636 2110 stack:120|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3641 2112 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3641 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3651 2114 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 3656 2116 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3661 2118 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 3661 {Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3666 [r13:0, r14:0, stack:8, stack:60, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0                   |1                                                                                                                                                        |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |stack:40|QWORD[.]   |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |stack:120|QWORD[.]  |                                                                                                                                                         |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r14|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                              
     locals:  |stack:40|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 3667 2120 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3670 2122 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 3675 2124 r10|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 3680 2126 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 3680 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 3690 2128 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 3690 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 3700 2130 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 3710 2132 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3715 2134 JUMP ~[] destination: B157 -> B159  <||@
  Comment 3720 block B170 null  <||@
  Comment 3720 2300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3720 2302 stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 3725 2304 stack:120|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 3730 2306 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3730 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3740 2308 rdx|DWORD = MOVE input: int[12|0xc]  <||@
  Comment 3745 2310 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3750 2312 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 3750 {Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3755 [r13:0, r14:0, stack:8, stack:60, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0                  |1                                                                                                                                                              |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |stack:40|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=stack:120|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r14|QWORD[.]       |                                                                                                                                                               |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                  
     locals:  |-  |-  |stack:120|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                              
     locals:  |stack:40|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 3756 2314 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3756 2316 r10|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 3761 2318 rcx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 3766 2320 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 3766 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 3776 2322 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 3776 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 3786 2324 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 3796 2326 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}  <||@
  Comment 3796 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}}  <||@
  Comment 3806 2328 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3811 2330 JUMP ~[] destination: B170 -> B172  <||@
  Comment 3816 block B112 null  <||@
  Comment 3816 1522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3816 1524 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3821 1526 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 3826 1528 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3826 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3836 1530 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 3841 1532 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3846 1534 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:12, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 3846 {Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3851 [r13:0, stack:20, stack:24, stack:60, stack:72, stack:88]at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12, duringCall: false, rethrow: false]
              |0                                                    |1                  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]}  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
     stack:   |stack:108|DWORD[.]                                   |                   |   |   |   |   |   |   |   |  
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                                    |1                 
     locals:  |stack:104|QWORD[.]                                   |stack:40|QWORD[.] 
     stack:   |vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]}  |                  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1                                                                               |2 
     locals:  |stack:40|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                              
     locals:  |stack:40|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 3852 1536 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3852 1538 r8|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3857 1540 rdx|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD  <||@
  Comment 3861 1542 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 3866 1544 r14|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 3871 1546 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<ThreadLocal.getMap(Thread)>}  <||@
  Comment 3871 {meta{HotSpotMethod<ThreadLocal.getMap(Thread)>}}  <||@
  Comment 3881 1548 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Local$]  <||@
  Comment 3881 {Object[Class:com.twitter.util.Local$]}  <||@
  Comment 3891 1550 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 3901 1552 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}  <||@
  Comment 3901 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}}  <||@
  Comment 3911 1554 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}  <||@
  Comment 3911 {meta{HotSpotType<Lcom/twitter/util/Promise$$anon$3;, resolved>}}  <||@
  Comment 3921 1556 JUMP ~[] destination: B112 -> B114  <||@
  Comment 3926 block B95 null  <||@
  Comment 3926 1238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3926 1240 stack:92|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 3931 1242 stack:104|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 3936 1244 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 3941 1246 stack:80|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3946 1248 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3946 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3956 1250 rdx|DWORD = MOVE input: int[12|0xc]  <||@
  Comment 3961 1252 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3966 1254 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 3966 {Stub<NewArrayStub.newArray>@0x10b37a320:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3971 [r14:0, stack:24, stack:36, stack:48, stack:60, stack:72, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0                   |1                                                                                                                                                           |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |stack:80|QWORD[.]   |vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |stack:104|QWORD[.]  |                                                                                                                                                            |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:40|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                            
     locals:  |stack:80|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 3972 1256 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3972 1258 r8|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 3977 1260 rcx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3982 1262 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 3982 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 3992 1264 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 3992 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 4002 1266 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 4007 1268 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}  <||@
  Comment 4007 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}}  <||@
  Comment 4017 1270 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 4022 1272 JUMP ~[] destination: B95 -> B97  <||@
  Comment 4027 block B24 null  <||@
  Comment 4027 326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4027 328 rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4029 330 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 4034 332 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 4039 334 stack:80|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 4044 336 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 4047 338 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4050 340 r8|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 4053 342 stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 4058 344 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:38, 2, 16, 4, 19, 2, 2, 7, 11]  <||@
  Comment 4058 9  <||@
  Comment 4063 {HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>}  <||@
  Comment 4068 [stack:40, stack:48, stack:60, stack:64, stack:72, stack:88]at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2                  |3  |4 
     locals:  |stack:64|QWORD[.]  |-  |stack:88|QWORD[.]  |-  |- 
  at com.twitter.util.Local$.save(Local.scala:20) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                                                                                      |2                                                                                     
     locals:  |-                  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}           |stack:40|QWORD[.]                                                                     
     stack:   |stack:80|QWORD[.]  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]}  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                            
     locals:  |stack:80|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 4069 346 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 4072 348 BRANCH trueDestinationProbability: 3.527674073959098E-7 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B41  <||@
  Comment 4078 block B41 null  <||@
  Comment 4078 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4078 542 rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4081 544 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 4086 546 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>}  <||@
  Comment 4086 {meta{HotSpotType<[Lscala/Option;, resolved>}}  <||@
  Comment 4096 548 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}  <||@
  Comment 4096 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}}  <||@
  Comment 4106 550 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 4106 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 4116 552 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 4121 554 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}  <||@
  Comment 4121 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}}  <||@
  Comment 4131 556 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 4136 558 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 4136 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 4146 560 r13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 4146 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 4156 562 JUMP ~[] destination: B41 -> B44  <||@
  Comment 4161 block B122 null  <||@
  Comment 4161 1690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4161 1692 stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 4166 1694 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4169 1698 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4172 1700 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 4174 1702 stack:80|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4179 1704 stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4184 1706 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:38, 2, 16, 4, 19, 2, 2, 7, 19]  <||@
  Comment 4184 9  <||@
  Comment 4191 {HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>}  <||@
  Comment 4196 [stack:8, stack:48, stack:72, stack:88]at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0                   |1  |2                  |3  |4 
     locals:  |stack:120|QWORD[.]  |-  |stack:80|QWORD[.]  |-  |- 
  at com.twitter.util.Local$.save(Local.scala:20) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                                                                                      |2                                                                                     
     locals:  |-                  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}         |stack:56|QWORD[.]                                                                     
     stack:   |stack:40|QWORD[.]  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]}  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                              
     locals:  |stack:40|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 4197 1708 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 4200 1710 BRANCH trueDestinationProbability: 3.527674073959098E-7 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B139  <||@
  Comment 4206 block B139 null  <||@
  Comment 4206 1906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4206 1908 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4209 1910 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 4214 1912 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 4219 1914 rax|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 4224 1916 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 4234 1918 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}  <||@
  Comment 4234 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}}  <||@
  Comment 4244 1920 JUMP ~[] destination: B139 -> B142  <||@
  Comment 4249 block B21 null  <||@
  Comment 4249 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4249 292 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 4254 294 stack:80|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 4259 296 JUMP ~[] destination: B21 -> B26  <||@
  Comment 4259 block B26 null  <||@
  Comment 4259 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4259 356 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 4264 358 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:34, 4, 19, 2, 2, 7, 11]  <||@
  Comment 4264 9  <||@
  Comment 4271 {HotSpotMethod<ThreadLocal.setInitialValue()>}  <||@
  Comment 4276 [stack:48, stack:60, stack:72, stack:88]at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at com.twitter.util.Local$.save(Local.scala:20) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                                                                                      |2                                                                                     
     locals:  |-                  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}           |stack:40|QWORD[.]                                                                     
     stack:   |stack:80|QWORD[.]  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]}  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                            
     locals:  |stack:80|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 4277 360 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 4280 366 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>}  <||@
  Comment 4280 {meta{HotSpotType<[Lscala/Option;, resolved>}}  <||@
  Comment 4290 362 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B30 falseDestination: B26 -> B28  <||@
  Comment 4296 block B28 null  <||@
  Comment 4296 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4296 378 rsi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 4299 380 CMP (x: r8|QWORD, y: [rsi|DWORD * 8 + 56]) size: QWORD  <||@
  Comment 4307 382 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B30 falseDestination: B28 -> B40  <||@
  Comment 4313 block B30 null  <||@
  Comment 4313 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4313 368 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}  <||@
  Comment 4313 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}}  <||@
  Comment 4323 370 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 4328 394 r10|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 4332 396 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 4339 398 r10|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 4339 [rax:0, rdx:0, r11:0, stack:60, stack:72, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                           |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |vobject:Promise$Transformer:0{saved=rax|QWORD[.],promise=stack:40|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r11|QWORD[.]  |                                                                                                                                                            |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:40|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 4339 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4347 400 CMP (x: r9|QWORD, y: [r10|DWORD * 8 + 24]) size: QWORD  <||@
  Comment 4355 402 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 4361 block B32 null  <||@
  Comment 4361 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4361 426 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed}  <||@
  Comment 4361 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed}}  <||@
  Comment 4368 428 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 4374 block B34 null  <||@
  Comment 4374 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4374 452 rcx|QWORD = MOV [r10|DWORD * 8 + 32] size: QWORD  <||@
  Comment 4382 454 rbx|DWORD = MOV [rcx|QWORD] size: DWORD  <||@
  Comment 4384 456 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 4389 458 JUMP ~[] destination: B34 -> B35  <||@
  Comment 4394 block B36 loop 0 depth 1 header:1999|LoopBegin  <||@
  Comment 4394 466 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4400 468 rsi|DWORD = SHL rdi|DWORD y: 3 size: DWORD  <||@
  Comment 4405 470 rsi|DWORD = LEA [rsi|DWORD + 8] size: DWORD  <||@
  Comment 4408 472 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 4411 474 rsi|QWORD = MOV [rcx|QWORD + rsi|QWORD * 1] size: QWORD  <||@
  Comment 4415 476 CMP (x: r9|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 4418 478 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38  <||@
  Comment 4424 block B38 loop 0 depth 1 header:1999|LoopBegin  <||@
  Comment 4424 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4424 506 rdi|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 4426 508 JUMP ~[] destination: B38 -> B35  <||@
  Comment 4426 block B35 loop 0 depth 1 header:1999|LoopBegin  <||@
  Comment 4426 460 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4426 462 CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 4428 464 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B39  <||@
  Comment 4435 block B82 null  <||@
  Comment 4435 1120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4435 1122 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4440 1124 JUMP ~[] destination: B82 -> B124  <||@
  Comment 4440 block B124 null  <||@
  Comment 4440 1720 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 4440 1722 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4443 1724 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@24b58309 state [bci:34, 4, 19, 2, 2, 7, 19]  <||@
  Comment 4443 9  <||@
  Comment 4447 {HotSpotMethod<ThreadLocal.setInitialValue()>}  <||@
  Comment 4452 [stack:40, stack:88]at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at com.twitter.util.Local$.save(Local.scala:20) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                                                                                      |2                                                                                     
     locals:  |-                  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}         |stack:88|QWORD[.]                                                                     
     stack:   |stack:40|QWORD[.]  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]}  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                              
     locals:  |stack:40|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 4453 1726 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 4456 1728 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B124 -> B128 falseDestination: B124 -> B126  <||@
  Comment 4462 block B126 null  <||@
  Comment 4462 1738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4462 1740 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Lscala/Option;, resolved>}  <||@
  Comment 4462 {meta{HotSpotType<[Lscala/Option;, resolved>}}  <||@
  Comment 4472 1742 r10|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 4476 1744 CMP (x: r8|QWORD, y: [r10|DWORD * 8 + 56]) size: QWORD  <||@
  Comment 4484 1746 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B126 -> B128 falseDestination: B126 -> B138  <||@
  Comment 4490 block B128 null  <||@
  Comment 4490 1756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4490 1732 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}  <||@
  Comment 4490 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>}}  <||@
  Comment 4500 1734 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 4505 1758 r10|DWORD[.] = MOV [rdi|QWORD[.] + 12] size: DWORD  <||@
  Comment 4509 1760 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2c653d0d encoding: base: 0 shift: 3  <||@
  Comment 4516 1762 r10|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 4516 [rax:0, rdi:0, r11:0, stack:40, stack:88]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                             |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdi|QWORD[.]  |vobject:Promise$Transformer:0{saved=rax|QWORD[.],promise=stack:88|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r11|QWORD[.]  |                                                                                                                                                              |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:88|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 4516 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4524 1764 CMP (x: r9|QWORD, y: [r10|DWORD * 8 + 24]) size: QWORD  <||@
  Comment 4532 1766 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B128 -> B129 falseDestination: B128 -> B130  <||@
  Comment 4538 block B130 null  <||@
  Comment 4538 1790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4538 1792 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed}  <||@
  Comment 4538 {meta{HotSpotType<Lcom/twitter/util/Promise$WaitQueue;, resolved>;compressed}}  <||@
  Comment 4545 1794 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B130 -> B131 falseDestination: B130 -> B132  <||@
  Comment 4551 block B132 null  <||@
  Comment 4551 1818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4551 1820 r8|QWORD = MOV [r10|DWORD * 8 + 32] size: QWORD  <||@
  Comment 4559 1822 rcx|DWORD = MOV [r8|QWORD] size: DWORD  <||@
  Comment 4562 1824 rbx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 4567 1826 JUMP ~[] destination: B132 -> B133  <||@
  Comment 4572 block B134 loop 2 depth 1 header:2367|LoopBegin  <||@
  Comment 4572 1834 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4576 1836 rdx|DWORD = SHL rbx|DWORD y: 3 size: DWORD  <||@
  Comment 4581 1838 rdx|DWORD = LEA [rdx|DWORD + 8] size: DWORD  <||@
  Comment 4584 1840 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 4587 1842 rdx|QWORD = MOV [r8|QWORD + rdx|QWORD * 1] size: QWORD  <||@
  Comment 4591 1844 CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 4594 1846 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136  <||@
  Comment 4600 block B136 loop 2 depth 1 header:2367|LoopBegin  <||@
  Comment 4600 1872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4600 1874 rbx|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 4602 1876 JUMP ~[] destination: B136 -> B133  <||@
  Comment 4602 block B133 loop 2 depth 1 header:2367|LoopBegin  <||@
  Comment 4602 1828 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4602 1830 CMP (x: rcx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 4604 1832 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B133 -> B134 falseDestination: B133 -> B137  <||@
  Comment 4611 block B31 null  <||@
  Comment 4611 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4611 406 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4614 408 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 4614 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 4624 410 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 4624 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 4634 412 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 4644 414 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 4644 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 4654 416 r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 4654 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 4664 418 rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4667 420 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 4672 422 JUMP ~[] destination: B31 -> B56  <||@
  Comment 4677 block B129 null  <||@
  Comment 4677 1768 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4677 1770 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4680 1772 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 4685 1774 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4688 1776 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 4688 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 4698 1778 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 4698 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 4708 1780 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 4718 1782 rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 4721 1784 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 4721 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 4731 1786 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 4731 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 4741 1788 JUMP ~[] destination: B129 -> B154  <||@
  Comment 4746 block B33 null  <||@
  Comment 4746 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4746 432 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4749 434 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 4749 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 4759 436 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 4759 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 4769 438 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 4779 440 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 4779 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 4789 442 r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 4789 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 4799 444 rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4802 446 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 4807 448 JUMP ~[] destination: B33 -> B56  <||@
  Comment 4812 block B131 null  <||@
  Comment 4812 1796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4812 1798 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4815 1800 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 4820 1802 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4823 1804 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 4823 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 4833 1806 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 4833 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 4843 1808 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 4853 1810 rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 4856 1812 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 4856 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 4866 1814 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 4866 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 4876 1816 JUMP ~[] destination: B131 -> B154  <||@
  Comment 4881 block B39 null  <||@
  Comment 4881 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4881 512 rcx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4884 514 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4887 516 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 4887 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 4897 518 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 4902 520 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}  <||@
  Comment 4902 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}}  <||@
  Comment 4912 522 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 4912 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 4922 524 r13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 4922 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 4932 526 JUMP ~[] destination: B39 -> B92  <||@
  Comment 4937 block B137 null  <||@
  Comment 4937 1878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4937 1880 rcx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 4942 1882 r14|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4945 1884 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4948 1886 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 4958 1888 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}  <||@
  Comment 4958 {meta{HotSpotType<Lcom/twitter/util/Promise$Transforming;, resolved>}}  <||@
  Comment 4968 1890 rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 4971 1892 JUMP ~[] destination: B137 -> B167  <||@
  Comment 4976 block B118 null  <||@
  Comment 4976 1650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4976 1652 stack:88|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 4981 1654 JUMP ~[] destination: B118 -> B124  <||@
  Comment 4986 block B135 null  <||@
  Comment 4986 1848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4986 1850 MOV (x: [r10|DWORD * 8 + 24], y: r9|QWORD) size: QWORD  <||@
  Comment 4994 1852 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4997 1854 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 5002 1856 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 5005 1858 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 5005 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 5015 1860 rbp|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 5015 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 5025 1862 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 5035 1864 rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 5038 1866 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 5038 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 5048 1868 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 5048 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 5058 1870 JUMP ~[] destination: B135 -> B154  <||@
  Comment 5063 block B37 null  <||@
  Comment 5063 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5063 482 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5068 484 MOV (x: [r10|DWORD * 8 + 24], y: r9|QWORD) size: QWORD  <||@
  Comment 5076 486 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 5079 488 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}  <||@
  Comment 5079 {meta{HotSpotType<Lcom/twitter/util/Future$$Lambda$8/112631710;, resolved>}}  <||@
  Comment 5089 490 r9|QWORD = MOVE input: long[4398039040|0x10624c000]  <||@
  Comment 5099 492 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$WaitQueue$]  <||@
  Comment 5099 {Object[Class:com.twitter.util.Promise$WaitQueue$]}  <||@
  Comment 5109 494 r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:com.twitter.util.Promise$]  <||@
  Comment 5109 {Object[Class:com.twitter.util.Promise$]}  <||@
  Comment 5119 496 rax|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 5122 498 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}  <||@
  Comment 5122 {meta{HotSpotType<Lcom/twitter/util/Promise$Transformer;, resolved>}}  <||@
  Comment 5132 500 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 5137 502 JUMP ~[] destination: B37 -> B56  <||@
  Comment 5142 block B123 null  <||@
  Comment 5142 1712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5142 1714 stack:88|QWORD[.] = STACKMOVE stack:56|QWORD[.] size: QWORD  <||@
  Comment 5152 1716 rax|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 5157 1718 JUMP ~[] destination: B123 -> B124  <||@
  Comment 5162 block B188 null  <||@
  Comment 5162 2554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5162 2556 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 5167 2558 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5172 2560 MOV [r15|QWORD + 668] y: -289827 size: DWORD  <||@
  Comment 5183 2562 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5190 2564 DEOPT info [bci:5, 16, 4, 19, 2, 2, 7, 11]  <||@
  Comment 5190 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5195 [rdx:0, rbx:0, rdi:0, r11:0, r14:0]at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rbx|QWORD[.]  |  
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2             |3  |4 
     locals:  |r11|QWORD[.]  |-  |r14|QWORD[.]  |-  |- 
  at com.twitter.util.Local$.save(Local.scala:20) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19, duringCall: true, rethrow: false]
              |0             |1                                                                                      |2                                                                                     
     locals:  |-             |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}           |rdi|QWORD[.]                                                                          
     stack:   |rdx|QWORD[.]  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]}  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5196 block B184 null  <||@
  Comment 5196 2518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5196 2520 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 5201 2522 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5204 2524 MOV [r15|QWORD + 668] y: -323123 size: DWORD  <||@
  Comment 5215 2526 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5222 2528 DEOPT info [bci:12, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 5222 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5227 [rdi:0, stack:20, stack:24]at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12, duringCall: false, rethrow: false]
              |0                                                    |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]}  |rdi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
     stack:   |stack:108|DWORD[.]                                   |              |   |   |   |   |   |   |   |  
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                                    |1            
     locals:  |stack:104|QWORD[.]                                   |rdi|QWORD[.] 
     stack:   |vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]}  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5228 block B163 null  <||@
  Comment 5228 2230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5228 2232 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5231 2234 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5234 2236 r10|DWORD = MOVE input: int[-342323|0xfffffffffffac6cd]  <||@
  Comment 5240 2238 JUMP ~[] destination: B163 -> B164  <||@
  Comment 5240 block B164 null  <||@
  Comment 5240 2240 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5240 2242 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5247 2244 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5254 2246 DEOPT info [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 5254 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5259 [rdi:0, r11:0, r13:0, r14:0]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                        |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdi|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=r14|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r11|QWORD[.]  |                                                                                                                                                         |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r14|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5260 block B186 null  <||@
  Comment 5260 2538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5260 2540 r10|DWORD = MOVE input: int[-311571|0xfffffffffffb3eed]  <||@
  Comment 5266 2544 JUMP ~[] destination: B186 -> B187  <||@
  Comment 5266 block B187 null  <||@
  Comment 5266 2546 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5266 2542 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5271 2548 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5278 2550 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5285 2552 DEOPT info [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 5285 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5290 [rcx:0, rdx:0, rdi:0, r14:0]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                      |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r14|QWORD[.],promise=rdi|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |rcx|QWORD[.]  |                                                                                                                                                       |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rdi|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5291 block B10 null  <||@
  Comment 5291 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5291 90 r10|DWORD = MOVE input: int[-272659|0xfffffffffffbd6ed]  <||@
  Comment 5297 96 JUMP ~[] destination: B10 -> B11  <||@
  Comment 5297 block B11 null  <||@
  Comment 5297 98 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5297 58 r13|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 5300 60 stack:28|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 5305 100 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5312 102 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5319 104 DEOPT info [bci:4, 1, 6, 5, 7, 2, 2, 7, 11]  <||@
  Comment 5319 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5324 [r13:0, stack:100]at com.twitter.util.Promise.isDefined(Promise.scala:840) [bci: 4, duringCall: false, rethrow: false]
              |0                                      |1  |2  |3 
     locals:  |vobject:Promise:0{state=r13|DWORD[.]}  |-  |-  |- 
     stack:   |r13|DWORD[.]                           |   |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:503) [bci: 1, duringCall: true, rethrow: false]
              |0                                              |1                                      |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:1{state=r13|DWORD[.]}  |vobject:Promise:0{state=r13|DWORD[.]}  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1                                     
     locals:  |stack:28|DWORD[.]                              |vobject:Promise:0{state=r13|DWORD[.]} 
     stack:   |vobject:Promise$$anon$3:1{state=r13|DWORD[.]}  |                                      
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1                                                                             |2 
     locals:  |vobject:Promise:0{state=r13|DWORD[.]}  |vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                                      |1                                                                            
     locals:  |vobject:Promise:0{state=r13|DWORD[.]}  |vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5325 block B178 null  <||@
  Comment 5325 2464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5325 2466 stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 5330 2468 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5335 2470 MOV [r15|QWORD + 668] y: -338211 size: DWORD  <||@
  Comment 5346 2472 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5353 2474 DEOPT info [bci:5, 16, 4, 19, 2, 2, 7, 19]  <||@
  Comment 5353 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5358 [rax:0, rsi:0, rdi:0, r8:0, stack:72]at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5, duringCall: false, rethrow: false]
              |0            |1 
     locals:  |-            |- 
     stack:   |r8|QWORD[.]  |  
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2             |3  |4 
     locals:  |rax|QWORD[.]  |-  |rsi|QWORD[.]  |-  |- 
  at com.twitter.util.Local$.save(Local.scala:20) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19, duringCall: true, rethrow: false]
              |0             |1                                                                                      |2                                                                                     
     locals:  |-             |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}         |stack:56|QWORD[.]                                                                     
     stack:   |rdi|QWORD[.]  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]}  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5359 block B115 null  <||@
  Comment 5359 1618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5359 1620 r11|DWORD = MOVE input: int[-326675|0xfffffffffffb03ed]  <||@
  Comment 5365 1626 JUMP ~[] destination: B115 -> B183  <||@
  Comment 5365 block B183 null  <||@
  Comment 5365 2510 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5365 1622 stack:104|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 5370 1624 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5375 2512 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5382 2514 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5389 2516 DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 5389 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5394 [rcx:0, rdi:0, stack:24]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r10|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rcx|QWORD[.]  |rdi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1            
     locals:  |stack:104|QWORD[.]  |rdi|QWORD[.] 
     stack:   |rcx|QWORD[.]        |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rdi|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5395 block B179 null  <||@
  Comment 5395 2476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5395 2478 r8|DWORD = MOVE input: int[-336403|0xfffffffffffadded]  <||@
  Comment 5401 2482 JUMP ~[] destination: B179 -> B181  <||@
  Comment 5401 block B181 null  <||@
  Comment 5401 2492 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5401 2488 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5406 2494 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 5413 2496 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5420 2498 DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 5420 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5425 [rcx:0, rdi:0, r11:0]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r10|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rcx|QWORD[.]  |rdi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r11|QWORD[.]  |rdi|QWORD[.] 
     stack:   |rcx|QWORD[.]  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rdi|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5426 block B71 null  <||@
  Comment 5426 936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5426 938 r11|DWORD = MOVE input: int[-303635|0xfffffffffffb5ded]  <||@
  Comment 5432 942 JUMP ~[] destination: B71 -> B72  <||@
  Comment 5432 block B72 null  <||@
  Comment 5432 944 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5432 908 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5435 946 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5442 948 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5449 950 DEOPT info [bci:4, 1, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 5449 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5454 [rax:0, rdi:0, r10:0, r13:0]at com.twitter.util.Promise.isDefined(Promise.scala:840) [bci: 4, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rdi|QWORD[.]  |-  |-  |- 
     stack:   |r10|DWORD[.]  |   |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:503) [bci: 1, duringCall: true, rethrow: false]
              |0                                              |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=r13|DWORD[.]}  |rdi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1            
     locals:  |rax|QWORD[.]                                   |rdi|QWORD[.] 
     stack:   |vobject:Promise$$anon$3:0{state=r13|DWORD[.]}  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5455 block B84 null  <||@
  Comment 5455 1136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5455 1138 r11|DWORD = MOVE input: int[-310579|0xfffffffffffb42cd]  <||@
  Comment 5461 1144 JUMP ~[] destination: B84 -> B85  <||@
  Comment 5461 block B85 null  <||@
  Comment 5461 1146 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5461 1086 stack:104|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5466 1088 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5469 1148 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5476 1150 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5483 1152 DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 5483 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5488 [rsi:0, rdi:0, stack:24]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r10|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1            
     locals:  |stack:104|QWORD[.]  |rdi|QWORD[.] 
     stack:   |rsi|QWORD[.]        |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rdi|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5489 block B180 null  <||@
  Comment 5489 2484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5489 2486 r8|DWORD = MOVE input: int[-333339|0xfffffffffffae9e5]  <||@
  Comment 5495 2490 JUMP ~[] destination: B180 -> B181  <||@
  Comment 5497 block B176 null  <||@
  Comment 5497 2448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5497 2450 r10|DWORD = MOVE input: int[-347923|0xfffffffffffab0ed]  <||@
  Comment 5503 2454 JUMP ~[] destination: B176 -> B177  <||@
  Comment 5503 block B177 null  <||@
  Comment 5503 2456 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5503 2452 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5506 2458 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5513 2460 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5520 2462 DEOPT info [bci:4, 27, 2, 2, 7, 19]  <||@
  Comment 5520 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5525 [rcx:0, rdi:0, r13:0, r14:0]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                        |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdi|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rcx|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |r14|QWORD[.]  |                                                                                                                                                         |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rcx|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5526 block B5 null  <||@
  Comment 5526 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5526 56 r10|DWORD = MOVE input: int[-272403|0xfffffffffffbd7ed]  <||@
  Comment 5532 62 JUMP ~[] destination: B5 -> B11  <||@
  Comment 5537 block B182 null  <||@
  Comment 5537 2500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5537 2502 r11|DWORD = MOVE input: int[-329267|0xfffffffffffaf9cd]  <||@
  Comment 5543 2508 JUMP ~[] destination: B182 -> B183  <||@
  Comment 5548 block B189 null  <||@
  Comment 5548 2566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5548 2568 r10|DWORD = MOVE input: int[-287763|0xfffffffffffb9bed]  <||@
  Comment 5554 2570 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 5559 2572 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5564 2574 r14|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 5569 2576 JUMP ~[] destination: B189 -> B192  <||@
  Comment 5569 block B192 null  <||@
  Comment 5569 2602 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5569 2604 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5576 2606 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5583 2608 DEOPT info [bci:18, 42, 6, 5, 7, 2, 2, 7, 11]  <||@
  Comment 5583 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5588 [rdx:0, rdi:0, r14:0]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r11|DWORD  |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:506) [bci: 42, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |rdi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r14|DWORD[.]  |rdx|QWORD[.] 
     stack:   |rdi|QWORD[.]  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                             |2 
     locals:  |rdx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5589 block B193 null  <||@
  Comment 5589 2610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5589 2612 r13|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 5592 2614 stack:28|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 5597 2616 MOV [r15|QWORD + 668] y: -273459 size: DWORD  <||@
  Comment 5608 2618 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5615 2620 DEOPT info [bci:12, 6, 5, 7, 2, 2, 7, 11]  <||@
  Comment 5615 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5620 [r13:0, stack:100]at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12, duringCall: false, rethrow: false]
              |0                                              |1                                      |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=r13|DWORD[.]}  |vobject:Promise:1{state=r13|DWORD[.]}  |-  |-  |-  |-  |-  |-  |-  |- 
     stack:   |r13|DWORD[.]                                   |                                       |   |   |   |   |   |   |   |  
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1                                     
     locals:  |stack:28|DWORD[.]                              |vobject:Promise:1{state=r13|DWORD[.]} 
     stack:   |vobject:Promise$$anon$3:0{state=r13|DWORD[.]}  |                                      
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0                                      |1                                                                             |2 
     locals:  |vobject:Promise:1{state=r13|DWORD[.]}  |vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0                                      |1                                                                            
     locals:  |vobject:Promise:1{state=r13|DWORD[.]}  |vobject:112631710:2{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5621 block B175 null  <||@
  Comment 5621 2440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5621 2442 r10|DWORD = MOVE input: int[-350483|0xfffffffffffaa6ed]  <||@
  Comment 5627 2446 JUMP ~[] destination: B175 -> B177  <||@
  Comment 5629 block B40 null  <||@
  Comment 5629 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5629 530 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 5634 532 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5639 534 MOV [r15|QWORD + 668] y: -292643 size: DWORD  <||@
  Comment 5650 536 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5657 538 DEOPT info [bci:37, 4, 19, 2, 2, 7, 11]  <||@
  Comment 5657 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5662 [rax:0, rdx:0, rdi:0]at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |-             |-  |-  |-  |- 
     stack:   |rax|QWORD[.]  |   |   |   |  
  at com.twitter.util.Local$.save(Local.scala:20) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19, duringCall: true, rethrow: false]
              |0             |1                                                                                      |2                                                                                     
     locals:  |-             |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}           |rdi|QWORD[.]                                                                          
     stack:   |rdx|QWORD[.]  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]}  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5663 block B138 null  <||@
  Comment 5663 1894 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5663 1896 r10|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 5668 1898 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5673 1900 MOV [r15|QWORD + 668] y: -340771 size: DWORD  <||@
  Comment 5684 1902 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5691 1904 DEOPT info [bci:37, 4, 19, 2, 2, 7, 19]  <||@
  Comment 5691 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5696 [rax:0, rdi:0, r10:0]at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |-             |-  |-  |-  |- 
     stack:   |rax|QWORD[.]  |   |   |   |  
  at com.twitter.util.Local$.save(Local.scala:20) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 19, duringCall: true, rethrow: false]
              |0             |1                                                                                      |2                                                                                     
     locals:  |-             |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}         |r10|QWORD[.]                                                                          
     stack:   |rdi|QWORD[.]  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]}  |vobject:Promise$Transformer:1{saved=Object[null],promise=Object[null],f=Object[null]} 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:0{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5697 block B62 null  <||@
  Comment 5697 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5697 848 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5702 850 MOV [r15|QWORD + 668] y: -299539 size: DWORD  <||@
  Comment 5713 852 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5720 854 DEOPT info [bci:18, 33, 27, 2, 2, 7, 11]  <||@
  Comment 5720 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5725 [rdx:0, rbp:0, rdi:0, r10:0]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0         |1  |2 
     locals:  |-         |-  |- 
     stack:   |r8|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rdi|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbp|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5726 block B86 null  <||@
  Comment 5726 1154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5726 1156 stack:104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 5731 1158 stack:108|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 5736 1160 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5739 1162 MOV [r15|QWORD + 668] y: -304435 size: DWORD  <||@
  Comment 5750 1164 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5757 1166 DEOPT info [bci:12, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 5757 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5762 [rdi:0, stack:20, stack:24]at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:504) [bci: 12, duringCall: false, rethrow: false]
              |0                                                    |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]}  |rdi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
     stack:   |stack:108|DWORD[.]                                   |              |   |   |   |   |   |   |   |  
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                                    |1            
     locals:  |stack:104|QWORD[.]                                   |rdi|QWORD[.] 
     stack:   |vobject:Promise$$anon$3:0{state=stack:108|DWORD[.]}  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5763 block B173 null  <||@
  Comment 5763 2422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5763 2424 stack:120|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 5768 2426 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5771 2428 MOV [r15|QWORD + 668] y: -354835 size: DWORD  <||@
  Comment 5782 2430 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5789 2432 DEOPT info [bci:18, 159, 27, 2, 2, 7, 19]  <||@
  Comment 5789 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5794 [rdi:0, r8:0, r11:0, stack:8]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r10|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdi|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2                  
     locals:  |-  |-  |stack:120|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1           
     locals:  |rdi|QWORD[.]  |r8|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5795 block B191 null  <||@
  Comment 5795 2590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5795 2592 r10|DWORD = MOVE input: int[-279859|0xfffffffffffbbacd]  <||@
  Comment 5801 2594 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 5806 2596 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5809 2598 r14|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 5814 2600 JUMP ~[] destination: B191 -> B192  <||@
  Comment 5819 block B162 null  <||@
  Comment 5819 2220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5819 2222 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5822 2224 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5825 2226 r10|DWORD = MOVE input: int[-344083|0xfffffffffffabfed]  <||@
  Comment 5831 2228 JUMP ~[] destination: B162 -> B164  <||@
  Comment 5836 block B79 null  <||@
  Comment 5836 1082 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5836 1084 r11|DWORD = MOVE input: int[-307987|0xfffffffffffb4ced]  <||@
  Comment 5842 1090 JUMP ~[] destination: B79 -> B85  <||@
  Comment 5847 block B18 null  <||@
  Comment 5847 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5847 238 r10|DWORD = MOVE input: int[-276499|0xfffffffffffbc7ed]  <||@
  Comment 5853 240 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5856 242 JUMP ~[] destination: B18 -> B192  <||@
  Comment 5861 block B88 null  <||@
  Comment 5861 1176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5861 1178 r10|DWORD = MOVE input: int[-294195|0xfffffffffffb82cd]  <||@
  Comment 5867 1182 JUMP ~[] destination: B88 -> B89  <||@
  Comment 5867 block B89 null  <||@
  Comment 5867 1184 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5867 1180 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5872 1186 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5879 1188 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5886 1190 DEOPT info [bci:4, 27, 2, 2, 7, 11]  <||@
  Comment 5886 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5891 [rax:0, rdx:0, rdi:0, r13:0]at com.twitter.util.Promise.continue(Promise.scala:761) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                                                                                                                                                      |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |vobject:Promise$Transformer:0{saved=r13|QWORD[.],promise=rdi|QWORD[.],f=vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]}}  |-  |-  |-  |-  |-  |-  |-  |-  |-  
     stack:   |rax|QWORD[.]  |                                                                                                                                                       |   |   |   |   |   |   |   |   |   
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rdi|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                            
     locals:  |rdx|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$7/390800101@687091653]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5892 block B98 null  <||@
  Comment 5892 1362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5892 1364 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5897 1366 MOV [r15|QWORD + 668] y: -318483 size: DWORD  <||@
  Comment 5908 1368 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5915 1370 DEOPT info [bci:18, 159, 27, 2, 2, 7, 11]  <||@
  Comment 5915 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5920 [rdx:0, rdi:0, r10:0, r13:0]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0         |1  |2 
     locals:  |-         |-  |- 
     stack:   |r8|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:769) [bci: 159, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdx|QWORD[.]  |r10|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |rdi|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |r13|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5921 block B107 null  <||@
  Comment 5921 1482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5921 1484 r10|DWORD = MOVE input: int[-322323|0xfffffffffffb14ed]  <||@
  Comment 5927 1486 r11|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD  <||@
  Comment 5932 1488 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5935 1490 JUMP ~[] destination: B107 -> B108  <||@
  Comment 5935 block B108 null  <||@
  Comment 5935 1492 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5935 1494 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5942 1496 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5949 1498 DEOPT info [bci:4, 1, 6, 5, 7, 2, 2, 7, 19]  <||@
  Comment 5949 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 5954 [rax:0, rdi:0, r8:0, r11:0]at com.twitter.util.Promise.isDefined(Promise.scala:840) [bci: 4, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rdi|QWORD[.]  |-  |-  |- 
     stack:   |r8|DWORD[.]   |   |   |  
  at com.twitter.util.Promise.forwardInterruptsTo(Promise.scala:503) [bci: 1, duringCall: true, rethrow: false]
              |0                                              |1             |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |vobject:Promise$$anon$3:0{state=r11|DWORD[.]}  |rdi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |- 
  at com.twitter.util.Promise$$anon$3.<init>(Promise.scala:330) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise$.interrupts(Promise.scala:329) [bci: 5, duringCall: true, rethrow: false]
              |0                                              |1            
     locals:  |rax|QWORD[.]                                   |rdi|QWORD[.] 
     stack:   |vobject:Promise$$anon$3:0{state=r11|DWORD[.]}  |             
  at com.twitter.util.Promise$Responder.transform(Promise.scala:304) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                                                                               |2 
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]}  |- 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                                                                              
     locals:  |rdi|QWORD[.]  |vobject:112631710:1{arg$1=Object[FutureBench$$Lambda$10/1594373685@321311106]} 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5955 block B190 null  <||@
  Comment 5955 2578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5955 2580 r10|DWORD = MOVE input: int[-284443|0xfffffffffffba8e5]  <||@
  Comment 5961 2582 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 5966 2584 rdi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 5971 2586 r14|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 5976 2588 JUMP ~[] destination: B190 -> B192  <||@
  Comment 5981 block B160 null  <||@
  Comment 5981 2204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5981 2206 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 5984 2208 MOV [r15|QWORD + 668] y: -347667 size: DWORD  <||@
  Comment 5995 2210 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 6002 2212 DEOPT info [bci:18, 33, 27, 2, 2, 7, 19]  <||@
  Comment 6002 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 6007 [rdx:0, rdi:0, r8:0, r14:0]at com.twitter.util.Promise.cas(Promise.scala:453) [bci: 18, duringCall: false, rethrow: false]
              |0          |1  |2 
     locals:  |-          |-  |- 
     stack:   |r10|DWORD  |   |  
  at com.twitter.util.Promise.continue(Promise.scala:763) [bci: 33, duringCall: true, rethrow: false]
              |0             |1            |2  |3  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rdi|QWORD[.]  |r8|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-  
  at com.twitter.util.Promise$Responder.transform(Promise.scala:306) [bci: 27, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r14|QWORD[.] 
  at com.twitter.util.Promise$Responder.transform$(Promise.scala:303) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at com.twitter.util.Promise.transform(Promise.scala:417) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdi|QWORD[.]  |rdx|QWORD[.] 
  at com.twitter.util.Future.map(Future.scala:1811) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at bench.FutureBench.notFused(Bench.scala:195) [bci: 19, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 6008 block B185 null  <||@
  Comment 6008 2530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6008 2532 r10|DWORD = MOVE input: int[-314131|0xfffffffffffb34ed]  <||@
  Comment 6014 2536 JUMP ~[] destination: B185 -> B187  <||@
  Comment 6019 block B1 null  <||@
  Comment 6019 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6019 26 MOV [r15|QWORD + 668] y: -275211 size: DWORD  <||@
  Comment 6030 28 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 6037 30 DEOPT info [bci:0]  <||@
  Comment 6037 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1090a1f90, value=0x10ad5b5fe]:0x10ad5b5fe}  <||@
  Comment 6042 []at bench.FutureBench.notFused(Bench.scala:195) [bci: 0, duringCall: false, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 6043 block B66 null  <||@
  Comment 6043 904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6043 906 r11|DWORD = MOVE input: int[-303379|0xfffffffffffb5eed]  <||@
  Comment 6049 910 JUMP ~[] destination: B66 -> B72  <||@
  Comment 6054 block B102 null  <||@
  Comment 6054 1436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6054 1438 r10|DWORD = MOVE input: int[-322067|0xfffffffffffb15ed]  <||@
  Comment 6060 1440 r11|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD  <||@
  Comment 6065 1442 rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 6068 1444 JUMP ~[] destination: B102 -> B108  <||@
  Comment 6073 block B87 null  <||@
  Comment 6073 1168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6073 1170 r10|DWORD = MOVE input: int[-295955|0xfffffffffffb7bed]  <||@
  Comment 6079 1174 JUMP ~[] destination: B87 -> B89  <||@
  Comment 6084 {Stub<ExceptionHandlerStub.exceptionHandler>@0x10b12b6e0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 6084 4  <||@
  Comment 6090 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1090a1f88, value=0x10ad5b500]:0x10ad5b500}  <||@
  Comment 6090 5  <||@
  HexCodeFile>>> <|@
end_nmethod
