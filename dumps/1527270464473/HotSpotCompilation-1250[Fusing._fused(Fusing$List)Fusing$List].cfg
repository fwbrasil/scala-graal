begin_compilation
  name " HotSpotCompilation-1250[bench.Fusing._fused(Fusing$List)]"
  method "HotSpotCompilation-1250[bench.Fusing._fused(Fusing$List)]"
  date 1527270464482
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a565 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a565  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Lbench/Fusing$List;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?24 v573 v575 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Fusing._fused(Fusing$List)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 143
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 
=== Succesors ===
=== Usages ===
v251 a288 a565 i567 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a565 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fusing$List.$outer
nullCheck: true
stamp: n Lbench/Fusing;
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v575 
=== Succesors ===
next: v153 
=== Usages ===
v373 v98 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v575 #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a565 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a565  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v98 
=== Succesors ===
trueSuccessor: v152 
falseSuccessor: v150 
=== Usages ===
=== Predecessor ===
a565 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v98 #trueSuccessor: v152 #falseSuccessor: v150  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid a254 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1813124041
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1813124041]
=== Inputs ===
=== Succesors ===
=== Usages ===
a250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i253 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -24339
stableDimension: 0
stamp: i32 [-24339] ⇊00000000ffffa0ed ⇈00000000ffffa0ed
stampKind: i32
value: int[-24339|0xffffffffffffa0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i249 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v152 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a566 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a566  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a566 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fusing$List.a
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v573 
=== Succesors ===
next: i567 
=== Usages ===
v576 v574 
=== Predecessor ===
v150 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v573 #next: i567  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a566 
=== Succesors ===
=== Usages ===
i567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v574 
=== Succesors ===
next: v161 
=== Usages ===
a288 j111 i114 v138 v136 v314 i264 v273 
=== Predecessor ===
a566 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v574 #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i567 
y: i135 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i567 y: i135  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v136 
=== Succesors ===
trueSuccessor: v160 
falseSuccessor: v158 
=== Usages ===
=== Predecessor ===
i567 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v136 #trueSuccessor: v160 #falseSuccessor: v158  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid a248 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i258 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -28036
stableDimension: 0
stamp: i32 [-28036] ⇊00000000ffff927c ⇈00000000ffff927c
stampKind: i32
value: int[-28036|0xffffffffffff927c]
=== Inputs ===
=== Succesors ===
=== Usages ===
i249 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v160 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v564 
=== Usages ===
j121 
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i114 i115 j137 a341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i32
=== Inputs ===
x: i567 
y: i105 
=== Succesors ===
=== Usages ===
i115 i234 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i567 y: i105  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$142/442997619@147c172a
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
x: i114 
y: i105 
=== Succesors ===
=== Usages ===
j116 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i114 y: i105  <|@  <|@
f <@~|@floating>@ <|@
tid j116 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/941088757@5954b9f3
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$19/1087649125@22971135
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i115 
=== Succesors ===
=== Usages ===
j119 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i115  <|@  <|@
f <@~|@floating>@ <|@
tid j118 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j119 j536 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j119 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j116 
y: j118 
=== Succesors ===
=== Usages ===
j137 v479 v481 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j116 y: j118  <|@  <|@
f <@~|@floating>@ <|@
tid j137 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$16/2015689934@62232377
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j119 
y: i105 
=== Succesors ===
=== Usages ===
j121 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j119 y: i105  <|@  <|@
f <@~|@floating>@ <|@
tid j121 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
guard: v158 
object: j137 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@GuardedValue|@org.graalvm.compiler.nodes.GuardedValueNode>@ guard: v158 object: j137  <|@  <|@
f <@~|@floating>@ <|@
tid j111 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/941088757@5954b9f3
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$19/1087649125@22971135
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i567 
=== Succesors ===
=== Usages ===
v122 j536 j523 j529 j533 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i567  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1317af57
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j121 
y: j111 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j121 y: j111  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v138 a288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i567 
y: i18 
=== Succesors ===
=== Usages ===
v562 v413 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i567 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v122 
=== Succesors ===
trueSuccessor: v560 
falseSuccessor: v563 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v122 #trueSuccessor: v560 #falseSuccessor: v563  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v558  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v560 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B41" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v562  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v138 
=== Succesors ===
trueSuccessor: v561 
falseSuccessor: v164 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v138 #trueSuccessor: v561 #falseSuccessor: v164  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v559  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v561 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v558 v559 
=== Succesors ===
next: j267 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v558 v559 #next: j267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j267 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j311 
=== Usages ===
v579 v580 
=== Predecessor ===
v557 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j311  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
j311 v313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j311 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v579 
=== Succesors ===
next: j312 
=== Usages ===
j271 v581 v582 a287 v587 v583 v584 v585 v586 
=== Predecessor ===
j267 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v579 #next: j312  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
j312 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j312 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v580 
=== Succesors ===
next: v276 
=== Usages ===
v277 
=== Predecessor ===
j311 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v580 #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid i272 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1317af57
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i567 
y: i272 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i567 y: i272  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a288 a341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 j478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i547 i264 a341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v273 
=== Succesors ===
trueSuccessor: v275 
falseSuccessor: v274 
=== Usages ===
=== Predecessor ===
j312 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v273 #trueSuccessor: v275 #falseSuccessor: v274  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$16/2015689934@62232377
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i567 
y: i37 
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i567 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i296 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i264 
y: i295 
=== Succesors ===
=== Usages ===
i266 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i264 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i265 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i266 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i266 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$105/223595741@29c06c1a
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i296 
y: i265 
=== Succesors ===
=== Usages ===
j270 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i296 y: i265  <|@  <|@
f <@~|@floating>@ <|@
tid j270 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$14/658349789@445937f0
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$15/2110163155@12202696
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i266 
=== Succesors ===
=== Usages ===
j271 v583 v584 v585 v586 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i266  <|@  <|@
f <@~|@floating>@ <|@
tid j271 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64
=== Inputs ===
x: j270 
y: j311 
=== Succesors ===
=== Usages ===
v277 v313 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j270 y: j311  <|@  <|@
f <@~|@floating>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1317af57
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j312 
y: j271 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j312 y: j271  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v277 
=== Succesors ===
trueSuccessor: v282 
falseSuccessor: v281 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v277 #trueSuccessor: v282 #falseSuccessor: v281  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v280  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
v282 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v579 
value: j271 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v579 value: j271 stateAfter: - lastLocationAccess: - #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j270 
index: j311 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j270 index: j311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v583 
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v583 #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j270 
index: j311 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j270 index: j311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v584 
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v584 #next: v306  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j270 
index: j311 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j270 index: j311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v585 
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v585 #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j270 
index: j311 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j270 index: j311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v586 
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v586 #next: v314  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j311 
index: - 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j311 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v581 
value: i567 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v581 value: i567 stateAfter: - lastLocationAccess: - #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j311 
index: - 
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j311 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v582 
value: j263 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v582 value: j263 stateAfter: - lastLocationAccess: - #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j311 
index: - 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j311 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v587 
value: v374 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v587 value: v374 stateAfter: - lastLocationAccess: - #next: v286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a287 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a287 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j311 
=== Succesors ===
next: v289 
=== Usages ===
a292 
=== Predecessor ===
v286 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j311 #next: v289  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
a287 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v278 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v278  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
v274 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v278 v280 
=== Succesors ===
next: a288 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v278 v280 #next: a288  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a288 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@4a95c073
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v262 i567 i18 
=== Succesors ===
next: v291 
=== Usages ===
a292 
=== Predecessor ===
v279 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v262 i567 i18 #next: v291  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
a288 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a292 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v290 
values: a287 a288 
=== Succesors ===
=== Usages ===
v578 a238 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v290 values: a287 a288  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v289 v291 
=== Succesors ===
next: v484 
=== Usages ===
a292 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v289 v291 #next: v484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v413 
=== Usages ===
j485 j487 
=== Predecessor ===
v290 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a566 
=== Succesors ===
=== Usages ===
j485 j466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a566  <|@  <|@
f <@~|@floating>@ <|@
tid j167 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j514 j506 v524 j469 v479 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v138 
=== Succesors ===
trueSuccessor: v411 
falseSuccessor: v412 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v138 #trueSuccessor: v411 #falseSuccessor: v412  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v430  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
v411 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a292 
index: - 
=== Succesors ===
=== Usages ===
j487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a292 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j487 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v484 
address: v578 
=== Succesors ===
=== Usages ===
v598 v600 v602 v604 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v484 address: v578  <|@  <|@
f <@~|@floating>@ <|@
tid j485 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v484 
address: v576 
=== Succesors ===
=== Usages ===
v599 v601 v603 v605 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v484 address: v576  <|@  <|@
f <@~|@floating>@ <|@
tid j522 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j523 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j523 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j111 
y: j522 
=== Succesors ===
=== Usages ===
v524 v526 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j111 y: j522  <|@  <|@
f <@~|@floating>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@6d5d9321
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j523 
y: j167 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j523 y: j167  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v524 
=== Succesors ===
trueSuccessor: v414 
falseSuccessor: v415 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v524 #trueSuccessor: v414 #falseSuccessor: v415  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v426  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
v414 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid j317 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j521 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B40" 
    successors "B20" "B40" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j514 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v418 
values: j167 j521 
=== Succesors ===
=== Usages ===
v605 j521 v604 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v418 values: j167 j521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v417 
=== Succesors ===
next: v568 
=== Usages ===
v568 v422 v423 j514 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v417 #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j485 
index: j514 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j485 index: j514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32,i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v418 
address: v605 
=== Succesors ===
next: v556 
=== Usages ===
v556 
=== Predecessor ===
v418 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v418 address: v605 #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j487 
index: j514 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j487 index: j514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v604 
value: v568 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v604 value: v568 stateAfter: - lastLocationAccess: - #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid j521 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64
=== Inputs ===
x: j514 
y: j317 
=== Succesors ===
=== Usages ===
j506 j514 v526 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j514 y: j317  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@6d5d9321
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j523 
y: j521 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j523 y: j521  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v526 
=== Succesors ===
trueSuccessor: v422 
falseSuccessor: v424 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v526 #trueSuccessor: v422 #falseSuccessor: v424  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v418 
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v418 #next: v428  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j506 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v427 
values: j167 j521 
=== Succesors ===
=== Usages ===
v603 j513 j497 v530 v602 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v427 values: j167 j521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v426 v428 
=== Succesors ===
next: v446 
=== Usages ===
j506 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v426 v428 #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid j528 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j529 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j529 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j111 
y: j528 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j111 y: j528  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@6d5d9321
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j529 
y: j506 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j529 y: j506  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v530 
=== Succesors ===
trueSuccessor: v445 
falseSuccessor: v444 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v530 #trueSuccessor: v445 #falseSuccessor: v444  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v449  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
v445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v569 
=== Usages ===
v569 
=== Predecessor ===
v446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v569  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j485 
index: j506 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j485 index: j506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v444 
address: v603 
=== Succesors ===
next: v554 
=== Usages ===
v554 
=== Predecessor ===
v444 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v444 address: v603 #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j487 
index: j506 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j487 index: j506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v602 
value: v569 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v602 value: v569 stateAfter: - lastLocationAccess: - #next: v437  <|@  <|@
f <@~|@floating>@ <|@
tid j490 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j513 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j513 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64
=== Inputs ===
x: j506 
y: j490 
=== Succesors ===
=== Usages ===
j497 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j506 y: j490  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
v554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j497 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v438 
values: j513 j506 
=== Succesors ===
=== Usages ===
v601 j505 j488 v534 v600 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v438 values: j513 j506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v437 v449 
=== Succesors ===
next: v452 
=== Usages ===
j497 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v437 v449 #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid j532 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j533 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j533 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j111 
y: j532 
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j111 y: j532  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@6d5d9321
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j533 
y: j497 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j533 y: j497  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v534 
=== Succesors ===
trueSuccessor: v451 
falseSuccessor: v450 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v534 #trueSuccessor: v451 #falseSuccessor: v450  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v570 
=== Usages ===
v570 
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j485 
index: j497 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j485 index: j497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32>
=== Inputs ===
stateBefore: - 
guard: v450 
address: v601 
=== Succesors ===
next: v552 
=== Usages ===
v552 
=== Predecessor ===
v450 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v450 address: v601 #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j487 
index: j497 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j487 index: j497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v600 
value: v570 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v600 value: v570 stateAfter: - lastLocationAccess: - #next: v440  <|@  <|@
f <@~|@floating>@ <|@
tid j504 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j505 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j505 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64
=== Inputs ===
x: j497 
y: j504 
=== Succesors ===
=== Usages ===
j488 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j497 y: j504  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v552 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j488 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v441 
values: j505 j497 
=== Succesors ===
=== Usages ===
v599 v537 v598 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v441 values: j505 j497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v440 v455 
=== Succesors ===
next: v458 
=== Usages ===
j488 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v440 v455 #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid j536 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j111 
y: j118 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j111 y: j118  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@6d5d9321
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j536 
y: j488 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j536 y: j488  <|@  <|@
f <@*|@fixed>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v456 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v457 #falseSuccessor: v456  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v461 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v461  <|@  <|@
f <@*|@fixed>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i571 
=== Usages ===
i571 
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i571  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j485 
index: j488 
=== Succesors ===
=== Usages ===
i571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j485 index: j488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i571 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v456 
address: v599 
=== Succesors ===
next: v550 
=== Usages ===
v550 
=== Predecessor ===
v456 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v456 address: v599 #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j487 
index: j488 
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j487 index: j488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
value: i571 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v443 
=== Usages ===
=== Predecessor ===
i571 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v598 value: i571 stateAfter: - lastLocationAccess: - #next: v443  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
v550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v430 v443 v461 
=== Succesors ===
next: a238 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v430 v443 v461 #next: a238  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a238 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a292 
=== Succesors ===
next: v465 
=== Usages ===
a172 ?24 v577 
=== Predecessor ===
v431 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a292 #next: v465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v389 
=== Usages ===
j466 j468 
=== Predecessor ===
a238 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@6d5d9321
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j119 
y: j167 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j119 y: j167  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v479 
=== Succesors ===
trueSuccessor: v387 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v479 #trueSuccessor: v387 #falseSuccessor: v388  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v394  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a238 
index: - 
=== Succesors ===
=== Usages ===
j468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a238 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j468 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v465 
address: v577 
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v465 address: v577  <|@  <|@
f <@~|@floating>@ <|@
tid j466 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v465 
address: v576 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v465 address: v576  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
v388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B39" 
    successors "B34" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j469 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v391 
values: j167 j478 
=== Succesors ===
=== Usages ===
v597 j478 v596 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v391 values: j167 j478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v390 
=== Succesors ===
next: i572 
=== Usages ===
i572 v397 v399 j469 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v390 #next: i572  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j466 
index: j469 
=== Succesors ===
=== Usages ===
i572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j466 index: j469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i572 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v391 
address: v597 
=== Succesors ===
next: v548 
=== Usages ===
i547 
=== Predecessor ===
v391 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v391 address: v597 #next: v548  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j468 
index: j469 
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: j469  <|@  <|@
f <@~|@floating>@ <|@
tid i547 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i32
=== Inputs ===
x: i572 
y: i37 
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i572 y: i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
value: i547 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
i572 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v596 value: i547 stateAfter: - lastLocationAccess: - #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid j478 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64
=== Inputs ===
x: j469 
y: j263 
=== Succesors ===
=== Usages ===
v481 j469 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j469 y: j263  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@6d5d9321
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j119 
y: j478 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j119 y: j478  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v481 
=== Succesors ===
trueSuccessor: v397 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v481 #trueSuccessor: v397 #falseSuccessor: v400  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v391 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v391 #next: v396  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v394 v396 
=== Succesors ===
next: j329 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v394 v396 #next: j329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j329 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j345 
=== Usages ===
v588 v589 
=== Predecessor ===
v395 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j345  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j329 
index: - 
=== Succesors ===
=== Usages ===
j345 v347 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j329 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j345 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v588 
=== Succesors ===
next: j346 
=== Usages ===
j376 j351 v593 
=== Predecessor ===
j329 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v588 #next: j346  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j329 
index: - 
=== Succesors ===
=== Usages ===
j346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j329 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v589 
=== Succesors ===
next: v337 
=== Usages ===
v334 
=== Predecessor ===
j345 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v589 #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid j375 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j376 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j376 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64
=== Inputs ===
x: j345 
y: j375 
=== Succesors ===
=== Usages ===
v334 v347 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j345 y: j375  <|@  <|@
f <@~|@floating>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1317af57
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j346 
y: j376 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j346 y: j376  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v334 
=== Succesors ===
trueSuccessor: v335 
falseSuccessor: v336 
=== Usages ===
=== Predecessor ===
j346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v334 #trueSuccessor: v335 #falseSuccessor: v336  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a341 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a341  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Fusing._fused(Fusing$List)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 143
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid a7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Fusing$$Lambda$29/2075505166@1534370128
stableDimension: 0
stamp: a!# Lbench/Fusing$$Lambda$29/2075505166;
stampKind: a -
value: Object[Fusing$$Lambda$29/2075505166@1534370128]
=== Inputs ===
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$105/223595741@29c06c1a
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i114 
y: i233 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i114 y: i233  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Fusing$List.map(Function1)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: ?46 
values: a2 a7 a238 i234 
=== Succesors ===
=== Usages ===
a341 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?46 values: a2 a7 a238 i234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a341 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@4a95c073
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?24 
arguments: v262 i37 i105 
=== Succesors ===
next: j342 
=== Usages ===
j342 
=== Predecessor ===
v335 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?24 arguments: v262 i37 i105 #next: j342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j342 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a341 
=== Succesors ===
next: v352 
=== Usages ===
j351 
=== Predecessor ===
a341 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a341 #next: v352  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
j342 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v588 
value: j376 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v588 value: j376 stateAfter: - lastLocationAccess: - #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j345 
index: - 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j345 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v593 
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v593 #next: v350  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v344 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j351 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v349 
values: j345 j342 
=== Succesors ===
=== Usages ===
v592 v591 a169 v594 v595 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v349 values: j345 j342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v350 v352 
=== Succesors ===
next: a169 
=== Usages ===
j351 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v350 v352 #next: a169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a169 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j351 
=== Succesors ===
next: j363 
=== Usages ===
a176 
=== Predecessor ===
v349 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j351 #next: j363  <|@  <|@
f <@~|@floating>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lbench/Fusing$List;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lbench/Fusing$List;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j358 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j358 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v357 
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v357  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j358 
index: - 
=== Succesors ===
=== Usages ===
j363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j358 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j363 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v590 
=== Succesors ===
next: v364 
=== Usages ===
v364 
=== Predecessor ===
a169 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v590 #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j351 
index: - 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j351 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v591 
value: j363 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v367 
=== Usages ===
=== Predecessor ===
j363 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v591 value: j363 stateAfter: - lastLocationAccess: - #next: v367  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j351 
index: - 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j351 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v592 
value: v380 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v592 value: v380 stateAfter: - lastLocationAccess: - #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j351 
index: - 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j351 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a172 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a238 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a238  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v594 
value: a172 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v594 value: a172 stateAfter: - lastLocationAccess: - #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j351 
index: - 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j351 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v595 
value: a565 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a176 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v595 value: a565 stateAfter: - lastLocationAccess: - #next: a176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a176 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a169 
=== Succesors ===
next: v177 
=== Usages ===
v11 
=== Predecessor ===
v373 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a169 #next: v177  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
a176 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v11  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a176 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a176 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v399  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v391 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v391  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v423  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v418 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v418  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v259  <|@  <|@
f <@~|@floating>@ <|@
tid a261 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@250597243
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@250597243]
=== Inputs ===
=== Succesors ===
=== Usages ===
a250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i260 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -19483
stableDimension: 0
stamp: i32 [-19483] ⇊00000000ffffb3e5 ⇈00000000ffffb3e5
stampKind: i32
value: int[-19483|0xffffffffffffb3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i249 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B41" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i249 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-28036 - -16395] ⇊00000000ffff8064 ⇈00000000ffffbffd
valueDescription: i32
=== Inputs ===
merge: v245 
values: i253 i258 i260 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v245 values: i253 i258 i260  <|@  <|@
f <@~|@floating>@ <|@
tid a250 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v245 
values: a254 a248 a261 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v245 values: a254 a248 a261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v252 v257 v259 
=== Succesors ===
next: v251 
=== Usages ===
i249 a250 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v252 v257 v259 #next: v251  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i249 
speculation: a250 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i249 speculation: a250  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a565 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a565  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Lbench/Fusing$List;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?24 v573 v575 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Fusing._fused(Fusing$List)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 143
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 
=== Succesors ===
=== Usages ===
v251 a288 a565 i567 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a565 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fusing$List.$outer
nullCheck: true
stamp: n Lbench/Fusing;
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v575 
=== Succesors ===
next: v153 
=== Usages ===
v373 v98 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v575 #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a565 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a565  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v98 
=== Succesors ===
trueSuccessor: v152 
falseSuccessor: v150 
=== Usages ===
=== Predecessor ===
a565 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v98 #trueSuccessor: v152 #falseSuccessor: v150  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@298d9d96 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing._fused(Bench.scala:143) [bci: 0]
locals: - v0|QWORD[.] 
>@ <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD[.], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid a254 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1813124041
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1813124041]
=== Inputs ===
=== Succesors ===
=== Usages ===
a250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i253 <|@
result int[-24339|0xffffffffffffa0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -24339
stableDimension: 0
stamp: i32 [-24339] ⇊00000000ffffa0ed ⇈00000000ffffa0ed
stampKind: i32
value: int[-24339|0xffffffffffffa0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i249 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v152 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1813124041] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-24339|0xffffffffffffa0ed], v2|QWORD[.]] destination: B1 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a566 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a566  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a566 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fusing$List.a
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v573 
=== Succesors ===
next: i567 
=== Usages ===
v576 v574 
=== Predecessor ===
v150 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v573 #next: i567  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a566 
=== Succesors ===
=== Usages ===
i567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i567 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v574 
=== Succesors ===
next: v161 
=== Usages ===
a288 j111 i114 v138 v136 v314 i264 v273 
=== Predecessor ===
a566 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v574 #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
result int[2147483647|0x7fffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i567 
y: i135 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i567 y: i135  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v136 
=== Succesors ===
trueSuccessor: v160 
falseSuccessor: v158 
=== Usages ===
=== Predecessor ===
i567 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v136 #trueSuccessor: v160 #falseSuccessor: v158  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing._fused(Bench.scala:143) [bci: 0]
locals: - v0|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid a248 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i258 <|@
result int[-28036|0xffffffffffff927c] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -28036
stableDimension: 0
stamp: i32 [-28036] ⇊00000000ffff927c ⇈00000000ffff927c
stampKind: i32
value: int[-28036|0xffffffffffff927c]
=== Inputs ===
=== Succesors ===
=== Usages ===
i249 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v160 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-28036|0xffffffffffff927c], Object[null]] destination: B3 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v564 
=== Usages ===
j121 
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i114 i115 j137 a341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i32
=== Inputs ===
x: i567 
y: i105 
=== Succesors ===
=== Usages ===
i115 i234 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i567 y: i105  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$142/442997619@147c172a
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
x: i114 
y: i105 
=== Succesors ===
=== Usages ===
j116 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i114 y: i105  <|@  <|@
f <@~|@floating>@ <|@
tid j116 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/941088757@5954b9f3
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$19/1087649125@22971135
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i115 
=== Succesors ===
=== Usages ===
j119 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i115  <|@  <|@
f <@~|@floating>@ <|@
tid j118 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j119 j536 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j119 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j116 
y: j118 
=== Succesors ===
=== Usages ===
j137 v479 v481 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j116 y: j118  <|@  <|@
f <@~|@floating>@ <|@
tid j137 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$16/2015689934@62232377
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j119 
y: i105 
=== Succesors ===
=== Usages ===
j121 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j119 y: i105  <|@  <|@
f <@~|@floating>@ <|@
tid j121 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
guard: v158 
object: j137 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@GuardedValue|@org.graalvm.compiler.nodes.GuardedValueNode>@ guard: v158 object: j137  <|@  <|@
f <@~|@floating>@ <|@
tid j111 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/941088757@5954b9f3
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$19/1087649125@22971135
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i567 
=== Succesors ===
=== Usages ===
v122 j536 j523 j529 j533 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i567  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1317af57
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j121 
y: j111 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j121 y: j111  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v138 a288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i567 
y: i18 
=== Succesors ===
=== Usages ===
v562 v413 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i567 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v122 
=== Succesors ===
trueSuccessor: v560 
falseSuccessor: v563 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v122 #trueSuccessor: v560 #falseSuccessor: v563  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHR v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = DEC v7|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = SHL v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v558  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v560 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B41" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v562  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v138 
=== Succesors ===
trueSuccessor: v561 
falseSuccessor: v164 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v138 #trueSuccessor: v561 #falseSuccessor: v164  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v559  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v561 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v558 v559 
=== Succesors ===
next: j267 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v558 v559 #next: j267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j267 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j311 
=== Usages ===
v579 v580 
=== Predecessor ===
v557 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j311  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
j311 v313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j311 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v579 
=== Succesors ===
next: j312 
=== Usages ===
j271 v581 v582 a287 v587 v583 v584 v585 v586 
=== Predecessor ===
j267 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v579 #next: j312  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
j312 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j312 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v580 
=== Succesors ===
next: v276 
=== Usages ===
v277 
=== Predecessor ===
j311 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v580 #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid i272 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1317af57
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i567 
y: i272 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i567 y: i272  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a288 a341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 j478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i547 i264 a341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v273 
=== Succesors ===
trueSuccessor: v275 
falseSuccessor: v274 
=== Usages ===
=== Predecessor ===
j312 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v273 #trueSuccessor: v275 #falseSuccessor: v274  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$16/2015689934@62232377
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i567 
y: i37 
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i567 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i296 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i264 
y: i295 
=== Succesors ===
=== Usages ===
i266 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i264 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i265 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i266 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i266 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$105/223595741@29c06c1a
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i296 
y: i265 
=== Succesors ===
=== Usages ===
j270 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i296 y: i265  <|@  <|@
f <@~|@floating>@ <|@
tid j270 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$14/658349789@445937f0
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$15/2110163155@12202696
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i266 
=== Succesors ===
=== Usages ===
j271 v583 v584 v585 v586 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i266  <|@  <|@
f <@~|@floating>@ <|@
tid j271 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64
=== Inputs ===
x: j270 
y: j311 
=== Succesors ===
=== Usages ===
v277 v313 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j270 y: j311  <|@  <|@
f <@~|@floating>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1317af57
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j312 
y: j271 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j312 y: j271  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v277 
=== Succesors ===
trueSuccessor: v282 
falseSuccessor: v281 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v277 #trueSuccessor: v282 #falseSuccessor: v281  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SHL v4|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA [v14|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = AND v15|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = ADD (x: v17|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v18|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v280  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
v282 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v579 
value: j271 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v579 value: j271 stateAfter: - lastLocationAccess: - #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid v583 <|@
result [v17|QWORD + v11|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j270 
index: j311 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j270 index: j311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v583 
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v583 #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
result [v17|QWORD + v11|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j270 
index: j311 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j270 index: j311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v584 
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v584 #next: v306  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
result [v17|QWORD + v11|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j270 
index: j311 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j270 index: j311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v585 
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v585 #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
result [v17|QWORD + v11|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j270 
index: j311 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j270 index: j311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v586 
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v586 #next: v314  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
result [v11|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j311 
index: - 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j311 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v581 
value: i567 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v581 value: i567 stateAfter: - lastLocationAccess: - #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
result [v11|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j311 
index: - 
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j311 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v582 
value: j263 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v582 value: j263 stateAfter: - lastLocationAccess: - #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
result [v11|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j311 
index: - 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j311 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v374 <|@
result meta{HotSpotType<[I, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v587 
value: v374 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v587 value: v374 stateAfter: - lastLocationAccess: - #next: v286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a287 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a287 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j311 
=== Succesors ===
next: v289 
=== Usages ===
a292 
=== Predecessor ===
v286 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j311 #next: v289  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
a287 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v11|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v278 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v278  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
v274 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v278 v280 
=== Succesors ===
next: a288 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v278 v280 #next: a288  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a288 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@4a95c073
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v262 i567 i18 
=== Succesors ===
next: v291 
=== Usages ===
a292 
=== Predecessor ===
v279 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v262 i567 i18 #next: v291  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
a288 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing._fused(Bench.scala:143) [bci: 0]
locals: - v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1115ea6a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a292 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v290 
values: a287 a288 
=== Succesors ===
=== Usages ===
v578 a238 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v290 values: a287 a288  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v289 v291 
=== Succesors ===
next: v484 
=== Usages ===
a292 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v289 v291 #next: v484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v413 
=== Usages ===
j485 j487 
=== Predecessor ===
v290 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
result [v3|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a566 
=== Succesors ===
=== Usages ===
j485 j466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a566  <|@  <|@
f <@~|@floating>@ <|@
tid j167 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j514 j506 v524 j469 v479 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v138 
=== Succesors ===
trueSuccessor: v411 
falseSuccessor: v412 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v138 #trueSuccessor: v411 #falseSuccessor: v412  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v430  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
v411 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
result [v21|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a292 
index: - 
=== Succesors ===
=== Usages ===
j487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a292 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j487 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v484 
address: v578 
=== Succesors ===
=== Usages ===
v598 v600 v602 v604 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v484 address: v578  <|@  <|@
f <@~|@floating>@ <|@
tid j485 <|@
result v23|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v484 
address: v576 
=== Succesors ===
=== Usages ===
v599 v601 v603 v605 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v484 address: v576  <|@  <|@
f <@~|@floating>@ <|@
tid j522 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j523 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j523 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j111 
y: j522 
=== Succesors ===
=== Usages ===
v524 v526 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j111 y: j522  <|@  <|@
f <@~|@floating>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@6d5d9321
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j523 
y: j167 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j523 y: j167  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v524 
=== Succesors ===
trueSuccessor: v414 
falseSuccessor: v415 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v524 #trueSuccessor: v414 #falseSuccessor: v415  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = LEA [v21|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v10|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v426  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
v414 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid j317 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j521 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B40" 
    successors "B20" "B40" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j514 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v418 
values: j167 j521 
=== Succesors ===
=== Usages ===
v605 j521 v604 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v418 values: j167 j521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v417 
=== Succesors ===
next: v568 
=== Usages ===
v568 v422 v423 j514 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v417 #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
result [v23|QWORD[*] + v25|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j485 
index: j514 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j485 index: j514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v568 <|@
result v26|V256_DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32,i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v418 
address: v605 
=== Succesors ===
next: v556 
=== Usages ===
v556 
=== Predecessor ===
v418 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v418 address: v605 #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
result [v22|QWORD[.] + v25|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j487 
index: j514 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j487 index: j514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v604 
value: v568 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v604 value: v568 stateAfter: - lastLocationAccess: - #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid j521 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64
=== Inputs ===
x: j514 
y: j317 
=== Succesors ===
=== Usages ===
j506 j514 v526 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j514 y: j317  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@6d5d9321
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j523 
y: j521 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j523 y: j521  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v526 
=== Succesors ===
trueSuccessor: v422 
falseSuccessor: v424 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v526 #trueSuccessor: v422 #falseSuccessor: v424  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|V256_DWORD = H [v23|QWORD[*] + v25|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v25|QWORD * 4], input: v26|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v25|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v418 
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v418 #next: v428  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j506 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v427 
values: j167 j521 
=== Succesors ===
=== Usages ===
v603 j513 j497 v530 v602 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v427 values: j167 j521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v426 v428 
=== Succesors ===
next: v446 
=== Usages ===
j506 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v426 v428 #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid j528 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j529 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j529 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j111 
y: j528 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j111 y: j528  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@6d5d9321
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j529 
y: j506 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j529 y: j506  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v530 
=== Succesors ===
trueSuccessor: v445 
falseSuccessor: v444 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v530 #trueSuccessor: v445 #falseSuccessor: v444  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v10|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v449  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
v445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v569 
=== Usages ===
v569 
=== Predecessor ===
v446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v569  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
result [v23|QWORD[*] + v28|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j485 
index: j506 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j485 index: j506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v569 <|@
result v30|V128_DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v444 
address: v603 
=== Succesors ===
next: v554 
=== Usages ===
v554 
=== Predecessor ===
v444 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v444 address: v603 #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
result [v22|QWORD[.] + v28|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j487 
index: j506 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j487 index: j506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v602 
value: v569 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v602 value: v569 stateAfter: - lastLocationAccess: - #next: v437  <|@  <|@
f <@~|@floating>@ <|@
tid j490 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j513 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j513 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64
=== Inputs ===
x: j506 
y: j490 
=== Succesors ===
=== Usages ===
j497 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j506 y: j490  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
v554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|V128_DWORD = H [v23|QWORD[*] + v28|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v28|QWORD * 4], input: v30|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v28|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j497 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v438 
values: j513 j506 
=== Succesors ===
=== Usages ===
v601 j505 j488 v534 v600 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v438 values: j513 j506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v437 v449 
=== Succesors ===
next: v452 
=== Usages ===
j497 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v437 v449 #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid j532 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j533 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j533 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j111 
y: j532 
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j111 y: j532  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@6d5d9321
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j533 
y: j497 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j533 y: j497  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v534 
=== Succesors ===
trueSuccessor: v451 
falseSuccessor: v450 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v534 #trueSuccessor: v451 #falseSuccessor: v450  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v10|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v570 
=== Usages ===
v570 
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
result [v23|QWORD[*] + v32|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j485 
index: j497 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j485 index: j497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v570 <|@
result v34|V64_DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32>
=== Inputs ===
stateBefore: - 
guard: v450 
address: v601 
=== Succesors ===
next: v552 
=== Usages ===
v552 
=== Predecessor ===
v450 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v450 address: v601 #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
result [v22|QWORD[.] + v32|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j487 
index: j497 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j487 index: j497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v600 
value: v570 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v600 value: v570 stateAfter: - lastLocationAccess: - #next: v440  <|@  <|@
f <@~|@floating>@ <|@
tid j504 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j505 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j505 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64
=== Inputs ===
x: j497 
y: j504 
=== Succesors ===
=== Usages ===
j488 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j497 y: j504  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v552 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|V64_DWORD = H [v23|QWORD[*] + v32|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v32|QWORD * 4], input: v34|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v32|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j488 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v441 
values: j505 j497 
=== Succesors ===
=== Usages ===
v599 v537 v598 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v441 values: j505 j497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v440 v455 
=== Succesors ===
next: v458 
=== Usages ===
j488 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v440 v455 #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid j536 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j111 
y: j118 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j111 y: j118  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@6d5d9321
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j536 
y: j488 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j536 y: j488  <|@  <|@
f <@*|@fixed>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v456 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v457 #falseSuccessor: v456  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = DEC v10|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v461 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v461  <|@  <|@
f <@*|@fixed>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i571 
=== Usages ===
i571 
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i571  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
result [v23|QWORD[*] + v36|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j485 
index: j488 
=== Succesors ===
=== Usages ===
i571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j485 index: j488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i571 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v456 
address: v599 
=== Succesors ===
next: v550 
=== Usages ===
v550 
=== Predecessor ===
v456 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v456 address: v599 #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
result [v22|QWORD[.] + v36|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j487 
index: j488 
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j487 index: j488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
value: i571 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v443 
=== Usages ===
=== Predecessor ===
i571 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v598 value: i571 stateAfter: - lastLocationAccess: - #next: v443  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
v550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV [v23|QWORD[*] + v36|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[.] + v36|QWORD * 4], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v430 v443 v461 
=== Succesors ===
next: a238 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v430 v443 v461 #next: a238  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a238 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a292 
=== Succesors ===
next: v465 
=== Usages ===
a172 ?24 v577 
=== Predecessor ===
v431 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a292 #next: v465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v389 
=== Usages ===
j466 j468 
=== Predecessor ===
a238 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@6d5d9321
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j119 
y: j167 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j119 y: j167  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v479 
=== Succesors ===
trueSuccessor: v387 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v479 #trueSuccessor: v387 #falseSuccessor: v388  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v394  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
result [v21|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a238 
index: - 
=== Succesors ===
=== Usages ===
j468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a238 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j468 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v465 
address: v577 
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v465 address: v577  <|@  <|@
f <@~|@floating>@ <|@
tid j466 <|@
result v40|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v465 
address: v576 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v465 address: v576  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
v388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = LEA [v21|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B39" 
    successors "B34" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j469 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v391 
values: j167 j478 
=== Succesors ===
=== Usages ===
v597 j478 v596 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v391 values: j167 j478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v390 
=== Succesors ===
next: i572 
=== Usages ===
i572 v397 v399 j469 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v390 #next: i572  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
result [v40|QWORD[*] + v41|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j466 
index: j469 
=== Succesors ===
=== Usages ===
i572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j466 index: j469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i572 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v391 
address: v597 
=== Succesors ===
next: v548 
=== Usages ===
i547 
=== Predecessor ===
v391 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v391 address: v597 #next: v548  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
result [v39|QWORD[.] + v41|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j468 
index: j469 
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: j469  <|@  <|@
f <@~|@floating>@ <|@
tid i547 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i32
=== Inputs ===
x: i572 
y: i37 
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i572 y: i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
value: i547 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
i572 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v596 value: i547 stateAfter: - lastLocationAccess: - #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid j478 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64
=== Inputs ===
x: j469 
y: j263 
=== Succesors ===
=== Usages ===
v481 j469 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j469 y: j263  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@6d5d9321
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j119 
y: j478 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j119 y: j478  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v481 
=== Succesors ===
trueSuccessor: v397 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v481 #trueSuccessor: v397 #falseSuccessor: v400  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = ADD (x: v42|DWORD, ~y: [v40|QWORD[*] + v41|QWORD * 8]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + v41|QWORD * 8], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = INC v41|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v391 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v391 #next: v396  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v394 v396 
=== Succesors ===
next: j329 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v394 v396 #next: j329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j329 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j345 
=== Usages ===
v588 v589 
=== Predecessor ===
v395 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j345  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j329 
index: - 
=== Succesors ===
=== Usages ===
j345 v347 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j329 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j345 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v588 
=== Succesors ===
next: j346 
=== Usages ===
j376 j351 v593 
=== Predecessor ===
j329 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v588 #next: j346  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j329 
index: - 
=== Succesors ===
=== Usages ===
j346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j329 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j346 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v589 
=== Succesors ===
next: v337 
=== Usages ===
v334 
=== Predecessor ===
j345 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v589 #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid j375 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j376 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j376 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/931788356@5a5c2da0
stamp: i64
=== Inputs ===
x: j345 
y: j375 
=== Succesors ===
=== Usages ===
v334 v347 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j345 y: j375  <|@  <|@
f <@~|@floating>@ <|@
tid v334 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1317af57
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j346 
y: j376 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j346 y: j376  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@b38f21e3 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v334 
=== Succesors ===
trueSuccessor: v335 
falseSuccessor: v336 
=== Usages ===
=== Predecessor ===
j346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v334 #trueSuccessor: v335 #falseSuccessor: v336  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v45|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a341 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a341  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Fusing._fused(Fusing$List)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 143
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid a7 <|@
result Object[Fusing$$Lambda$29/2075505166@1534370128] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Fusing$$Lambda$29/2075505166@1534370128
stableDimension: 0
stamp: a!# Lbench/Fusing$$Lambda$29/2075505166;
stampKind: a -
value: Object[Fusing$$Lambda$29/2075505166@1534370128]
=== Inputs ===
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$105/223595741@29c06c1a
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i114 
y: i233 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i114 y: i233  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Fusing$List.map(Function1)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: ?46 
values: a2 a7 a238 i234 
=== Succesors ===
=== Usages ===
a341 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?46 values: a2 a7 a238 i234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a341 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@4a95c073
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?24 
arguments: v262 i37 i105 
=== Succesors ===
next: j342 
=== Usages ===
j342 
=== Predecessor ===
v335 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?24 arguments: v262 i37 i105 #next: j342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j342 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a341 
=== Succesors ===
next: v352 
=== Usages ===
j351 
=== Predecessor ===
a341 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a341 #next: v352  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
j342 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = AND v5|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: v0|QWORD[.] Object[Fusing$$Lambda$29/2075505166@1534370128] v21|QWORD[.] v47|DWORD 
bench.Fusing._fused(Bench.scala:143) [bci: 6]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1115ea6a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 6] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v588 
value: j376 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v588 value: j376 stateAfter: - lastLocationAccess: - #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
result [v45|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j345 
index: - 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j345 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v593 
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v593 #next: v350  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v344 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j351 <|@
result v49|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v349 
values: j345 j342 
=== Succesors ===
=== Usages ===
v592 v591 a169 v594 v595 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v349 values: j345 j342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v350 v352 
=== Succesors ===
next: a169 
=== Usages ===
j351 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v350 v352 #next: a169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a169 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j351 
=== Succesors ===
next: j363 
=== Usages ===
a176 
=== Predecessor ===
v349 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j351 #next: j363  <|@  <|@
f <@~|@floating>@ <|@
tid v357 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lbench/Fusing$List;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lbench/Fusing$List;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j358 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j358 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v357 
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v357  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
result [v51|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j358 
index: - 
=== Succesors ===
=== Usages ===
j363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j358 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j363 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v590 
=== Succesors ===
next: v364 
=== Usages ===
v364 
=== Predecessor ===
a169 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v590 #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
result [v49|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j351 
index: - 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j351 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v591 
value: j363 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v367 
=== Usages ===
=== Predecessor ===
j363 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v591 value: j363 stateAfter: - lastLocationAccess: - #next: v367  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
result [v49|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j351 
index: - 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j351 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v380 <|@
result meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v592 
value: v380 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v592 value: v380 stateAfter: - lastLocationAccess: - #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
result [v49|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j351 
index: - 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j351 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a172 <|@
result v53|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a238 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a238  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v594 
value: a172 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v594 value: a172 stateAfter: - lastLocationAccess: - #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
result [v49|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j351 
index: - 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j351 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v595 
value: a565 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a176 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v595 value: a565 stateAfter: - lastLocationAccess: - #next: a176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a176 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a169 
=== Succesors ===
next: v177 
=== Usages ===
v11 
=== Predecessor ===
v373 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a169 #next: v177  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
a176 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v11  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a176 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a176 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE v49|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [v51|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*]], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v49|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@15a1e056 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 12], y: v53|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 16], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@59a0967e <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v399  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v391 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v391  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B39 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v423  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v418 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v418  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B40 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v259  <|@  <|@
f <@~|@floating>@ <|@
tid a261 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@250597243
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@250597243]
=== Inputs ===
=== Succesors ===
=== Usages ===
a250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i260 <|@
result int[-19483|0xffffffffffffb3e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -19483
stableDimension: 0
stamp: i32 [-19483] ⇊00000000ffffb3e5 ⇈00000000ffffb3e5
stampKind: i32
value: int[-19483|0xffffffffffffb3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i249 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@250597243] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-19483|0xffffffffffffb3e5], v54|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B41" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i249 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-28036 - -16395] ⇊00000000ffff8064 ⇈00000000ffffbffd
valueDescription: i32
=== Inputs ===
merge: v245 
values: i253 i258 i260 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v245 values: i253 i258 i260  <|@  <|@
f <@~|@floating>@ <|@
tid a250 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v245 
values: a254 a248 a261 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v245 values: a254 a248 a261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v252 v257 v259 
=== Succesors ===
next: v251 
=== Usages ===
i249 a250 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v252 v257 v259 #next: v251  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i249 
speculation: a250 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i249 speculation: a250  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD, v56|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v56|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing._fused(Bench.scala:143) [bci: 0]
locals: - v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@298d9d96 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing._fused(Bench.scala:143) [bci: 0]
locals: - v0|QWORD[.] 
>@ <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD[.], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing._fused(Bench.scala:143) [bci: 0]
locals: - v0|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SHR v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = DEC v7|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = SHL v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B41" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SHL v4|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA [v14|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = AND v15|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = ADD (x: v17|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v18|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v11|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = LEA [v21|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v10|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v10|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|V128_DWORD = H [v23|QWORD[*] + v28|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v28|QWORD * 4], input: v30|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v28|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v10|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|V64_DWORD = H [v23|QWORD[*] + v32|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v32|QWORD * 4], input: v34|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v32|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = DEC v10|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV [v23|QWORD[*] + v36|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[.] + v36|QWORD * 4], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = LEA [v21|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B39 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B39" 
    successors "B34" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = ADD (x: v42|DWORD, ~y: [v40|QWORD[*] + v41|QWORD * 8]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + v41|QWORD * 8], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = INC v41|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v45|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE v49|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [v51|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*]], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v49|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@15a1e056 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 12], y: v53|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 16], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@59a0967e <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B40 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B40" 
    successors "B20" "B40" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|V256_DWORD = H [v23|QWORD[*] + v25|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v25|QWORD * 4], input: v26|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v25|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing._fused(Bench.scala:143) [bci: 0]
locals: - v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1115ea6a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = AND v5|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: v0|QWORD[.] Object[Fusing$$Lambda$29/2075505166@1534370128] v21|QWORD[.] v47|DWORD 
bench.Fusing._fused(Bench.scala:143) [bci: 6]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1115ea6a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 6] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1813124041] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-24339|0xffffffffffffa0ed], v2|QWORD[.]] destination: B1 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B41" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD, v56|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v56|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing._fused(Bench.scala:143) [bci: 0]
locals: - v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@250597243] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-19483|0xffffffffffffb3e5], v54|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-28036|0xffffffffffff927c], Object[null]] destination: B3 -> B42 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokedynamic #-21        // java.lang.invoke.LambdaForm$MH.2093631819.linkToTargetMethod:(java.lang.Object)java.lang.Object
     6: invokevirtual #5          // bench.Fusing$List.map:(scala.Function1)bench.Fusing$List
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@298d9d96 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
bench.Fusing._fused(Bench.scala:143) [bci: 0]
locals: - r13|QWORD[.] 
>@ <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r10|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [r10:0, r13:0, r14:0]
live-base-pointers: []
bench.Fusing._fused(Bench.scala:143) [bci: 0]
locals: - r13|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction CMP r11|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r8|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rsi|DWORD = SHR r8|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD = MOV rsi|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|QWORD = SHL rsi|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction r9|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B41" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   82  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   84  <|@ instruction CMP r11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rbx|DWORD = SHL r11|DWORD y: 2 size: DWORD <|@ <|@
      nr   92  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD <|@ <|@
      nr   96  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction rdi|QWORD = ADD (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  124  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  126  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  130  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction stack:40|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction stack:48|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction stack:56|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction r14|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  190  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction r9|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  206  <|@ instruction rdx|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rcx|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  210  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [r9|QWORD - 4] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction xmm0|V128_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  258  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  260  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  262  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  268  <|@ instruction rcx|QWORD = LEA [r9|QWORD - 2] size: QWORD <|@ <|@
      nr  270  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction xmm0|V64_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  282  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  284  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  286  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  292  <|@ instruction r9|QWORD = DEC r9|QWORD size: QWORD <|@ <|@
      nr  294  <|@ instruction CMP (x: r10|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  296  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdx|DWORD = MOV [rdx|QWORD[*] + r10|QWORD * 4] size: DWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [rsi|QWORD[.] + r10|QWORD * 4], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  330  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B39 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B39" 
    successors "B34" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  336  <|@ instruction r11|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  338  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, ~y: [rcx|QWORD[*] + r10|QWORD * 8]) size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 8], y: r11|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  346  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  402  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>} <|@ <|@
      nr  406  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed} <|@ <|@
      nr  412  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@15a1e056 encoding: base: 0 shift: 3 <|@ <|@
      nr  414  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@59a0967e <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B40 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B40" 
    successors "B20" "B40" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  228  <|@ instruction xmm0|V256_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  230  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  232  <|@ instruction r10|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  234  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction stack:40|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction stack:48|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:56|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  174  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  180  <|@ instruction r14|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ st <@st|@reference-map: [r14:0, stack:8, stack:32]
live-base-pointers: []
bench.Fusing._fused(Bench.scala:143) [bci: 0]
locals: - stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1115ea6a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  372  <|@ instruction r8|DWORD = AND r8|DWORD y: -2 size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  376  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  378  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:32]
live-base-pointers: []
bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: stack:32|QWORD[.] Object[Fusing$$Lambda$29/2075505166@1534370128] r13|QWORD[.] stack:60|DWORD 
bench.Fusing._fused(Bench.scala:143) [bci: 6]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1115ea6a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 6] <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction stack:40|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction stack:48|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction stack:56|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1813124041] <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed] <|@ <|@
      nr   24  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B1 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B41" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
bench.Fusing._fused(Bench.scala:143) [bci: 0]
locals: - r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@250597243] <|@ <|@
      nr  436  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-19483|0xffffffffffffb3e5] <|@ <|@
      nr  440  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   42  <|@ instruction r10|DWORD = MOVE input: int[-28036|0xffffffffffff927c] <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B3 -> B42 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokedynamic #-21        // java.lang.invoke.LambdaForm$MH.2093631819.linkToTargetMethod:(java.lang.Object)java.lang.Object
     6: invokevirtual #5          // bench.Fusing$List.map:(scala.Function1)bench.Fusing$List
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@298d9d96 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
bench.Fusing._fused(Bench.scala:143) [bci: 0]
locals: - r13|QWORD[.] 
>@ <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r10|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [r10:0, r13:0, r14:0]
live-base-pointers: []
bench.Fusing._fused(Bench.scala:143) [bci: 0]
locals: - r13|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction CMP r11|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r8|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rsi|DWORD = SHR r8|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD = MOV rsi|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|QWORD = SHL rsi|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction r9|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B41" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   82  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   84  <|@ instruction CMP r11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rbx|DWORD = SHL r11|DWORD y: 2 size: DWORD <|@ <|@
      nr   92  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD <|@ <|@
      nr   96  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   98  <|@ instruction rdi|QWORD = ADD (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B13 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  124  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  126  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  130  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction stack:40|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction stack:48|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction stack:56|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction r14|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B30" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  190  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B30 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B19" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction r9|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  206  <|@ instruction rdx|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rcx|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  210  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B21 falseDestination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B24" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [r9|QWORD - 4] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction xmm0|V128_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  258  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  260  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  262  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B21" 
    successors "B27" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  268  <|@ instruction rcx|QWORD = LEA [r9|QWORD - 2] size: QWORD <|@ <|@
      nr  270  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction xmm0|V64_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  282  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  284  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  286  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B24" 
    successors "B30" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  292  <|@ instruction r9|QWORD = DEC r9|QWORD size: QWORD <|@ <|@
      nr  294  <|@ instruction CMP (x: r10|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  296  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B30 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdx|DWORD = MOV [rdx|QWORD[*] + r10|QWORD * 4] size: DWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [rsi|QWORD[.] + r10|QWORD * 4], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B14" "B29" "B27" 
    successors "B35" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B35 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  330  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B33" 
    successors "B35" "B33" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  336  <|@ instruction r11|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  338  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, ~y: [rcx|QWORD[*] + r10|QWORD * 8]) size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 8], y: r11|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  346  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B35 falseDestination: B33 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  402  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>} <|@ <|@
      nr  406  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed} <|@ <|@
      nr  412  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@15a1e056 encoding: base: 0 shift: 3 <|@ <|@
      nr  414  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@59a0967e <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  228  <|@ instruction xmm0|V256_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  230  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  232  <|@ instruction r10|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  234  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B21 falseDestination: B19 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction stack:40|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction stack:48|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:56|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  174  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  180  <|@ instruction r14|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ st <@st|@reference-map: [r14:0, stack:8, stack:32]
live-base-pointers: []
bench.Fusing._fused(Bench.scala:143) [bci: 0]
locals: - stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1115ea6a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  372  <|@ instruction r8|DWORD = AND r8|DWORD y: -2 size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  376  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  378  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:32]
live-base-pointers: []
bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: stack:32|QWORD[.] Object[Fusing$$Lambda$29/2075505166@1534370128] r13|QWORD[.] stack:60|DWORD 
bench.Fusing._fused(Bench.scala:143) [bci: 6]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1115ea6a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 6] <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1813124041] <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B1 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B41" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
bench.Fusing._fused(Bench.scala:143) [bci: 0]
locals: - r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@250597243] <|@ <|@
      nr  436  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-19483|0xffffffffffffb3e5] <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   42  <|@ instruction r10|DWORD = MOVE input: int[-28036|0xffffffffffff927c] <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B3 -> B42 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokedynamic #-21        // java.lang.invoke.LambdaForm$MH.2093631819.linkToTargetMethod:(java.lang.Object)java.lang.Object
     6: invokevirtual #5          // bench.Fusing$List.map:(scala.Function1)bench.Fusing$List
     9: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24304c8bea458b75104585f60f8494020000458b550c468b1cd50c0000004181fbffffff7f0f84c1020000458bc341ffc0418bf0d1ee8bf648ffce488bd648d1e2458bcb4c3bca0f87090000004585db0f857c020000498b5760498b4f704181fbffffff000f83c1010000418bdbc1e3028d5b1783e3f84863db488bfb4803fa483bf90f87a301000049897f600f188413c00000000f188413000100000f188413400100000f1884138001000044895a0c48c70201000000c74208addeadde488bc24c894c24184889742410448944240c44897424084c896c2420458beb458bf24585ed0f84790000004c8b4c2418488d70104a8d14f510000000498d49f84885c949c7c2000000000f8d03010000498d49fc4c3bd10f8f13000000c4a17a6f0492c4a17a7f0496498d4a044c8bd1498d49fe4c3bd10f8f13000000c4a1f96e0492c4a1f97e0496498d4a024c8bd149ffc94d3bd10f8f08000000428b149242891496488b7424104885f60f8c37000000488d50104a8d0cf51000000049c7c2000000000f1f80000000000f1f800000000041bb0200000046031cd146891cd249ffc24c3bd67eea498b7760488d5618493b57700f87b1000000498957600f1886d8000000448b742408488bd648b9addeaddeaddeadde488b89a800000048890ec74608addeadde48c1e80389460c44897610488bc2488b6c24304883c438850500000000c5f877c3660f1f840000000000c4a17e6f0492c4a17e7f04964d8d52084c3bd17eebe9e3feffff4c894c24184889742410448944240c44897424084c896c242048baaddeaddeaddeadde488bf2418bd3b900000000458bf2458bebe80000000090e976feffff4c8be8448b44240c448b74240848beaddeaddeaddeadde4183e0feba02000000b9010000004489442404e80000000090488bf0498bc5e924ffffff4c896c242049baaddeaddeaddeadde4d8bda41baeda0ffff4589979c0200004d899fa8020000e800000000904c896c242049baaddeaddeaddeadde4d8bda41bae5b3ffffebd249bb000000000000000041ba7c92ffffebc0e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1036a1f78, value=0x110f93e60]:0x110f93e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@298d9d96 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD state [bci:0]  <||@
  Comment 51 [r13:0]at bench.Fusing._fused(Bench.scala:143) [bci: 0, duringCall: false, rethrow: false]
              |0  |1            
     locals:  |-  |r13|QWORD[.]   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 55 10 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 58 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 64 block B2 null  <||@
  Comment 64 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 64 30 r10|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 68 32 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 68 [r10:0, r13:0, r14:0]at bench.Fusing._fused(Bench.scala:143) [bci: 0, duringCall: false, rethrow: false]
              |0  |1            
     locals:  |-  |r13|QWORD[.]   <||@
  Comment 68 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 34 CMP r11|DWORD y: 2147483647 size: DWORD  <||@
  Comment 83 36 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 89 block B4 null  <||@
  Comment 89 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 89 48 r8|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 95 50 rsi|DWORD = SHR r8|DWORD size: DWORD  <||@
  Comment 100 52 rsi|QWORD = MOV rsi|DWORD size: DWORD  <||@
  Comment 102 54 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 105 56 rdx|QWORD = SHL rsi|QWORD size: QWORD  <||@
  Comment 111 58 r9|QWORD = MOV r11|DWORD size: DWORD  <||@
  Comment 114 60 CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 117 62 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6  <||@
  Comment 123 block B6 null  <||@
  Comment 123 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 70 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 126 72 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B41  <||@
  Comment 132 block B8 null  <||@
  Comment 132 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 132 80 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 136 82 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 140 84 CMP r11|DWORD y: 16777215 size: DWORD  <||@
  Comment 147 86 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B13  <||@
  Comment 153 block B9 null  <||@
  Comment 153 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 153 90 rbx|DWORD = SHL r11|DWORD y: 2 size: DWORD  <||@
  Comment 159 92 rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD  <||@
  Comment 162 94 rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD  <||@
  Comment 165 96 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 168 98 rdi|QWORD = ADD (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 174 100 CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 177 102 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B13 falseDestination: B9 -> B11  <||@
  Comment 183 block B11 null  <||@
  Comment 183 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 183 120 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 187 122 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 195 124 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 203 126 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 211 128 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 219 130 MOV (x: [rdx|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 223 132 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 230 134 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 230 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 237 136 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 237 138 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 240 140 stack:40|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 245 142 stack:48|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 250 144 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 255 146 stack:56|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 260 148 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 265 150 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 268 152 r14|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 271 154 JUMP ~[] destination: B11 -> B14  <||@
  Comment 271 block B14 null  <||@
  Comment 271 188 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 271 190 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 274 192 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B30 falseDestination: B14 -> B16  <||@
  Comment 280 block B16 null  <||@
  Comment 280 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 280 202 r9|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 285 204 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 289 206 rdx|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 297 208 rcx|QWORD = LEA [r9|QWORD - 8] size: QWORD  <||@
  Comment 301 210 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 304 216 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 311 212 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B21 falseDestination: B16 -> B19  <||@
  Comment 317 block B21 null  <||@
  Comment 317 242 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 317 244 rcx|QWORD = LEA [r9|QWORD - 4] size: QWORD  <||@
  Comment 321 246 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 324 248 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23  <||@
  Comment 330 block B23 null  <||@
  Comment 330 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 330 256 xmm0|V128_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 336 258 J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 342 260 rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 346 262 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 349 264 JUMP ~[] destination: B23 -> B24  <||@
  Comment 349 block B24 null  <||@
  Comment 349 266 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 349 268 rcx|QWORD = LEA [r9|QWORD - 2] size: QWORD  <||@
  Comment 353 270 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 356 272 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26  <||@
  Comment 362 block B26 null  <||@
  Comment 362 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 362 280 xmm0|V64_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 368 282 J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 374 284 rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 378 286 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 381 288 JUMP ~[] destination: B26 -> B27  <||@
  Comment 381 block B27 null  <||@
  Comment 381 290 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 381 292 r9|QWORD = DEC r9|QWORD size: QWORD  <||@
  Comment 384 294 CMP (x: r10|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 387 296 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B30 falseDestination: B27 -> B29  <||@
  Comment 393 block B29 null  <||@
  Comment 393 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 393 306 rdx|DWORD = MOV [rdx|QWORD[*] + r10|QWORD * 4] size: DWORD  <||@
  Comment 397 308 MOV (x: [rsi|QWORD[.] + r10|QWORD * 4], y: rdx|DWORD) size: DWORD  <||@
  Comment 401 312 JUMP ~[] destination: B29 -> B30  <||@
  Comment 401 block B30 null  <||@
  Comment 401 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 401 196 rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 406 316 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 409 318 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B35 falseDestination: B30 -> B32  <||@
  Comment 415 block B32 null  <||@
  Comment 415 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 415 326 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 419 328 rcx|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 427 330 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 434 332 JUMP ~[] destination: B32 -> B33  <||@
  Comment 434 block B33 loop 1 depth 1 header:391|LoopBegin  <||@
  Comment 434 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 448 336 r11|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 454 338 r11|DWORD = ADD (x: r11|DWORD, ~y: [rcx|QWORD[*] + r10|QWORD * 8]) size: DWORD  <||@
  Comment 458 340 MOV (x: [rdx|QWORD[.] + r10|QWORD * 8], y: r11|DWORD) size: DWORD  <||@
  Comment 462 342 r10|QWORD = INC r10|QWORD size: QWORD  <||@
  Comment 465 344 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 468 346 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B35 falseDestination: B33 -> B33  <||@
  Comment 470 block B35 null  <||@
  Comment 470 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 470 354 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 474 356 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 478 358 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 482 360 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 488 block B37 null  <||@
  Comment 488 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 488 390 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 492 392 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 499 394 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 499 396 r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 504 398 JUMP ~[] destination: B37 -> B38  <||@
  Comment 504 block B38 null  <||@
  Comment 504 400 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 504 402 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 507 404 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>}  <||@
  Comment 507 {meta{HotSpotType<Lbench/Fusing$List;, resolved>}}  <||@
  Comment 517 406 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 524 408 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 527 410 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}  <||@
  Comment 527 {meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}}  <||@
  Comment 534 412 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@15a1e056 encoding: base: 0 shift: 3  <||@
  Comment 538 414 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 541 416 MOV (x: [rsi|QWORD[*] + 16], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 545 418 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 548 420 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@59a0967e  <||@
  Comment 557 12  <||@
  Comment 567 block B19 loop 0 depth 1 header:418|LoopBegin  <||@
  Comment 567 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 576 228 xmm0|V256_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 582 230 J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 588 232 r10|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 592 234 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 595 236 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B21 falseDestination: B19 -> B19  <||@
  Comment 602 block B13 null  <||@
  Comment 602 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 602 158 stack:40|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 607 160 stack:48|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 612 162 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 617 164 stack:56|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 622 166 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 627 172 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 627 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 637 174 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 640 176 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 643 178 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 648 180 r14|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 651 182 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 654 184 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1115ea6a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 654 {Stub<NewArrayStub.newArray>@0x1115ea6a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 659 [r14:0, stack:8, stack:32]at bench.Fusing._fused(Bench.scala:143) [bci: 0, duringCall: false, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:32|QWORD[.]   <||@
  Comment 660 186 JUMP ~[] destination: B13 -> B14  <||@
  Comment 665 block B36 null  <||@
  Comment 665 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 665 364 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 668 366 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 673 368 r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 678 370 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 678 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 688 372 r8|DWORD = AND r8|DWORD y: -2 size: DWORD  <||@
  Comment 692 374 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 697 376 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 702 378 stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 707 380 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1115ea6a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 6]  <||@
  Comment 707 {Stub<NewArrayStub.newArray>@0x1115ea6a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 712 [r13:0, r14:0, stack:32]at bench.Fusing$List.map(Bench.scala:126) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1                                                |2             |3              
     locals:  |stack:32|QWORD[.]  |Object[Fusing$$Lambda$29/2075505166@1534370128]  |r13|QWORD[.]  |stack:60|DWORD 
  at bench.Fusing._fused(Bench.scala:143) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 713 382 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 716 384 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 719 386 JUMP ~[] destination: B36 -> B38  <||@
  Comment 724 block B1 null  <||@
  Comment 724 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 724 16 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 729 18 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1813124041]  <||@
  Comment 729 {Object[d.a@1813124041]}  <||@
  Comment 739 20 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 742 22 r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed]  <||@
  Comment 748 26 JUMP ~[] destination: B1 -> B42  <||@
  Comment 748 block B42 null  <||@
  Comment 748 444 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 748 446 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 755 448 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 762 450 DEOPT info [bci:0]  <||@
  Comment 762 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1036a1f90, value=0x110f955fe]:0x110f955fe}  <||@
  Comment 767 [r13:0]at bench.Fusing._fused(Bench.scala:143) [bci: 0, duringCall: false, rethrow: false]
              |0  |1            
     locals:  |-  |r13|QWORD[.]   <||@
  Comment 768 block B41 null  <||@
  Comment 768 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 768 432 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 773 434 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@250597243]  <||@
  Comment 773 {Object[d.a@250597243]}  <||@
  Comment 783 436 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 786 438 r10|DWORD = MOVE input: int[-19483|0xffffffffffffb3e5]  <||@
  Comment 792 442 JUMP ~[] destination: B41 -> B42  <||@
  Comment 794 block B3 null  <||@
  Comment 794 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 794 40 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 804 42 r10|DWORD = MOVE input: int[-28036|0xffffffffffff927c]  <||@
  Comment 810 44 JUMP ~[] destination: B3 -> B42  <||@
  Comment 812 {Stub<ExceptionHandlerStub.exceptionHandler>@0x11132eee0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 812 4  <||@
  Comment 818 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1036a1f88, value=0x110f95500]:0x110f95500}  <||@
  Comment 818 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1250[bench.Fusing._fused(Fusing$List)]"
  method "HotSpotCompilation-1250[bench.Fusing._fused(Fusing$List)]"
  date 1527270464962
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 111ae0240 448b560849c1e203493bc20f850f3c4bff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24304c8bea458b75104585f60f8494020000458b550c468b1cd50c0000004181fbffffff7f0f84c1020000458bc341ffc0418bf0d1ee8bf648ffce488bd648d1e2458bcb4c3bca0f87090000004585db0f857c020000498b5760498b4f704181fbffffff000f83c1010000418bdbc1e3028d5b1783e3f84863db488bfb4803fa483bf90f87a301000049897f600f188413c00000000f188413000100000f188413400100000f1884138001000044895a0c48c70201000000c742086d0100f8488bc24c894c24184889742410448944240c44897424084c896c2420458beb458bf24585ed0f84790000004c8b4c2418488d70104a8d14f510000000498d49f84885c949c7c2000000000f8d03010000498d49fc4c3bd10f8f13000000c4a17a6f0492c4a17a7f0496498d4a044c8bd1498d49fe4c3bd10f8f13000000c4a1f96e0492c4a1f97e0496498d4a024c8bd149ffc94d3bd10f8f08000000428b149242891496488b7424104885f60f8c37000000488d50104a8d0cf51000000049c7c2000000000f1f80000000000f1f800000000041bb0200000046031cd146891cd249ffc24c3bd67eea498b7760488d5618493b57700f87b1000000498957600f1886d8000000448b742408488bd648b998272ec007000000488b89a800000048890ec74608f3c405f848c1e80389460c44897610488bc2488b6c24304883c4388505936ba1f0c5f877c3660f1f840000000000c4a17e6f0492c4a17e7f04964d8d52084c3bd17eebe9e3feffff4c894c24184889742410448944240c44897424084c896c242048ba680b00c007000000488bf2418bd3b900000000458bf2458bebe8cda1b0ff90e976feffff4c8be8448b44240c448b74240848be680b00c0070000004183e0feba02000000b9010000004489442404e898a1b0ff90488bf0498bc5e924ffffff4c896c242049baf04e936f070000004d8bda41baeda0ffff4589979c0200004d899fa8020000e8bf504bff904c896c242049ba881e936f070000004d8bda41bae5b3ffffebd249bb000000000000000041ba7c92ffffebc0e86fe984ff90e8894f4bff90  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1036a1f78, value=0x110f93e60]:0x110f93e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@298d9d96 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD state [bci:0]  <||@
  Comment 51 [r13:0]at bench.Fusing._fused(Bench.scala:143) [bci: 0, duringCall: false, rethrow: false]
              |0  |1            
     locals:  |-  |r13|QWORD[.]   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 55 10 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 58 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 64 block B2 null  <||@
  Comment 64 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 64 30 r10|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 68 32 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 68 [r10:0, r13:0, r14:0]at bench.Fusing._fused(Bench.scala:143) [bci: 0, duringCall: false, rethrow: false]
              |0  |1            
     locals:  |-  |r13|QWORD[.]   <||@
  Comment 68 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 34 CMP r11|DWORD y: 2147483647 size: DWORD  <||@
  Comment 83 36 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 89 block B4 null  <||@
  Comment 89 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 89 48 r8|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 95 50 rsi|DWORD = SHR r8|DWORD size: DWORD  <||@
  Comment 100 52 rsi|QWORD = MOV rsi|DWORD size: DWORD  <||@
  Comment 102 54 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 105 56 rdx|QWORD = SHL rsi|QWORD size: QWORD  <||@
  Comment 111 58 r9|QWORD = MOV r11|DWORD size: DWORD  <||@
  Comment 114 60 CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 117 62 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6  <||@
  Comment 123 block B6 null  <||@
  Comment 123 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 70 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 126 72 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B41  <||@
  Comment 132 block B8 null  <||@
  Comment 132 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 132 80 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 136 82 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 140 84 CMP r11|DWORD y: 16777215 size: DWORD  <||@
  Comment 147 86 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B13  <||@
  Comment 153 block B9 null  <||@
  Comment 153 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 153 90 rbx|DWORD = SHL r11|DWORD y: 2 size: DWORD  <||@
  Comment 159 92 rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD  <||@
  Comment 162 94 rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD  <||@
  Comment 165 96 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 168 98 rdi|QWORD = ADD (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 174 100 CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 177 102 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B13 falseDestination: B9 -> B11  <||@
  Comment 183 block B11 null  <||@
  Comment 183 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 183 120 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 187 122 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 195 124 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 203 126 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 211 128 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 219 130 MOV (x: [rdx|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 223 132 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 230 134 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 230 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 237 136 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 237 138 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 240 140 stack:40|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 245 142 stack:48|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 250 144 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 255 146 stack:56|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 260 148 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 265 150 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 268 152 r14|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 271 154 JUMP ~[] destination: B11 -> B14  <||@
  Comment 271 block B14 null  <||@
  Comment 271 188 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 271 190 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 274 192 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B30 falseDestination: B14 -> B16  <||@
  Comment 280 block B16 null  <||@
  Comment 280 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 280 202 r9|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 285 204 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 289 206 rdx|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 297 208 rcx|QWORD = LEA [r9|QWORD - 8] size: QWORD  <||@
  Comment 301 210 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 304 216 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 311 212 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B21 falseDestination: B16 -> B19  <||@
  Comment 317 block B21 null  <||@
  Comment 317 242 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 317 244 rcx|QWORD = LEA [r9|QWORD - 4] size: QWORD  <||@
  Comment 321 246 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 324 248 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23  <||@
  Comment 330 block B23 null  <||@
  Comment 330 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 330 256 xmm0|V128_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 336 258 J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 342 260 rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 346 262 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 349 264 JUMP ~[] destination: B23 -> B24  <||@
  Comment 349 block B24 null  <||@
  Comment 349 266 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 349 268 rcx|QWORD = LEA [r9|QWORD - 2] size: QWORD  <||@
  Comment 353 270 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 356 272 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26  <||@
  Comment 362 block B26 null  <||@
  Comment 362 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 362 280 xmm0|V64_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 368 282 J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 374 284 rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 378 286 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 381 288 JUMP ~[] destination: B26 -> B27  <||@
  Comment 381 block B27 null  <||@
  Comment 381 290 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 381 292 r9|QWORD = DEC r9|QWORD size: QWORD  <||@
  Comment 384 294 CMP (x: r10|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 387 296 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B30 falseDestination: B27 -> B29  <||@
  Comment 393 block B29 null  <||@
  Comment 393 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 393 306 rdx|DWORD = MOV [rdx|QWORD[*] + r10|QWORD * 4] size: DWORD  <||@
  Comment 397 308 MOV (x: [rsi|QWORD[.] + r10|QWORD * 4], y: rdx|DWORD) size: DWORD  <||@
  Comment 401 312 JUMP ~[] destination: B29 -> B30  <||@
  Comment 401 block B30 null  <||@
  Comment 401 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 401 196 rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 406 316 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 409 318 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B35 falseDestination: B30 -> B32  <||@
  Comment 415 block B32 null  <||@
  Comment 415 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 415 326 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 419 328 rcx|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 427 330 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 434 332 JUMP ~[] destination: B32 -> B33  <||@
  Comment 434 block B33 loop 1 depth 1 header:391|LoopBegin  <||@
  Comment 434 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 448 336 r11|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 454 338 r11|DWORD = ADD (x: r11|DWORD, ~y: [rcx|QWORD[*] + r10|QWORD * 8]) size: DWORD  <||@
  Comment 458 340 MOV (x: [rdx|QWORD[.] + r10|QWORD * 8], y: r11|DWORD) size: DWORD  <||@
  Comment 462 342 r10|QWORD = INC r10|QWORD size: QWORD  <||@
  Comment 465 344 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 468 346 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B35 falseDestination: B33 -> B33  <||@
  Comment 470 block B35 null  <||@
  Comment 470 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 470 354 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 474 356 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 478 358 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 482 360 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 488 block B37 null  <||@
  Comment 488 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 488 390 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 492 392 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 499 394 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 499 396 r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 504 398 JUMP ~[] destination: B37 -> B38  <||@
  Comment 504 block B38 null  <||@
  Comment 504 400 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 504 402 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 507 404 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>}  <||@
  Comment 507 {meta{HotSpotType<Lbench/Fusing$List;, resolved>}}  <||@
  Comment 517 406 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 524 408 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 527 410 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}  <||@
  Comment 527 {meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}}  <||@
  Comment 534 412 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@15a1e056 encoding: base: 0 shift: 3  <||@
  Comment 538 414 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 541 416 MOV (x: [rsi|QWORD[*] + 16], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 545 418 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 548 420 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@59a0967e  <||@
  Comment 557 12  <||@
  Comment 567 block B19 loop 0 depth 1 header:418|LoopBegin  <||@
  Comment 567 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 576 228 xmm0|V256_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 582 230 J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 588 232 r10|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 592 234 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 595 236 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B21 falseDestination: B19 -> B19  <||@
  Comment 602 block B13 null  <||@
  Comment 602 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 602 158 stack:40|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 607 160 stack:48|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 612 162 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 617 164 stack:56|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 622 166 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 627 172 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 627 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 637 174 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 640 176 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 643 178 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 648 180 r14|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 651 182 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 654 184 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1115ea6a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 654 {Stub<NewArrayStub.newArray>@0x1115ea6a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 659 [r14:0, stack:8, stack:32]at bench.Fusing._fused(Bench.scala:143) [bci: 0, duringCall: false, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:32|QWORD[.]   <||@
  Comment 660 186 JUMP ~[] destination: B13 -> B14  <||@
  Comment 665 block B36 null  <||@
  Comment 665 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 665 364 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 668 366 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 673 368 r14|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 678 370 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 678 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 688 372 r8|DWORD = AND r8|DWORD y: -2 size: DWORD  <||@
  Comment 692 374 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 697 376 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 702 378 stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 707 380 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1115ea6a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 6]  <||@
  Comment 707 {Stub<NewArrayStub.newArray>@0x1115ea6a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 712 [r13:0, r14:0, stack:32]at bench.Fusing$List.map(Bench.scala:126) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1                                                |2             |3              
     locals:  |stack:32|QWORD[.]  |Object[Fusing$$Lambda$29/2075505166@1534370128]  |r13|QWORD[.]  |stack:60|DWORD 
  at bench.Fusing._fused(Bench.scala:143) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 713 382 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 716 384 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 719 386 JUMP ~[] destination: B36 -> B38  <||@
  Comment 724 block B1 null  <||@
  Comment 724 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 724 16 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 729 18 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1813124041]  <||@
  Comment 729 {Object[d.a@1813124041]}  <||@
  Comment 739 20 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 742 22 r10|DWORD = MOVE input: int[-24339|0xffffffffffffa0ed]  <||@
  Comment 748 26 JUMP ~[] destination: B1 -> B42  <||@
  Comment 748 block B42 null  <||@
  Comment 748 444 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 748 446 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 755 448 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 762 450 DEOPT info [bci:0]  <||@
  Comment 762 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1036a1f90, value=0x110f955fe]:0x110f955fe}  <||@
  Comment 767 [r13:0]at bench.Fusing._fused(Bench.scala:143) [bci: 0, duringCall: false, rethrow: false]
              |0  |1            
     locals:  |-  |r13|QWORD[.]   <||@
  Comment 768 block B41 null  <||@
  Comment 768 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 768 432 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 773 434 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@250597243]  <||@
  Comment 773 {Object[d.a@250597243]}  <||@
  Comment 783 436 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 786 438 r10|DWORD = MOVE input: int[-19483|0xffffffffffffb3e5]  <||@
  Comment 792 442 JUMP ~[] destination: B41 -> B42  <||@
  Comment 794 block B3 null  <||@
  Comment 794 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 794 40 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 804 42 r10|DWORD = MOVE input: int[-28036|0xffffffffffff927c]  <||@
  Comment 810 44 JUMP ~[] destination: B3 -> B42  <||@
  Comment 812 {Stub<ExceptionHandlerStub.exceptionHandler>@0x11132eee0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 812 4  <||@
  Comment 818 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1036a1f88, value=0x110f95500]:0x110f95500}  <||@
  Comment 818 5  <||@
  HexCodeFile>>> <|@
end_nmethod
