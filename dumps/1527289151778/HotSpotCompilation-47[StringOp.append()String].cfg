begin_compilation
  name " HotSpotCompilation-47[bench.StringOp.append()]"
  method "HotSpotCompilation-47[bench.StringOp.append()]"
  date 1527289151782
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j74 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j74  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j74 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j94 
=== Usages ===
v136 v137 
=== Predecessor ===
v0 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j94  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j74 
index: - 
=== Succesors ===
=== Usages ===
j94 v96 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j94 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v136 
=== Succesors ===
next: j95 
=== Usages ===
j127 j100 v141 
=== Predecessor ===
j74 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v136 #next: j95  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j74 
index: - 
=== Succesors ===
=== Usages ===
j95 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j95 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v137 
=== Succesors ===
next: v82 
=== Usages ===
v79 
=== Predecessor ===
j94 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v137 #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid j126 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j127 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$20/1717124303@2636afc
stamp: i64
=== Inputs ===
x: j94 
y: j126 
=== Succesors ===
=== Usages ===
v79 v96 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j94 y: j126  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@353d6236
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j95 
y: j127 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j95 y: j127  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v79 
=== Succesors ===
trueSuccessor: v80 
falseSuccessor: v81 
=== Usages ===
=== Predecessor ===
j95 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v79 #trueSuccessor: v80 #falseSuccessor: v81  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a87 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a87  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 124
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
a87 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a87 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a87 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a87 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a87 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@4412d5cb
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v71 i85 i73 
=== Succesors ===
next: j88 
=== Usages ===
j88 
=== Predecessor ===
v80 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v71 i85 i73 #next: j88  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j88 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a87 
=== Succesors ===
next: v101 
=== Usages ===
j100 
=== Predecessor ===
a87 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a87 #next: v101  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
j88 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v136 
value: j127 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v136 value: j127 stateAfter: - lastLocationAccess: - #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j94 
index: - 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j94 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v141 
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v141 #next: v99  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
v92 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j100 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v98 
values: j94 j88 
=== Succesors ===
=== Usages ===
v140 v139 a55 v142 v143 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v98 values: j94 j88  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v99 v101 
=== Succesors ===
next: a55 
=== Usages ===
j100 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v99 v101 #next: a55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a55 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j100 
=== Succesors ===
next: j112 
=== Usages ===
a61 
=== Predecessor ===
v98 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j100 #next: j112  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j107 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v106 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v106  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j107 
index: - 
=== Succesors ===
=== Usages ===
j112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j107 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j112 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v138 
=== Succesors ===
next: v113 
=== Usages ===
v113 
=== Predecessor ===
a55 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v138 #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j100 
index: - 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j100 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v139 
value: j112 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
j112 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v139 value: j112 stateAfter: - lastLocationAccess: - #next: v117  <|@  <|@
f <@~|@floating>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j100 
index: - 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j100 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v140 
value: v131 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v140 value: v131 stateAfter: - lastLocationAccess: - #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j100 
index: - 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j100 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j53 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v142 
value: j53 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v142 value: j53 stateAfter: - lastLocationAccess: - #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j100 
index: - 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j100 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v143 
value: i21 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a61 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v143 value: i21 stateAfter: - lastLocationAccess: - #next: a61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a61 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a55 
=== Succesors ===
next: v62 
=== Usages ===
v39 ?26 v40 v46 v47 
=== Predecessor ===
v125 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a55 #next: v62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
a61 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v28  <|@  <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@320dd066
stamp: void
targetMethod: HotSpotMethod<StringBuffer.<init>()>
=== Inputs ===
arguments: a61 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a61  <|@  <|@
tid a23 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@7df79f97
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/StringBuffer;
type: HotSpotType<Ljava/lang/StringBuffer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?67 ?68 ?65 ?26 ?66 ?12 ?64 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a23 
materializedValue: a61 
=== Succesors ===
=== Usages ===
?65 ?66 ?12 ?68 ?67 ?64 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a23 materializedValue: a61  <|@  <|@
tid ?64 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 124
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - a23 
virtualObjectMappings: ?26 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a23 virtualObjectMappings: ?26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
bci: 4
polymorphic: false
stamp: void
targetMethod: Direct#StringBuffer.<init>
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v39 
stateDuring: ?64 
=== Succesors ===
next: a31 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v39 stateDuring: ?64 #next: a31  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: "a"
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object[String:"a"]
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a# Ljava/lang/StringBuffer;
signature: [Ljdk.vm.ci.meta.JavaType;@46127f01
stamp: void
targetMethod: HotSpotMethod<StringBuffer.append(String)>
=== Inputs ===
arguments: a61 a6 
=== Succesors ===
=== Usages ===
a31 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a61 a6  <|@  <|@
tid ?65 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 125
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a23 - 
virtualObjectMappings: ?26 
=== Succesors ===
=== Usages ===
a31 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a23 - virtualObjectMappings: ?26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a31 <|@
d <@d|@=== Debug Properties ===
bci: 11
polymorphic: false
stamp: a# Ljava/lang/StringBuffer;
targetMethod: Direct#StringBuffer.append
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v40 
stateDuring: ?65 
=== Succesors ===
next: a11 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v40 stateDuring: ?65 #next: a11  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 22
stableDimension: 0
stamp: i32 [22] ⇊0000000000000016 ⇈0000000000000016
stampKind: i32
value: int[22|0x16]
=== Inputs ===
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/lang/Integer;
signature: [Ljdk.vm.ci.meta.JavaType;@72c16921
stamp: void
targetMethod: HotSpotMethod<BoxesRunTime.boxToInteger(int)>
=== Inputs ===
arguments: i9 
=== Succesors ===
=== Usages ===
a11 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i9  <|@  <|@
tid ?66 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a23 - 
virtualObjectMappings: ?26 
=== Succesors ===
=== Usages ===
a11 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a23 - virtualObjectMappings: ?26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a11 <|@
d <@d|@=== Debug Properties ===
bci: 17
polymorphic: false
stamp: a# Ljava/lang/Integer;
targetMethod: Direct#BoxesRunTime.boxToInteger
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v41 
stateDuring: ?66 
=== Succesors ===
next: v144 
=== Usages ===
v144 v45 
=== Predecessor ===
a31 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v41 stateDuring: ?66 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid a135 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?12 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a23 - a135 
virtualObjectMappings: ?26 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a23 - a135 virtualObjectMappings: ?26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?12 
object: a11 
=== Succesors ===
next: a14 
=== Usages ===
=== Predecessor ===
a11 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?12 object: a11 #next: a14  <|@  <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@2e9309ff
stamp: void
targetMethod: HotSpotMethod<Integer.toString()>
=== Inputs ===
arguments: a11 
=== Succesors ===
=== Usages ===
a14 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a11  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a23 - 
virtualObjectMappings: ?26 
=== Succesors ===
=== Usages ===
a14 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a23 - virtualObjectMappings: ?26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a14 <|@
d <@d|@=== Debug Properties ===
bci: 20
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#Integer.toString
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v45 
stateDuring: ?67 
=== Succesors ===
next: a34 
=== Usages ===
v46 
=== Predecessor ===
v144 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v45 stateDuring: ?67 #next: a34  <|@  <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a# Ljava/lang/StringBuffer;
signature: [Ljdk.vm.ci.meta.JavaType;@6fd9309d
stamp: void
targetMethod: HotSpotMethod<StringBuffer.append(String)>
=== Inputs ===
arguments: a61 a14 
=== Succesors ===
=== Usages ===
a34 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a61 a14  <|@  <|@
tid ?68 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a23 - 
virtualObjectMappings: ?26 
=== Succesors ===
=== Usages ===
a34 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a23 - virtualObjectMappings: ?26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a34 <|@
d <@d|@=== Debug Properties ===
bci: 26
polymorphic: false
stamp: a# Ljava/lang/StringBuffer;
targetMethod: Direct#StringBuffer.append
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v46 
stateDuring: ?68 
=== Succesors ===
next: a37 
=== Usages ===
=== Predecessor ===
a14 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v46 stateDuring: ?68 #next: a37  <|@  <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@3ae6b010
stamp: void
targetMethod: HotSpotMethod<StringBuffer.toString()>
=== Inputs ===
arguments: a61 
=== Succesors ===
=== Usages ===
a37 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a61  <|@  <|@
tid ?69 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 128
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
a37 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a37 <|@
d <@d|@=== Debug Properties ===
bci: 31
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#StringBuffer.toString
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v47 
stateDuring: ?69 
=== Succesors ===
next: v20 
=== Usages ===
v20 
=== Predecessor ===
a34 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v47 stateDuring: ?69 #next: v20  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a37 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a37 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a37 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j74 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j74  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j74 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j94 
=== Usages ===
v136 v137 
=== Predecessor ===
v0 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j94  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j74 
index: - 
=== Succesors ===
=== Usages ===
j94 v96 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j94 <|@
result v0|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v136 
=== Succesors ===
next: j95 
=== Usages ===
j127 j100 v141 
=== Predecessor ===
j74 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v136 #next: j95  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j74 
index: - 
=== Succesors ===
=== Usages ===
j95 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j95 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v137 
=== Succesors ===
next: v82 
=== Usages ===
v79 
=== Predecessor ===
j94 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v137 #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid j126 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j127 <|@
result v1|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$20/1717124303@2636afc
stamp: i64
=== Inputs ===
x: j94 
y: j126 
=== Succesors ===
=== Usages ===
v79 v96 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j94 y: j126  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@353d6236
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j95 
y: j127 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j95 y: j127  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@7c40b7a1 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v79 
=== Succesors ===
trueSuccessor: v80 
falseSuccessor: v81 
=== Usages ===
=== Predecessor ===
j95 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v79 #trueSuccessor: v80 #falseSuccessor: v81  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3a761b8c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = LEA [v0|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a87 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a87  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 124
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
a87 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v71 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a87 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a87 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a87 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a87 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@4412d5cb
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v71 i85 i73 
=== Succesors ===
next: j88 
=== Usages ===
j88 
=== Predecessor ===
v80 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v71 i85 i73 #next: j88  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j88 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a87 
=== Succesors ===
next: v101 
=== Usages ===
j100 
=== Predecessor ===
a87 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a87 #next: v101  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
j88 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:124) [bci: 0]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11348d420:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v136 
value: j127 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v136 value: j127 stateAfter: - lastLocationAccess: - #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
result [v0|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j94 
index: - 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j94 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v141 
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v141 #next: v99  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
v92 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v0|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j100 <|@
result v4|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v98 
values: j94 j88 
=== Succesors ===
=== Usages ===
v140 v139 a55 v142 v143 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v98 values: j94 j88  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v99 v101 
=== Succesors ===
next: a55 
=== Usages ===
j100 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v99 v101 #next: a55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a55 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j100 
=== Succesors ===
next: j112 
=== Usages ===
a61 
=== Predecessor ===
v98 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j100 #next: j112  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j107 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v106 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v106  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
result [v6|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j107 
index: - 
=== Succesors ===
=== Usages ===
j112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j107 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j112 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v138 
=== Succesors ===
next: v113 
=== Usages ===
v113 
=== Predecessor ===
a55 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v138 #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
result [v4|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j100 
index: - 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j100 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v139 
value: j112 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
j112 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v139 value: j112 stateAfter: - lastLocationAccess: - #next: v117  <|@  <|@
f <@~|@floating>@ <|@
tid v140 <|@
result [v4|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j100 
index: - 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j100 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
result meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v140 
value: v131 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v140 value: v131 stateAfter: - lastLocationAccess: - #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
result [v4|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j100 
index: - 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j100 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j53 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v142 
value: j53 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v142 value: j53 stateAfter: - lastLocationAccess: - #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
result [v4|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j100 
index: - 
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j100 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v143 
value: i21 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a61 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v143 value: i21 stateAfter: - lastLocationAccess: - #next: a61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a61 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a55 
=== Succesors ===
next: v62 
=== Usages ===
v39 ?26 v40 v46 v47 
=== Predecessor ===
v125 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a55 #next: v62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
a61 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v28  <|@  <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@320dd066
stamp: void
targetMethod: HotSpotMethod<StringBuffer.<init>()>
=== Inputs ===
arguments: a61 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a61  <|@  <|@
tid a23 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@7df79f97
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/StringBuffer;
type: HotSpotType<Ljava/lang/StringBuffer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?67 ?68 ?65 ?26 ?66 ?12 ?64 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a23 
materializedValue: a61 
=== Succesors ===
=== Usages ===
?65 ?66 ?12 ?68 ?67 ?64 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a23 materializedValue: a61  <|@  <|@
tid ?64 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 124
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - a23 
virtualObjectMappings: ?26 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a23 virtualObjectMappings: ?26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
bci: 4
polymorphic: false
stamp: void
targetMethod: Direct#StringBuffer.<init>
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v39 
stateDuring: ?64 
=== Succesors ===
next: a31 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v39 stateDuring: ?64 #next: a31  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: "a"
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object[String:"a"]
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a# Ljava/lang/StringBuffer;
signature: [Ljdk.vm.ci.meta.JavaType;@46127f01
stamp: void
targetMethod: HotSpotMethod<StringBuffer.append(String)>
=== Inputs ===
arguments: a61 a6 
=== Succesors ===
=== Usages ===
a31 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a61 a6  <|@  <|@
tid ?65 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 125
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a23 - 
virtualObjectMappings: ?26 
=== Succesors ===
=== Usages ===
a31 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a23 - virtualObjectMappings: ?26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a31 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 11
polymorphic: false
stamp: a# Ljava/lang/StringBuffer;
targetMethod: Direct#StringBuffer.append
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v40 
stateDuring: ?65 
=== Succesors ===
next: a11 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v40 stateDuring: ?65 #next: a11  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[22|0x16] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 22
stableDimension: 0
stamp: i32 [22] ⇊0000000000000016 ⇈0000000000000016
stampKind: i32
value: int[22|0x16]
=== Inputs ===
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/lang/Integer;
signature: [Ljdk.vm.ci.meta.JavaType;@72c16921
stamp: void
targetMethod: HotSpotMethod<BoxesRunTime.boxToInteger(int)>
=== Inputs ===
arguments: i9 
=== Succesors ===
=== Usages ===
a11 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i9  <|@  <|@
tid ?66 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a23 - 
virtualObjectMappings: ?26 
=== Succesors ===
=== Usages ===
a11 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a23 - virtualObjectMappings: ?26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a11 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 17
polymorphic: false
stamp: a# Ljava/lang/Integer;
targetMethod: Direct#BoxesRunTime.boxToInteger
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v41 
stateDuring: ?66 
=== Succesors ===
next: v144 
=== Usages ===
v144 v45 
=== Predecessor ===
a31 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v41 stateDuring: ?66 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid a135 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?12 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a23 - a135 
virtualObjectMappings: ?26 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a23 - a135 virtualObjectMappings: ?26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?12 
object: a11 
=== Succesors ===
next: a14 
=== Usages ===
=== Predecessor ===
a11 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?12 object: a11 #next: a14  <|@  <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@2e9309ff
stamp: void
targetMethod: HotSpotMethod<Integer.toString()>
=== Inputs ===
arguments: a11 
=== Succesors ===
=== Usages ===
a14 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a11  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a23 - 
virtualObjectMappings: ?26 
=== Succesors ===
=== Usages ===
a14 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a23 - virtualObjectMappings: ?26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a14 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 20
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#Integer.toString
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v45 
stateDuring: ?67 
=== Succesors ===
next: a34 
=== Usages ===
v46 
=== Predecessor ===
v144 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v45 stateDuring: ?67 #next: a34  <|@  <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a# Ljava/lang/StringBuffer;
signature: [Ljdk.vm.ci.meta.JavaType;@6fd9309d
stamp: void
targetMethod: HotSpotMethod<StringBuffer.append(String)>
=== Inputs ===
arguments: a61 a14 
=== Succesors ===
=== Usages ===
a34 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a61 a14  <|@  <|@
tid ?68 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a23 - 
virtualObjectMappings: ?26 
=== Succesors ===
=== Usages ===
a34 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a23 - virtualObjectMappings: ?26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a34 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 26
polymorphic: false
stamp: a# Ljava/lang/StringBuffer;
targetMethod: Direct#StringBuffer.append
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v46 
stateDuring: ?68 
=== Succesors ===
next: a37 
=== Usages ===
=== Predecessor ===
a14 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v46 stateDuring: ?68 #next: a37  <|@  <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@3ae6b010
stamp: void
targetMethod: HotSpotMethod<StringBuffer.toString()>
=== Inputs ===
arguments: a61 
=== Succesors ===
=== Usages ===
a37 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a61  <|@  <|@
tid ?69 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 128
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
a37 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a37 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 31
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#StringBuffer.toString
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v47 
stateDuring: ?69 
=== Succesors ===
next: v20 
=== Usages ===
v20 
=== Predecessor ===
a34 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v47 stateDuring: ?69 #next: v20  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a37 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a37 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a37 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE v4|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v6|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[*]], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v4|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:124) [bci: 4]
stack: v5|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.<init>()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"a"] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:125) [bci: 11]
locals: - v5|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:11] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[22|0x16] <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - v5|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<BoxesRunTime.boxToInteger(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:17] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:126) [bci: 20]
stack: Object[null] 
locals: - v5|QWORD[.] - 
>@ <|@ instruction NULLCHECK [v10|QWORD[.]] state [bci:20] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:126) [bci: 20]
locals: - v5|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Integer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:127) [bci: 26]
locals: - v5|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:26] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:128) [bci: 31]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3a761b8c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = LEA [v0|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v0|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE v4|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v6|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[*]], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v4|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:124) [bci: 4]
stack: v5|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.<init>()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"a"] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:125) [bci: 11]
locals: - v5|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:11] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[22|0x16] <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - v5|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<BoxesRunTime.boxToInteger(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:17] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:126) [bci: 20]
stack: Object[null] 
locals: - v5|QWORD[.] - 
>@ <|@ instruction NULLCHECK [v10|QWORD[.]] state [bci:20] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:126) [bci: 20]
locals: - v5|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Integer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:127) [bci: 26]
locals: - v5|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:26] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:128) [bci: 31]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:124) [bci: 0]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11348d420:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #17         // java.lang.StringBuffer
     3: dup           
     4: invokespecial #0          // java.lang.StringBuffer.<init>:()void
     7: astore_1      
     8: aload_1       
     9: ldc           #23         // "a"
    11: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    14: pop           
    15: bipush        22
    17: invokestatic  #2          // scala.runtime.BoxesRunTime.boxToInteger:(int)java.lang.Integer
    20: invokevirtual #3          // java.lang.Object.toString:()java.lang.String
    23: astore_2      
    24: aload_1       
    25: aload_2       
    26: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    29: pop           
    30: aload_1       
    31: invokevirtual #4          // java.lang.StringBuffer.toString:()java.lang.String
    34: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3a761b8c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>} <|@ <|@
      nr   44  <|@ instruction r11|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed} <|@ <|@
      nr   50  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   54  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction stack:32|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:124) [bci: 4]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.<init>()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:4] <|@ <|@
      nr   60  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"a"] <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:125) [bci: 11]
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:11] <|@ <|@
      nr   66  <|@ instruction rsi|DWORD = MOVE input: int[22|0x16] <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<BoxesRunTime.boxToInteger(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:17] <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rax:0, stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:126) [bci: 20]
stack: Object[null] 
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:20] <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:126) [bci: 20]
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Integer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:20] <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:127) [bci: 26]
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:26] <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.StringOp.append(Bench.scala:128) [bci: 31]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:31] <|@ <|@
      nr   86  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   18  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   22  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.StringOp.append(Bench.scala:124) [bci: 0]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11348d420:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #17         // java.lang.StringBuffer
     3: dup           
     4: invokespecial #0          // java.lang.StringBuffer.<init>:()void
     7: astore_1      
     8: aload_1       
     9: ldc           #23         // "a"
    11: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    14: pop           
    15: bipush        22
    17: invokestatic  #2          // scala.runtime.BoxesRunTime.boxToInteger:(int)java.lang.Integer
    20: invokevirtual #3          // java.lang.Object.toString:()java.lang.String
    23: astore_2      
    24: aload_1       
    25: aload_2       
    26: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    29: pop           
    30: aload_1       
    31: invokevirtual #4          // java.lang.StringBuffer.toString:()java.lang.String
    34: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3a761b8c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>} <|@ <|@
      nr   44  <|@ instruction r11|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed} <|@ <|@
      nr   50  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   54  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction stack:32|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:124) [bci: 4]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.<init>()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:4] <|@ <|@
      nr   60  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"a"] <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:125) [bci: 11]
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:11] <|@ <|@
      nr   66  <|@ instruction rsi|DWORD = MOVE input: int[22|0x16] <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:126) [bci: 17]
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<BoxesRunTime.boxToInteger(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:17] <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rax:0, stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:126) [bci: 20]
stack: Object[null] 
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:20] <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:126) [bci: 20]
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Integer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:20] <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:127) [bci: 26]
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:26] <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.StringOp.append(Bench.scala:128) [bci: 31]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:31] <|@ <|@
      nr   86  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   18  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   22  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.StringOp.append(Bench.scala:124) [bci: 0]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11348d420:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #17         // java.lang.StringBuffer
     3: dup           
     4: invokespecial #0          // java.lang.StringBuffer.<init>:()void
     7: astore_1      
     8: aload_1       
     9: ldc           #23         // "a"
    11: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    14: pop           
    15: bipush        22
    17: invokestatic  #2          // scala.runtime.BoxesRunTime.boxToInteger:(int)java.lang.Integer
    20: invokevirtual #3          // java.lang.Object.toString:()java.lang.String
    23: astore_2      
    24: aload_1       
    25: aload_2       
    26: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    29: pop           
    30: aload_1       
    31: invokevirtual #4          // java.lang.StringBuffer.toString:()java.lang.String
    34: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410498b77604c8d56184d3b57700f87ae0000004d8957600f1886d80000004c8bd649bbaddeaddeaddeadde4d8b9ba80000004c891ec74608addeadde4c89660c44896614498bf24c8914240f1f440000e8000000009048baaddeaddeaddeadde488b34240f1f4000e80000000090be160000000f1f440000e800000000908500488bf00f1f440000e80000000090488b3424488bd0666690e80000000090488b3424660f1f440000e80000000090488b6c24104883c418850500000000c5f877c348beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0e93bffffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10c4a1f78, value=0x11339de60]:0x11339de60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3a761b8c slotKind: QWORD  <||@
  Comment 48 6 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 52 8 r10|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 56 10 CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 60 12 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 66 block B2 null  <||@
  Comment 66 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 66 30 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 70 32 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 77 34 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 77 36 JUMP ~[] destination: B2 -> B3  <||@
  Comment 77 block B3 null  <||@
  Comment 77 38 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 77 40 r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 80 42 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}  <||@
  Comment 80 {meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}}  <||@
  Comment 90 44 r11|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 97 46 MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD  <||@
  Comment 100 48 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}  <||@
  Comment 100 {meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}}  <||@
  Comment 107 50 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 111 52 MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 115 54 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 118 56 stack:32|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 122 58 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.<init>()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:4]  <||@
  Comment 122 9  <||@
  Comment 127 {HotSpotMethod<StringBuffer.<init>()>}  <||@
  Comment 132 [stack:0]at bench.StringOp.append(Bench.scala:124) [bci: 4, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |    <||@
  Comment 133 60 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"a"]  <||@
  Comment 133 {Object[String:"a"]}  <||@
  Comment 143 62 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 147 64 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:11]  <||@
  Comment 147 9  <||@
  Comment 151 {HotSpotMethod<StringBuffer.append(String)>}  <||@
  Comment 156 [stack:0]at bench.StringOp.append(Bench.scala:125) [bci: 11, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:32|QWORD[.]  |-   <||@
  Comment 157 66 rsi|DWORD = MOVE input: int[22|0x16]  <||@
  Comment 162 68 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<BoxesRunTime.boxToInteger(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:17]  <||@
  Comment 162 8  <||@
  Comment 167 {HotSpotMethod<BoxesRunTime.boxToInteger(int)>}  <||@
  Comment 172 [stack:0]at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:32|QWORD[.]  |-   <||@
  Comment 173 70 NULLCHECK [rax|QWORD[.]] state [bci:20]  <||@
  Comment 173 [rax:0, stack:0]at bench.StringOp.append(Bench.scala:126) [bci: 20, duringCall: false, rethrow: false]
              |0             |1                  |2 
     locals:  |-             |stack:32|QWORD[.]  |- 
     stack:   |Object[null]  |                   |    <||@
  Comment 173 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 175 72 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 178 74 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Integer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:20]  <||@
  Comment 178 9  <||@
  Comment 183 {HotSpotMethod<Integer.toString()>}  <||@
  Comment 188 [stack:0]at bench.StringOp.append(Bench.scala:126) [bci: 20, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:32|QWORD[.]  |-   <||@
  Comment 189 76 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 193 78 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 196 80 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:26]  <||@
  Comment 196 9  <||@
  Comment 199 {HotSpotMethod<StringBuffer.append(String)>}  <||@
  Comment 204 [stack:0]at bench.StringOp.append(Bench.scala:127) [bci: 26, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:32|QWORD[.]  |-   <||@
  Comment 205 82 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 209 84 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:31]  <||@
  Comment 209 9  <||@
  Comment 215 {HotSpotMethod<StringBuffer.toString()>}  <||@
  Comment 220 []at bench.StringOp.append(Bench.scala:128) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 221 86 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386  <||@
  Comment 230 12  <||@
  Comment 240 block B1 null  <||@
  Comment 240 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 240 16 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 240 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 250 18 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 255 20 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 260 22 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11348d420:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 260 {Stub<NewArrayStub.newArray>@0x11348d420:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 265 []at bench.StringOp.append(Bench.scala:124) [bci: 0, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 266 24 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 269 26 JUMP ~[] destination: B1 -> B3  <||@
  Comment 274 {Stub<ExceptionHandlerStub.exceptionHandler>@0x11348cfa0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 274 4  <||@
  Comment 280 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10c4a1f88, value=0x11339f500]:0x11339f500}  <||@
  Comment 280 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-47[bench.StringOp.append()]"
  method "HotSpotCompilation-47[bench.StringOp.append()]"
  date 1527289152901
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 11348df80 448b560849c1e203493bc20f85cffef0ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410498b77604c8d56184d3b57700f87ae0000004d8957600f1886d80000004c8bd649bb08d600c0070000004d8b9ba80000004c891ec74608c11a00f84c89660c44896614498bf24c8914240f1f440000e89c0000009048ba408600c006000000488b34240f1f4000e89300000090be160000000f1f440000e892000000908500488bf00f1f440000e89100000090488b3424488bd0666690e89000000090488b3424660f1f440000e88f00000090488b6c24104883c41885059a9fe7f7c5f877c348be680b00c007000000ba02000000b901000000e897f3ffff90488bf0e93bffffffe809efffff90e86314f1ff90f4f448bbe02b210e01000000e9a40ef1ff48bb6836210e01000000e9990af1ff48bbd0b0680e01000000e9458cf1ff48bb5089240e01000000e9770ef1ff48bb6836210e01000000e96c0af1ff48bb384d210e01000000e9590ef1fff4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10c4a1f78, value=0x11339de60]:0x11339de60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3a761b8c slotKind: QWORD  <||@
  Comment 48 6 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 52 8 r10|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 56 10 CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 60 12 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 66 block B2 null  <||@
  Comment 66 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 66 30 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 70 32 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 77 34 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 77 36 JUMP ~[] destination: B2 -> B3  <||@
  Comment 77 block B3 null  <||@
  Comment 77 38 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 77 40 r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 80 42 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}  <||@
  Comment 80 {meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}}  <||@
  Comment 90 44 r11|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 97 46 MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD  <||@
  Comment 100 48 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}  <||@
  Comment 100 {meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}}  <||@
  Comment 107 50 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 111 52 MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 115 54 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 118 56 stack:32|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 122 58 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.<init>()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:4]  <||@
  Comment 122 9  <||@
  Comment 127 {HotSpotMethod<StringBuffer.<init>()>}  <||@
  Comment 132 [stack:0]at bench.StringOp.append(Bench.scala:124) [bci: 4, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |    <||@
  Comment 133 60 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"a"]  <||@
  Comment 133 {Object[String:"a"]}  <||@
  Comment 143 62 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 147 64 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:11]  <||@
  Comment 147 9  <||@
  Comment 151 {HotSpotMethod<StringBuffer.append(String)>}  <||@
  Comment 156 [stack:0]at bench.StringOp.append(Bench.scala:125) [bci: 11, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:32|QWORD[.]  |-   <||@
  Comment 157 66 rsi|DWORD = MOVE input: int[22|0x16]  <||@
  Comment 162 68 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<BoxesRunTime.boxToInteger(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:17]  <||@
  Comment 162 8  <||@
  Comment 167 {HotSpotMethod<BoxesRunTime.boxToInteger(int)>}  <||@
  Comment 172 [stack:0]at bench.StringOp.append(Bench.scala:126) [bci: 17, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:32|QWORD[.]  |-   <||@
  Comment 173 70 NULLCHECK [rax|QWORD[.]] state [bci:20]  <||@
  Comment 173 [rax:0, stack:0]at bench.StringOp.append(Bench.scala:126) [bci: 20, duringCall: false, rethrow: false]
              |0             |1                  |2 
     locals:  |-             |stack:32|QWORD[.]  |- 
     stack:   |Object[null]  |                   |    <||@
  Comment 173 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 175 72 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 178 74 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Integer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:20]  <||@
  Comment 178 9  <||@
  Comment 183 {HotSpotMethod<Integer.toString()>}  <||@
  Comment 188 [stack:0]at bench.StringOp.append(Bench.scala:126) [bci: 20, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:32|QWORD[.]  |-   <||@
  Comment 189 76 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 193 78 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 196 80 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:26]  <||@
  Comment 196 9  <||@
  Comment 199 {HotSpotMethod<StringBuffer.append(String)>}  <||@
  Comment 204 [stack:0]at bench.StringOp.append(Bench.scala:127) [bci: 26, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:32|QWORD[.]  |-   <||@
  Comment 205 82 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 209 84 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386 state [bci:31]  <||@
  Comment 209 9  <||@
  Comment 215 {HotSpotMethod<StringBuffer.toString()>}  <||@
  Comment 220 []at bench.StringOp.append(Bench.scala:128) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 221 86 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53c34386  <||@
  Comment 230 12  <||@
  Comment 240 block B1 null  <||@
  Comment 240 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 240 16 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 240 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 250 18 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 255 20 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 260 22 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11348d420:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 260 {Stub<NewArrayStub.newArray>@0x11348d420:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 265 []at bench.StringOp.append(Bench.scala:124) [bci: 0, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 266 24 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 269 26 JUMP ~[] destination: B1 -> B3  <||@
  Comment 274 {Stub<ExceptionHandlerStub.exceptionHandler>@0x11348cfa0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 274 4  <||@
  Comment 280 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10c4a1f88, value=0x11339f500]:0x11339f500}  <||@
  Comment 280 5  <||@
  HexCodeFile>>> <|@
end_nmethod
