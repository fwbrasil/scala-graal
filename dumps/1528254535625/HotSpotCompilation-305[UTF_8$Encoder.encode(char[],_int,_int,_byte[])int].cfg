begin_compilation
  name " HotSpotCompilation-305[sun.nio.cs.UTF_8$Encoder.encode(char[], int, int, byte[])]"
  method "HotSpotCompilation-305[sun.nio.cs.UTF_8$Encoder.encode(char[], int, int, byte[])]"
  date 1528254536448
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v297 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/UTF_8$Encoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?55 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v432 ?55 v143 v430 v429 v438 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i7 i16 j263 v270 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i7 i244 v120 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: a# [B
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v434 ?55 v433 v428 v431 v435 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encode(char[], int, int, byte[])>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 704
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a5 - - - - - 
=== Succesors ===
=== Usages ===
v355 i422 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a5 - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v296 
falseSuccessor: v294 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v296 #falseSuccessor: v294  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid a352 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@480068046
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@480068046]
=== Inputs ===
=== Succesors ===
=== Usages ===
a354 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i351 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -36875
stableDimension: 0
stamp: i32 [-36875] ⇊00000000ffff6ff5 ⇈00000000ffff6ff5
stampKind: i32
value: int[-36875|0xffffffffffff6ff5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v296 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: i422 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i422  <|@  <|@
f <@~|@floating>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: - 
=== Succesors ===
=== Usages ===
i422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i422 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:706) [bci: 13]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v428 
=== Succesors ===
next: v397 
=== Usages ===
i244 v120 v290 v224 v204 v214 j276 
=== Predecessor ===
v294 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v428 #next: v397  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:706) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@62e48171
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i422 
y: i4 
=== Succesors ===
=== Usages ===
i244 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i422 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i244 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v120 
trueValue: i422 
falseValue: i4 
=== Succesors ===
=== Usages ===
v287 v19 j264 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v120 trueValue: i422 falseValue: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/4602968@7fc5a67d
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$13/13662743@12b18940
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i244 
=== Succesors ===
=== Usages ===
j266 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i244  <|@  <|@
f <@~|@floating>@ <|@
tid j265 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j266 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j266 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/425896696@23d89f54
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j264 
y: j265 
=== Succesors ===
=== Usages ===
j267 v279 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j264 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 40]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i42 i43 i63 i69 v287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@62e48171
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i244 
y: i41 
=== Succesors ===
=== Usages ===
v413 v397 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i244 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid a361 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1088284084
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1088284084]
=== Inputs ===
=== Succesors ===
=== Usages ===
a354 a354 a354 a354 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v393 
falseSuccessor: v396 
=== Usages ===
=== Predecessor ===
i422 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v393 #falseSuccessor: v396  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v391  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: i423 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i423  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v429 
=== Succesors ===
next: v405 
=== Usages ===
v270 j261 
=== Predecessor ===
v396 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v429 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/4602968@7fc5a67d
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$13/13662743@12b18940
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
j267 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j267 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/425896696@23d89f54
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j263 
y: j266 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j263 y: j266  <|@  <|@
f <@~|@floating>@ <|@
tid j261 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/650344688@405242fe
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$19/712647610@2717579f
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i423 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i423  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j267 
y: j261 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j267 y: j261  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -38171
stableDimension: 0
stamp: i32 [-38171] ⇊00000000ffff6ae5 ⇈00000000ffff6ae5
stampKind: i32
value: int[-38171|0xffffffffffff6ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i353 i353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v269 
=== Succesors ===
trueSuccessor: v404 
falseSuccessor: v401 
=== Usages ===
=== Predecessor ===
i423 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v269 #trueSuccessor: v404 #falseSuccessor: v401  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B42" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i423 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i423  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v270 
=== Succesors ===
trueSuccessor: v394 
falseSuccessor: v402 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v270 #trueSuccessor: v394 #falseSuccessor: v402  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v392 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v392  <|@  <|@
f <@*|@fixed>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
v394 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v391 v392 
=== Succesors ===
next: v413 
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v391 v392 #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:705) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i17 v290 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v409 
falseSuccessor: v412 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v409 #falseSuccessor: v412  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v407  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v409 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B41" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid j276 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/650344688@405242fe
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$19/712647610@2717579f
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i422 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i422  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j266 
y: j276 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j266 y: j276  <|@  <|@
f <@~|@floating>@ <|@
tid i363 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -43547
stableDimension: 0
stamp: i32 [-43547] ⇊00000000ffff55e5 ⇈00000000ffff55e5
stampKind: i32
value: int[-43547|0xffffffffffff55e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i353 i353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v279 
=== Succesors ===
trueSuccessor: v420 
falseSuccessor: v417 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v279 #trueSuccessor: v420 #falseSuccessor: v417  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i422 
y: i8 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i422 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v290 
=== Succesors ===
trueSuccessor: v418 
falseSuccessor: v410 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v290 #trueSuccessor: v418 #falseSuccessor: v410  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v437  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v418 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v408  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v410 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v407 v408 
=== Succesors ===
next: v14 
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v407 v408 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633997576733304592
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v15 
values: i3 i43 
=== Succesors ===
=== Usages ===
i43 i53 v430 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v15 values: i3 i43  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v15 
values: i8 i42 
=== Succesors ===
=== Usages ===
v431 v19 i42 i54 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v15 values: i8 i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 62.5331567775703
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v14 
=== Succesors ===
next: v26 
=== Usages ===
i16 i17 v22 v34 v49 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v14 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@62e48171
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i17 
y: i244 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i17 y: i244  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 24]
stamp: void
trueSuccessorProbability: 0.9840281920199296
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v22 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v20 #falseSuccessor: v22  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633857012693708781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: i424 
=== Usages ===
v275 v284 
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i424  <|@  <|@
f <@~|@floating>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v390 v20 
=== Succesors ===
=== Usages ===
i424 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v390 v20  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i16 
=== Succesors ===
=== Usages ===
i424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i16  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v275 
address: v430 
=== Succesors ===
next: v40 
=== Usages ===
v235 i237 
=== Predecessor ===
v20 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v275 address: v430 #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i424 
y: i234 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i424 y: i234  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
stamp: void
trueSuccessorProbability: 0.9999799717267542
=== Inputs ===
condition: v235 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v34 
=== Usages ===
=== Predecessor ===
i424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v235 #trueSuccessor: v30 #falseSuccessor: v34  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633856839244949264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v406 v20 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v406 v20  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: i17 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i237 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$63/82753632@7f52597c
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$64/314908466@90ea0a7
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 49]
resultBits: 8
stamp: i8
=== Inputs ===
value: i424 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v284 
address: v431 
value: i237 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v284 address: v431 value: i237 stateAfter: - lastLocationAccess: - #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/425896696@23d89f54
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 40]
stamp: i32
=== Inputs ===
x: i17 
y: i41 
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i17 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/425896696@23d89f54
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 45]
stamp: i32
=== Inputs ===
x: i16 
y: i41 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i16 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
stamp: void
=== Inputs ===
loopBegin: v15 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v15  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4563326391850783707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v33  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v34 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607171318079408342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v22 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v31 v33 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v31 v33 #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/425896696@23d89f54
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 2]
stamp: i32
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v56 ?55 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
v32 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B24" "B34" 
    successors "B21" "B40" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607335028326847234
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v52 
values: i16 i63 i63 
=== Succesors ===
=== Usages ===
?55 v56 i63 v432 v182 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v52 values: i16 i63 i63  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v52 
values: i17 i69 i118 
=== Succesors ===
=== Usages ===
?55 v114 i69 v204 i118 v433 i116 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v52 values: i17 i69 i118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0338861220927247
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v51 
=== Succesors ===
next: v62 
=== Usages ===
i53 i54 v59 v113 v119 v343 v338 v318 v323 v328 v333 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v51 #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@62e48171
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i7 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i53 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 57]
stamp: void
trueSuccessorProbability: 0.03277548790783136
=== Inputs ===
condition: v56 
=== Succesors ===
trueSuccessor: v57 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v56 #trueSuccessor: v57 #falseSuccessor: v59  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585044325894348874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: i425 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i425  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i425 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v438 
=== Succesors ===
next: v319 
=== Usages ===
v182 
=== Predecessor ===
v57 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v438 #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i425 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i53 y: i425  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v182 
=== Succesors ===
trueSuccessor: v315 
falseSuccessor: v318 
=== Usages ===
=== Predecessor ===
i425 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v182 #trueSuccessor: v315 #falseSuccessor: v318  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585044325894348874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
i426 
=== Predecessor ===
v319 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i422 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i54 y: i422  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v204 
=== Succesors ===
trueSuccessor: v320 
falseSuccessor: v323 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v204 #trueSuccessor: v320 #falseSuccessor: v323  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585044325894348874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
stamp: void
=== Inputs ===
=== Succesors ===
next: i426 
=== Usages ===
v212 v200 
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i426  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i53 
=== Succesors ===
=== Usages ===
i426 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i53  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i426 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v315 
address: v432 
=== Succesors ===
next: v68 
=== Usages ===
i190 
=== Predecessor ===
v320 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v315 address: v432 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/650344688@405242fe
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$19/712647610@2717579f
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i426 
=== Succesors ===
=== Usages ===
v65 i70 i102 v76 v131 v133 i85 i93 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i426  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 30]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i103 v65 i96 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:714) [bci: 73]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i190 
y: i28 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i190 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/425896696@23d89f54
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 62]
stamp: i32
=== Inputs ===
x: i53 
y: i41 
=== Succesors ===
=== Usages ===
i53 i53 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i53 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/425896696@23d89f54
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 80]
stamp: i32
=== Inputs ===
x: i54 
y: i41 
=== Succesors ===
=== Usages ===
v214 v434 i54 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i54 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: i54 
=== Succesors ===
=== Usages ===
v212 v200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:714) [bci: 73]
stamp: void
trueSuccessorProbability: 0.9424242424242424
=== Inputs ===
condition: v65 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v67 
=== Usages ===
=== Predecessor ===
i426 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v65 #trueSuccessor: v66 #falseSuccessor: v67  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4584763154402492709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$63/82753632@7f52597c
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$64/314908466@90ea0a7
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 85]
resultBits: 8
stamp: i8
=== Inputs ===
value: i190 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 86]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v320 
address: v433 
value: i70 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v320 address: v433 value: i70 stateAfter: - lastLocationAccess: - #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
loopBegin: v52 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v52  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v329 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v329  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 92]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] ⇊0000000000000800 ⇈0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i190 
y: i75 
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i190 y: i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v76 
=== Succesors ===
trueSuccessor: v328 
falseSuccessor: v325 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v76 #trueSuccessor: v328 #falseSuccessor: v325  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51475
stableDimension: 0
stamp: i32 [-51475] ⇊00000000ffff36ed ⇈00000000ffff36ed
stampKind: i32
value: int[-51475|0xffffffffffff36ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v328 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
stamp: void
=== Inputs ===
=== Succesors ===
next: v389 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i190 
y: i130 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i190 y: i130  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 142]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v385 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v385 #falseSuccessor: v388  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562136711010968737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
v385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562136711010968737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
rawvalue: 57344
stableDimension: 0
stamp: i32 [57344] ⇊000000000000e000 ⇈000000000000e000
stampKind: i32
value: int[57344|0xe000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 9]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i190 
y: i132 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i190 y: i132  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 142]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v133 
=== Succesors ===
trueSuccessor: v333 
falseSuccessor: v386 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v133 #trueSuccessor: v333 #falseSuccessor: v386  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 142]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51731
stableDimension: 0
stamp: i32 [-51731] ⇊00000000ffff35ed ⇈00000000ffff35ed
stampKind: i32
value: int[-51731|0xffffffffffff35ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v333 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562136711010968737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v384  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
v386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 142]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v383 v384 
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v383 v384 #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i69 
y: i422 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i69 y: i422  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v335 
falseSuccessor: v338 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v335 #falseSuccessor: v338  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
stamp: void
=== Inputs ===
=== Succesors ===
next: v344 
=== Usages ===
v222 
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 318]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/425896696@23d89f54
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 318]
stamp: i32
=== Inputs ===
x: i54 
y: i115 
=== Succesors ===
=== Usages ===
v224 v435 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i54 y: i115  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i116 
y: i422 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i116 y: i422  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v224 
=== Succesors ===
trueSuccessor: v340 
falseSuccessor: v343 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v224 #trueSuccessor: v340 #falseSuccessor: v343  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
stamp: void
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
v232 
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 308]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$65/2052649726@38968fdb
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 310]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i190 
y: i84 
=== Succesors ===
=== Usages ===
i86 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i190 y: i84  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 303]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] ⇊00000000000000e0 ⇈00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i86 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i86 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$66/1395351611@d588f15
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 311]
stamp: i32 [224 - 239] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
x: i85 
y: i83 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i85 y: i83  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$63/82753632@7f52597c
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$64/314908466@90ea0a7
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 312]
resultBits: 8
stamp: i8 [-32 - -17] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
value: i86 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i86  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v320 
address: v433 
value: i87 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v320 address: v433 value: i87 stateAfter: - lastLocationAccess: - #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: i69 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: i69  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 326]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i93 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$65/2052649726@38968fdb
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 328]
stamp: i32 [0 - 1023] ⇈00000000000003ff
=== Inputs ===
x: i190 
y: i92 
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i190 y: i92  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 329]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i95 i102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$67/1863736524@272155d0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 331]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i93 
y: i94 
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i93 y: i94  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$66/1395351611@d588f15
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 332]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i95 
y: i28 
=== Succesors ===
=== Usages ===
i97 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i95 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$63/82753632@7f52597c
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$64/314908466@90ea0a7
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 333]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i96 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v335 
address: v434 
value: i97 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v335 address: v434 value: i97 stateAfter: - lastLocationAccess: - #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: i116 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: i116  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$67/1863736524@272155d0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 349]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i190 
y: i94 
=== Succesors ===
=== Usages ===
i103 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i190 y: i94  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$66/1395351611@d588f15
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 350]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i102 
y: i28 
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i102 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$63/82753632@7f52597c
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$64/314908466@90ea0a7
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 351]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i103 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v340 
address: v435 
value: i104 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v340 address: v435 value: i104 stateAfter: - lastLocationAccess: - #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 339]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/425896696@23d89f54
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 339]
stamp: i32
=== Inputs ===
x: i54 
y: i117 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i54 y: i117  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:742) [bci: 353]
stamp: void
=== Inputs ===
loopBegin: v52 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v52  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid i381 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -57627
stableDimension: 0
stamp: i32 [-57627] ⇊00000000ffff1ee5 ⇈00000000ffff1ee5
stampKind: i32
value: int[-57627|0xffffffffffff1ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v343 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid i379 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -55067
stableDimension: 0
stamp: i32 [-55067] ⇊00000000ffff28e5 ⇈00000000ffff28e5
stampKind: i32
value: int[-55067|0xffffffffffff28e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v338 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -64795
stableDimension: 0
stamp: i32 [-64795] ⇊00000000ffff02e5 ⇈00000000ffff02e5
stampKind: i32
value: int[-64795|0xffffffffffff02e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v323 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v370  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -46875
stableDimension: 0
stamp: i32 [-46875] ⇊00000000ffff48e5 ⇈00000000ffff48e5
stampKind: i32
value: int[-46875|0xffffffffffff48e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v318 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" "B26" "B30" "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i367 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-64795 - -46875] ⇊00000000ffff00e5 ⇈00000000ffff7fed
valueDescription: i32
=== Inputs ===
merge: v364 
values: i371 i373 i375 i377 i379 i381 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v364 values: i371 i373 i375 i377 i379 i381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v370 v372 v374 v376 v378 v380 
=== Succesors ===
next: v369 
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v370 v372 v374 v376 v378 v380 #next: v369  <|@  <|@
tid ?55 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encode(char[], int, int, byte[])>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 712
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i53 - a5 i7 i54 - - - 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i53 - a5 i7 i54 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a358 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?55 
actionAndReason: i367 
speculation: a358 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?55 actionAndReason: i367 speculation: a358  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:743) [bci: 356]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v114  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:743) [bci: 358]
stamp: void
=== Inputs ===
result: i54 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i54 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v362  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v417 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v436  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v402 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v359  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v401 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" "B43" "B41" "B42" "B11" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i353 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-43547 - -35339] ⇊00000000ffff40e5 ⇈00000000ffff7ff5
valueDescription: i32
=== Inputs ===
merge: v349 
values: i351 i360 i363 i360 i363 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v349 values: i351 i360 i363 i360 i363  <|@  <|@
f <@~|@floating>@ <|@
tid a354 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v349 
values: a352 a361 a361 a361 a361 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v349 values: a352 a361 a361 a361 a361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v350 v359 v362 v436 v437 
=== Succesors ===
next: v355 
=== Usages ===
i353 a354 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v350 v359 v362 v436 v437 #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i353 
speculation: a354 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i353 speculation: a354  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v297 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/UTF_8$Encoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?55 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v432 ?55 v143 v430 v429 v438 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i7 i16 j263 v270 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i7 i244 v120 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: a# [B
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v434 ?55 v433 v428 v431 v435 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encode(char[], int, int, byte[])>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 704
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a5 - - - - - 
=== Succesors ===
=== Usages ===
v355 i422 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a5 - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v296 
falseSuccessor: v294 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v296 #falseSuccessor: v294  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@76bacda0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid a352 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@480068046
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@480068046]
=== Inputs ===
=== Succesors ===
=== Usages ===
a354 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i351 <|@
result int[-36875|0xffffffffffff6ff5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -36875
stableDimension: 0
stamp: i32 [-36875] ⇊00000000ffff6ff5 ⇈00000000ffff6ff5
stampKind: i32
value: int[-36875|0xffffffffffff6ff5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v296 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@480068046] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-36875|0xffffffffffff6ff5], v5|QWORD[.]] destination: B1 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: i422 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i422  <|@  <|@
f <@~|@floating>@ <|@
tid v428 <|@
result [v4|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: - 
=== Succesors ===
=== Usages ===
i422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i422 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:706) [bci: 13]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v428 
=== Succesors ===
next: v397 
=== Usages ===
i244 v120 v290 v224 v204 v214 j276 
=== Predecessor ===
v294 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v428 #next: v397  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:706) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@62e48171
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i422 
y: i4 
=== Succesors ===
=== Usages ===
i244 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i422 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i244 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v120 
trueValue: i422 
falseValue: i4 
=== Succesors ===
=== Usages ===
v287 v19 j264 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v120 trueValue: i422 falseValue: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/4602968@7fc5a67d
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$13/13662743@12b18940
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i244 
=== Succesors ===
=== Usages ===
j266 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i244  <|@  <|@
f <@~|@floating>@ <|@
tid j265 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j266 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j266 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/425896696@23d89f54
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j264 
y: j265 
=== Succesors ===
=== Usages ===
j267 v279 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j264 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 40]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i42 i43 i63 i69 v287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@62e48171
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i244 
y: i41 
=== Succesors ===
=== Usages ===
v413 v397 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i244 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid a361 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1088284084
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1088284084]
=== Inputs ===
=== Succesors ===
=== Usages ===
a354 a354 a354 a354 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v393 
falseSuccessor: v396 
=== Usages ===
=== Predecessor ===
i422 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v393 #falseSuccessor: v396  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV [v4|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v6|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVSXD v7|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1088284084] <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v391  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: i423 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i423  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i423 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v429 
=== Succesors ===
next: v405 
=== Usages ===
v270 j261 
=== Predecessor ===
v396 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v429 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/4602968@7fc5a67d
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$13/13662743@12b18940
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
j267 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j267 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/425896696@23d89f54
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j263 
y: j266 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j263 y: j266  <|@  <|@
f <@~|@floating>@ <|@
tid j261 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/650344688@405242fe
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$19/712647610@2717579f
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i423 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i423  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j267 
y: j261 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j267 y: j261  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
result int[-38171|0xffffffffffff6ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -38171
stableDimension: 0
stamp: i32 [-38171] ⇊00000000ffff6ae5 ⇈00000000ffff6ae5
stampKind: i32
value: int[-38171|0xffffffffffff6ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i353 i353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v269 
=== Succesors ===
trueSuccessor: v404 
falseSuccessor: v401 
=== Usages ===
=== Predecessor ===
i423 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v269 #trueSuccessor: v404 #falseSuccessor: v401  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B42" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i423 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i423  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v270 
=== Succesors ===
trueSuccessor: v394 
falseSuccessor: v402 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v270 #trueSuccessor: v394 #falseSuccessor: v402  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v392 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v392  <|@  <|@
f <@*|@fixed>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
v394 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v391 v392 
=== Succesors ===
next: v413 
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v391 v392 #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:705) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i17 v290 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v409 
falseSuccessor: v412 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v409 #falseSuccessor: v412  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v407  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v409 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B41" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid j276 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/650344688@405242fe
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$19/712647610@2717579f
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i422 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i422  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j266 
y: j276 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j266 y: j276  <|@  <|@
f <@~|@floating>@ <|@
tid i363 <|@
result int[-43547|0xffffffffffff55e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -43547
stableDimension: 0
stamp: i32 [-43547] ⇊00000000ffff55e5 ⇈00000000ffff55e5
stampKind: i32
value: int[-43547|0xffffffffffff55e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i353 i353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v279 
=== Succesors ===
trueSuccessor: v420 
falseSuccessor: v417 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v279 #trueSuccessor: v420 #falseSuccessor: v417  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i422 
y: i8 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i422 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v290 
=== Succesors ===
trueSuccessor: v418 
falseSuccessor: v410 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v290 #trueSuccessor: v418 #falseSuccessor: v410  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v437  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v418 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-43547|0xffffffffffff55e5], v10|QWORD[.]] destination: B11 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v408  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v410 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v407 v408 
=== Succesors ===
next: v14 
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v407 v408 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
result short[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD, int[0|0x0]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633997576733304592
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i16 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v15 
values: i3 i43 
=== Succesors ===
=== Usages ===
i43 i53 v430 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v15 values: i3 i43  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v15 
values: i8 i42 
=== Succesors ===
=== Usages ===
v431 v19 i42 i54 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v15 values: i8 i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 62.5331567775703
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v14 
=== Succesors ===
next: v26 
=== Usages ===
i16 i17 v22 v34 v49 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v14 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@62e48171
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i17 
y: i244 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i17 y: i244  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 24]
stamp: void
trueSuccessorProbability: 0.9840281920199296
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v22 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v20 #falseSuccessor: v22  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD, v17|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9840281920199296 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633857012693708781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: i424 
=== Usages ===
v275 v284 
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i424  <|@  <|@
f <@~|@floating>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v390 v20 
=== Succesors ===
=== Usages ===
i424 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v390 v20  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
result [v1|QWORD[.] + v16|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i16 
=== Succesors ===
=== Usages ===
i424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i16  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i424 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v275 
address: v430 
=== Succesors ===
next: v40 
=== Usages ===
v235 i237 
=== Predecessor ===
v20 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v275 address: v430 #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i424 
y: i234 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i424 y: i234  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
stamp: void
trueSuccessorProbability: 0.9999799717267542
=== Inputs ===
condition: v235 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v34 
=== Usages ===
=== Predecessor ===
i424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v235 #trueSuccessor: v30 #falseSuccessor: v34  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVSX [v1|QWORD[.] + v16|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999799717267542 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633856839244949264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v406 v20 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v406 v20  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
result [v4|QWORD[.] + v17|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: i17 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i237 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$63/82753632@7f52597c
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$64/314908466@90ea0a7
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 49]
resultBits: 8
stamp: i8
=== Inputs ===
value: i424 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v177 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@270612ff <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v284 
address: v431 
value: i237 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v284 address: v431 value: i237 stateAfter: - lastLocationAccess: - #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/425896696@23d89f54
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 40]
stamp: i32
=== Inputs ===
x: i17 
y: i41 
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i17 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/425896696@23d89f54
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 45]
stamp: i32
=== Inputs ===
x: i16 
y: i41 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i16 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
stamp: void
=== Inputs ===
loopBegin: v15 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v15  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[.] + v17|DWORD * 1 + 16], y: v18|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = INC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD, v19|DWORD] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4563326391850783707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v33  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v34 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607171318079408342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v22 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v31 v33 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v31 v33 #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/425896696@23d89f54
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 2]
stamp: i32
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v56 ?55 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
v32 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD, v17|DWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B24" "B34" 
    successors "B21" "B40" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607335028326847234
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i53 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v52 
values: i16 i63 i63 
=== Succesors ===
=== Usages ===
?55 v56 i63 v432 v182 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v52 values: i16 i63 i63  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v52 
values: i17 i69 i118 
=== Succesors ===
=== Usages ===
?55 v114 i69 v204 i118 v433 i116 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v52 values: i17 i69 i118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0338861220927247
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v51 
=== Succesors ===
next: v62 
=== Usages ===
i53 i54 v59 v113 v119 v343 v338 v318 v323 v328 v333 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v51 #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@62e48171
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i7 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i53 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 57]
stamp: void
trueSuccessorProbability: 0.03277548790783136
=== Inputs ===
condition: v56 
=== Succesors ===
trueSuccessor: v57 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v56 #trueSuccessor: v57 #falseSuccessor: v59  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD, v23|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.03277548790783136 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585044325894348874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: i425 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i425  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i425 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v438 
=== Succesors ===
next: v319 
=== Usages ===
v182 
=== Predecessor ===
v57 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v438 #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i425 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i53 y: i425  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@270612ff <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v182 
=== Succesors ===
trueSuccessor: v315 
falseSuccessor: v318 
=== Usages ===
=== Predecessor ===
i425 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v182 #trueSuccessor: v315 #falseSuccessor: v318  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585044325894348874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
i426 
=== Predecessor ===
v319 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i422 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i54 y: i422  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v204 
=== Succesors ===
trueSuccessor: v320 
falseSuccessor: v323 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v204 #trueSuccessor: v320 #falseSuccessor: v323  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585044325894348874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
stamp: void
=== Inputs ===
=== Succesors ===
next: i426 
=== Usages ===
v212 v200 
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i426  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
result [v1|QWORD[.] + v22|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i53 
=== Succesors ===
=== Usages ===
i426 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i53  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i426 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v315 
address: v432 
=== Succesors ===
next: v68 
=== Usages ===
i190 
=== Predecessor ===
v320 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v315 address: v432 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/650344688@405242fe
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$19/712647610@2717579f
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i426 
=== Succesors ===
=== Usages ===
v65 i70 i102 v76 v131 v133 i85 i93 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i426  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result int[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 30]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i103 v65 i96 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:714) [bci: 73]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i190 
y: i28 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i190 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/425896696@23d89f54
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 62]
stamp: i32
=== Inputs ===
x: i53 
y: i41 
=== Succesors ===
=== Usages ===
i53 i53 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i53 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/425896696@23d89f54
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 80]
stamp: i32
=== Inputs ===
x: i54 
y: i41 
=== Succesors ===
=== Usages ===
v214 v434 i54 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i54 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
result [v4|QWORD[.] + v23|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: i54 
=== Succesors ===
=== Usages ===
v212 v200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:714) [bci: 73]
stamp: void
trueSuccessorProbability: 0.9424242424242424
=== Inputs ===
condition: v65 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v67 
=== Usages ===
=== Predecessor ===
i426 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v65 #trueSuccessor: v66 #falseSuccessor: v67  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZX [v1|QWORD[.] + v22|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9424242424242424 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4584763154402492709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$63/82753632@7f52597c
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$64/314908466@90ea0a7
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 85]
resultBits: 8
stamp: i8
=== Inputs ===
value: i190 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@270612ff <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 86]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v320 
address: v433 
value: i70 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v320 address: v433 value: i70 stateAfter: - lastLocationAccess: - #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
loopBegin: v52 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v52  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[.] + v23|DWORD * 1 + 16], y: v24|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD, v26|DWORD] destination: B24 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v329 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v329  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
result int[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 92]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] ⇊0000000000000800 ⇈0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i190 
y: i75 
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i190 y: i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v76 
=== Succesors ===
trueSuccessor: v328 
falseSuccessor: v325 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v76 #trueSuccessor: v328 #falseSuccessor: v325  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
result int[-51475|0xffffffffffff36ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51475
stableDimension: 0
stamp: i32 [-51475] ⇊00000000ffff36ed ⇈00000000ffff36ed
stampKind: i32
value: int[-51475|0xffffffffffff36ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v328 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51475|0xffffffffffff36ed]] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
stamp: void
=== Inputs ===
=== Succesors ===
next: v389 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
result int[55296|0xd800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i190 
y: i130 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i190 y: i130  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 142]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v385 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v385 #falseSuccessor: v388  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562136711010968737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
v385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562136711010968737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
result int[57344|0xe000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
rawvalue: 57344
stableDimension: 0
stamp: i32 [57344] ⇊000000000000e000 ⇈000000000000e000
stampKind: i32
value: int[57344|0xe000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 9]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i190 
y: i132 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i190 y: i132  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 142]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v133 
=== Succesors ===
trueSuccessor: v333 
falseSuccessor: v386 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v133 #trueSuccessor: v333 #falseSuccessor: v386  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: 57344 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 142]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
result int[-51731|0xffffffffffff35ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51731
stableDimension: 0
stamp: i32 [-51731] ⇊00000000ffff35ed ⇈00000000ffff35ed
stampKind: i32
value: int[-51731|0xffffffffffff35ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v333 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51731|0xffffffffffff35ed]] destination: B30 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562136711010968737
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v384  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
v386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 142]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v383 v384 
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v383 v384 #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i69 
y: i422 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i69 y: i422  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v335 
falseSuccessor: v338 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v335 #falseSuccessor: v338  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
stamp: void
=== Inputs ===
=== Succesors ===
next: v344 
=== Usages ===
v222 
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 318]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/425896696@23d89f54
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 318]
stamp: i32
=== Inputs ===
x: i54 
y: i115 
=== Succesors ===
=== Usages ===
v224 v435 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i54 y: i115  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69809ef9
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i116 
y: i422 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i116 y: i422  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v224 
=== Succesors ===
trueSuccessor: v340 
falseSuccessor: v343 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v224 #trueSuccessor: v340 #falseSuccessor: v343  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA [v23|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
stamp: void
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
v232 
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 308]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$65/2052649726@38968fdb
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 310]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i190 
y: i84 
=== Succesors ===
=== Usages ===
i86 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i190 y: i84  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
result int[224|0xe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 303]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] ⇊00000000000000e0 ⇈00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i86 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i86 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$66/1395351611@d588f15
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 311]
stamp: i32 [224 - 239] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
x: i85 
y: i83 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i85 y: i83  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$63/82753632@7f52597c
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$64/314908466@90ea0a7
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 312]
resultBits: 8
stamp: i8 [-32 - -17] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
value: i86 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i86  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@270612ff <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v320 
address: v433 
value: i87 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v320 address: v433 value: i87 stateAfter: - lastLocationAccess: - #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
result [v4|QWORD[.] + v26|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: i69 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: i69  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 326]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i93 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$65/2052649726@38968fdb
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 328]
stamp: i32 [0 - 1023] ⇈00000000000003ff
=== Inputs ===
x: i190 
y: i92 
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i190 y: i92  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 329]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i95 i102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$67/1863736524@272155d0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 331]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i93 
y: i94 
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i93 y: i94  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$66/1395351611@d588f15
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 332]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i95 
y: i28 
=== Succesors ===
=== Usages ===
i97 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i95 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$63/82753632@7f52597c
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$64/314908466@90ea0a7
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 333]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i96 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v222 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@270612ff <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v335 
address: v434 
value: i97 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v335 address: v434 value: i97 stateAfter: - lastLocationAccess: - #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
result [v4|QWORD[.] + v27|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: i116 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: i116  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$67/1863736524@272155d0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 349]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i190 
y: i94 
=== Succesors ===
=== Usages ===
i103 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i190 y: i94  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$66/1395351611@d588f15
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 350]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i102 
y: i28 
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i102 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$63/82753632@7f52597c
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$64/314908466@90ea0a7
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 351]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i103 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@270612ff <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v340 
address: v435 
value: i104 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v340 address: v435 value: i104 stateAfter: - lastLocationAccess: - #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 339]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/425896696@23d89f54
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 339]
stamp: i32
=== Inputs ===
x: i54 
y: i117 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i54 y: i117  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:742) [bci: 353]
stamp: void
=== Inputs ===
loopBegin: v52 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v52  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHR v24|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = OR v28|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[.] + v23|DWORD * 1 + 16], y: v29|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SHR v24|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = AND v30|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = OR v31|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[.] + v26|DWORD * 1 + 16], y: v32|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND v24|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = OR v33|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[.] + v27|DWORD * 1 + 16], y: v34|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA [v23|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD, v35|DWORD] destination: B34 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid i381 <|@
result int[-57627|0xffffffffffff1ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -57627
stableDimension: 0
stamp: i32 [-57627] ⇊00000000ffff1ee5 ⇈00000000ffff1ee5
stampKind: i32
value: int[-57627|0xffffffffffff1ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v343 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-57627|0xffffffffffff1ee5]] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid i379 <|@
result int[-55067|0xffffffffffff28e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -55067
stableDimension: 0
stamp: i32 [-55067] ⇊00000000ffff28e5 ⇈00000000ffff28e5
stampKind: i32
value: int[-55067|0xffffffffffff28e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v338 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-55067|0xffffffffffff28e5]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
result int[-64795|0xffffffffffff02e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -64795
stableDimension: 0
stamp: i32 [-64795] ⇊00000000ffff02e5 ⇈00000000ffff02e5
stampKind: i32
value: int[-64795|0xffffffffffff02e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v323 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-64795|0xffffffffffff02e5]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v370  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
result int[-46875|0xffffffffffff48e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -46875
stableDimension: 0
stamp: i32 [-46875] ⇊00000000ffff48e5 ⇈00000000ffff48e5
stampKind: i32
value: int[-46875|0xffffffffffff48e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v318 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46875|0xffffffffffff48e5]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" "B26" "B30" "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i367 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-64795 - -46875] ⇊00000000ffff00e5 ⇈00000000ffff7fed
valueDescription: i32
=== Inputs ===
merge: v364 
values: i371 i373 i375 i377 i379 i381 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v364 values: i371 i373 i375 i377 i379 i381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v370 v372 v374 v376 v378 v380 
=== Succesors ===
next: v369 
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v370 v372 v374 v376 v378 v380 #next: v369  <|@  <|@
tid ?55 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encode(char[], int, int, byte[])>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 712
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i53 - a5 i7 i54 - - - 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i53 - a5 i7 i54 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a358 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?55 
actionAndReason: i367 
speculation: a358 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?55 actionAndReason: i367 speculation: a358  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v22|DWORD - v4|QWORD[.] v21|DWORD v23|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:54] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:743) [bci: 356]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v114  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:743) [bci: 358]
stamp: void
=== Inputs ===
result: i54 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i54 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@1b4c15f3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v362  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v417 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-43547|0xffffffffffff55e5], v10|QWORD[.]] destination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v436  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v402 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-38171|0xffffffffffff6ae5], v10|QWORD[.]] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v359  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v401 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-38171|0xffffffffffff6ae5], v10|QWORD[.]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" "B43" "B41" "B42" "B11" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i353 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-43547 - -35339] ⇊00000000ffff40e5 ⇈00000000ffff7ff5
valueDescription: i32
=== Inputs ===
merge: v349 
values: i351 i360 i363 i360 i363 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v349 values: i351 i360 i363 i360 i363  <|@  <|@
f <@~|@floating>@ <|@
tid a354 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v349 
values: a352 a361 a361 a361 a361 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v349 values: a352 a361 a361 a361 a361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v350 v359 v362 v436 v437 
=== Succesors ===
next: v355 
=== Usages ===
i353 a354 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v350 v359 v362 v436 v437 #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i353 
speculation: a354 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i353 speculation: a354  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@76bacda0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV [v4|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v6|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVSXD v7|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B42" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B41" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD, int[0|0x0]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633857012693708781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVSX [v1|QWORD[.] + v16|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999799717267542 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633856839244949264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[.] + v17|DWORD * 1 + 16], y: v18|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = INC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD, v19|DWORD] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633997576733304592
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD, v17|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9840281920199296 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607171318079408342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD, v17|DWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B24" "B34" 
    successors "B21" "B40" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607335028326847234
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD, v23|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.03277548790783136 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585044325894348874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585044325894348874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585044325894348874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZX [v1|QWORD[.] + v22|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9424242424242424 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4584763154402492709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[.] + v23|DWORD * 1 + 16], y: v24|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD, v26|DWORD] destination: B24 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562136711010968737
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: 57344 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562136711010968737
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA [v23|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHR v24|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = OR v28|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[.] + v23|DWORD * 1 + 16], y: v29|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SHR v24|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = AND v30|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = OR v31|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[.] + v26|DWORD * 1 + 16], y: v32|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND v24|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = OR v33|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[.] + v27|DWORD * 1 + 16], y: v34|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA [v23|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD, v35|DWORD] destination: B34 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562136711010968737
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@1b4c15f3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4563326391850783707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1088284084] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-43547|0xffffffffffff55e5], v39|QWORD[.]] destination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" "B43" "B41" "B42" "B11" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-55067|0xffffffffffff28e5]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" "B26" "B30" "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v22|DWORD - v4|QWORD[.] v21|DWORD v23|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:54] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51475|0xffffffffffff36ed]] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1088284084] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-38171|0xffffffffffff6ae5], v41|QWORD[.]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46875|0xffffffffffff48e5]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51731|0xffffffffffff35ed]] destination: B30 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1088284084] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-43547|0xffffffffffff55e5], v40|QWORD[.]] destination: B11 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1088284084] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-38171|0xffffffffffff6ae5], v42|QWORD[.]] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-64795|0xffffffffffff02e5]] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@480068046] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-36875|0xffffffffffff6ff5], v5|QWORD[.]] destination: B1 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-57627|0xffffffffffff1ee5]] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: iadd          
     3: istore        5
     5: iconst_0      
     6: istore        6
     8: iload         6
    10: iload_3       
    11: aload         4
    13: arraylength   
    14: invokestatic  #16         // java.lang.Math.min:(int, int)int
    17: iadd          
    18: istore        7
    20: iload         6
    22: iload         7
    24: if_icmpge     54
    27: aload_1       
    28: iload_2       
    29: caload        
    30: sipush        128
    33: if_icmpge     54
    36: aload         4
    38: iload         6
    40: iinc          
    43: aload_1       
    44: iload_2       
    45: iinc          
    48: caload        
    49: i2b           
    50: bastore       
    51: goto          20
    54: iload_2       
    55: iload         5
    57: if_icmpge     356
    60: aload_1       
    61: iload_2       
    62: iinc          
    65: caload        
    66: istore        8
    68: iload         8
    70: sipush        128
    73: if_icmpge     90
    76: aload         4
    78: iload         6
    80: iinc          
    83: iload         8
    85: i2b           
    86: bastore       
    87: goto          353
    90: iload         8
    92: sipush        2048
    95: if_icmpge     137
    98: aload         4
   100: iload         6
   102: iinc          
   105: sipush        192
   108: iload         8
   110: bipush        6
   112: ishr          
   113: ior           
   114: i2b           
   115: bastore       
   116: aload         4
   118: iload         6
   120: iinc          
   123: sipush        128
   126: iload         8
   128: bipush        63
   130: iand          
   131: ior           
   132: i2b           
   133: bastore       
   134: goto          353
   137: iload         8
   139: invokestatic  #3          // java.lang.Character.isSurrogate:(char)boolean
   142: ifeq          296
   145: aload_0       
   146: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   149: ifnonnull     163
   152: aload_0       
   153: new           #22         // sun.nio.cs.Surrogate$Parser
   156: dup           
   157: invokespecial #19         // sun.nio.cs.Surrogate$Parser.<init>:()void
   160: putfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   163: aload_0       
   164: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   167: iload         8
   169: aload_1       
   170: iload_2       
   171: iconst_1      
   172: isub          
   173: iload         5
   175: invokevirtual #20         // sun.nio.cs.Surrogate$Parser.parse:(char, char[], int, int)int
   178: istore        9
   180: iload         9
   182: ifge          212
   185: aload_0       
   186: invokevirtual #34         // java.nio.charset.CharsetEncoder.malformedInputAction:()java.nio.charset.CodingErrorAction
   189: getstatic     #35         // java.nio.charset.CodingErrorAction.REPLACE:java.nio.charset.CodingErrorAction
   192: if_acmpeq     197
   195: iconst_m1     
   196: ireturn       
   197: aload         4
   199: iload         6
   201: iinc          
   204: aload_0       
   205: getfield      #2          // repl:byte
   208: bastore       
   209: goto          293
   212: aload         4
   214: iload         6
   216: iinc          
   219: sipush        240
   222: iload         9
   224: bipush        18
   226: ishr          
   227: ior           
   228: i2b           
   229: bastore       
   230: aload         4
   232: iload         6
   234: iinc          
   237: sipush        128
   240: iload         9
   242: bipush        12
   244: ishr          
   245: bipush        63
   247: iand          
   248: ior           
   249: i2b           
   250: bastore       
   251: aload         4
   253: iload         6
   255: iinc          
   258: sipush        128
   261: iload         9
   263: bipush        6
   265: ishr          
   266: bipush        63
   268: iand          
   269: ior           
   270: i2b           
   271: bastore       
   272: aload         4
   274: iload         6
   276: iinc          
   279: sipush        128
   282: iload         9
   284: bipush        63
   286: iand          
   287: ior           
   288: i2b           
   289: bastore       
   290: iinc          
   293: goto          353
   296: aload         4
   298: iload         6
   300: iinc          
   303: sipush        224
   306: iload         8
   308: bipush        12
   310: ishr          
   311: ior           
   312: i2b           
   313: bastore       
   314: aload         4
   316: iload         6
   318: iinc          
   321: sipush        128
   324: iload         8
   326: bipush        6
   328: ishr          
   329: bipush        63
   331: iand          
   332: ior           
   333: i2b           
   334: bastore       
   335: aload         4
   337: iload         6
   339: iinc          
   342: sipush        128
   345: iload         8
   347: bipush        63
   349: iand          
   350: ior           
   351: i2b           
   352: bastore       
   353: goto          54
   356: iload         6
   358: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@76bacda0 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [r9|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr   28  <|@ instruction r11|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr   32  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rbx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction rdi|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   42  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction rbp|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B42" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B41" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633857012693708781
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  104  <|@ instruction rdi|DWORD = MOVSX [rdx|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP rdi|DWORD y: 128 size: WORD <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 0.9999799717267542 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633856839244949264
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction MOVB (x: [r9|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr  114  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633997576733304592
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.9840281920199296 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4607171318079408342
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B24" "B34" 
    successors "B21" "B40" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607335028326847234
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  132  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.03277548790783136 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585044325894348874
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction CMP (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585044325894348874
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585044325894348874
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rax|DWORD = MOVZX [rdx|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  152  <|@ instruction rbx|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  154  <|@ instruction rdi|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  156  <|@ instruction CMP rax|DWORD y: 128 size: DWORD <|@ <|@
      nr  158  <|@ instruction BRANCH trueDestinationProbability: 0.9424242424242424 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4584763154402492709
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction MOVB (x: [r9|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B24 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction CMP rax|DWORD y: 2048 size: DWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction CMP rax|DWORD y: 55296 size: DWORD <|@ <|@
      nr  176  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562136711010968737
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction CMP rax|DWORD y: 57344 size: DWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562136711010968737
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction rbp|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction r11|DWORD = SHR rax|DWORD y: 12 size: DWORD <|@ <|@
      nr  210  <|@ instruction r11|DWORD = OR r11|DWORD y: 224 size: DWORD <|@ <|@
      nr  212  <|@ instruction MOVB (x: [r9|QWORD[.] + r8|DWORD * 1 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr  214  <|@ instruction r11|DWORD = SHR rax|DWORD y: 6 size: DWORD <|@ <|@
      nr  216  <|@ instruction r11|DWORD = AND r11|DWORD y: 63 size: DWORD <|@ <|@
      nr  218  <|@ instruction r11|DWORD = OR r11|DWORD y: 128 size: DWORD <|@ <|@
      nr  220  <|@ instruction MOVB (x: [r9|QWORD[.] + rdi|DWORD * 1 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr  222  <|@ instruction rax|DWORD = AND rax|DWORD y: 63 size: DWORD <|@ <|@
      nr  224  <|@ instruction rax|DWORD = OR rax|DWORD y: 128 size: DWORD <|@ <|@
      nr  226  <|@ instruction MOVB (x: [r9|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  228  <|@ instruction r8|DWORD = LEA [r8|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B34 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562136711010968737
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@1b4c15f3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4563326391850783707
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1088284084] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-43547|0xffffffffffff55e5] // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" "B43" "B41" "B42" "B11" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-55067|0xffffffffffff28e5] // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" "B26" "B30" "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  280  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD - r9|QWORD[.] rcx|DWORD r8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:54] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-51475|0xffffffffffff36ed] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1088284084] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-38171|0xffffffffffff6ae5] // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-46875|0xffffffffffff48e5] // MoveResolver resolve mapping <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-51731|0xffffffffffff35ed] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B30 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1088284084] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-43547|0xffffffffffff55e5] // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B11 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1088284084] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-38171|0xffffffffffff6ae5] // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-64795|0xffffffffffff02e5] // MoveResolver resolve mapping <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@480068046] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-36875|0xffffffffffff6ff5] // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B1 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-57627|0xffffffffffff1ee5] // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: iadd          
     3: istore        5
     5: iconst_0      
     6: istore        6
     8: iload         6
    10: iload_3       
    11: aload         4
    13: arraylength   
    14: invokestatic  #16         // java.lang.Math.min:(int, int)int
    17: iadd          
    18: istore        7
    20: iload         6
    22: iload         7
    24: if_icmpge     54
    27: aload_1       
    28: iload_2       
    29: caload        
    30: sipush        128
    33: if_icmpge     54
    36: aload         4
    38: iload         6
    40: iinc          
    43: aload_1       
    44: iload_2       
    45: iinc          
    48: caload        
    49: i2b           
    50: bastore       
    51: goto          20
    54: iload_2       
    55: iload         5
    57: if_icmpge     356
    60: aload_1       
    61: iload_2       
    62: iinc          
    65: caload        
    66: istore        8
    68: iload         8
    70: sipush        128
    73: if_icmpge     90
    76: aload         4
    78: iload         6
    80: iinc          
    83: iload         8
    85: i2b           
    86: bastore       
    87: goto          353
    90: iload         8
    92: sipush        2048
    95: if_icmpge     137
    98: aload         4
   100: iload         6
   102: iinc          
   105: sipush        192
   108: iload         8
   110: bipush        6
   112: ishr          
   113: ior           
   114: i2b           
   115: bastore       
   116: aload         4
   118: iload         6
   120: iinc          
   123: sipush        128
   126: iload         8
   128: bipush        63
   130: iand          
   131: ior           
   132: i2b           
   133: bastore       
   134: goto          353
   137: iload         8
   139: invokestatic  #3          // java.lang.Character.isSurrogate:(char)boolean
   142: ifeq          296
   145: aload_0       
   146: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   149: ifnonnull     163
   152: aload_0       
   153: new           #22         // sun.nio.cs.Surrogate$Parser
   156: dup           
   157: invokespecial #19         // sun.nio.cs.Surrogate$Parser.<init>:()void
   160: putfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   163: aload_0       
   164: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   167: iload         8
   169: aload_1       
   170: iload_2       
   171: iconst_1      
   172: isub          
   173: iload         5
   175: invokevirtual #20         // sun.nio.cs.Surrogate$Parser.parse:(char, char[], int, int)int
   178: istore        9
   180: iload         9
   182: ifge          212
   185: aload_0       
   186: invokevirtual #34         // java.nio.charset.CharsetEncoder.malformedInputAction:()java.nio.charset.CodingErrorAction
   189: getstatic     #35         // java.nio.charset.CodingErrorAction.REPLACE:java.nio.charset.CodingErrorAction
   192: if_acmpeq     197
   195: iconst_m1     
   196: ireturn       
   197: aload         4
   199: iload         6
   201: iinc          
   204: aload_0       
   205: getfield      #2          // repl:byte
   208: bastore       
   209: goto          293
   212: aload         4
   214: iload         6
   216: iinc          
   219: sipush        240
   222: iload         9
   224: bipush        18
   226: ishr          
   227: ior           
   228: i2b           
   229: bastore       
   230: aload         4
   232: iload         6
   234: iinc          
   237: sipush        128
   240: iload         9
   242: bipush        12
   244: ishr          
   245: bipush        63
   247: iand          
   248: ior           
   249: i2b           
   250: bastore       
   251: aload         4
   253: iload         6
   255: iinc          
   258: sipush        128
   261: iload         9
   263: bipush        6
   265: ishr          
   266: bipush        63
   268: iand          
   269: ior           
   270: i2b           
   271: bastore       
   272: aload         4
   274: iload         6
   276: iinc          
   279: sipush        128
   282: iload         9
   284: bipush        63
   286: iand          
   287: ior           
   288: i2b           
   289: bastore       
   290: iinc          
   293: goto          353
   296: aload         4
   298: iload         6
   300: iinc          
   303: sipush        224
   306: iload         8
   308: bipush        12
   310: ishr          
   311: ior           
   312: i2b           
   313: bastore       
   314: aload         4
   316: iload         6
   318: iinc          
   321: sipush        128
   324: iload         8
   326: bipush        6
   328: ishr          
   329: bipush        63
   331: iand          
   332: ior           
   333: i2b           
   334: bastore       
   335: aload         4
   337: iload         6
   339: iinc          
   342: sipush        128
   345: iload         8
   347: bipush        63
   349: iand          
   350: ior           
   351: i2b           
   352: bastore       
   353: goto          54
   356: iload         6
   358: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@76bacda0 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [r9|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr   28  <|@ instruction r11|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr   32  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B43" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rbx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction rdi|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   42  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction rbp|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B13" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B13 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B41" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633857012693708781
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  104  <|@ instruction rdi|DWORD = MOVSX [rdx|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP rdi|DWORD y: 128 size: WORD <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 0.9999799717267542 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633856839244949264
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction MOVB (x: [r9|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr  114  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633997576733304592
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.9840281920199296 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B24" "B34" 
    successors "B21" "B40" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607335028326847234
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  132  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.03277548790783136 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585044325894348874
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction CMP (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585044325894348874
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585044325894348874
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rax|DWORD = MOVZX [rdx|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  152  <|@ instruction rbx|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  154  <|@ instruction rdi|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  156  <|@ instruction CMP rax|DWORD y: 128 size: DWORD <|@ <|@
      nr  158  <|@ instruction BRANCH trueDestinationProbability: 0.9424242424242424 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4584763154402492709
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction MOVB (x: [r9|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B24 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction CMP rax|DWORD y: 2048 size: DWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction CMP rax|DWORD y: 55296 size: DWORD <|@ <|@
      nr  176  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B32 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4562136711010968737
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction CMP rax|DWORD y: 57344 size: DWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B33" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction rbp|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  202  <|@ instruction CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566640310638339233
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction r11|DWORD = SHR rax|DWORD y: 12 size: DWORD <|@ <|@
      nr  210  <|@ instruction r11|DWORD = OR r11|DWORD y: 224 size: DWORD <|@ <|@
      nr  212  <|@ instruction MOVB (x: [r9|QWORD[.] + r8|DWORD * 1 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr  214  <|@ instruction r11|DWORD = SHR rax|DWORD y: 6 size: DWORD <|@ <|@
      nr  216  <|@ instruction r11|DWORD = AND r11|DWORD y: 63 size: DWORD <|@ <|@
      nr  218  <|@ instruction r11|DWORD = OR r11|DWORD y: 128 size: DWORD <|@ <|@
      nr  220  <|@ instruction MOVB (x: [r9|QWORD[.] + rdi|DWORD * 1 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr  222  <|@ instruction rax|DWORD = AND rax|DWORD y: 63 size: DWORD <|@ <|@
      nr  224  <|@ instruction rax|DWORD = OR rax|DWORD y: 128 size: DWORD <|@ <|@
      nr  226  <|@ instruction MOVB (x: [r9|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  228  <|@ instruction r8|DWORD = LEA [r8|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B34 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@1b4c15f3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1088284084] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-43547|0xffffffffffff55e5] // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B1" "B43" "B41" "B42" "B11" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-55067|0xffffffffffff28e5] // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" "B26" "B30" "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  280  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  282  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD - r9|QWORD[.] rcx|DWORD r8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:54] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-51475|0xffffffffffff36ed] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1088284084] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-38171|0xffffffffffff6ae5] // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-46875|0xffffffffffff48e5] // MoveResolver resolve mapping <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-51731|0xffffffffffff35ed] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B30 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1088284084] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-43547|0xffffffffffff55e5] // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B11 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1088284084] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-38171|0xffffffffffff6ae5] // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-64795|0xffffffffffff02e5] // MoveResolver resolve mapping <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@480068046] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-36875|0xffffffffffff6ff5] // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B1 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-57627|0xffffffffffff1ee5] // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B35 -> B39 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: iadd          
     3: istore        5
     5: iconst_0      
     6: istore        6
     8: iload         6
    10: iload_3       
    11: aload         4
    13: arraylength   
    14: invokestatic  #16         // java.lang.Math.min:(int, int)int
    17: iadd          
    18: istore        7
    20: iload         6
    22: iload         7
    24: if_icmpge     54
    27: aload_1       
    28: iload_2       
    29: caload        
    30: sipush        128
    33: if_icmpge     54
    36: aload         4
    38: iload         6
    40: iinc          
    43: aload_1       
    44: iload_2       
    45: iinc          
    48: caload        
    49: i2b           
    50: bastore       
    51: goto          20
    54: iload_2       
    55: iload         5
    57: if_icmpge     356
    60: aload_1       
    61: iload_2       
    62: iinc          
    65: caload        
    66: istore        8
    68: iload         8
    70: sipush        128
    73: if_icmpge     90
    76: aload         4
    78: iload         6
    80: iinc          
    83: iload         8
    85: i2b           
    86: bastore       
    87: goto          353
    90: iload         8
    92: sipush        2048
    95: if_icmpge     137
    98: aload         4
   100: iload         6
   102: iinc          
   105: sipush        192
   108: iload         8
   110: bipush        6
   112: ishr          
   113: ior           
   114: i2b           
   115: bastore       
   116: aload         4
   118: iload         6
   120: iinc          
   123: sipush        128
   126: iload         8
   128: bipush        63
   130: iand          
   131: ior           
   132: i2b           
   133: bastore       
   134: goto          353
   137: iload         8
   139: invokestatic  #3          // java.lang.Character.isSurrogate:(char)boolean
   142: ifeq          296
   145: aload_0       
   146: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   149: ifnonnull     163
   152: aload_0       
   153: new           #22         // sun.nio.cs.Surrogate$Parser
   156: dup           
   157: invokespecial #19         // sun.nio.cs.Surrogate$Parser.<init>:()void
   160: putfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   163: aload_0       
   164: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   167: iload         8
   169: aload_1       
   170: iload_2       
   171: iconst_1      
   172: isub          
   173: iload         5
   175: invokevirtual #20         // sun.nio.cs.Surrogate$Parser.parse:(char, char[], int, int)int
   178: istore        9
   180: iload         9
   182: ifge          212
   185: aload_0       
   186: invokevirtual #34         // java.nio.charset.CharsetEncoder.malformedInputAction:()java.nio.charset.CodingErrorAction
   189: getstatic     #35         // java.nio.charset.CodingErrorAction.REPLACE:java.nio.charset.CodingErrorAction
   192: if_acmpeq     197
   195: iconst_m1     
   196: ireturn       
   197: aload         4
   199: iload         6
   201: iinc          
   204: aload_0       
   205: getfield      #2          // repl:byte
   208: bastore       
   209: goto          293
   212: aload         4
   214: iload         6
   216: iinc          
   219: sipush        240
   222: iload         9
   224: bipush        18
   226: ishr          
   227: ior           
   228: i2b           
   229: bastore       
   230: aload         4
   232: iload         6
   234: iinc          
   237: sipush        128
   240: iload         9
   242: bipush        12
   244: ishr          
   245: bipush        63
   247: iand          
   248: ior           
   249: i2b           
   250: bastore       
   251: aload         4
   253: iload         6
   255: iinc          
   258: sipush        128
   261: iload         9
   263: bipush        6
   265: ishr          
   266: bipush        63
   268: iand          
   269: ior           
   270: i2b           
   271: bastore       
   272: aload         4
   274: iload         6
   276: iinc          
   279: sipush        128
   282: iload         9
   284: bipush        63
   286: iand          
   287: ior           
   288: i2b           
   289: bastore       
   290: iinc          
   293: goto          353
   296: aload         4
   298: iload         6
   300: iinc          
   303: sipush        224
   306: iload         8
   308: bipush        12
   310: ishr          
   311: ior           
   312: i2b           
   313: bastore       
   314: aload         4
   316: iload         6
   318: iinc          
   321: sipush        128
   324: iload         8
   326: bipush        6
   328: ishr          
   329: bipush        63
   331: iand          
   332: ior           
   333: i2b           
   334: bastore       
   335: aload         4
   337: iload         6
   339: iinc          
   342: sipush        128
   345: iload         8
   347: bipush        63
   349: iand          
   350: ior           
   351: i2b           
   352: bastore       
   353: goto          54
   356: iload         6
   358: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104885d20f8413020000458b510c453bc2418bc0410f4fc24c63d849ffcb83f8010f8c1c0000008b5a0c4863f94903fb8beb483bef0f86880100003bd90f86ba01000083f8010f8c15000000418bda493bdb0f86220100004585d20f8487010000bb00000000448bd9e91e000000666690420fbf7c5a106681ff80000f830e00000041887c1910ffc341ffc33bc37fe14103c8448bc36666660f1f840000000000413bcb0f8eba000000443b5a0c0f8324010000453bd00f8658010000420fb7445a10418bdbffc3418bf8ffc781f8800000000f830d0000004388440110448bc7448bdbebbb81f8000800000f82c900000081f800d800000f820c00000081f800e000000f82d6000000443bd70f868e000000418d6802443bd50f8615010000448bd841c1eb0c4181cbe000000047885c0110448bd841c1eb064183e33f4181cb8000000045885c391083e03f81c8800000004188442910458d4003448bdbe93dffffff418bc0488b6c24104883c418850500000000c5f877c349baaddeaddeaddeadde4d8bda41bae555ffff4589979c0200004d899fa8020000e8000000009041bae528ffff4589979c0200004d89a7a8020000e8000000009041baed36ffffebe449baaddeaddeaddeadde4d8bda41bae56affffebb541bae548ffffebc741baed35ffffebbf49baaddeaddeaddeadde4d8bda41bae555ffffeb9049baaddeaddeaddeadde4d8bda41bae56affffe978ffffff41bae502ffffeb8a49baaddeaddeaddeadde4d8bda41baf56fffffe958ffffff41bae51effffe967ffffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1020a1f78, value=0x109af4e60]:0x109af4e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@76bacda0 slotKind: QWORD  <||@
  Comment 48 16 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 51 18 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 57 block B2 null  <||@
  Comment 57 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 57 22 r10|DWORD = MOV [r9|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 57 [rdx:0, rsi:0, r9:0]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 57 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 61 24 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 64 26 rax|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: >  <||@
  Comment 71 28 r11|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 74 30 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 77 32 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 80 34 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4  <||@
  Comment 86 block B4 null  <||@
  Comment 86 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 38 rbx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 89 40 rdi|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 92 42 rdi|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 95 44 rbp|QWORD = MOV rbx|DWORD size: DWORD  <||@
  Comment 97 46 CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 100 48 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B43  <||@
  Comment 106 block B5 null  <||@
  Comment 106 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 106 52 CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 108 54 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B42  <||@
  Comment 114 block B7 null  <||@
  Comment 114 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 66 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 117 68 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B13 falseDestination: B7 -> B9  <||@
  Comment 123 block B9 null  <||@
  Comment 123 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 72 rbx|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 126 74 CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 129 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B41  <||@
  Comment 135 block B10 null  <||@
  Comment 135 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 80 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 138 82 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13  <||@
  Comment 144 block B13 null  <||@
  Comment 144 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 144 -1 rbx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 149 -1 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 152 94 JUMP ~[] destination: B13 -> B14  <||@
  Comment 157 block B15 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 157 102 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 104 rdi|DWORD = MOVSX [rdx|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD  <||@
  Comment 166 106 CMP rdi|DWORD y: 128 size: WORD  <||@
  Comment 171 108 BRANCH trueDestinationProbability: 0.9999799717267542 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19  <||@
  Comment 177 block B16 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 177 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 177 112 MOVB (x: [r9|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE  <||@
  Comment 182 114 rbx|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 184 116 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 187 118 JUMP ~[] destination: B16 -> B14  <||@
  Comment 187 block B14 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 187 96 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 187 98 CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 189 100 BRANCH trueDestinationProbability: 0.9840281920199296 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B19  <||@
  Comment 191 block B19 null  <||@
  Comment 191 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 191 126 rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 194 -1 r8|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 197 128 JUMP ~[] destination: B19 -> B20  <||@
  Comment 197 block B20 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 197 130 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 208 132 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 211 134 BRANCH trueDestinationProbability: 0.03277548790783136 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B40  <||@
  Comment 217 block B21 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 217 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 217 138 CMP (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 221 140 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B38  <||@
  Comment 227 block B22 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 227 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 227 144 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 230 146 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B37  <||@
  Comment 236 block B23 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 236 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 236 150 rax|DWORD = MOVZX [rdx|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD  <||@
  Comment 242 152 rbx|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 247 154 rdi|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 252 156 CMP rax|DWORD y: 128 size: DWORD  <||@
  Comment 258 158 BRANCH trueDestinationProbability: 0.9424242424242424 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 264 block B24 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 264 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 162 MOVB (x: [r9|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 269 -1 r8|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 272 -1 r11|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 275 164 JUMP ~[] destination: B24 -> B20  <||@
  Comment 277 block B25 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 277 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 277 168 CMP rax|DWORD y: 2048 size: DWORD  <||@
  Comment 283 170 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 289 block B27 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 289 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 289 174 CMP rax|DWORD y: 55296 size: DWORD  <||@
  Comment 295 176 BRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B32 falseDestination: B27 -> B29  <||@
  Comment 301 block B29 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 301 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 301 180 CMP rax|DWORD y: 57344 size: DWORD  <||@
  Comment 307 182 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B32  <||@
  Comment 313 block B32 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 313 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 313 194 CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 316 196 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B36  <||@
  Comment 322 block B33 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 322 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 322 200 rbp|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 326 202 CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 329 204 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 335 block B34 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 335 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 335 208 r11|DWORD = SHR rax|DWORD y: 12 size: DWORD  <||@
  Comment 342 210 r11|DWORD = OR r11|DWORD y: 224 size: DWORD  <||@
  Comment 349 212 MOVB (x: [r9|QWORD[.] + r8|DWORD * 1 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 354 214 r11|DWORD = SHR rax|DWORD y: 6 size: DWORD  <||@
  Comment 361 216 r11|DWORD = AND r11|DWORD y: 63 size: DWORD  <||@
  Comment 365 218 r11|DWORD = OR r11|DWORD y: 128 size: DWORD  <||@
  Comment 372 220 MOVB (x: [r9|QWORD[.] + rdi|DWORD * 1 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 377 222 rax|DWORD = AND rax|DWORD y: 63 size: DWORD  <||@
  Comment 380 224 rax|DWORD = OR rax|DWORD y: 128 size: DWORD  <||@
  Comment 386 226 MOVB (x: [r9|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 391 228 r8|DWORD = LEA [r8|DWORD + 3] size: DWORD  <||@
  Comment 395 -1 r11|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 398 230 JUMP ~[] destination: B34 -> B20  <||@
  Comment 403 block B40 null  <||@
  Comment 403 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 403 234 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 406 236 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@1b4c15f3  <||@
  Comment 415 12  <||@
  Comment 425 block B41 null  <||@
  Comment 425 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 425 288 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1088284084]  <||@
  Comment 425 {Object[d.a@1088284084]}  <||@
  Comment 435 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 438 -1 r10|DWORD = MOVE input: int[-43547|0xffffffffffff55e5]  <||@
  Comment 444 290 JUMP ~[] destination: B41 -> B44  <||@
  Comment 444 block B44 null  <||@
  Comment 444 304 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 444 306 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 451 308 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 458 310 DEOPT info [bci:0]  <||@
  Comment 458 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1020a1f90, value=0x109af65fe]:0x109af65fe}  <||@
  Comment 463 [rdx:0, rsi:0, r9:0]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 464 block B36 null  <||@
  Comment 464 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 464 -1 r10|DWORD = MOVE input: int[-55067|0xffffffffffff28e5]  <||@
  Comment 470 254 JUMP ~[] destination: B36 -> B39  <||@
  Comment 470 block B39 null  <||@
  Comment 470 278 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 470 280 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 477 282 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 484 284 DEOPT info [bci:54]  <||@
  Comment 484 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1020a1f90, value=0x109af65fe]:0x109af65fe}  <||@
  Comment 489 [rdx:0, rsi:0, r9:0]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4            |5          |6         |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |-  |r9|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-   <||@
  Comment 490 block B26 null  <||@
  Comment 490 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 490 -1 r10|DWORD = MOVE input: int[-51475|0xffffffffffff36ed]  <||@
  Comment 496 262 JUMP ~[] destination: B26 -> B39  <||@
  Comment 498 block B43 null  <||@
  Comment 498 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 498 294 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1088284084]  <||@
  Comment 498 {Object[d.a@1088284084]}  <||@
  Comment 508 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 511 -1 r10|DWORD = MOVE input: int[-38171|0xffffffffffff6ae5]  <||@
  Comment 517 296 JUMP ~[] destination: B43 -> B44  <||@
  Comment 519 block B38 null  <||@
  Comment 519 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 519 -1 r10|DWORD = MOVE input: int[-46875|0xffffffffffff48e5]  <||@
  Comment 525 276 JUMP ~[] destination: B38 -> B39  <||@
  Comment 527 block B30 null  <||@
  Comment 527 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 527 -1 r10|DWORD = MOVE input: int[-51731|0xffffffffffff35ed]  <||@
  Comment 533 258 JUMP ~[] destination: B30 -> B39  <||@
  Comment 535 block B11 null  <||@
  Comment 535 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 535 244 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1088284084]  <||@
  Comment 535 {Object[d.a@1088284084]}  <||@
  Comment 545 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 548 -1 r10|DWORD = MOVE input: int[-43547|0xffffffffffff55e5]  <||@
  Comment 554 246 JUMP ~[] destination: B11 -> B44  <||@
  Comment 556 block B42 null  <||@
  Comment 556 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 556 270 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1088284084]  <||@
  Comment 556 {Object[d.a@1088284084]}  <||@
  Comment 566 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 569 -1 r10|DWORD = MOVE input: int[-38171|0xffffffffffff6ae5]  <||@
  Comment 575 272 JUMP ~[] destination: B42 -> B44  <||@
  Comment 580 block B37 null  <||@
  Comment 580 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 580 -1 r10|DWORD = MOVE input: int[-64795|0xffffffffffff02e5]  <||@
  Comment 586 266 JUMP ~[] destination: B37 -> B39  <||@
  Comment 588 block B1 null  <||@
  Comment 588 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 588 300 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@480068046]  <||@
  Comment 588 {Object[d.a@480068046]}  <||@
  Comment 598 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 601 -1 r10|DWORD = MOVE input: int[-36875|0xffffffffffff6ff5]  <||@
  Comment 607 302 JUMP ~[] destination: B1 -> B44  <||@
  Comment 612 block B35 null  <||@
  Comment 612 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 612 -1 r10|DWORD = MOVE input: int[-57627|0xffffffffffff1ee5]  <||@
  Comment 618 250 JUMP ~[] destination: B35 -> B39  <||@
  Comment 623 {Stub<ExceptionHandlerStub.exceptionHandler>@0x109f2af60:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 623 4  <||@
  Comment 629 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1020a1f88, value=0x109af6500]:0x109af6500}  <||@
  Comment 629 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-305[sun.nio.cs.UTF_8$Encoder.encode(char[], int, int, byte[])]"
  method "HotSpotCompilation-305[sun.nio.cs.UTF_8$Encoder.encode(char[], int, int, byte[])]"
  date 1528254537070
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 10a06eaa0 448b560849c1e203493bc20f85af63a8ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104885d20f8413020000458b510c453bc2418bc0410f4fc24c63d849ffcb83f8010f8c1c0000008b5a0c4863f94903fb8beb483bef0f86880100003bd90f86ba01000083f8010f8c15000000418bda493bdb0f86220100004585d20f8487010000bb00000000448bd9e91e000000666690420fbf7c5a106681ff80000f830e00000041887c1910ffc341ffc33bc37fe14103c8448bc36666660f1f840000000000413bcb0f8eba000000443b5a0c0f8324010000453bd00f8658010000420fb7445a10418bdbffc3418bf8ffc781f8800000000f830d0000004388440110448bc7448bdbebbb81f8000800000f82c900000081f800d800000f820c00000081f800e000000f82d6000000443bd70f868e000000418d6802443bd50f8615010000448bd841c1eb0c4181cbe000000047885c0110448bd841c1eb064183e33f4181cb8000000045885c391083e03f81c8800000004188442910458d4003448bdbe93dffffff418bc0488b6c24104883c4188505c103f4f6c5f877c349ba2010246c070000004d8bda41bae555ffff4589979c0200004d899fa8020000e88f79a8ff9041bae528ffff4589979c0200004d89a7a8020000e87579a8ff9041baed36ffffebe449ba2010246c070000004d8bda41bae56affffebb541bae548ffffebc741baed35ffffebbf49ba2010246c070000004d8bda41bae555ffffeb9049ba2010246c070000004d8bda41bae56affffe978ffffff41bae502ffffeb8a49ba3802246c070000004d8bda41baf56fffffe958ffffff41bae51effffe967ffffffe84cc2ebff90e8e677a8ff90f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1020a1f78, value=0x109af4e60]:0x109af4e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@76bacda0 slotKind: QWORD  <||@
  Comment 48 16 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 51 18 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 57 block B2 null  <||@
  Comment 57 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 57 22 r10|DWORD = MOV [r9|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 57 [rdx:0, rsi:0, r9:0]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 57 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 61 24 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 64 26 rax|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: >  <||@
  Comment 71 28 r11|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 74 30 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 77 32 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 80 34 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4  <||@
  Comment 86 block B4 null  <||@
  Comment 86 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 38 rbx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 89 40 rdi|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 92 42 rdi|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 95 44 rbp|QWORD = MOV rbx|DWORD size: DWORD  <||@
  Comment 97 46 CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 100 48 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B43  <||@
  Comment 106 block B5 null  <||@
  Comment 106 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 106 52 CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 108 54 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B42  <||@
  Comment 114 block B7 null  <||@
  Comment 114 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 66 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 117 68 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B13 falseDestination: B7 -> B9  <||@
  Comment 123 block B9 null  <||@
  Comment 123 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 72 rbx|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 126 74 CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 129 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B41  <||@
  Comment 135 block B10 null  <||@
  Comment 135 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 80 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 138 82 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13  <||@
  Comment 144 block B13 null  <||@
  Comment 144 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 144 -1 rbx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 149 -1 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 152 94 JUMP ~[] destination: B13 -> B14  <||@
  Comment 157 block B15 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 157 102 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 104 rdi|DWORD = MOVSX [rdx|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD  <||@
  Comment 166 106 CMP rdi|DWORD y: 128 size: WORD  <||@
  Comment 171 108 BRANCH trueDestinationProbability: 0.9999799717267542 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19  <||@
  Comment 177 block B16 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 177 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 177 112 MOVB (x: [r9|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE  <||@
  Comment 182 114 rbx|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 184 116 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 187 118 JUMP ~[] destination: B16 -> B14  <||@
  Comment 187 block B14 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 187 96 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 187 98 CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 189 100 BRANCH trueDestinationProbability: 0.9840281920199296 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B19  <||@
  Comment 191 block B19 null  <||@
  Comment 191 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 191 126 rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 194 -1 r8|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 197 128 JUMP ~[] destination: B19 -> B20  <||@
  Comment 197 block B20 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 197 130 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 208 132 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 211 134 BRANCH trueDestinationProbability: 0.03277548790783136 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B40  <||@
  Comment 217 block B21 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 217 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 217 138 CMP (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 221 140 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B38  <||@
  Comment 227 block B22 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 227 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 227 144 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 230 146 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B37  <||@
  Comment 236 block B23 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 236 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 236 150 rax|DWORD = MOVZX [rdx|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD  <||@
  Comment 242 152 rbx|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 247 154 rdi|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 252 156 CMP rax|DWORD y: 128 size: DWORD  <||@
  Comment 258 158 BRANCH trueDestinationProbability: 0.9424242424242424 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 264 block B24 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 264 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 162 MOVB (x: [r9|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 269 -1 r8|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 272 -1 r11|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 275 164 JUMP ~[] destination: B24 -> B20  <||@
  Comment 277 block B25 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 277 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 277 168 CMP rax|DWORD y: 2048 size: DWORD  <||@
  Comment 283 170 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 289 block B27 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 289 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 289 174 CMP rax|DWORD y: 55296 size: DWORD  <||@
  Comment 295 176 BRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B27 -> B32 falseDestination: B27 -> B29  <||@
  Comment 301 block B29 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 301 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 301 180 CMP rax|DWORD y: 57344 size: DWORD  <||@
  Comment 307 182 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B32  <||@
  Comment 313 block B32 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 313 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 313 194 CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 316 196 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B36  <||@
  Comment 322 block B33 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 322 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 322 200 rbp|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 326 202 CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 329 204 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 335 block B34 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 335 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 335 208 r11|DWORD = SHR rax|DWORD y: 12 size: DWORD  <||@
  Comment 342 210 r11|DWORD = OR r11|DWORD y: 224 size: DWORD  <||@
  Comment 349 212 MOVB (x: [r9|QWORD[.] + r8|DWORD * 1 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 354 214 r11|DWORD = SHR rax|DWORD y: 6 size: DWORD  <||@
  Comment 361 216 r11|DWORD = AND r11|DWORD y: 63 size: DWORD  <||@
  Comment 365 218 r11|DWORD = OR r11|DWORD y: 128 size: DWORD  <||@
  Comment 372 220 MOVB (x: [r9|QWORD[.] + rdi|DWORD * 1 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 377 222 rax|DWORD = AND rax|DWORD y: 63 size: DWORD  <||@
  Comment 380 224 rax|DWORD = OR rax|DWORD y: 128 size: DWORD  <||@
  Comment 386 226 MOVB (x: [r9|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 391 228 r8|DWORD = LEA [r8|DWORD + 3] size: DWORD  <||@
  Comment 395 -1 r11|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 398 230 JUMP ~[] destination: B34 -> B20  <||@
  Comment 403 block B40 null  <||@
  Comment 403 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 403 234 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 406 236 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@1b4c15f3  <||@
  Comment 415 12  <||@
  Comment 425 block B41 null  <||@
  Comment 425 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 425 288 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1088284084]  <||@
  Comment 425 {Object[d.a@1088284084]}  <||@
  Comment 435 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 438 -1 r10|DWORD = MOVE input: int[-43547|0xffffffffffff55e5]  <||@
  Comment 444 290 JUMP ~[] destination: B41 -> B44  <||@
  Comment 444 block B44 null  <||@
  Comment 444 304 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 444 306 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 451 308 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 458 310 DEOPT info [bci:0]  <||@
  Comment 458 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1020a1f90, value=0x109af65fe]:0x109af65fe}  <||@
  Comment 463 [rdx:0, rsi:0, r9:0]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 464 block B36 null  <||@
  Comment 464 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 464 -1 r10|DWORD = MOVE input: int[-55067|0xffffffffffff28e5]  <||@
  Comment 470 254 JUMP ~[] destination: B36 -> B39  <||@
  Comment 470 block B39 null  <||@
  Comment 470 278 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 470 280 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 477 282 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 484 284 DEOPT info [bci:54]  <||@
  Comment 484 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1020a1f90, value=0x109af65fe]:0x109af65fe}  <||@
  Comment 489 [rdx:0, rsi:0, r9:0]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4            |5          |6         |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |-  |r9|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-   <||@
  Comment 490 block B26 null  <||@
  Comment 490 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 490 -1 r10|DWORD = MOVE input: int[-51475|0xffffffffffff36ed]  <||@
  Comment 496 262 JUMP ~[] destination: B26 -> B39  <||@
  Comment 498 block B43 null  <||@
  Comment 498 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 498 294 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1088284084]  <||@
  Comment 498 {Object[d.a@1088284084]}  <||@
  Comment 508 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 511 -1 r10|DWORD = MOVE input: int[-38171|0xffffffffffff6ae5]  <||@
  Comment 517 296 JUMP ~[] destination: B43 -> B44  <||@
  Comment 519 block B38 null  <||@
  Comment 519 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 519 -1 r10|DWORD = MOVE input: int[-46875|0xffffffffffff48e5]  <||@
  Comment 525 276 JUMP ~[] destination: B38 -> B39  <||@
  Comment 527 block B30 null  <||@
  Comment 527 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 527 -1 r10|DWORD = MOVE input: int[-51731|0xffffffffffff35ed]  <||@
  Comment 533 258 JUMP ~[] destination: B30 -> B39  <||@
  Comment 535 block B11 null  <||@
  Comment 535 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 535 244 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1088284084]  <||@
  Comment 535 {Object[d.a@1088284084]}  <||@
  Comment 545 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 548 -1 r10|DWORD = MOVE input: int[-43547|0xffffffffffff55e5]  <||@
  Comment 554 246 JUMP ~[] destination: B11 -> B44  <||@
  Comment 556 block B42 null  <||@
  Comment 556 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 556 270 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1088284084]  <||@
  Comment 556 {Object[d.a@1088284084]}  <||@
  Comment 566 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 569 -1 r10|DWORD = MOVE input: int[-38171|0xffffffffffff6ae5]  <||@
  Comment 575 272 JUMP ~[] destination: B42 -> B44  <||@
  Comment 580 block B37 null  <||@
  Comment 580 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 580 -1 r10|DWORD = MOVE input: int[-64795|0xffffffffffff02e5]  <||@
  Comment 586 266 JUMP ~[] destination: B37 -> B39  <||@
  Comment 588 block B1 null  <||@
  Comment 588 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 588 300 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@480068046]  <||@
  Comment 588 {Object[d.a@480068046]}  <||@
  Comment 598 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 601 -1 r10|DWORD = MOVE input: int[-36875|0xffffffffffff6ff5]  <||@
  Comment 607 302 JUMP ~[] destination: B1 -> B44  <||@
  Comment 612 block B35 null  <||@
  Comment 612 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 612 -1 r10|DWORD = MOVE input: int[-57627|0xffffffffffff1ee5]  <||@
  Comment 618 250 JUMP ~[] destination: B35 -> B39  <||@
  Comment 623 {Stub<ExceptionHandlerStub.exceptionHandler>@0x109f2af60:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 623 4  <||@
  Comment 629 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1020a1f88, value=0x109af6500]:0x109af6500}  <||@
  Comment 629 5  <||@
  HexCodeFile>>> <|@
end_nmethod
