begin_compilation
  name " HotSpotCompilation-6248[sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)]"
  method "HotSpotCompilation-6248[sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)]"
  date 1527005114698
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a747 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a747  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/UTF_8$Encoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?89 ?84 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/nio/HeapCharBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?84 ?89 v765 v418 v766 v769 v768 v767 v784 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/nio/ByteBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v770 v418 ?84 ?89 v771 v774 v773 v772 v785 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 585
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 - - - - - - - - - 
=== Succesors ===
=== Usages ===
v653 a747 v788 i748 v789 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a747 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a747 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.hb
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:993) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v765 
=== Succesors ===
next: v788 
=== Usages ===
a321 v788 v777 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v765 #next: v788  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a747 
=== Succesors ===
next: i748 
=== Usages ===
=== Predecessor ===
a747 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a747 #next: i748  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i748 v463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i748 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 38]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v773 
=== Succesors ===
next: i749 
=== Usages ===
i33 
=== Predecessor ===
v788 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v773 #next: i749  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i749 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v772 
=== Succesors ===
next: i750 
=== Usages ===
i33 i40 i261 
=== Predecessor ===
i748 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v772 #next: i750  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i750 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 49]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v774 
=== Succesors ===
next: i751 
=== Usages ===
i40 v290 
=== Predecessor ===
i749 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v774 #next: i751  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i751 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i751 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.offset
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v767 
=== Succesors ===
next: i752 
=== Usages ===
i15 i22 i254 
=== Predecessor ===
i750 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v767 #next: i752  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i752 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i752 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 21]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v769 
=== Succesors ===
next: i753 
=== Usages ===
i22 v305 
=== Predecessor ===
i751 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v769 #next: i753  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i753 v457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i753 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 10]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v768 
=== Succesors ===
next: i754 
=== Usages ===
i15 
=== Predecessor ===
i752 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v768 #next: i754  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a747 
=== Succesors ===
=== Usages ===
i754 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i754 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v777 
=== Succesors ===
next: v704 
=== Usages ===
v518 v541 j509 
=== Predecessor ===
i753 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v777 #next: v704  <|@  <|@
f <@~|@floating>@ <|@
tid j509 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i754 
=== Succesors ===
=== Usages ===
v517 v540 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i754  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 52]
stamp: i32
=== Inputs ===
x: i749 
y: i750 
=== Succesors ===
=== Usages ===
i42 i126 v103 ?84 ?89 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i749 y: i750  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 41]
stamp: i32
=== Inputs ===
x: i748 
y: i749 
=== Succesors ===
=== Usages ===
i51 i42 i46 v521 j525 v529 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i748 y: i749  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 66]
stamp: i32
=== Inputs ===
x: i40 
y: i33 
=== Succesors ===
=== Usages ===
i478 v236 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i40 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 24]
stamp: i32
=== Inputs ===
x: i751 
y: i752 
=== Succesors ===
=== Usages ===
?84 v90 v544 i41 ?89 i535 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i751 y: i752  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 13]
stamp: i32
=== Inputs ===
x: i751 
y: i753 
=== Succesors ===
=== Usages ===
i50 i41 j511 v518 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i751 y: i753  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 61]
stamp: i32
=== Inputs ===
x: i22 
y: i15 
=== Succesors ===
=== Usages ===
i478 v236 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i22 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i41 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i42 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v236 
trueValue: i42 
falseValue: i41 
=== Succesors ===
=== Usages ===
i46 j512 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v236 trueValue: i42 falseValue: i41  <|@  <|@
f <@~|@floating>@ <|@
tid j512 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i478 
=== Succesors ===
=== Usages ===
j514 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i478  <|@  <|@
f <@~|@floating>@ <|@
tid j513 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] â‡Šffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j514 j537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j514 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j512 
y: j513 
=== Succesors ===
=== Usages ===
j515 j526 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j512 y: j513  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
stamp: i32
=== Inputs ===
x: i33 
y: i478 
=== Succesors ===
=== Usages ===
v521 v53 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i33 y: i478  <|@  <|@
f <@~|@floating>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i33 
y: i46 
=== Succesors ===
=== Usages ===
v704 v720 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i33 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid a321 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:993) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a747 
=== Succesors ===
=== Usages ===
?89 v775 ?84 v778 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a747  <|@  <|@
f <@~|@floating>@ <|@
tid a662 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1678566231
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1678566231]
=== Inputs ===
=== Succesors ===
=== Usages ===
a652 a652 a652 a652 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v521 
=== Succesors ===
trueSuccessor: v703 
falseSuccessor: v700 
=== Usages ===
=== Predecessor ===
i754 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v521 #trueSuccessor: v703 #falseSuccessor: v700  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid j511 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i15 
=== Succesors ===
=== Usages ===
j515 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i15  <|@  <|@
f <@~|@floating>@ <|@
tid j515 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j511 
y: j514 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j511 y: j514  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j515 
y: j509 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j515 y: j509  <|@  <|@
f <@~|@floating>@ <|@
tid i661 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -91931
stableDimension: 0
stamp: i32 [-91931] â‡Š00000000fffe98e5 â‡ˆ00000000fffe98e5
stampKind: i32
value: int[-91931|0xfffffffffffe98e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i651 i651 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v517 
=== Succesors ===
trueSuccessor: v711 
falseSuccessor: v708 
=== Usages ===
=== Predecessor ===
v703 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v517 #trueSuccessor: v711 #falseSuccessor: v708  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v710 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v710  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i754 
=== Succesors ===
=== Usages ===
v710 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i15 y: i754  <|@  <|@
f <@*|@fixed>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v518 
=== Succesors ===
trueSuccessor: v701 
falseSuccessor: v709 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v518 #trueSuccessor: v701 #falseSuccessor: v709  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v699 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v699  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
v701 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v786  <|@  <|@
f <@*|@fixed>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
v709 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v660  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
v708 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
v700 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B3" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v698 v699 
=== Succesors ===
next: a755 
=== Usages ===
v523 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v698 v699 #next: a755  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a755 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a755 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:993) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v770 
=== Succesors ===
next: v789 
=== Usages ===
?84 v789 v776 v779 v780 v781 v782 v783 ?89 v790 
=== Predecessor ===
v697 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v770 #next: v789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a755 
=== Succesors ===
next: v720 
=== Usages ===
=== Predecessor ===
a755 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a755 #next: v720  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v521 
=== Succesors ===
trueSuccessor: v719 
falseSuccessor: v716 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v521 #trueSuccessor: v719 #falseSuccessor: v716  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: i756 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i756  <|@  <|@
f <@~|@floating>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a755 
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i756 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v790 
=== Succesors ===
next: v728 
=== Usages ===
j524 v529 
=== Predecessor ===
v719 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v790 #next: v728  <|@  <|@
f <@~|@floating>@ <|@
tid j525 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i33 
=== Succesors ===
=== Usages ===
j526 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i33  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j514 
y: j525 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j514 y: j525  <|@  <|@
f <@~|@floating>@ <|@
tid j524 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i756 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i756  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j526 
y: j524 
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j526 y: j524  <|@  <|@
f <@~|@floating>@ <|@
tid i664 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -98331
stableDimension: 0
stamp: i32 [-98331] â‡Š00000000fffe7fe5 â‡ˆ00000000fffe7fe5
stampKind: i32
value: int[-98331|0xfffffffffffe7fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i651 i651 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v528 
=== Succesors ===
trueSuccessor: v727 
falseSuccessor: v724 
=== Usages ===
=== Predecessor ===
i756 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v528 #trueSuccessor: v727 #falseSuccessor: v724  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v726  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i33 
y: i756 
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i33 y: i756  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v529 
=== Succesors ===
trueSuccessor: v717 
falseSuccessor: v725 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v529 #trueSuccessor: v717 #falseSuccessor: v725  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v715  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v717 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v787 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v787  <|@  <|@
f <@*|@fixed>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
v725 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v663  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
v724 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v714 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v714  <|@  <|@
f <@*|@fixed>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v716 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v714 v715 
=== Succesors ===
next: i757 
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v714 v715 #next: i757  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i757 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i757 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.isReadOnly
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v766 
=== Succesors ===
next: v579 
=== Usages ===
i326 
=== Predecessor ===
v713 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v766 #next: v579  <|@  <|@
f <@~|@floating>@ <|@
tid i326 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i757 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i757  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v212 v182 v307 v292 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i326 
y: i123 
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i326 y: i123  <|@  <|@
f <@~|@floating>@ <|@
tid a650 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v674 a652 a652 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v182 
=== Succesors ===
trueSuccessor: v576 
falseSuccessor: v578 
=== Usages ===
=== Predecessor ===
i757 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v182 #trueSuccessor: v576 #falseSuccessor: v578  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i758 
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i758  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i758 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.isReadOnly
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v771 
=== Succesors ===
next: v583 
=== Usages ===
i344 
=== Predecessor ===
v576 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v771 #next: v583  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i758 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i758  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i344 
y: i123 
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i344 y: i123  <|@  <|@
f <@*|@fixed>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v212 
=== Succesors ===
trueSuccessor: v580 
falseSuccessor: v582 
=== Usages ===
=== Predecessor ===
i758 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v212 #trueSuccessor: v580 #falseSuccessor: v582  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i76 i77 i111 i160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i468 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] â‡Š0000000000000080 â‡ˆ0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
v580 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628637802645400890
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i15 i77 
=== Succesors ===
=== Usages ===
j534 v544 v775 v541 i77 i535 ?84 i87 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i15 i77  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i33 i76 
=== Succesors ===
=== Usages ===
v776 v53 ?84 i88 i76 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i33 i76  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 28.22483567140919
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v48 
=== Succesors ===
next: v60 
=== Usages ===
i50 i51 v56 v68 v83 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v48 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i46 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i51 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
stamp: void
trueSuccessorProbability: 0.9647521705459672
=== Inputs ===
condition: v53 
=== Succesors ===
trueSuccessor: v54 
falseSuccessor: v56 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v53 #trueSuccessor: v54 #falseSuccessor: v56  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4628357773269532405
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: i759 
=== Usages ===
v523 v533 
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i759  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v697 v54 
=== Succesors ===
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v697 v54  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a321 
index: i50 
=== Succesors ===
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a321 index: i50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i759 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v523 
address: v775 
=== Succesors ===
next: v74 
=== Usages ===
v469 i471 
=== Predecessor ===
v54 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v523 address: v775 #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i759 
y: i468 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i759 y: i468  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
stamp: void
trueSuccessorProbability: 0.9998113914335037
=== Inputs ===
condition: v469 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v68 
=== Usages ===
=== Predecessor ===
i759 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v469 #trueSuccessor: v64 #falseSuccessor: v68  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4628356327668690234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v713 v54 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v713 v54  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i51 
index: a755 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i51 index: a755  <|@  <|@
f <@~|@floating>@ <|@
tid i471 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
resultBits: 8
stamp: i8
=== Inputs ===
value: i759 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v533 
address: v776 
value: i471 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v533 address: v776 value: i471 stateAfter: - lastLocationAccess: - #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
stamp: i32
=== Inputs ===
x: i51 
y: i75 
=== Succesors ===
=== Usages ===
i51 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i51 y: i75  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
stamp: i32
=== Inputs ===
x: i50 
y: i75 
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i50 y: i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
loopBegin: v49 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4572571203203216089
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
v68 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607136159573067931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
v56 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v65 v67 
=== Succesors ===
next: v736 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v65 v67 #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i22 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i50 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v735 
falseSuccessor: v732 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v735 #falseSuccessor: v732  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v744  <|@  <|@
f <@~|@floating>@ <|@
tid j534 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i50 
=== Succesors ===
=== Usages ===
j538 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i50  <|@  <|@
f <@~|@floating>@ <|@
tid i535 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i22 
y: i50 
=== Succesors ===
=== Usages ===
j536 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i22 y: i50  <|@  <|@
f <@~|@floating>@ <|@
tid j536 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i535 
=== Succesors ===
=== Usages ===
j537 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i535  <|@  <|@
f <@~|@floating>@ <|@
tid j537 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j536 
y: j513 
=== Succesors ===
=== Usages ===
j538 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j536 y: j513  <|@  <|@
f <@~|@floating>@ <|@
tid j538 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j534 
y: j537 
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j534 y: j537  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j538 
y: j509 
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j538 y: j509  <|@  <|@
f <@*|@fixed>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v540 
=== Succesors ===
trueSuccessor: v743 
falseSuccessor: v740 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v540 #trueSuccessor: v743 #falseSuccessor: v740  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v742 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i754 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i50 y: i754  <|@  <|@
f <@*|@fixed>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v541 
=== Succesors ===
trueSuccessor: v733 
falseSuccessor: v741 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v541 #trueSuccessor: v733 #falseSuccessor: v741  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v731 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v731  <|@  <|@
f <@*|@fixed>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
v733 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v739 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v739  <|@  <|@
f <@*|@fixed>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
v741 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v738  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
v740 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v738 v739 
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v738 v739 #next: v585  <|@  <|@
tid ?84 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a321 i50 i22 a755 i51 i40 - - - 
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a321 i50 i22 a755 i51 i40 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 397
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
reason: BoundsCheckException
speculation: Object[d.a@717309548]
stamp: void
=== Inputs ===
stateBefore: ?84 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?84  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v730  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
v732 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v730 v731 
=== Succesors ===
next: v85 
=== Usages ===
v546 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v730 v731 #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v729 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B35" "B45" 
    successors "B32" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607880422110324866
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v86 
values: i50 i160 i160 
=== Succesors ===
=== Usages ===
?89 v90 i160 v778 v418 i254 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v86 values: i50 i160 i160  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v86 
values: i51 i111 i174 
=== Succesors ===
=== Usages ===
?89 i261 v103 v418 i111 v779 i174 i126 v781 i173 v426 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v86 values: i51 i111 i174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.1549878692735835
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v85 
=== Succesors ===
next: v97 
=== Usages ===
i87 i88 v93 v106 v161 v175 v616 v591 v596 v601 v606 v611 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v85 #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i87 
y: i22 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i87 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
stamp: void
trueSuccessorProbability: 0.13421063470488903
=== Inputs ===
condition: v90 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v90 #trueSuccessor: v91 #falseSuccessor: v93  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594752903744524012
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: i760 
=== Usages ===
v546 
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i760  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v729 v91 
=== Succesors ===
=== Usages ===
i760 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v729 v91  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a321 
index: i87 
=== Succesors ===
=== Usages ===
i760 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a321 index: i87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i760 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v546 
address: v778 
=== Succesors ===
next: i761 
=== Usages ===
i404 
=== Predecessor ===
v91 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v546 address: v778 #next: i761  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a755 
=== Succesors ===
=== Usages ===
i761 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i761 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v780 
=== Succesors ===
next: v102 
=== Usages ===
v426 v446 
=== Predecessor ===
i760 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v780 #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i88 
y: i761 
=== Succesors ===
=== Usages ===
v612 v592 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i88 y: i761  <|@  <|@
f <@~|@floating>@ <|@
tid i404 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
resultBits: 32
stamp: i32 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i760 
=== Succesors ===
=== Usages ===
v99 i112 i140 v118 i149 v247 i132 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i760  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 84]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] â‡Š0000000000000080 â‡ˆ0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i150 v99 i143 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i404 
y: i62 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i404 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
stamp: i32
=== Inputs ===
x: i87 
y: i75 
=== Succesors ===
=== Usages ===
i87 i87 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i87 y: i75  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 151]
stamp: i32
=== Inputs ===
x: i88 
y: i75 
=== Succesors ===
=== Usages ===
v782 i88 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i88 y: i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
stamp: void
trueSuccessorProbability: 0.9444529691575878
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v100 
falseSuccessor: v101 
=== Usages ===
=== Predecessor ===
i761 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v100 #falseSuccessor: v101  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594442680051054030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i88 
y: i40 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i88 y: i40  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
stamp: void
trueSuccessorProbability: 0.9998375304630381
=== Inputs ===
condition: v103 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v106 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v103 #trueSuccessor: v104 #falseSuccessor: v106  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594441823079525107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v592 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v592  <|@  <|@
f <@*|@fixed>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v426 
=== Succesors ===
trueSuccessor: v588 
falseSuccessor: v591 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v426 #trueSuccessor: v588 #falseSuccessor: v591  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594441823079525107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: v417 
=== Usages ===
v417 
=== Predecessor ===
v592 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i88 
index: a755 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i88 index: a755  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 156]
resultBits: 8
stamp: i8
=== Inputs ===
value: i404 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v588 
address: v779 
value: i112 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v588 address: v779 value: i112 stateAfter: - lastLocationAccess: - #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
loopBegin: v86 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v86  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v675  <|@  <|@
f <@~|@floating>@ <|@
tid i676 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -104987
stableDimension: 0
stamp: i32 [-104987] â‡Š00000000fffe65e5 â‡ˆ00000000fffe65e5
stampKind: i32
value: int[-104987|0xfffffffffffe65e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v591 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4537641535899654761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 137]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: a163 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: a163  <|@  <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
returnStamp: a# Ljava/nio/charset/CoderResult;
signature: [Ljdk.vm.ci.meta.JavaType;@5e6c3fc
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>
=== Inputs ===
arguments: a2 i87 a3 i88 
=== Succesors ===
=== Usages ===
a163 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 i87 a3 i88  <|@  <|@
tid ?643 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
a163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a163 <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
polymorphic: false
stamp: a# Ljava/nio/charset/CoderResult;
targetMethod: Direct#UTF_8$Encoder.overflow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v418 
stateDuring: ?643 
=== Succesors ===
next: v165 
=== Usages ===
v165 
=== Predecessor ===
v106 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v418 stateDuring: ?643 #next: v165  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stamp: void
=== Inputs ===
result: a163 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a163 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a163 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 161]
stamp: void
=== Inputs ===
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 163]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] â‡Š0000000000000800 â‡ˆ0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i404 
y: i117 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i404 y: i117  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v596 
falseSuccessor: v593 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v596 #falseSuccessor: v593  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v677  <|@  <|@
f <@~|@floating>@ <|@
tid i678 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -107283
stableDimension: 0
stamp: i32 [-107283] â‡Š00000000fffe5ced â‡ˆ00000000fffe5ced
stampKind: i32
value: int[-107283|0xfffffffffffe5ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v596 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
=== Inputs ===
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v602  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] â‡Š000000000000d800 â‡ˆ000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i404 
y: i246 
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i404 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v598 
falseSuccessor: v601 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v598 #falseSuccessor: v601  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
stamp: void
=== Inputs ===
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v607  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 398]
stamp: i32
=== Inputs ===
x: i40 
y: i88 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i40 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 399]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] â‡Š0000000000000003 â‡ˆ0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 i174 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i126 
y: i127 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i126 y: i127  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v606 
falseSuccessor: v603 
=== Usages ===
=== Predecessor ===
v598 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v606 #falseSuccessor: v603  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v681 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid i682 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -107795
stableDimension: 0
stamp: i32 [-107795] â‡Š00000000fffe5aed â‡ˆ00000000fffe5aed
stampKind: i32
value: int[-107795|0xfffffffffffe5aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v606 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
=== Inputs ===
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v612  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v426 
=== Succesors ===
trueSuccessor: v608 
falseSuccessor: v611 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v426 #trueSuccessor: v608 #falseSuccessor: v611  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
=== Inputs ===
=== Succesors ===
next: v617 
=== Usages ===
v507 
=== Predecessor ===
v612 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
stamp: i32
=== Inputs ===
x: i88 
y: i172 
=== Succesors ===
=== Usages ===
v446 v783 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i88 y: i172  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i173 
y: i761 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i173 y: i761  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v446 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v446 #trueSuccessor: v613 #falseSuccessor: v616  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
=== Inputs ===
=== Succesors ===
next: v434 
=== Usages ===
v507 
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v613 v608 
=== Succesors ===
=== Usages ===
v434 v454 v444 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v613 v608  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i88 
index: a755 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i88 index: a755  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 425]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] â‡Š000000000000000c â‡ˆ000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 427]
stamp: i32 [0 - 15] â‡ˆ000000000000000f
=== Inputs ===
x: i404 
y: i131 
=== Succesors ===
=== Usages ===
i133 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i404 y: i131  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 420]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] â‡Š00000000000000e0 â‡ˆ00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 428]
stamp: i32 [224 - 239] â‡Š00000000000000e0 â‡ˆ00000000000000ef
=== Inputs ===
x: i132 
y: i130 
=== Succesors ===
=== Usages ===
i134 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i132 y: i130  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 429]
resultBits: 8
stamp: i8 [-32 - -17] â‡Š00000000000000e0 â‡ˆ00000000000000ef
=== Inputs ===
value: i133 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v507 
address: v781 
value: i134 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v507 address: v781 value: i134 stateAfter: - lastLocationAccess: - #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i111 
index: a755 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i111 index: a755  <|@  <|@
f <@~|@floating>@ <|@
tid i139 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 443]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] â‡Š0000000000000006 â‡ˆ0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 445]
stamp: i32 [0 - 1023] â‡ˆ00000000000003ff
=== Inputs ===
x: i404 
y: i139 
=== Succesors ===
=== Usages ===
i142 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i404 y: i139  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 446]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] â‡Š000000000000003f â‡ˆ000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i142 i149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 448]
stamp: i32 [0 - 63] â‡ˆ000000000000003f
=== Inputs ===
x: i140 
y: i141 
=== Succesors ===
=== Usages ===
i143 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i140 y: i141  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 449]
stamp: i32 [128 - 191] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
x: i142 
y: i62 
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i142 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 450]
resultBits: 8
stamp: i8 [-128 - -65] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
value: i143 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v507 
address: v782 
value: i144 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v507 address: v782 value: i144 stateAfter: - lastLocationAccess: - #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i173 
index: a755 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i173 index: a755  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 466]
stamp: i32 [0 - 63] â‡ˆ000000000000003f
=== Inputs ===
x: i404 
y: i141 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i404 y: i141  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 467]
stamp: i32 [128 - 191] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
x: i149 
y: i62 
=== Succesors ===
=== Usages ===
i151 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i149 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid i151 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 468]
resultBits: 8
stamp: i8 [-128 - -65] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
value: i150 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v507 
address: v783 
value: i151 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v507 address: v783 value: i151 stateAfter: - lastLocationAccess: - #next: v175  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 456]
stamp: i32
=== Inputs ===
x: i88 
y: i127 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i88 y: i127  <|@  <|@
f <@*|@fixed>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
stamp: void
=== Inputs ===
loopBegin: v86 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v86  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v685  <|@  <|@
f <@~|@floating>@ <|@
tid i686 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -114459
stableDimension: 0
stamp: i32 [-114459] â‡Š00000000fffe40e5 â‡ˆ00000000fffe40e5
stampKind: i32
value: int[-114459|0xfffffffffffe40e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid i684 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -109339
stableDimension: 0
stamp: i32 [-109339] â‡Š00000000fffe54e5 â‡ˆ00000000fffe54e5
stampKind: i32
value: int[-109339|0xfffffffffffe54e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v611 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v679 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v679  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -107539
stableDimension: 0
stamp: i32 [-107539] â‡Š00000000fffe5bed â‡ˆ00000000fffe5bed
stampKind: i32
value: int[-107539|0xfffffffffffe5bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v601 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 476]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v621  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 6]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: i32
=== Inputs ===
x: i87 
y: i751 
=== Succesors ===
=== Usages ===
v313 v305 v307 v457 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i87 y: i751  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i752 
y: i254 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i752 y: i254  <|@  <|@
f <@*|@fixed>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v620 
falseSuccessor: v618 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v620 #falseSuccessor: v618  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v670 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v670  <|@  <|@
f <@~|@floating>@ <|@
tid i671 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -116499
stableDimension: 0
stamp: i32 [-116499] â‡Š00000000fffe38ed â‡ˆ00000000fffe38ed
stampKind: i32
value: int[-116499|0xfffffffffffe38ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v625 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v625  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i254 
y: i123 
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i254 y: i123  <|@  <|@
f <@*|@fixed>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v307 
=== Succesors ===
trueSuccessor: v624 
falseSuccessor: v622 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v307 #trueSuccessor: v624 #falseSuccessor: v622  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v687 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v687  <|@  <|@
f <@~|@floating>@ <|@
tid i688 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -116755
stableDimension: 0
stamp: i32 [-116755] â‡Š00000000fffe37ed â‡ˆ00000000fffe37ed
stampKind: i32
value: int[-116755|0xfffffffffffe37ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v624 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i762 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i762  <|@  <|@
f <@~|@floating>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i762 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v784 
=== Succesors ===
next: v629 
=== Usages ===
v313 
=== Predecessor ===
v622 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v784 #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i254 
y: i762 
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i254 y: i762  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v313 
=== Succesors ===
trueSuccessor: v628 
falseSuccessor: v626 
=== Usages ===
=== Predecessor ===
i762 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v313 #trueSuccessor: v628 #falseSuccessor: v626  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@~|@floating>@ <|@
tid i690 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -117779
stableDimension: 0
stamp: i32 [-117779] â‡Š00000000fffe33ed â‡ˆ00000000fffe33ed
stampKind: i32
value: int[-117779|0xfffffffffffe33ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v628 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v633  <|@  <|@
f <@~|@floating>@ <|@
tid i261 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 17]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: i32
=== Inputs ===
x: i88 
y: i749 
=== Succesors ===
=== Usages ===
v298 v290 v292 v463 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i88 y: i749  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i750 
y: i261 
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i750 y: i261  <|@  <|@
f <@*|@fixed>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v290 
=== Succesors ===
trueSuccessor: v632 
falseSuccessor: v630 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v290 #trueSuccessor: v632 #falseSuccessor: v630  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@~|@floating>@ <|@
tid i692 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -118035
stableDimension: 0
stamp: i32 [-118035] â‡Š00000000fffe32ed â‡ˆ00000000fffe32ed
stampKind: i32
value: int[-118035|0xfffffffffffe32ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v632 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v637 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v637  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i261 
y: i123 
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i261 y: i123  <|@  <|@
f <@*|@fixed>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v292 
=== Succesors ===
trueSuccessor: v636 
falseSuccessor: v634 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v292 #trueSuccessor: v636 #falseSuccessor: v634  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v693 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v693  <|@  <|@
f <@~|@floating>@ <|@
tid i694 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -118291
stableDimension: 0
stamp: i32 [-118291] â‡Š00000000fffe31ed â‡ˆ00000000fffe31ed
stampKind: i32
value: int[-118291|0xfffffffffffe31ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v636 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i763 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i763  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i763 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i763 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v785 
=== Succesors ===
next: v641 
=== Usages ===
v298 
=== Predecessor ===
v634 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v785 #next: v641  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i261 
y: i763 
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i261 y: i763  <|@  <|@
f <@*|@fixed>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v298 
=== Succesors ===
trueSuccessor: v640 
falseSuccessor: v638 
=== Usages ===
=== Predecessor ===
i763 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v298 #trueSuccessor: v640 #falseSuccessor: v638  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v695  <|@  <|@
f <@~|@floating>@ <|@
tid i696 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -119315
stableDimension: 0
stamp: i32 [-119315] â‡Š00000000fffe2ded â‡ˆ00000000fffe2ded
stampKind: i32
value: int[-119315|0xfffffffffffe2ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v640 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B50" "B36" "B39" "B48" "B42" "B47" "B46" "B52" "B54" "B56" "B58" "B60" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i672 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-119315 - -104987] â‡Š00000000fffe00e5 â‡ˆ00000000fffe7fed
valueDescription: i32
=== Inputs ===
merge: v669 
values: i671 i676 i678 i680 i682 i684 i686 i688 i690 i692 i694 i696 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v669 values: i671 i676 i678 i680 i682 i684 i686 i688 i690 i692 i694 i696  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v670 v675 v677 v679 v681 v683 v685 v687 v689 v691 v693 v695 
=== Succesors ===
next: v674 
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v670 v675 v677 v679 v681 v683 v685 v687 v689 v691 v693 v695 #next: v674  <|@  <|@
tid ?89 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a321 i87 i22 a755 i88 i40 - - - 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a321 i87 i22 a755 i88 i40 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?89 
actionAndReason: i672 
speculation: a650 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?89 actionAndReason: i672 speculation: a650  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v768 
value: i254 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v768 value: i254 stateAfter: - lastLocationAccess: - #next: v463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v773 
value: i261 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v773 value: i261 stateAfter: - lastLocationAccess: - #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid a170 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:637) [bci: 485]
rawvalue: CoderResult@1617107905
stableDimension: 0
stamp: a!# Ljava/nio/charset/CoderResult;
stampKind: a -
value: Object[CoderResult@1617107905]
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:637) [bci: 488]
stamp: void
=== Inputs ===
result: a170 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a170 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid i668 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -88339
stableDimension: 0
stamp: i32 [-88339] â‡Š00000000fffea6ed â‡ˆ00000000fffea6ed
stampKind: i32
value: int[-88339|0xfffffffffffea6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i651 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
v582 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid i666 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -83731
stableDimension: 0
stamp: i32 [-83731] â‡Š00000000fffeb8ed â‡ˆ00000000fffeb8ed
stampKind: i32
value: int[-83731|0xfffffffffffeb8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i651 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
v578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" "B64" "B63" "B4" "B11" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i651 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-98331 - -81163] â‡Š00000000fffe00e5 â‡ˆ00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v647 
values: i661 i664 i666 i668 i661 i664 
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v647 values: i661 i664 i666 i668 i661 i664  <|@  <|@
f <@~|@floating>@ <|@
tid a652 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v647 
values: a662 a662 a650 a650 a662 a662 
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v647 values: a662 a662 a650 a650 a662 a662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v660 v663 v665 v667 v786 v787 
=== Succesors ===
next: v653 
=== Usages ===
i651 a652 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v660 v663 v665 v667 v786 v787 #next: v653  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i651 
speculation: a652 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i651 speculation: a652  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a747 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a747  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/UTF_8$Encoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?89 ?84 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/nio/HeapCharBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?84 ?89 v765 v418 v766 v769 v768 v767 v784 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/nio/ByteBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v770 v418 ?84 ?89 v771 v774 v773 v772 v785 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 585
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 - - - - - - - - - 
=== Succesors ===
=== Usages ===
v653 a747 v788 i748 v789 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v765 <|@
result [v1|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a747 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a747 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.hb
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:993) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v765 
=== Succesors ===
next: v788 
=== Usages ===
a321 v788 v777 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v765 #next: v788  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a747 
=== Succesors ===
next: i748 
=== Usages ===
=== Predecessor ===
a747 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a747 #next: i748  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
result [v2|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i748 v463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i748 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 38]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v773 
=== Succesors ===
next: i749 
=== Usages ===
i33 
=== Predecessor ===
v788 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v773 #next: i749  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
result [v2|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i749 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v772 
=== Succesors ===
next: i750 
=== Usages ===
i33 i40 i261 
=== Predecessor ===
i748 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v772 #next: i750  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
result [v2|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i750 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 49]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v774 
=== Succesors ===
next: i751 
=== Usages ===
i40 v290 
=== Predecessor ===
i749 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v774 #next: i751  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
result [v1|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i751 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i751 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.offset
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v767 
=== Succesors ===
next: i752 
=== Usages ===
i15 i22 i254 
=== Predecessor ===
i750 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v767 #next: i752  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
result [v1|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i752 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i752 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 21]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v769 
=== Succesors ===
next: i753 
=== Usages ===
i22 v305 
=== Predecessor ===
i751 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v769 #next: i753  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i753 v457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i753 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 10]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v768 
=== Succesors ===
next: i754 
=== Usages ===
i15 
=== Predecessor ===
i752 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v768 #next: i754  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a747 
=== Succesors ===
=== Usages ===
i754 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i754 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v777 
=== Succesors ===
next: v704 
=== Usages ===
v518 v541 j509 
=== Predecessor ===
i753 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v777 #next: v704  <|@  <|@
f <@~|@floating>@ <|@
tid j509 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i754 
=== Succesors ===
=== Usages ===
v517 v540 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i754  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 52]
stamp: i32
=== Inputs ===
x: i749 
y: i750 
=== Succesors ===
=== Usages ===
i42 i126 v103 ?84 ?89 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i749 y: i750  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 41]
stamp: i32
=== Inputs ===
x: i748 
y: i749 
=== Succesors ===
=== Usages ===
i51 i42 i46 v521 j525 v529 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i748 y: i749  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 66]
stamp: i32
=== Inputs ===
x: i40 
y: i33 
=== Succesors ===
=== Usages ===
i478 v236 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i40 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 24]
stamp: i32
=== Inputs ===
x: i751 
y: i752 
=== Succesors ===
=== Usages ===
?84 v90 v544 i41 ?89 i535 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i751 y: i752  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 13]
stamp: i32
=== Inputs ===
x: i751 
y: i753 
=== Succesors ===
=== Usages ===
i50 i41 j511 v518 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i751 y: i753  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 61]
stamp: i32
=== Inputs ===
x: i22 
y: i15 
=== Succesors ===
=== Usages ===
i478 v236 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i22 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i41 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i42 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v236 
trueValue: i42 
falseValue: i41 
=== Succesors ===
=== Usages ===
i46 j512 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v236 trueValue: i42 falseValue: i41  <|@  <|@
f <@~|@floating>@ <|@
tid j512 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i478 
=== Succesors ===
=== Usages ===
j514 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i478  <|@  <|@
f <@~|@floating>@ <|@
tid j513 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] â‡Šffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j514 j537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j514 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j512 
y: j513 
=== Succesors ===
=== Usages ===
j515 j526 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j512 y: j513  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
stamp: i32
=== Inputs ===
x: i33 
y: i478 
=== Succesors ===
=== Usages ===
v521 v53 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i33 y: i478  <|@  <|@
f <@~|@floating>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i33 
y: i46 
=== Succesors ===
=== Usages ===
v704 v720 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i33 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid a321 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:993) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a747 
=== Succesors ===
=== Usages ===
?89 v775 ?84 v778 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a747  <|@  <|@
f <@~|@floating>@ <|@
tid a662 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1678566231
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1678566231]
=== Inputs ===
=== Succesors ===
=== Usages ===
a652 a652 a652 a652 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v521 
=== Succesors ===
trueSuccessor: v703 
falseSuccessor: v700 
=== Usages ===
=== Predecessor ===
i754 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v521 #trueSuccessor: v703 #falseSuccessor: v700  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13463e95 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - 
>@ <|@ instruction v3|DWORD[.] = MOV [v1|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - 
>@ <|@ instruction v4|DWORD = MOV [v2|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SUB (x: v12|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v15|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = CMOVE (falseValue: v17|DWORD, ~trueValue: v14|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = DEC v19|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v13|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@105371f1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1678566231] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid j511 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i15 
=== Succesors ===
=== Usages ===
j515 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i15  <|@  <|@
f <@~|@floating>@ <|@
tid j515 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j511 
y: j514 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j511 y: j514  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j515 
y: j509 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j515 y: j509  <|@  <|@
f <@~|@floating>@ <|@
tid i661 <|@
result int[-91931|0xfffffffffffe98e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -91931
stableDimension: 0
stamp: i32 [-91931] â‡Š00000000fffe98e5 â‡ˆ00000000fffe98e5
stampKind: i32
value: int[-91931|0xfffffffffffe98e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i651 i651 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v517 
=== Succesors ===
trueSuccessor: v711 
falseSuccessor: v708 
=== Usages ===
=== Predecessor ===
v703 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v517 #trueSuccessor: v711 #falseSuccessor: v708  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v24|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v710 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v710  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i754 
=== Succesors ===
=== Usages ===
v710 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i15 y: i754  <|@  <|@
f <@*|@fixed>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v518 
=== Succesors ===
trueSuccessor: v701 
falseSuccessor: v709 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v518 #trueSuccessor: v701 #falseSuccessor: v709  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v699 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v699  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
v701 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v786  <|@  <|@
f <@*|@fixed>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
v709 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91931|0xfffffffffffe98e5], v23|QWORD[.]] destination: B4 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v660  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
v708 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91931|0xfffffffffffe98e5], v23|QWORD[.]] destination: B5 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
v700 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B3" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v698 v699 
=== Succesors ===
next: a755 
=== Usages ===
v523 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v698 v699 #next: a755  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
result [v2|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a755 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a755 <|@
result v26|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:993) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v770 
=== Succesors ===
next: v789 
=== Usages ===
?84 v789 v776 v779 v780 v781 v782 v783 ?89 v790 
=== Predecessor ===
v697 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v770 #next: v789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a755 
=== Succesors ===
next: v720 
=== Usages ===
=== Predecessor ===
a755 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a755 #next: v720  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v521 
=== Succesors ===
trueSuccessor: v719 
falseSuccessor: v716 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v521 #trueSuccessor: v719 #falseSuccessor: v716  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[.] = MOV [v2|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v26|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: i756 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i756  <|@  <|@
f <@~|@floating>@ <|@
tid v790 <|@
result [v26|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a755 
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i756 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v790 
=== Succesors ===
next: v728 
=== Usages ===
j524 v529 
=== Predecessor ===
v719 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v790 #next: v728  <|@  <|@
f <@~|@floating>@ <|@
tid j525 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i33 
=== Succesors ===
=== Usages ===
j526 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i33  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j514 
y: j525 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j514 y: j525  <|@  <|@
f <@~|@floating>@ <|@
tid j524 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i756 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i756  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j526 
y: j524 
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j526 y: j524  <|@  <|@
f <@~|@floating>@ <|@
tid i664 <|@
result int[-98331|0xfffffffffffe7fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -98331
stableDimension: 0
stamp: i32 [-98331] â‡Š00000000fffe7fe5 â‡ˆ00000000fffe7fe5
stampKind: i32
value: int[-98331|0xfffffffffffe7fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i651 i651 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v528 
=== Succesors ===
trueSuccessor: v727 
falseSuccessor: v724 
=== Usages ===
=== Predecessor ===
i756 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v528 #trueSuccessor: v727 #falseSuccessor: v724  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOV [v26|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = ADD (x: v28|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v726  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i33 
y: i756 
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i33 y: i756  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v529 
=== Succesors ===
trueSuccessor: v717 
falseSuccessor: v725 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v529 #trueSuccessor: v717 #falseSuccessor: v725  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v715  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v717 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v787 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v787  <|@  <|@
f <@*|@fixed>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
v725 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-98331|0xfffffffffffe7fe5], v23|QWORD[.]] destination: B11 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v663  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
v724 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-98331|0xfffffffffffe7fe5], v23|QWORD[.]] destination: B12 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v714 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v714  <|@  <|@
f <@*|@fixed>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v716 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v714 v715 
=== Succesors ===
next: i757 
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v714 v715 #next: i757  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
result [v1|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i757 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i757 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.isReadOnly
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v766 
=== Succesors ===
next: v579 
=== Usages ===
i326 
=== Predecessor ===
v713 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v766 #next: v579  <|@  <|@
f <@~|@floating>@ <|@
tid i326 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i757 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i757  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v212 v182 v307 v292 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i326 
y: i123 
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i326 y: i123  <|@  <|@
f <@~|@floating>@ <|@
tid a650 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v674 a652 a652 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v182 
=== Succesors ===
trueSuccessor: v576 
falseSuccessor: v578 
=== Usages ===
=== Predecessor ===
i757 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v182 #trueSuccessor: v576 #falseSuccessor: v578  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i758 
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i758  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
result [v2|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i758 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.isReadOnly
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v771 
=== Succesors ===
next: v583 
=== Usages ===
i344 
=== Predecessor ===
v576 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v771 #next: v583  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i758 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i758  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i344 
y: i123 
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i344 y: i123  <|@  <|@
f <@*|@fixed>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v212 
=== Succesors ===
trueSuccessor: v580 
falseSuccessor: v582 
=== Usages ===
=== Predecessor ===
i758 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v212 #trueSuccessor: v580 #falseSuccessor: v582  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVZXB [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i76 i77 i111 i160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i468 <|@
result short[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] â‡Š0000000000000080 â‡ˆ0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
v580 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD, v13|DWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628637802645400890
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i50 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i15 i77 
=== Succesors ===
=== Usages ===
j534 v544 v775 v541 i77 i535 ?84 i87 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i15 i77  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i33 i76 
=== Succesors ===
=== Usages ===
v776 v53 ?84 i88 i76 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i33 i76  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 28.22483567140919
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v48 
=== Succesors ===
next: v60 
=== Usages ===
i50 i51 v56 v68 v83 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v48 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i46 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i51 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
stamp: void
trueSuccessorProbability: 0.9647521705459672
=== Inputs ===
condition: v53 
=== Succesors ===
trueSuccessor: v54 
falseSuccessor: v56 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v53 #trueSuccessor: v54 #falseSuccessor: v56  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9647521705459672 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4628357773269532405
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: i759 
=== Usages ===
v523 v533 
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i759  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v697 v54 
=== Succesors ===
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v697 v54  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
result [v22|QWORD[.] + v33|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a321 
index: i50 
=== Succesors ===
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a321 index: i50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i759 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v523 
address: v775 
=== Succesors ===
next: v74 
=== Usages ===
v469 i471 
=== Predecessor ===
v54 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v523 address: v775 #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i759 
y: i468 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i759 y: i468  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
stamp: void
trueSuccessorProbability: 0.9998113914335037
=== Inputs ===
condition: v469 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v68 
=== Usages ===
=== Predecessor ===
i759 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v469 #trueSuccessor: v64 #falseSuccessor: v68  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVSX [v22|QWORD[.] + v33|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v35|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998113914335037 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4628356327668690234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v713 v54 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v713 v54  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
result [v34|DWORD + v26|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i51 
index: a755 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i51 index: a755  <|@  <|@
f <@~|@floating>@ <|@
tid i471 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
resultBits: 8
stamp: i8
=== Inputs ===
value: i759 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v391 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v533 
address: v776 
value: i471 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v533 address: v776 value: i471 stateAfter: - lastLocationAccess: - #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
stamp: i32
=== Inputs ===
x: i51 
y: i75 
=== Succesors ===
=== Usages ===
i51 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i51 y: i75  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
stamp: i32
=== Inputs ===
x: i50 
y: i75 
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i50 y: i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
loopBegin: v49 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v34|DWORD + v26|DWORD[.] * 8 + 16], y: v35|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = INC v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|DWORD, v36|DWORD] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4572571203203216089
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
v68 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607136159573067931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
v56 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v65 v67 
=== Succesors ===
next: v736 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v65 v67 #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i22 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i50 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v735 
falseSuccessor: v732 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v735 #falseSuccessor: v732  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v744  <|@  <|@
f <@~|@floating>@ <|@
tid j534 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i50 
=== Succesors ===
=== Usages ===
j538 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i50  <|@  <|@
f <@~|@floating>@ <|@
tid i535 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i22 
y: i50 
=== Succesors ===
=== Usages ===
j536 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i22 y: i50  <|@  <|@
f <@~|@floating>@ <|@
tid j536 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i535 
=== Succesors ===
=== Usages ===
j537 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i535  <|@  <|@
f <@~|@floating>@ <|@
tid j537 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j536 
y: j513 
=== Succesors ===
=== Usages ===
j538 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j536 y: j513  <|@  <|@
f <@~|@floating>@ <|@
tid j538 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j534 
y: j537 
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j534 y: j537  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j538 
y: j509 
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j538 y: j509  <|@  <|@
f <@*|@fixed>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v540 
=== Succesors ===
trueSuccessor: v743 
falseSuccessor: v740 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v540 #trueSuccessor: v743 #falseSuccessor: v740  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v33|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SUB (x: v15|DWORD, ~y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVSXD v39|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = DEC v40|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = ADD (x: v38|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v742 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i754 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i50 y: i754  <|@  <|@
f <@*|@fixed>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v541 
=== Succesors ===
trueSuccessor: v733 
falseSuccessor: v741 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v541 #trueSuccessor: v733 #falseSuccessor: v741  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v731 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v731  <|@  <|@
f <@*|@fixed>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
v733 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v739 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v739  <|@  <|@
f <@*|@fixed>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
v741 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v738  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
v740 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v738 v739 
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v738 v739 #next: v585  <|@  <|@
tid ?84 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a321 i50 i22 a755 i51 i40 - - - 
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a321 i50 i22 a755 i51 i40 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 397
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
reason: BoundsCheckException
speculation: Object[d.a@717309548]
stamp: void
=== Inputs ===
stateBefore: ?84 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?84  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@717309548] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -101659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v43|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v22|QWORD[.] v33|DWORD v15|DWORD v26|DWORD[.] v34|DWORD v12|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v730  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
v732 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v730 v731 
=== Succesors ===
next: v85 
=== Usages ===
v546 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v730 v731 #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v729 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD, v34|DWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B35" "B45" 
    successors "B32" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607880422110324866
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i87 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v86 
values: i50 i160 i160 
=== Succesors ===
=== Usages ===
?89 v90 i160 v778 v418 i254 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v86 values: i50 i160 i160  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v86 
values: i51 i111 i174 
=== Succesors ===
=== Usages ===
?89 i261 v103 v418 i111 v779 i174 i126 v781 i173 v426 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v86 values: i51 i111 i174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.1549878692735835
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v85 
=== Succesors ===
next: v97 
=== Usages ===
i87 i88 v93 v106 v161 v175 v616 v591 v596 v601 v606 v611 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v85 #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i87 
y: i22 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i87 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
stamp: void
trueSuccessorProbability: 0.13421063470488903
=== Inputs ===
condition: v90 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v90 #trueSuccessor: v91 #falseSuccessor: v93  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD, v45|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13421063470488903 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594752903744524012
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: i760 
=== Usages ===
v546 
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i760  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v729 v91 
=== Succesors ===
=== Usages ===
i760 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v729 v91  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
result [v22|QWORD[.] + v44|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a321 
index: i87 
=== Succesors ===
=== Usages ===
i760 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a321 index: i87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i760 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v546 
address: v778 
=== Succesors ===
next: i761 
=== Usages ===
i404 
=== Predecessor ===
v91 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v546 address: v778 #next: i761  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
result [v26|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a755 
=== Succesors ===
=== Usages ===
i761 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i761 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v780 
=== Succesors ===
next: v102 
=== Usages ===
v426 v446 
=== Predecessor ===
i760 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v780 #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i88 
y: i761 
=== Succesors ===
=== Usages ===
v612 v592 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i88 y: i761  <|@  <|@
f <@~|@floating>@ <|@
tid i404 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
resultBits: 32
stamp: i32 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i760 
=== Succesors ===
=== Usages ===
v99 i112 i140 v118 i149 v247 i132 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i760  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
result int[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 84]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] â‡Š0000000000000080 â‡ˆ0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i150 v99 i143 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i404 
y: i62 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i404 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
stamp: i32
=== Inputs ===
x: i87 
y: i75 
=== Succesors ===
=== Usages ===
i87 i87 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i87 y: i75  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 151]
stamp: i32
=== Inputs ===
x: i88 
y: i75 
=== Succesors ===
=== Usages ===
v782 i88 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i88 y: i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
stamp: void
trueSuccessorProbability: 0.9444529691575878
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v100 
falseSuccessor: v101 
=== Usages ===
=== Predecessor ===
i761 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v100 #falseSuccessor: v101  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVSX [v22|QWORD[.] + v44|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV [v26|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZX v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v48|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594442680051054030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i88 
y: i40 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i88 y: i40  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
stamp: void
trueSuccessorProbability: 0.9998375304630381
=== Inputs ===
condition: v103 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v106 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v103 #trueSuccessor: v104 #falseSuccessor: v106  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594441823079525107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: v592 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v592  <|@  <|@
f <@*|@fixed>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v426 
=== Succesors ===
trueSuccessor: v588 
falseSuccessor: v591 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v426 #trueSuccessor: v588 #falseSuccessor: v591  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594441823079525107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: v417 
=== Usages ===
v417 
=== Predecessor ===
v592 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
result [v45|DWORD + v26|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i88 
index: a755 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i88 index: a755  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 156]
resultBits: 8
stamp: i8
=== Inputs ===
value: i404 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v588 
address: v779 
value: i112 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v588 address: v779 value: i112 stateAfter: - lastLocationAccess: - #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
loopBegin: v86 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v86  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v45|DWORD + v26|DWORD[.] * 8 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD, v50|DWORD] destination: B35 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v675  <|@  <|@
f <@~|@floating>@ <|@
tid i676 <|@
result int[-104987|0xfffffffffffe65e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -104987
stableDimension: 0
stamp: i32 [-104987] â‡Š00000000fffe65e5 â‡ˆ00000000fffe65e5
stampKind: i32
value: int[-104987|0xfffffffffffe65e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v591 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104987|0xfffffffffffe65e5]] destination: B36 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4537641535899654761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 137]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: a163 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: a163  <|@  <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
returnStamp: a# Ljava/nio/charset/CoderResult;
signature: [Ljdk.vm.ci.meta.JavaType;@5e6c3fc
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>
=== Inputs ===
arguments: a2 i87 a3 i88 
=== Succesors ===
=== Usages ===
a163 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 i87 a3 i88  <|@  <|@
tid ?643 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
a163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a163 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
polymorphic: false
stamp: a# Ljava/nio/charset/CoderResult;
targetMethod: Direct#UTF_8$Encoder.overflow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v418 
stateDuring: ?643 
=== Succesors ===
next: v165 
=== Usages ===
v165 
=== Predecessor ===
v106 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v418 stateDuring: ?643 #next: v165  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stamp: void
=== Inputs ===
result: a163 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a163 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a163 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 161]
stamp: void
=== Inputs ===
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
result int[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 163]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] â‡Š0000000000000800 â‡ˆ0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i404 
y: i117 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i404 y: i117  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v596 
falseSuccessor: v593 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v596 #falseSuccessor: v593  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v48|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v677  <|@  <|@
f <@~|@floating>@ <|@
tid i678 <|@
result int[-107283|0xfffffffffffe5ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -107283
stableDimension: 0
stamp: i32 [-107283] â‡Š00000000fffe5ced â‡ˆ00000000fffe5ced
stampKind: i32
value: int[-107283|0xfffffffffffe5ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v596 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-107283|0xfffffffffffe5ced]] destination: B39 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
=== Inputs ===
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v602  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
result int[55296|0xd800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] â‡Š000000000000d800 â‡ˆ000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i404 
y: i246 
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i404 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v598 
falseSuccessor: v601 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v598 #falseSuccessor: v601  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v48|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
stamp: void
=== Inputs ===
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v607  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 398]
stamp: i32
=== Inputs ===
x: i40 
y: i88 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i40 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 399]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] â‡Š0000000000000003 â‡ˆ0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 i174 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i126 
y: i127 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i126 y: i127  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v606 
falseSuccessor: v603 
=== Usages ===
=== Predecessor ===
v598 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v606 #falseSuccessor: v603  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SUB (x: v12|DWORD, ~y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v52|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v681 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid i682 <|@
result int[-107795|0xfffffffffffe5aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -107795
stableDimension: 0
stamp: i32 [-107795] â‡Š00000000fffe5aed â‡ˆ00000000fffe5aed
stampKind: i32
value: int[-107795|0xfffffffffffe5aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v606 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-107795|0xfffffffffffe5aed]] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
=== Inputs ===
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v612  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v426 
=== Succesors ===
trueSuccessor: v608 
falseSuccessor: v611 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v426 #trueSuccessor: v608 #falseSuccessor: v611  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
=== Inputs ===
=== Succesors ===
next: v617 
=== Usages ===
v507 
=== Predecessor ===
v612 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
stamp: i32
=== Inputs ===
x: i88 
y: i172 
=== Succesors ===
=== Usages ===
v446 v783 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i88 y: i172  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i173 
y: i761 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i173 y: i761  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v446 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v446 #trueSuccessor: v613 #falseSuccessor: v616  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = LEA [v45|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
=== Inputs ===
=== Succesors ===
next: v434 
=== Usages ===
v507 
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v613 v608 
=== Succesors ===
=== Usages ===
v434 v454 v444 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v613 v608  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
result [v45|DWORD + v26|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i88 
index: a755 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i88 index: a755  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 425]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] â‡Š000000000000000c â‡ˆ000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 427]
stamp: i32 [0 - 15] â‡ˆ000000000000000f
=== Inputs ===
x: i404 
y: i131 
=== Succesors ===
=== Usages ===
i133 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i404 y: i131  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
result int[224|0xe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 420]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] â‡Š00000000000000e0 â‡ˆ00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 428]
stamp: i32 [224 - 239] â‡Š00000000000000e0 â‡ˆ00000000000000ef
=== Inputs ===
x: i132 
y: i130 
=== Succesors ===
=== Usages ===
i134 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i132 y: i130  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 429]
resultBits: 8
stamp: i8 [-32 - -17] â‡Š00000000000000e0 â‡ˆ00000000000000ef
=== Inputs ===
value: i133 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v434 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v507 
address: v781 
value: i134 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v507 address: v781 value: i134 stateAfter: - lastLocationAccess: - #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
result [v50|DWORD + v26|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i111 
index: a755 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i111 index: a755  <|@  <|@
f <@~|@floating>@ <|@
tid i139 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 443]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] â‡Š0000000000000006 â‡ˆ0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 445]
stamp: i32 [0 - 1023] â‡ˆ00000000000003ff
=== Inputs ===
x: i404 
y: i139 
=== Succesors ===
=== Usages ===
i142 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i404 y: i139  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 446]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] â‡Š000000000000003f â‡ˆ000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i142 i149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 448]
stamp: i32 [0 - 63] â‡ˆ000000000000003f
=== Inputs ===
x: i140 
y: i141 
=== Succesors ===
=== Usages ===
i143 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i140 y: i141  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 449]
stamp: i32 [128 - 191] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
x: i142 
y: i62 
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i142 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 450]
resultBits: 8
stamp: i8 [-128 - -65] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
value: i143 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v507 
address: v782 
value: i144 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v507 address: v782 value: i144 stateAfter: - lastLocationAccess: - #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v783 <|@
result [v53|DWORD + v26|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i173 
index: a755 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i173 index: a755  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 466]
stamp: i32 [0 - 63] â‡ˆ000000000000003f
=== Inputs ===
x: i404 
y: i141 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i404 y: i141  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 467]
stamp: i32 [128 - 191] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
x: i149 
y: i62 
=== Succesors ===
=== Usages ===
i151 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i149 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid i151 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 468]
resultBits: 8
stamp: i8 [-128 - -65] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
value: i150 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v454 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v507 
address: v783 
value: i151 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v507 address: v783 value: i151 stateAfter: - lastLocationAccess: - #next: v175  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 456]
stamp: i32
=== Inputs ===
x: i88 
y: i127 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i88 y: i127  <|@  <|@
f <@*|@fixed>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
stamp: void
=== Inputs ===
loopBegin: v86 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v86  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SHR v48|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = OR v54|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v45|DWORD + v26|DWORD[.] * 8 + 16], y: v55|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHR v48|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = AND v56|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = OR v57|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v50|DWORD + v26|DWORD[.] * 8 + 16], y: v58|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = AND v48|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = OR v59|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v53|DWORD + v26|DWORD[.] * 8 + 16], y: v60|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = LEA [v45|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD, v61|DWORD] destination: B45 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v685  <|@  <|@
f <@~|@floating>@ <|@
tid i686 <|@
result int[-114459|0xfffffffffffe40e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -114459
stableDimension: 0
stamp: i32 [-114459] â‡Š00000000fffe40e5 â‡ˆ00000000fffe40e5
stampKind: i32
value: int[-114459|0xfffffffffffe40e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-114459|0xfffffffffffe40e5]] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid i684 <|@
result int[-109339|0xfffffffffffe54e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -109339
stableDimension: 0
stamp: i32 [-109339] â‡Š00000000fffe54e5 â‡ˆ00000000fffe54e5
stampKind: i32
value: int[-109339|0xfffffffffffe54e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v611 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-109339|0xfffffffffffe54e5]] destination: B47 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v679 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v679  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
result int[-107539|0xfffffffffffe5bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -107539
stableDimension: 0
stamp: i32 [-107539] â‡Š00000000fffe5bed â‡ˆ00000000fffe5bed
stampKind: i32
value: int[-107539|0xfffffffffffe5bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v601 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-107539|0xfffffffffffe5bed]] destination: B48 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 476]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v621  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 6]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: i32
=== Inputs ===
x: i87 
y: i751 
=== Succesors ===
=== Usages ===
v313 v305 v307 v457 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i87 y: i751  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i752 
y: i254 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i752 y: i254  <|@  <|@
f <@*|@fixed>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v620 
falseSuccessor: v618 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v620 #falseSuccessor: v618  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = SUB (x: v44|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v670 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v670  <|@  <|@
f <@~|@floating>@ <|@
tid i671 <|@
result int[-116499|0xfffffffffffe38ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -116499
stableDimension: 0
stamp: i32 [-116499] â‡Š00000000fffe38ed â‡ˆ00000000fffe38ed
stampKind: i32
value: int[-116499|0xfffffffffffe38ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-116499|0xfffffffffffe38ed]] destination: B50 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v625 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v625  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i254 
y: i123 
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i254 y: i123  <|@  <|@
f <@*|@fixed>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v307 
=== Succesors ===
trueSuccessor: v624 
falseSuccessor: v622 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v307 #trueSuccessor: v624 #falseSuccessor: v622  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v687 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v687  <|@  <|@
f <@~|@floating>@ <|@
tid i688 <|@
result int[-116755|0xfffffffffffe37ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -116755
stableDimension: 0
stamp: i32 [-116755] â‡Š00000000fffe37ed â‡ˆ00000000fffe37ed
stampKind: i32
value: int[-116755|0xfffffffffffe37ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v624 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-116755|0xfffffffffffe37ed]] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i762 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i762  <|@  <|@
f <@~|@floating>@ <|@
tid v784 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i762 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v784 
=== Succesors ===
next: v629 
=== Usages ===
v313 
=== Predecessor ===
v622 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v784 #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid v313 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i254 
y: i762 
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i254 y: i762  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v313 
=== Succesors ===
trueSuccessor: v628 
falseSuccessor: v626 
=== Usages ===
=== Predecessor ===
i762 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v313 #trueSuccessor: v628 #falseSuccessor: v626  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@~|@floating>@ <|@
tid i690 <|@
result int[-117779|0xfffffffffffe33ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -117779
stableDimension: 0
stamp: i32 [-117779] â‡Š00000000fffe33ed â‡ˆ00000000fffe33ed
stampKind: i32
value: int[-117779|0xfffffffffffe33ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v628 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-117779|0xfffffffffffe33ed]] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v633  <|@  <|@
f <@~|@floating>@ <|@
tid i261 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 17]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: i32
=== Inputs ===
x: i88 
y: i749 
=== Succesors ===
=== Usages ===
v298 v290 v292 v463 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i88 y: i749  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i750 
y: i261 
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i750 y: i261  <|@  <|@
f <@*|@fixed>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v290 
=== Succesors ===
trueSuccessor: v632 
falseSuccessor: v630 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v290 #trueSuccessor: v632 #falseSuccessor: v630  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v45|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@~|@floating>@ <|@
tid i692 <|@
result int[-118035|0xfffffffffffe32ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -118035
stableDimension: 0
stamp: i32 [-118035] â‡Š00000000fffe32ed â‡ˆ00000000fffe32ed
stampKind: i32
value: int[-118035|0xfffffffffffe32ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v632 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-118035|0xfffffffffffe32ed]] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v637 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v637  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i261 
y: i123 
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i261 y: i123  <|@  <|@
f <@*|@fixed>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v292 
=== Succesors ===
trueSuccessor: v636 
falseSuccessor: v634 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v292 #trueSuccessor: v636 #falseSuccessor: v634  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v693 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v693  <|@  <|@
f <@~|@floating>@ <|@
tid i694 <|@
result int[-118291|0xfffffffffffe31ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -118291
stableDimension: 0
stamp: i32 [-118291] â‡Š00000000fffe31ed â‡ˆ00000000fffe31ed
stampKind: i32
value: int[-118291|0xfffffffffffe31ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v636 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-118291|0xfffffffffffe31ed]] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i763 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i763  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i763 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i763 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v785 
=== Succesors ===
next: v641 
=== Usages ===
v298 
=== Predecessor ===
v634 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v785 #next: v641  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i261 
y: i763 
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i261 y: i763  <|@  <|@
f <@*|@fixed>@ <|@
tid v641 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v298 
=== Succesors ===
trueSuccessor: v640 
falseSuccessor: v638 
=== Usages ===
=== Predecessor ===
i763 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v298 #trueSuccessor: v640 #falseSuccessor: v638  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|DWORD, y: [v2|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v695  <|@  <|@
f <@~|@floating>@ <|@
tid i696 <|@
result int[-119315|0xfffffffffffe2ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -119315
stableDimension: 0
stamp: i32 [-119315] â‡Š00000000fffe2ded â‡ˆ00000000fffe2ded
stampKind: i32
value: int[-119315|0xfffffffffffe2ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v640 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-119315|0xfffffffffffe2ded]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B50" "B36" "B39" "B48" "B42" "B47" "B46" "B52" "B54" "B56" "B58" "B60" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i672 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-119315 - -104987] â‡Š00000000fffe00e5 â‡ˆ00000000fffe7fed
valueDescription: i32
=== Inputs ===
merge: v669 
values: i671 i676 i678 i680 i682 i684 i686 i688 i690 i692 i694 i696 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v669 values: i671 i676 i678 i680 i682 i684 i686 i688 i690 i692 i694 i696  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v670 v675 v677 v679 v681 v683 v685 v687 v689 v691 v693 v695 
=== Succesors ===
next: v674 
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v670 v675 v677 v679 v681 v683 v685 v687 v689 v691 v693 v695 #next: v674  <|@  <|@
tid ?89 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a321 i87 i22 a755 i88 i40 - - - 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a321 i87 i22 a755 i88 i40 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?89 
actionAndReason: i672 
speculation: a650 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?89 actionAndReason: i672 speculation: a650  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v22|QWORD[.] v44|DWORD v15|DWORD v26|DWORD[.] v45|DWORD v12|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v768 
value: i254 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v768 value: i254 stateAfter: - lastLocationAccess: - #next: v463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v773 
value: i261 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v773 value: i261 stateAfter: - lastLocationAccess: - #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid a170 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:637) [bci: 485]
rawvalue: CoderResult@1617107905
stableDimension: 0
stamp: a!# Ljava/nio/charset/CoderResult;
stampKind: a -
value: Object[CoderResult@1617107905]
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:637) [bci: 488]
stamp: void
=== Inputs ===
result: a170 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a170 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid i668 <|@
result int[-88339|0xfffffffffffea6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -88339
stableDimension: 0
stamp: i32 [-88339] â‡Š00000000fffea6ed â‡ˆ00000000fffea6ed
stampKind: i32
value: int[-88339|0xfffffffffffea6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i651 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
v582 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88339|0xfffffffffffea6ed], Object[null]] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid i666 <|@
result int[-83731|0xfffffffffffeb8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -83731
stableDimension: 0
stamp: i32 [-83731] â‡Š00000000fffeb8ed â‡ˆ00000000fffeb8ed
stampKind: i32
value: int[-83731|0xfffffffffffeb8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i651 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
v578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-83731|0xfffffffffffeb8ed], Object[null]] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" "B64" "B63" "B4" "B11" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i651 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-98331 - -81163] â‡Š00000000fffe00e5 â‡ˆ00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v647 
values: i661 i664 i666 i668 i661 i664 
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v647 values: i661 i664 i666 i668 i661 i664  <|@  <|@
f <@~|@floating>@ <|@
tid a652 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v647 
values: a662 a662 a650 a650 a662 a662 
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v647 values: a662 a662 a650 a650 a662 a662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v660 v663 v665 v667 v786 v787 
=== Succesors ===
next: v653 
=== Usages ===
i651 a652 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v660 v663 v665 v667 v786 v787 #next: v653  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i651 
speculation: a652 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i651 speculation: a652  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD, v67|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v67|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13463e95 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - 
>@ <|@ instruction v3|DWORD[.] = MOV [v1|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - 
>@ <|@ instruction v4|DWORD = MOV [v2|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SUB (x: v12|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v15|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = CMOVE (falseValue: v17|DWORD, ~trueValue: v14|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = DEC v19|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v13|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@105371f1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B3" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[.] = MOV [v2|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v26|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVZXB [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD, v13|DWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4628357773269532405
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVSX [v22|QWORD[.] + v33|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v35|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998113914335037 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4628356327668690234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v34|DWORD + v26|DWORD[.] * 8 + 16], y: v35|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = INC v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|DWORD, v36|DWORD] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628637802645400890
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9647521705459672 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607136159573067931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD, v34|DWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B35" "B45" 
    successors "B32" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607880422110324866
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD, v45|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13421063470488903 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594752903744524012
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVSX [v22|QWORD[.] + v44|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV [v26|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZX v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v48|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594442680051054030
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594441823079525107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594441823079525107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v45|DWORD + v26|DWORD[.] * 8 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD, v50|DWORD] destination: B35 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v48|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v48|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SUB (x: v12|DWORD, ~y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v52|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = LEA [v45|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SHR v48|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = OR v54|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v45|DWORD + v26|DWORD[.] * 8 + 16], y: v55|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHR v48|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = AND v56|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = OR v57|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v50|DWORD + v26|DWORD[.] * 8 + 16], y: v58|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = AND v48|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = OR v59|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v53|DWORD + v26|DWORD[.] * 8 + 16], y: v60|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = LEA [v45|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD, v61|DWORD] destination: B45 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = SUB (x: v44|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v45|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|DWORD, y: [v2|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v24|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v33|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SUB (x: v15|DWORD, ~y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVSXD v39|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = DEC v40|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = ADD (x: v38|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOV [v26|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = ADD (x: v28|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4572571203203216089
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4537641535899654761
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-114459|0xfffffffffffe40e5]] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B50" "B36" "B39" "B48" "B42" "B47" "B46" "B52" "B54" "B56" "B58" "B60" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v22|QWORD[.] v44|DWORD v15|DWORD v26|DWORD[.] v45|DWORD v12|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-116755|0xfffffffffffe37ed]] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@717309548] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -101659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v43|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v22|QWORD[.] v33|DWORD v15|DWORD v26|DWORD[.] v34|DWORD v12|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1678566231] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-98331|0xfffffffffffe7fe5], v68|QWORD[.]] destination: B12 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" "B64" "B63" "B4" "B11" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD, v67|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v67|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1678566231] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91931|0xfffffffffffe98e5], v71|QWORD[.]] destination: B4 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-118291|0xfffffffffffe31ed]] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-118035|0xfffffffffffe32ed]] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-116499|0xfffffffffffe38ed]] destination: B50 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-117779|0xfffffffffffe33ed]] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-119315|0xfffffffffffe2ded]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-107795|0xfffffffffffe5aed]] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1678566231] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-98331|0xfffffffffffe7fe5], v69|QWORD[.]] destination: B11 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-107283|0xfffffffffffe5ced]] destination: B39 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1678566231] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91931|0xfffffffffffe98e5], v70|QWORD[.]] destination: B5 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-109339|0xfffffffffffe54e5]] destination: B47 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88339|0xfffffffffffea6ed], Object[null]] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-107539|0xfffffffffffe5bed]] destination: B48 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-83731|0xfffffffffffeb8ed], Object[null]] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104987|0xfffffffffffe65e5]] destination: B36 -> B61 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #8          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #10         // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #11         // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #12         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #14         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #15         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: iload         7
    57: iload         5
    59: iload         4
    61: isub          
    62: iload         8
    64: iload         7
    66: isub          
    67: invokestatic  #16         // java.lang.Math.min:(int, int)int
    70: iadd          
    71: istore        9
    73: iload         7
    75: iload         9
    77: if_icmpge     109
    80: aload_3       
    81: iload         4
    83: caload        
    84: sipush        128
    87: if_icmpge     109
    90: aload         6
    92: iload         7
    94: iinc          
    97: aload_3       
    98: iload         4
   100: iinc          
   103: caload        
   104: i2b           
   105: bastore       
   106: goto          73
   109: iload         4
   111: iload         5
   113: if_icmpge     476
   116: aload_3       
   117: iload         4
   119: caload        
   120: istore        10
   122: iload         10
   124: sipush        128
   127: if_icmpge     161
   130: iload         7
   132: iload         8
   134: if_icmplt     147
   137: aload_1       
   138: iload         4
   140: aload_2       
   141: iload         7
   143: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   146: areturn       
   147: aload         6
   149: iload         7
   151: iinc          
   154: iload         10
   156: i2b           
   157: bastore       
   158: goto          470
   161: iload         10
   163: sipush        2048
   166: if_icmpge     227
   169: iload         8
   171: iload         7
   173: isub          
   174: iconst_2      
   175: if_icmpge     188
   178: aload_1       
   179: iload         4
   181: aload_2       
   182: iload         7
   184: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   187: areturn       
   188: aload         6
   190: iload         7
   192: iinc          
   195: sipush        192
   198: iload         10
   200: bipush        6
   202: ishr          
   203: ior           
   204: i2b           
   205: bastore       
   206: aload         6
   208: iload         7
   210: iinc          
   213: sipush        128
   216: iload         10
   218: bipush        63
   220: iand          
   221: ior           
   222: i2b           
   223: bastore       
   224: goto          470
   227: iload         10
   229: invokestatic  #3          // java.lang.Character.isSurrogate:(char)boolean
   232: ifeq          394
   235: aload_0       
   236: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   239: ifnonnull     253
   242: aload_0       
   243: new           #22         // sun.nio.cs.Surrogate$Parser
   246: dup           
   247: invokespecial #19         // sun.nio.cs.Surrogate$Parser.<init>:()void
   250: putfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   253: aload_0       
   254: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   257: iload         10
   259: aload_3       
   260: iload         4
   262: iload         5
   264: invokevirtual #20         // sun.nio.cs.Surrogate$Parser.parse:(char, char[], int, int)int
   267: istore        11
   269: iload         11
   271: ifge          291
   274: aload_1       
   275: iload         4
   277: aload_2       
   278: iload         7
   280: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   283: aload_0       
   284: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   287: invokevirtual #21         // sun.nio.cs.Surrogate$Parser.error:()java.nio.charset.CoderResult
   290: areturn       
   291: iload         8
   293: iload         7
   295: isub          
   296: iconst_4      
   297: if_icmpge     310
   300: aload_1       
   301: iload         4
   303: aload_2       
   304: iload         7
   306: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   309: areturn       
   310: aload         6
   312: iload         7
   314: iinc          
   317: sipush        240
   320: iload         11
   322: bipush        18
   324: ishr          
   325: ior           
   326: i2b           
   327: bastore       
   328: aload         6
   330: iload         7
   332: iinc          
   335: sipush        128
   338: iload         11
   340: bipush        12
   342: ishr          
   343: bipush        63
   345: iand          
   346: ior           
   347: i2b           
   348: bastore       
   349: aload         6
   351: iload         7
   353: iinc          
   356: sipush        128
   359: iload         11
   361: bipush        6
   363: ishr          
   364: bipush        63
   366: iand          
   367: ior           
   368: i2b           
   369: bastore       
   370: aload         6
   372: iload         7
   374: iinc          
   377: sipush        128
   380: iload         11
   382: bipush        63
   384: iand          
   385: ior           
   386: i2b           
   387: bastore       
   388: iinc          
   391: goto          470
   394: iload         8
   396: iload         7
   398: isub          
   399: iconst_3      
   400: if_icmpge     413
   403: aload_1       
   404: iload         4
   406: aload_2       
   407: iload         7
   409: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   412: areturn       
   413: aload         6
   415: iload         7
   417: iinc          
   420: sipush        224
   423: iload         10
   425: bipush        12
   427: ishr          
   428: ior           
   429: i2b           
   430: bastore       
   431: aload         6
   433: iload         7
   435: iinc          
   438: sipush        128
   441: iload         10
   443: bipush        6
   445: ishr          
   446: bipush        63
   448: iand          
   449: ior           
   450: i2b           
   451: bastore       
   452: aload         6
   454: iload         7
   456: iinc          
   459: sipush        128
   462: iload         10
   464: bipush        63
   466: iand          
   467: ior           
   468: i2b           
   469: bastore       
   470: iinc          
   473: goto          109
   476: aload_1       
   477: iload         4
   479: aload_2       
   480: iload         7
   482: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   485: getstatic     #22         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   488: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13463e95 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - 
>@ <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   20  <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   22  <|@ instruction rbp|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction r13|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r14|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r11|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction rdi|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction r10|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr   48  <|@ instruction rsi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction r10|DWORD = ADD (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@105371f1 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B3" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction rbx|DWORD[.] = MOV [rcx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr  118  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction stack:48|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  186  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rsi|DWORD = MOVZXB [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  194  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction r9|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction r8|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4628357773269532405
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVSX [rax|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  216  <|@ instruction CMP rsi|DWORD y: 128 size: WORD <|@ <|@
      nr  218  <|@ instruction BRANCH trueDestinationProbability: 0.9998113914335037 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4628356327668690234
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction MOVB (x: [r9|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  224  <|@ instruction r9|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628637802645400890
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  208  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction BRANCH trueDestinationProbability: 0.9647521705459672 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607136159573067931
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r10|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction r8|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B35" "B45" 
    successors "B32" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607880422110324866
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  308  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 0.13421063470488903 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594752903744524012
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rsi|DWORD = MOVSX [rax|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  316  <|@ instruction r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  318  <|@ instruction rsi|DWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr  320  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction rbp|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction CMP rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594442680051054030
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594441823079525107
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594441823079525107
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction MOVB (x: [r8|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  344  <|@ instruction r8|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B35 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction CMP rsi|DWORD y: 2048 size: DWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction CMP rsi|DWORD y: 55296 size: DWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction r13|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  408  <|@ instruction CMP (x: r9|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction r10|DWORD = SHR rsi|DWORD y: 12 size: DWORD <|@ <|@
      nr  416  <|@ instruction r10|DWORD = OR r10|DWORD y: 224 size: DWORD <|@ <|@
      nr  418  <|@ instruction MOVB (x: [r8|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  420  <|@ instruction r10|DWORD = SHR rsi|DWORD y: 6 size: DWORD <|@ <|@
      nr  422  <|@ instruction r10|DWORD = AND r10|DWORD y: 63 size: DWORD <|@ <|@
      nr  424  <|@ instruction r10|DWORD = OR r10|DWORD y: 128 size: DWORD <|@ <|@
      nr  426  <|@ instruction MOVB (x: [rbp|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  428  <|@ instruction rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOVB (x: [r13|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  434  <|@ instruction r8|DWORD = LEA [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  436  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B45 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:52|DWORD) size: DWORD <|@ <|@
      nr  462  <|@ instruction CMP (x: rsi|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  476  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction CMP (x: rsi|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  488  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r9|DWORD = SUB (x: r8|DWORD, ~y: stack:40|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction CMP (x: r9|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction CMP (x: r9|DWORD, y: [rcx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  526  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  546  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: r9|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905] <|@ <|@
      nr  550  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rbx|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: r13|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction CMP (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction rsi|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  248  <|@ instruction r10|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  252  <|@ instruction r10|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction CMP (x: r13|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction CMP (x: rbp|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction stack:48|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  130  <|@ instruction r14|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  132  <|@ instruction r14|QWORD = ADD (x: r14|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction rsi|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction CMP (x: rsi|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4572571203203216089
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4537641535899654761
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143] <|@ <|@
      nr  364  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction r9|DWORD = MOVE input: int[-114459|0xfffffffffffe40e5] <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B50" "B36" "B39" "B48" "B42" "B47" "B46" "B52" "B54" "B56" "B58" "B60" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  540  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rax|QWORD[.] r10|DWORD r11|DWORD rbx|DWORD[.] r8|DWORD r14|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction r9|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@717309548] <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 668] y: -101659 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rax|QWORD[.] r8|DWORD r11|DWORD rbx|DWORD[.] r9|DWORD r14|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1678566231] <|@ <|@
      nr  166  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction r10|DWORD = MOVE input: int[-98331|0xfffffffffffe7fe5] <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B12 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" "B64" "B63" "B4" "B11" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  574  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  578  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1678566231] <|@ <|@
      nr   86  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction r10|DWORD = MOVE input: int[-91931|0xfffffffffffe98e5] <|@ <|@
      nr   90  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B4 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction r9|DWORD = MOVE input: int[-118291|0xfffffffffffe31ed] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction r9|DWORD = MOVE input: int[-118035|0xfffffffffffe32ed] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction r9|DWORD = MOVE input: int[-116499|0xfffffffffffe38ed] <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B50 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction r9|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed] <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction r9|DWORD = MOVE input: int[-119315|0xfffffffffffe2ded] <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction r9|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed] <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1678566231] <|@ <|@
      nr  154  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: int[-98331|0xfffffffffffe7fe5] <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B11 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction r9|DWORD = MOVE input: int[-107283|0xfffffffffffe5ced] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B39 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1678566231] <|@ <|@
      nr   98  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = MOVE input: int[-91931|0xfffffffffffe98e5] <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B5 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction r9|DWORD = MOVE input: int[-109339|0xfffffffffffe54e5] <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B47 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  556  <|@ instruction r10|DWORD = MOVE input: int[-88339|0xfffffffffffea6ed] <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction r9|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed] <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B48 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  566  <|@ instruction r10|DWORD = MOVE input: int[-83731|0xfffffffffffeb8ed] <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction r9|DWORD = MOVE input: int[-104987|0xfffffffffffe65e5] <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B36 -> B61 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #8          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #10         // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #11         // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #12         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #14         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #15         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: iload         7
    57: iload         5
    59: iload         4
    61: isub          
    62: iload         8
    64: iload         7
    66: isub          
    67: invokestatic  #16         // java.lang.Math.min:(int, int)int
    70: iadd          
    71: istore        9
    73: iload         7
    75: iload         9
    77: if_icmpge     109
    80: aload_3       
    81: iload         4
    83: caload        
    84: sipush        128
    87: if_icmpge     109
    90: aload         6
    92: iload         7
    94: iinc          
    97: aload_3       
    98: iload         4
   100: iinc          
   103: caload        
   104: i2b           
   105: bastore       
   106: goto          73
   109: iload         4
   111: iload         5
   113: if_icmpge     476
   116: aload_3       
   117: iload         4
   119: caload        
   120: istore        10
   122: iload         10
   124: sipush        128
   127: if_icmpge     161
   130: iload         7
   132: iload         8
   134: if_icmplt     147
   137: aload_1       
   138: iload         4
   140: aload_2       
   141: iload         7
   143: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   146: areturn       
   147: aload         6
   149: iload         7
   151: iinc          
   154: iload         10
   156: i2b           
   157: bastore       
   158: goto          470
   161: iload         10
   163: sipush        2048
   166: if_icmpge     227
   169: iload         8
   171: iload         7
   173: isub          
   174: iconst_2      
   175: if_icmpge     188
   178: aload_1       
   179: iload         4
   181: aload_2       
   182: iload         7
   184: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   187: areturn       
   188: aload         6
   190: iload         7
   192: iinc          
   195: sipush        192
   198: iload         10
   200: bipush        6
   202: ishr          
   203: ior           
   204: i2b           
   205: bastore       
   206: aload         6
   208: iload         7
   210: iinc          
   213: sipush        128
   216: iload         10
   218: bipush        63
   220: iand          
   221: ior           
   222: i2b           
   223: bastore       
   224: goto          470
   227: iload         10
   229: invokestatic  #3          // java.lang.Character.isSurrogate:(char)boolean
   232: ifeq          394
   235: aload_0       
   236: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   239: ifnonnull     253
   242: aload_0       
   243: new           #22         // sun.nio.cs.Surrogate$Parser
   246: dup           
   247: invokespecial #19         // sun.nio.cs.Surrogate$Parser.<init>:()void
   250: putfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   253: aload_0       
   254: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   257: iload         10
   259: aload_3       
   260: iload         4
   262: iload         5
   264: invokevirtual #20         // sun.nio.cs.Surrogate$Parser.parse:(char, char[], int, int)int
   267: istore        11
   269: iload         11
   271: ifge          291
   274: aload_1       
   275: iload         4
   277: aload_2       
   278: iload         7
   280: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   283: aload_0       
   284: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   287: invokevirtual #21         // sun.nio.cs.Surrogate$Parser.error:()java.nio.charset.CoderResult
   290: areturn       
   291: iload         8
   293: iload         7
   295: isub          
   296: iconst_4      
   297: if_icmpge     310
   300: aload_1       
   301: iload         4
   303: aload_2       
   304: iload         7
   306: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   309: areturn       
   310: aload         6
   312: iload         7
   314: iinc          
   317: sipush        240
   320: iload         11
   322: bipush        18
   324: ishr          
   325: ior           
   326: i2b           
   327: bastore       
   328: aload         6
   330: iload         7
   332: iinc          
   335: sipush        128
   338: iload         11
   340: bipush        12
   342: ishr          
   343: bipush        63
   345: iand          
   346: ior           
   347: i2b           
   348: bastore       
   349: aload         6
   351: iload         7
   353: iinc          
   356: sipush        128
   359: iload         11
   361: bipush        6
   363: ishr          
   364: bipush        63
   366: iand          
   367: ior           
   368: i2b           
   369: bastore       
   370: aload         6
   372: iload         7
   374: iinc          
   377: sipush        128
   380: iload         11
   382: bipush        63
   384: iand          
   385: ior           
   386: i2b           
   387: bastore       
   388: iinc          
   391: goto          470
   394: iload         8
   396: iload         7
   398: isub          
   399: iconst_3      
   400: if_icmpge     413
   403: aload_1       
   404: iload         4
   406: aload_2       
   407: iload         7
   409: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   412: areturn       
   413: aload         6
   415: iload         7
   417: iinc          
   420: sipush        224
   423: iload         10
   425: bipush        12
   427: ishr          
   428: ior           
   429: i2b           
   430: bastore       
   431: aload         6
   433: iload         7
   435: iinc          
   438: sipush        128
   441: iload         10
   443: bipush        6
   445: ishr          
   446: bipush        63
   448: iand          
   449: ior           
   450: i2b           
   451: bastore       
   452: aload         6
   454: iload         7
   456: iinc          
   459: sipush        128
   462: iload         10
   464: bipush        63
   466: iand          
   467: ior           
   468: i2b           
   469: bastore       
   470: iinc          
   473: goto          109
   476: aload_1       
   477: iload         4
   479: aload_2       
   480: iload         7
   482: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   485: getstatic     #22         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   488: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13463e95 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - 
>@ <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   20  <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   22  <|@ instruction rbp|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction r13|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r14|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r11|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction rdi|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction r10|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr   48  <|@ instruction rsi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction r10|DWORD = ADD (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@105371f1 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction rbx|DWORD[.] = MOV [rcx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr  118  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction stack:48|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B15" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  186  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rsi|DWORD = MOVZXB [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  194  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction r9|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction r8|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4628357773269532405
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVSX [rax|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  216  <|@ instruction CMP rsi|DWORD y: 128 size: WORD <|@ <|@
      nr  218  <|@ instruction BRANCH trueDestinationProbability: 0.9998113914335037 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4628356327668690234
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction MOVB (x: [r9|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  224  <|@ instruction r9|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B22" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628637802645400890
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  208  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction BRANCH trueDestinationProbability: 0.9647521705459672 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B23" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r10|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction r8|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B35" "B45" 
    successors "B32" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607880422110324866
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  308  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 0.13421063470488903 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594752903744524012
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rsi|DWORD = MOVSX [rax|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  316  <|@ instruction r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  318  <|@ instruction rsi|DWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr  320  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction rbp|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction CMP rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594442680051054030
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594441823079525107
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594441823079525107
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction MOVB (x: [r8|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  344  <|@ instruction r8|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B35 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction CMP rsi|DWORD y: 2048 size: DWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction CMP rsi|DWORD y: 55296 size: DWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction r13|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  408  <|@ instruction CMP (x: r9|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576117200876573146
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction r10|DWORD = SHR rsi|DWORD y: 12 size: DWORD <|@ <|@
      nr  416  <|@ instruction r10|DWORD = OR r10|DWORD y: 224 size: DWORD <|@ <|@
      nr  418  <|@ instruction MOVB (x: [r8|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  420  <|@ instruction r10|DWORD = SHR rsi|DWORD y: 6 size: DWORD <|@ <|@
      nr  422  <|@ instruction r10|DWORD = AND r10|DWORD y: 63 size: DWORD <|@ <|@
      nr  424  <|@ instruction r10|DWORD = OR r10|DWORD y: 128 size: DWORD <|@ <|@
      nr  426  <|@ instruction MOVB (x: [rbp|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  428  <|@ instruction rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOVB (x: [r13|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  434  <|@ instruction r8|DWORD = LEA [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  436  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B45 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:52|DWORD) size: DWORD <|@ <|@
      nr  462  <|@ instruction CMP (x: rsi|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  476  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction CMP (x: rsi|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  488  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r9|DWORD = SUB (x: r8|DWORD, ~y: stack:40|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction CMP (x: r9|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction CMP (x: r9|DWORD, y: [rcx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  526  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4607182204557135177
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  546  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: r9|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905] <|@ <|@
      nr  550  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rbx|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: r13|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction CMP (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B7 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction rsi|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  248  <|@ instruction r10|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  252  <|@ instruction r10|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction CMP (x: r13|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction CMP (x: rbp|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B30 falseDestination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  130  <|@ instruction r14|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  132  <|@ instruction r14|QWORD = ADD (x: r14|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction rsi|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction CMP (x: rsi|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B14 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4537641535899654761
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143] <|@ <|@
      nr  364  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction r9|DWORD = MOVE input: int[-114459|0xfffffffffffe40e5] <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B50" "B36" "B39" "B48" "B42" "B47" "B46" "B52" "B54" "B56" "B58" "B60" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  540  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rax|QWORD[.] r10|DWORD r11|DWORD rbx|DWORD[.] r8|DWORD r14|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction r9|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B23" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  284  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@717309548] <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 668] y: -101659 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rax|QWORD[.] r8|DWORD r11|DWORD rbx|DWORD[.] r9|DWORD r14|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1678566231] <|@ <|@
      nr  166  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction r10|DWORD = MOVE input: int[-98331|0xfffffffffffe7fe5] <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B12 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" "B64" "B63" "B4" "B11" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  578  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1678566231] <|@ <|@
      nr   86  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction r10|DWORD = MOVE input: int[-91931|0xfffffffffffe98e5] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B4 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction r9|DWORD = MOVE input: int[-118291|0xfffffffffffe31ed] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction r9|DWORD = MOVE input: int[-118035|0xfffffffffffe32ed] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction r9|DWORD = MOVE input: int[-116499|0xfffffffffffe38ed] <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B50 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction r9|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed] <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction r9|DWORD = MOVE input: int[-119315|0xfffffffffffe2ded] <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction r9|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed] <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1678566231] <|@ <|@
      nr  154  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: int[-98331|0xfffffffffffe7fe5] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B11 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction r9|DWORD = MOVE input: int[-107283|0xfffffffffffe5ced] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B39 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1678566231] <|@ <|@
      nr   98  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = MOVE input: int[-91931|0xfffffffffffe98e5] <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B5 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction r9|DWORD = MOVE input: int[-109339|0xfffffffffffe54e5] <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B47 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  556  <|@ instruction r10|DWORD = MOVE input: int[-88339|0xfffffffffffea6ed] <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction r9|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed] <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B48 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  566  <|@ instruction r10|DWORD = MOVE input: int[-83731|0xfffffffffffeb8ed] <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction r9|DWORD = MOVE input: int[-104987|0xfffffffffffe65e5] <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B36 -> B61 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #8          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #10         // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #11         // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #12         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #14         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #15         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: iload         7
    57: iload         5
    59: iload         4
    61: isub          
    62: iload         8
    64: iload         7
    66: isub          
    67: invokestatic  #16         // java.lang.Math.min:(int, int)int
    70: iadd          
    71: istore        9
    73: iload         7
    75: iload         9
    77: if_icmpge     109
    80: aload_3       
    81: iload         4
    83: caload        
    84: sipush        128
    87: if_icmpge     109
    90: aload         6
    92: iload         7
    94: iinc          
    97: aload_3       
    98: iload         4
   100: iinc          
   103: caload        
   104: i2b           
   105: bastore       
   106: goto          73
   109: iload         4
   111: iload         5
   113: if_icmpge     476
   116: aload_3       
   117: iload         4
   119: caload        
   120: istore        10
   122: iload         10
   124: sipush        128
   127: if_icmpge     161
   130: iload         7
   132: iload         8
   134: if_icmplt     147
   137: aload_1       
   138: iload         4
   140: aload_2       
   141: iload         7
   143: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   146: areturn       
   147: aload         6
   149: iload         7
   151: iinc          
   154: iload         10
   156: i2b           
   157: bastore       
   158: goto          470
   161: iload         10
   163: sipush        2048
   166: if_icmpge     227
   169: iload         8
   171: iload         7
   173: isub          
   174: iconst_2      
   175: if_icmpge     188
   178: aload_1       
   179: iload         4
   181: aload_2       
   182: iload         7
   184: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   187: areturn       
   188: aload         6
   190: iload         7
   192: iinc          
   195: sipush        192
   198: iload         10
   200: bipush        6
   202: ishr          
   203: ior           
   204: i2b           
   205: bastore       
   206: aload         6
   208: iload         7
   210: iinc          
   213: sipush        128
   216: iload         10
   218: bipush        63
   220: iand          
   221: ior           
   222: i2b           
   223: bastore       
   224: goto          470
   227: iload         10
   229: invokestatic  #3          // java.lang.Character.isSurrogate:(char)boolean
   232: ifeq          394
   235: aload_0       
   236: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   239: ifnonnull     253
   242: aload_0       
   243: new           #22         // sun.nio.cs.Surrogate$Parser
   246: dup           
   247: invokespecial #19         // sun.nio.cs.Surrogate$Parser.<init>:()void
   250: putfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   253: aload_0       
   254: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   257: iload         10
   259: aload_3       
   260: iload         4
   262: iload         5
   264: invokevirtual #20         // sun.nio.cs.Surrogate$Parser.parse:(char, char[], int, int)int
   267: istore        11
   269: iload         11
   271: ifge          291
   274: aload_1       
   275: iload         4
   277: aload_2       
   278: iload         7
   280: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   283: aload_0       
   284: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   287: invokevirtual #21         // sun.nio.cs.Surrogate$Parser.error:()java.nio.charset.CoderResult
   290: areturn       
   291: iload         8
   293: iload         7
   295: isub          
   296: iconst_4      
   297: if_icmpge     310
   300: aload_1       
   301: iload         4
   303: aload_2       
   304: iload         7
   306: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   309: areturn       
   310: aload         6
   312: iload         7
   314: iinc          
   317: sipush        240
   320: iload         11
   322: bipush        18
   324: ishr          
   325: ior           
   326: i2b           
   327: bastore       
   328: aload         6
   330: iload         7
   332: iinc          
   335: sipush        128
   338: iload         11
   340: bipush        12
   342: ishr          
   343: bipush        63
   345: iand          
   346: ior           
   347: i2b           
   348: bastore       
   349: aload         6
   351: iload         7
   353: iinc          
   356: sipush        128
   359: iload         11
   361: bipush        6
   363: ishr          
   364: bipush        63
   366: iand          
   367: ior           
   368: i2b           
   369: bastore       
   370: aload         6
   372: iload         7
   374: iinc          
   377: sipush        128
   380: iload         11
   382: bipush        63
   384: iand          
   385: ior           
   386: i2b           
   387: bastore       
   388: iinc          
   391: goto          470
   394: iload         8
   396: iload         7
   398: isub          
   399: iconst_3      
   400: if_icmpge     413
   403: aload_1       
   404: iload         4
   406: aload_2       
   407: iload         7
   409: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   412: areturn       
   413: aload         6
   415: iload         7
   417: iinc          
   420: sipush        224
   423: iload         10
   425: bipush        12
   427: ishr          
   428: ior           
   429: i2b           
   430: bastore       
   431: aload         6
   433: iload         7
   435: iinc          
   438: sipush        128
   441: iload         10
   443: bipush        6
   445: ishr          
   446: bipush        63
   448: iand          
   449: ior           
   450: i2b           
   451: bastore       
   452: aload         6
   454: iload         7
   456: iinc          
   459: sipush        128
   462: iload         10
   464: bipush        63
   466: iand          
   467: ior           
   468: i2b           
   469: bastore       
   470: iinc          
   473: goto          109
   476: aload_1       
   477: iload         4
   479: aload_2       
   480: iload         7
   482: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   485: getstatic     #22         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   488: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24308b422c418504c4448b4118448b5124448b591c448b4a248b5a1c8b7a188b2cc50c000000448bed458bf24503f34503c24889742420418bf6412bf044895c241c458bd94403db4103f94489542418458bd3442bd7443bd6440f4fd64963f248ffce4503d048c1e003453bd00f8fcc010000895c24148b592c418504dc453bd0448974241044894c240c0f8ff70100000fb6722885f60f85670300000fb6712885f60f853b030000458bc8448bc7e92a0000000f1f80000000000f1f8000000000420fbf7440106681fe80000f8310000000418874d91041ffc141ffc0453bd17fdf453bd80f8f73010000458bd0448b742410458bc16666660f1f840000000000453bda0f8ec8000000420fbf745010448b0cdd0c0000000fb7f6418bfaffc7418be8ffc581fe800000000f831f000000453bf00f8e75010000453bc80f86d5020000418874d810448bc5448bd7ebb181fe000800000f825902000081fe00d800000f8390020000458bee452be84183fd030f8c1a020000453bc80f8657020000458d6802453bcd0f8643010000448bd641c1ea0c4181cae0000000458854d810448bd641c1ea064183e23f4181ca80000000448854dd1083e63f81ce80000000418874dd10458d4003448bd7e92fffffff418bf22b74240c3b7424140f8f8e01000085f60f8c000100003b720c0f8c88010000458bc8442b4c2418443b4c241c0f8f5f0100004585c90f8c4b010000443b490c0f8c6d0100008972184489491848b8addeaddeaddeadde488b6c24304883c438850500000000c5f877c3895c24144863df4803de4c3beb0f866f0100003bef0f871dfeffffe9e80000004963f0458bd3452bd04d63d249ffca4903f24c3bee0f867a000000413be80f8769feffffe96c000000448b0cdd0c0000004d63f04c03f6418bf1493bf60f8679000000453bc80f87e6fdffffe9ee000000488bf2418bd2666690e80000000090488b6c24304883c438850500000000c5f877c341b9e540feff45898f9c0200004d89a7a8020000e8000000009041b9ed37feffebe4448b74241049baaddeaddeaddeadde41c7879c020000e572feff4d8997a8020000e8000000009049baaddeaddeaddeadde4d8bda41bae57ffeff488b7424204589979c0200004d899fa8020000e8000000009049baaddeaddeaddeadde4d8bda41bae598feffebd241b9ed31feffe971ffffff41b9ed32feffe966ffffff41b9ed38feffe95bffffff41b9ed33feffe950ffffff41b9ed2dfeffe945ffffff41b9ed5afeffe93affffff49baaddeaddeaddeadde4d8bda41bae57ffeffe978ffffff41b9ed5cfeffe917ffffff49baaddeaddeaddeadde4d8bda41bae598feffe955ffffff41b9e554feffe9f4feffff49bb000000000000000041baeda6feffe935ffffff41b9ed5bfeffe9d4feffff49bb000000000000000041baedb8feffe915ffffff41b9e565feffe9b4feffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13463e95 slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD state [bci:0]  <||@
  Comment 48 [rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 51 8 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0]  <||@
  Comment 51 [rax:0, rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 55 10 r8|DWORD = MOV [rcx|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 55 [rax:0, rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 55 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 r10|DWORD = MOV [rcx|QWORD[.] + 36] size: DWORD  <||@
  Comment 63 14 r11|DWORD = MOV [rcx|QWORD[.] + 28] size: DWORD  <||@
  Comment 67 16 r9|DWORD = MOV [rdx|QWORD[.] + 36] size: DWORD  <||@
  Comment 71 18 rbx|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 74 20 rdi|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 77 22 rbp|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 84 24 r13|QWORD = MOV rbp|DWORD size: DWORD  <||@
  Comment 87 26 r14|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 93 28 r8|DWORD = ADD (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 96 30 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 101 32 rsi|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 107 34 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 112 36 r11|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 118 38 rdi|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 121 40 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 126 42 r10|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 132 44 CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 135 46 r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rsi|DWORD) condition: >  <||@
  Comment 139 48 rsi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 142 50 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 145 52 r10|DWORD = ADD (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 148 54 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@105371f1 encoding: base: 0 shift: 3  <||@
  Comment 152 56 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 155 58 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 161 block B6 null  <||@
  Comment 161 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 161 108 stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 165 110 JUMP ~[] destination: B6 -> B7  <||@
  Comment 165 block B7 null  <||@
  Comment 165 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 165 114 rbx|DWORD[.] = MOV [rcx|QWORD[.] + 44] size: DWORD  <||@
  Comment 168 116 NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:0]  <||@
  Comment 168 [rax:0, rcx:0, rdx:0, rbx:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 168 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 172 118 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 175 124 stack:48|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 180 126 stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 185 120 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B14  <||@
  Comment 191 block B14 null  <||@
  Comment 191 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 191 184 rsi|DWORD = MOVZXB [rdx|QWORD[.] + 40] size: DWORD  <||@
  Comment 195 186 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 197 188 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B64  <||@
  Comment 203 block B15 null  <||@
  Comment 203 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 192 rsi|DWORD = MOVZXB [rcx|QWORD[.] + 40] size: DWORD  <||@
  Comment 207 194 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 209 196 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B63  <||@
  Comment 215 block B16 null  <||@
  Comment 215 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 215 200 r9|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 218 202 r8|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 221 204 JUMP ~[] destination: B16 -> B17  <||@
  Comment 226 block B18 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 226 212 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 240 214 rsi|DWORD = MOVSX [rax|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD  <||@
  Comment 246 216 CMP rsi|DWORD y: 128 size: WORD  <||@
  Comment 251 218 BRANCH trueDestinationProbability: 0.9998113914335037 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B22  <||@
  Comment 257 block B19 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 257 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 257 222 MOVB (x: [r9|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 262 224 r9|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 265 226 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 268 228 JUMP ~[] destination: B19 -> B17  <||@
  Comment 268 block B17 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 268 206 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 268 208 CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 271 210 BRANCH trueDestinationProbability: 0.9647521705459672 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B22  <||@
  Comment 273 block B22 null  <||@
  Comment 273 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 273 240 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 276 242 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B30  <||@
  Comment 282 block B30 null  <||@
  Comment 282 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 282 298 r10|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 285 300 r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 290 302 r8|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 293 304 JUMP ~[] destination: B30 -> B31  <||@
  Comment 293 block B31 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 293 306 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 304 308 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 307 310 BRANCH trueDestinationProbability: 0.13421063470488903 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B49  <||@
  Comment 313 block B32 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 313 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 313 314 rsi|DWORD = MOVSX [rax|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 319 316 r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 327 318 rsi|DWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 330 320 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 335 322 rbp|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 340 324 CMP rsi|DWORD y: 128 size: DWORD  <||@
  Comment 346 326 BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B38  <||@
  Comment 352 block B33 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 352 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 352 330 CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 355 332 BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B37  <||@
  Comment 361 block B34 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 361 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 361 336 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 364 338 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36  <||@
  Comment 370 block B35 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 370 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 370 342 MOVB (x: [r8|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 375 344 r8|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 378 346 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 381 348 JUMP ~[] destination: B35 -> B31  <||@
  Comment 383 block B38 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 383 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 383 368 CMP rsi|DWORD y: 2048 size: DWORD  <||@
  Comment 389 370 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 395 block B40 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 395 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 395 380 CMP rsi|DWORD y: 55296 size: DWORD  <||@
  Comment 401 382 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B48  <||@
  Comment 407 block B41 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 407 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 407 386 r13|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 413 388 CMP r13|DWORD y: 3 size: DWORD  <||@
  Comment 417 390 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 423 block B43 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 423 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 423 400 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 426 402 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B47  <||@
  Comment 432 block B44 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 432 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 432 406 r13|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 436 408 CMP (x: r9|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 439 410 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 445 block B45 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 445 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 445 414 r10|DWORD = SHR rsi|DWORD y: 12 size: DWORD  <||@
  Comment 452 416 r10|DWORD = OR r10|DWORD y: 224 size: DWORD  <||@
  Comment 459 418 MOVB (x: [r8|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 464 420 r10|DWORD = SHR rsi|DWORD y: 6 size: DWORD  <||@
  Comment 471 422 r10|DWORD = AND r10|DWORD y: 63 size: DWORD  <||@
  Comment 475 424 r10|DWORD = OR r10|DWORD y: 128 size: DWORD  <||@
  Comment 482 426 MOVB (x: [rbp|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 487 428 rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD  <||@
  Comment 490 430 rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD  <||@
  Comment 496 432 MOVB (x: [r13|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 501 434 r8|DWORD = LEA [r8|DWORD + 3] size: DWORD  <||@
  Comment 505 436 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 508 438 JUMP ~[] destination: B45 -> B31  <||@
  Comment 513 block B49 null  <||@
  Comment 513 458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 513 460 rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:52|DWORD) size: DWORD  <||@
  Comment 520 462 CMP (x: rsi|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 524 464 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 530 block B51 null  <||@
  Comment 530 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 530 474 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 532 476 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 538 block B53 null  <||@
  Comment 538 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 538 486 CMP (x: rsi|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 541 488 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 547 block B55 null  <||@
  Comment 547 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 547 498 r9|DWORD = SUB (x: r8|DWORD, ~y: stack:40|DWORD) size: DWORD  <||@
  Comment 555 500 CMP (x: r9|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 560 502 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 566 block B57 null  <||@
  Comment 566 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 566 512 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 569 514 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 575 block B59 null  <||@
  Comment 575 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 575 524 CMP (x: r9|DWORD, y: [rcx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 579 526 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B62  <||@
  Comment 585 block B62 null  <||@
  Comment 585 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 544 MOV (x: [rdx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD  <||@
  Comment 588 546 MOV (x: [rcx|QWORD[.] + 24], y: r9|DWORD) size: DWORD  <||@
  Comment 592 548 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905]  <||@
  Comment 592 {Object[CoderResult@1617107905]}  <||@
  Comment 602 550 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 611 12  <||@
  Comment 621 block B1 null  <||@
  Comment 621 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 621 62 stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 625 64 rbx|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 628 66 rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 631 68 CMP (x: r13|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 634 70 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 640 block B2 null  <||@
  Comment 640 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 640 74 CMP (x: rbp|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 642 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B7 falseDestination: B2 -> B4  <||@
  Comment 653 block B23 null  <||@
  Comment 653 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 653 246 rsi|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 656 248 r10|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 662 250 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 665 252 r10|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 668 254 rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 671 256 CMP (x: r13|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 674 258 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B28  <||@
  Comment 680 block B24 null  <||@
  Comment 680 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 680 262 CMP (x: rbp|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 683 264 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B30 falseDestination: B24 -> B28  <||@
  Comment 694 block B8 null  <||@
  Comment 694 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 694 128 r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 702 130 r14|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 705 132 r14|QWORD = ADD (x: r14|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 708 134 rsi|QWORD = MOV r9|DWORD size: DWORD  <||@
  Comment 711 136 CMP (x: rsi|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 714 138 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12  <||@
  Comment 720 block B9 null  <||@
  Comment 720 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 720 142 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 723 144 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B14 falseDestination: B9 -> B11  <||@
  Comment 734 block B37 null  <||@
  Comment 734 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 734 358 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 737 360 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 740 362 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143]  <||@
  Comment 740 8  <||@
  Comment 743 {HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>}  <||@
  Comment 748 []at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 749 364 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 758 12  <||@
  Comment 768 block B46 null  <||@
  Comment 768 440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 768 442 r9|DWORD = MOVE input: int[-114459|0xfffffffffffe40e5]  <||@
  Comment 774 444 JUMP ~[] destination: B46 -> B61  <||@
  Comment 774 block B61 null  <||@
  Comment 774 534 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 774 536 MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD  <||@
  Comment 781 538 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 788 540 DEOPT info [bci:109]  <||@
  Comment 788 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 793 [rax:0, rcx:0, rdx:0, rbx:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4          |5          |6             |7         |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |rax|QWORD[.]  |r10|DWORD  |r11|DWORD  |rbx|DWORD[.]  |r8|DWORD  |r14|DWORD  |-  |-   |-    <||@
  Comment 794 block B52 null  <||@
  Comment 794 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 794 480 r9|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed]  <||@
  Comment 800 482 JUMP ~[] destination: B52 -> B61  <||@
  Comment 802 block B28 null  <||@
  Comment 802 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 802 278 r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 807 284 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@717309548]  <||@
  Comment 807 {Object[d.a@717309548]}  <||@
  Comment 817 286 MOV [r15|QWORD + 668] y: -101659 size: DWORD  <||@
  Comment 828 288 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 835 290 DEOPT info [bci:109]  <||@
  Comment 835 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 840 [rax:0, rcx:0, rdx:0, rbx:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5          |6             |7         |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |rax|QWORD[.]  |r8|DWORD  |r11|DWORD  |rbx|DWORD[.]  |r9|DWORD  |r14|DWORD  |-  |-   |-    <||@
  Comment 841 block B12 null  <||@
  Comment 841 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 841 164 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1678566231]  <||@
  Comment 841 {Object[d.a@1678566231]}  <||@
  Comment 851 166 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 854 168 r10|DWORD = MOVE input: int[-98331|0xfffffffffffe7fe5]  <||@
  Comment 860 172 JUMP ~[] destination: B12 -> B65  <||@
  Comment 860 block B65 null  <||@
  Comment 860 572 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 860 102 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 865 574 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 872 576 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 879 578 DEOPT info [bci:0]  <||@
  Comment 879 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 884 [rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 885 block B4 null  <||@
  Comment 885 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 885 84 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1678566231]  <||@
  Comment 885 {Object[d.a@1678566231]}  <||@
  Comment 895 86 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 898 88 r10|DWORD = MOVE input: int[-91931|0xfffffffffffe98e5]  <||@
  Comment 904 92 JUMP ~[] destination: B4 -> B65  <||@
  Comment 906 block B58 null  <||@
  Comment 906 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 906 518 r9|DWORD = MOVE input: int[-118291|0xfffffffffffe31ed]  <||@
  Comment 912 520 JUMP ~[] destination: B58 -> B61  <||@
  Comment 917 block B56 null  <||@
  Comment 917 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 917 506 r9|DWORD = MOVE input: int[-118035|0xfffffffffffe32ed]  <||@
  Comment 923 508 JUMP ~[] destination: B56 -> B61  <||@
  Comment 928 block B50 null  <||@
  Comment 928 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 928 468 r9|DWORD = MOVE input: int[-116499|0xfffffffffffe38ed]  <||@
  Comment 934 470 JUMP ~[] destination: B50 -> B61  <||@
  Comment 939 block B54 null  <||@
  Comment 939 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 939 492 r9|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed]  <||@
  Comment 945 494 JUMP ~[] destination: B54 -> B61  <||@
  Comment 950 block B60 null  <||@
  Comment 950 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 950 530 r9|DWORD = MOVE input: int[-119315|0xfffffffffffe2ded]  <||@
  Comment 956 532 JUMP ~[] destination: B60 -> B61  <||@
  Comment 961 block B42 null  <||@
  Comment 961 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 961 394 r9|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed]  <||@
  Comment 967 396 JUMP ~[] destination: B42 -> B61  <||@
  Comment 972 block B11 null  <||@
  Comment 972 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 972 152 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1678566231]  <||@
  Comment 972 {Object[d.a@1678566231]}  <||@
  Comment 982 154 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 985 156 r10|DWORD = MOVE input: int[-98331|0xfffffffffffe7fe5]  <||@
  Comment 991 160 JUMP ~[] destination: B11 -> B65  <||@
  Comment 996 block B39 null  <||@
  Comment 996 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 996 374 r9|DWORD = MOVE input: int[-107283|0xfffffffffffe5ced]  <||@
  Comment 1002 376 JUMP ~[] destination: B39 -> B61  <||@
  Comment 1007 block B5 null  <||@
  Comment 1007 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1007 96 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1678566231]  <||@
  Comment 1007 {Object[d.a@1678566231]}  <||@
  Comment 1017 98 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1020 100 r10|DWORD = MOVE input: int[-91931|0xfffffffffffe98e5]  <||@
  Comment 1026 104 JUMP ~[] destination: B5 -> B65  <||@
  Comment 1031 block B47 null  <||@
  Comment 1031 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1031 448 r9|DWORD = MOVE input: int[-109339|0xfffffffffffe54e5]  <||@
  Comment 1037 450 JUMP ~[] destination: B47 -> B61  <||@
  Comment 1042 block B63 null  <||@
  Comment 1042 552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1042 554 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1052 556 r10|DWORD = MOVE input: int[-88339|0xfffffffffffea6ed]  <||@
  Comment 1058 560 JUMP ~[] destination: B63 -> B65  <||@
  Comment 1063 block B48 null  <||@
  Comment 1063 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1063 454 r9|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed]  <||@
  Comment 1069 456 JUMP ~[] destination: B48 -> B61  <||@
  Comment 1074 block B64 null  <||@
  Comment 1074 562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1074 564 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1084 566 r10|DWORD = MOVE input: int[-83731|0xfffffffffffeb8ed]  <||@
  Comment 1090 570 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1095 block B36 null  <||@
  Comment 1095 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1095 352 r9|DWORD = MOVE input: int[-104987|0xfffffffffffe65e5]  <||@
  Comment 1101 354 JUMP ~[] destination: B36 -> B61  <||@
  Comment 1106 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1106 4  <||@
  Comment 1112 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1112 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-6248[sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)]"
  method "HotSpotCompilation-6248[sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)]"
  date 1527005115070
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107453c40 448b560849c1e203493bc20f850f223bff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24308b422c418504c4448b4118448b5124448b591c448b4a248b5a1c8b7a188b2cc50c000000448bed458bf24503f34503c24889742420418bf6412bf044895c241c458bd94403db4103f94489542418458bd3442bd7443bd6440f4fd64963f248ffce4503d048c1e003453bd00f8fcc010000895c24148b592c418504dc453bd0448974241044894c240c0f8ff70100000fb6722885f60f85670300000fb6712885f60f853b030000458bc8448bc7e92a0000000f1f80000000000f1f8000000000420fbf7440106681fe80000f8310000000418874d91041ffc141ffc0453bd17fdf453bd80f8f73010000458bd0448b742410458bc16666660f1f840000000000453bda0f8ec8000000420fbf745010448b0cdd0c0000000fb7f6418bfaffc7418be8ffc581fe800000000f831f000000453bf00f8e75010000453bc80f86d5020000418874d810448bc5448bd7ebb181fe000800000f825902000081fe00d800000f8390020000458bee452be84183fd030f8c1a020000453bc80f8657020000458d6802453bcd0f8643010000448bd641c1ea0c4181cae0000000458854d810448bd641c1ea064183e23f4181ca80000000448854dd1083e63f81ce80000000418874dd10458d4003448bd7e92fffffff418bf22b74240c3b7424140f8f8e01000085f60f8c000100003b720c0f8c88010000458bc8442b4c2418443b4c241c0f8f5f0100004585c90f8c4b010000443b490c0f8c6d0100008972184489491848b8b8b91ac006000000488b6c24304883c43885055db143fdc5f877c3895c24144863df4803de4c3beb0f866f0100003bef0f871dfeffffe9e80000004963f0458bd3452bd04d63d249ffca4903f24c3bee0f867a000000413be80f8769feffffe96c000000448b0cdd0c0000004d63f04c03f6418bf1493bf60f8679000000453bc80f87e6fdffffe9ee000000488bf2418bd2666690e8f4253bff90488b6c24304883c4388505cab043fdc5f877c341b9e540feff45898f9c0200004d89a7a8020000e8a5363bff9041b9ed37feffebe4448b74241049baf0cf74900700000041c7879c020000e572feff4d8997a8020000e876363bff9049bad05c7490070000004d8bda41bae57ffeff488b7424204589979c0200004d899fa8020000e84a363bff9049bad05c7490070000004d8bda41bae598feffebd241b9ed31feffe971ffffff41b9ed32feffe966ffffff41b9ed38feffe95bffffff41b9ed33feffe950ffffff41b9ed2dfeffe945ffffff41b9ed5afeffe93affffff49bad05c7490070000004d8bda41bae57ffeffe978ffffff41b9ed5cfeffe917ffffff49bad05c7490070000004d8bda41bae598feffe955ffffff41b9e554feffe9f4feffff49bb000000000000000041baeda6feffe935ffffff41b9ed5bfeffe9d4feffff49bb000000000000000041baedb8feffe915ffffff41b9e565feffe9b4feffffe889657fff90e863343bff90f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@13463e95 slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD state [bci:0]  <||@
  Comment 48 [rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 51 8 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0]  <||@
  Comment 51 [rax:0, rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 55 10 r8|DWORD = MOV [rcx|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 55 [rax:0, rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 55 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 r10|DWORD = MOV [rcx|QWORD[.] + 36] size: DWORD  <||@
  Comment 63 14 r11|DWORD = MOV [rcx|QWORD[.] + 28] size: DWORD  <||@
  Comment 67 16 r9|DWORD = MOV [rdx|QWORD[.] + 36] size: DWORD  <||@
  Comment 71 18 rbx|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 74 20 rdi|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 77 22 rbp|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 84 24 r13|QWORD = MOV rbp|DWORD size: DWORD  <||@
  Comment 87 26 r14|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 93 28 r8|DWORD = ADD (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 96 30 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 101 32 rsi|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 107 34 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 112 36 r11|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 118 38 rdi|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 121 40 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 126 42 r10|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 132 44 CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 135 46 r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rsi|DWORD) condition: >  <||@
  Comment 139 48 rsi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 142 50 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 145 52 r10|DWORD = ADD (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 148 54 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@105371f1 encoding: base: 0 shift: 3  <||@
  Comment 152 56 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 155 58 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 161 block B6 null  <||@
  Comment 161 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 161 108 stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 165 110 JUMP ~[] destination: B6 -> B7  <||@
  Comment 165 block B7 null  <||@
  Comment 165 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 165 114 rbx|DWORD[.] = MOV [rcx|QWORD[.] + 44] size: DWORD  <||@
  Comment 168 116 NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:0]  <||@
  Comment 168 [rax:0, rcx:0, rdx:0, rbx:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 168 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 172 118 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 175 124 stack:48|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 180 126 stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 185 120 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B14  <||@
  Comment 191 block B14 null  <||@
  Comment 191 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 191 184 rsi|DWORD = MOVZXB [rdx|QWORD[.] + 40] size: DWORD  <||@
  Comment 195 186 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 197 188 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B64  <||@
  Comment 203 block B15 null  <||@
  Comment 203 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 192 rsi|DWORD = MOVZXB [rcx|QWORD[.] + 40] size: DWORD  <||@
  Comment 207 194 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 209 196 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B63  <||@
  Comment 215 block B16 null  <||@
  Comment 215 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 215 200 r9|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 218 202 r8|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 221 204 JUMP ~[] destination: B16 -> B17  <||@
  Comment 226 block B18 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 226 212 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 240 214 rsi|DWORD = MOVSX [rax|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD  <||@
  Comment 246 216 CMP rsi|DWORD y: 128 size: WORD  <||@
  Comment 251 218 BRANCH trueDestinationProbability: 0.9998113914335037 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B22  <||@
  Comment 257 block B19 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 257 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 257 222 MOVB (x: [r9|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 262 224 r9|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 265 226 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 268 228 JUMP ~[] destination: B19 -> B17  <||@
  Comment 268 block B17 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 268 206 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 268 208 CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 271 210 BRANCH trueDestinationProbability: 0.9647521705459672 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B22  <||@
  Comment 273 block B22 null  <||@
  Comment 273 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 273 240 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 276 242 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B30  <||@
  Comment 282 block B30 null  <||@
  Comment 282 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 282 298 r10|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 285 300 r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 290 302 r8|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 293 304 JUMP ~[] destination: B30 -> B31  <||@
  Comment 293 block B31 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 293 306 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 304 308 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 307 310 BRANCH trueDestinationProbability: 0.13421063470488903 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B49  <||@
  Comment 313 block B32 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 313 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 313 314 rsi|DWORD = MOVSX [rax|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 319 316 r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 327 318 rsi|DWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 330 320 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 335 322 rbp|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 340 324 CMP rsi|DWORD y: 128 size: DWORD  <||@
  Comment 346 326 BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B38  <||@
  Comment 352 block B33 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 352 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 352 330 CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 355 332 BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B37  <||@
  Comment 361 block B34 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 361 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 361 336 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 364 338 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36  <||@
  Comment 370 block B35 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 370 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 370 342 MOVB (x: [r8|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 375 344 r8|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 378 346 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 381 348 JUMP ~[] destination: B35 -> B31  <||@
  Comment 383 block B38 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 383 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 383 368 CMP rsi|DWORD y: 2048 size: DWORD  <||@
  Comment 389 370 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 395 block B40 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 395 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 395 380 CMP rsi|DWORD y: 55296 size: DWORD  <||@
  Comment 401 382 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B48  <||@
  Comment 407 block B41 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 407 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 407 386 r13|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 413 388 CMP r13|DWORD y: 3 size: DWORD  <||@
  Comment 417 390 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 423 block B43 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 423 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 423 400 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 426 402 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B47  <||@
  Comment 432 block B44 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 432 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 432 406 r13|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 436 408 CMP (x: r9|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 439 410 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 445 block B45 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 445 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 445 414 r10|DWORD = SHR rsi|DWORD y: 12 size: DWORD  <||@
  Comment 452 416 r10|DWORD = OR r10|DWORD y: 224 size: DWORD  <||@
  Comment 459 418 MOVB (x: [r8|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 464 420 r10|DWORD = SHR rsi|DWORD y: 6 size: DWORD  <||@
  Comment 471 422 r10|DWORD = AND r10|DWORD y: 63 size: DWORD  <||@
  Comment 475 424 r10|DWORD = OR r10|DWORD y: 128 size: DWORD  <||@
  Comment 482 426 MOVB (x: [rbp|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 487 428 rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD  <||@
  Comment 490 430 rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD  <||@
  Comment 496 432 MOVB (x: [r13|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 501 434 r8|DWORD = LEA [r8|DWORD + 3] size: DWORD  <||@
  Comment 505 436 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 508 438 JUMP ~[] destination: B45 -> B31  <||@
  Comment 513 block B49 null  <||@
  Comment 513 458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 513 460 rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:52|DWORD) size: DWORD  <||@
  Comment 520 462 CMP (x: rsi|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 524 464 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 530 block B51 null  <||@
  Comment 530 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 530 474 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 532 476 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 538 block B53 null  <||@
  Comment 538 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 538 486 CMP (x: rsi|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 541 488 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 547 block B55 null  <||@
  Comment 547 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 547 498 r9|DWORD = SUB (x: r8|DWORD, ~y: stack:40|DWORD) size: DWORD  <||@
  Comment 555 500 CMP (x: r9|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 560 502 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 566 block B57 null  <||@
  Comment 566 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 566 512 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 569 514 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 575 block B59 null  <||@
  Comment 575 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 575 524 CMP (x: r9|DWORD, y: [rcx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 579 526 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B62  <||@
  Comment 585 block B62 null  <||@
  Comment 585 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 544 MOV (x: [rdx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD  <||@
  Comment 588 546 MOV (x: [rcx|QWORD[.] + 24], y: r9|DWORD) size: DWORD  <||@
  Comment 592 548 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905]  <||@
  Comment 592 {Object[CoderResult@1617107905]}  <||@
  Comment 602 550 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 611 12  <||@
  Comment 621 block B1 null  <||@
  Comment 621 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 621 62 stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 625 64 rbx|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 628 66 rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 631 68 CMP (x: r13|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 634 70 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 640 block B2 null  <||@
  Comment 640 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 640 74 CMP (x: rbp|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 642 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B7 falseDestination: B2 -> B4  <||@
  Comment 653 block B23 null  <||@
  Comment 653 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 653 246 rsi|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 656 248 r10|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 662 250 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 665 252 r10|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 668 254 rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 671 256 CMP (x: r13|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 674 258 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B28  <||@
  Comment 680 block B24 null  <||@
  Comment 680 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 680 262 CMP (x: rbp|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 683 264 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B30 falseDestination: B24 -> B28  <||@
  Comment 694 block B8 null  <||@
  Comment 694 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 694 128 r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 702 130 r14|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 705 132 r14|QWORD = ADD (x: r14|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 708 134 rsi|QWORD = MOV r9|DWORD size: DWORD  <||@
  Comment 711 136 CMP (x: rsi|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 714 138 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12  <||@
  Comment 720 block B9 null  <||@
  Comment 720 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 720 142 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 723 144 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B14 falseDestination: B9 -> B11  <||@
  Comment 734 block B37 null  <||@
  Comment 734 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 734 358 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 737 360 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 740 362 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143]  <||@
  Comment 740 8  <||@
  Comment 743 {HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>}  <||@
  Comment 748 []at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 749 364 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 758 12  <||@
  Comment 768 block B46 null  <||@
  Comment 768 440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 768 442 r9|DWORD = MOVE input: int[-114459|0xfffffffffffe40e5]  <||@
  Comment 774 444 JUMP ~[] destination: B46 -> B61  <||@
  Comment 774 block B61 null  <||@
  Comment 774 534 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 774 536 MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD  <||@
  Comment 781 538 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 788 540 DEOPT info [bci:109]  <||@
  Comment 788 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 793 [rax:0, rcx:0, rdx:0, rbx:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4          |5          |6             |7         |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |rax|QWORD[.]  |r10|DWORD  |r11|DWORD  |rbx|DWORD[.]  |r8|DWORD  |r14|DWORD  |-  |-   |-    <||@
  Comment 794 block B52 null  <||@
  Comment 794 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 794 480 r9|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed]  <||@
  Comment 800 482 JUMP ~[] destination: B52 -> B61  <||@
  Comment 802 block B28 null  <||@
  Comment 802 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 802 278 r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 807 284 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@717309548]  <||@
  Comment 807 {Object[d.a@717309548]}  <||@
  Comment 817 286 MOV [r15|QWORD + 668] y: -101659 size: DWORD  <||@
  Comment 828 288 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 835 290 DEOPT info [bci:109]  <||@
  Comment 835 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 840 [rax:0, rcx:0, rdx:0, rbx:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5          |6             |7         |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |rax|QWORD[.]  |r8|DWORD  |r11|DWORD  |rbx|DWORD[.]  |r9|DWORD  |r14|DWORD  |-  |-   |-    <||@
  Comment 841 block B12 null  <||@
  Comment 841 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 841 164 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1678566231]  <||@
  Comment 841 {Object[d.a@1678566231]}  <||@
  Comment 851 166 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 854 168 r10|DWORD = MOVE input: int[-98331|0xfffffffffffe7fe5]  <||@
  Comment 860 172 JUMP ~[] destination: B12 -> B65  <||@
  Comment 860 block B65 null  <||@
  Comment 860 572 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 860 102 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 865 574 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 872 576 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 879 578 DEOPT info [bci:0]  <||@
  Comment 879 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 884 [rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 885 block B4 null  <||@
  Comment 885 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 885 84 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1678566231]  <||@
  Comment 885 {Object[d.a@1678566231]}  <||@
  Comment 895 86 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 898 88 r10|DWORD = MOVE input: int[-91931|0xfffffffffffe98e5]  <||@
  Comment 904 92 JUMP ~[] destination: B4 -> B65  <||@
  Comment 906 block B58 null  <||@
  Comment 906 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 906 518 r9|DWORD = MOVE input: int[-118291|0xfffffffffffe31ed]  <||@
  Comment 912 520 JUMP ~[] destination: B58 -> B61  <||@
  Comment 917 block B56 null  <||@
  Comment 917 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 917 506 r9|DWORD = MOVE input: int[-118035|0xfffffffffffe32ed]  <||@
  Comment 923 508 JUMP ~[] destination: B56 -> B61  <||@
  Comment 928 block B50 null  <||@
  Comment 928 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 928 468 r9|DWORD = MOVE input: int[-116499|0xfffffffffffe38ed]  <||@
  Comment 934 470 JUMP ~[] destination: B50 -> B61  <||@
  Comment 939 block B54 null  <||@
  Comment 939 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 939 492 r9|DWORD = MOVE input: int[-117779|0xfffffffffffe33ed]  <||@
  Comment 945 494 JUMP ~[] destination: B54 -> B61  <||@
  Comment 950 block B60 null  <||@
  Comment 950 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 950 530 r9|DWORD = MOVE input: int[-119315|0xfffffffffffe2ded]  <||@
  Comment 956 532 JUMP ~[] destination: B60 -> B61  <||@
  Comment 961 block B42 null  <||@
  Comment 961 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 961 394 r9|DWORD = MOVE input: int[-107795|0xfffffffffffe5aed]  <||@
  Comment 967 396 JUMP ~[] destination: B42 -> B61  <||@
  Comment 972 block B11 null  <||@
  Comment 972 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 972 152 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1678566231]  <||@
  Comment 972 {Object[d.a@1678566231]}  <||@
  Comment 982 154 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 985 156 r10|DWORD = MOVE input: int[-98331|0xfffffffffffe7fe5]  <||@
  Comment 991 160 JUMP ~[] destination: B11 -> B65  <||@
  Comment 996 block B39 null  <||@
  Comment 996 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 996 374 r9|DWORD = MOVE input: int[-107283|0xfffffffffffe5ced]  <||@
  Comment 1002 376 JUMP ~[] destination: B39 -> B61  <||@
  Comment 1007 block B5 null  <||@
  Comment 1007 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1007 96 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1678566231]  <||@
  Comment 1007 {Object[d.a@1678566231]}  <||@
  Comment 1017 98 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1020 100 r10|DWORD = MOVE input: int[-91931|0xfffffffffffe98e5]  <||@
  Comment 1026 104 JUMP ~[] destination: B5 -> B65  <||@
  Comment 1031 block B47 null  <||@
  Comment 1031 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1031 448 r9|DWORD = MOVE input: int[-109339|0xfffffffffffe54e5]  <||@
  Comment 1037 450 JUMP ~[] destination: B47 -> B61  <||@
  Comment 1042 block B63 null  <||@
  Comment 1042 552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1042 554 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1052 556 r10|DWORD = MOVE input: int[-88339|0xfffffffffffea6ed]  <||@
  Comment 1058 560 JUMP ~[] destination: B63 -> B65  <||@
  Comment 1063 block B48 null  <||@
  Comment 1063 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1063 454 r9|DWORD = MOVE input: int[-107539|0xfffffffffffe5bed]  <||@
  Comment 1069 456 JUMP ~[] destination: B48 -> B61  <||@
  Comment 1074 block B64 null  <||@
  Comment 1074 562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1074 564 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1084 566 r10|DWORD = MOVE input: int[-83731|0xfffffffffffeb8ed]  <||@
  Comment 1090 570 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1095 block B36 null  <||@
  Comment 1095 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1095 352 r9|DWORD = MOVE input: int[-104987|0xfffffffffffe65e5]  <||@
  Comment 1101 354 JUMP ~[] destination: B36 -> B61  <||@
  Comment 1106 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1106 4  <||@
  Comment 1112 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1112 5  <||@
  HexCodeFile>>> <|@
end_nmethod
