begin_compilation
  name " HotSpotCompilation-3602[java.nio.charset.CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)]"
  method "HotSpotCompilation-3602[java.nio.charset.CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)]"
  date 1527005143186
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1013 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1013  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/UTF_8$Encoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v1036 ?459 ?208 ?87 ?213 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/nio/HeapCharBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v1038 ?213 ?459 ?281 ?87 ?208 v1053 v587 v1055 v1056 v1037 v1039 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/nio/ByteBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v1042 ?213 ?459 ?281 ?87 v1041 ?208 v587 v1057 v1058 v1054 ?426 v1040 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v7 ?459 ?87 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: CharsetEncoder.java
sourceLine: 569
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 i4 - - - 
=== Succesors ===
=== Usages ===
v903 a1013 v1061 a1014 v1062 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 i4 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1013 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1013 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.hb
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v1055 
=== Succesors ===
next: v1061 
=== Usages ===
a667 v1061 v1043 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v1055 #next: v1061  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a1013 
=== Succesors ===
next: a1014 
=== Usages ===
=== Predecessor ===
a1013 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a1013 #next: a1014  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a1014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1014 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: true
stamp: n# [B
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v1057 
=== Succesors ===
next: v1062 
=== Usages ===
?208 v1062 v1045 v1046 v1048 v1050 v1051 v1052 ?213 v1063 
=== Predecessor ===
v1061 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v1057 #next: v1062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a1014 
=== Succesors ===
next: i1015 
=== Usages ===
=== Predecessor ===
a1014 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a1014 #next: i1015  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1015 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1015 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.isReadOnly
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1058 
=== Succesors ===
next: v801 
=== Usages ===
i680 
=== Predecessor ===
v1062 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1058 #next: v801  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1015 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1015  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 v12 v98 v486 v118 v423 v398 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i680 
y: i6 
=== Succesors ===
=== Usages ===
v801 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i680 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid a667 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1013 
=== Succesors ===
=== Usages ===
?208 v1044 v1047 ?213 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1013  <|@  <|@
f <@~|@floating>@ <|@
tid a900 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v903 v949 v921 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v798 
falseSuccessor: v800 
=== Usages ===
=== Predecessor ===
i1015 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v798 #falseSuccessor: v800  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B82" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1016 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1016  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1016 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.isReadOnly
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1056 
=== Succesors ===
next: v805 
=== Usages ===
i671 
=== Predecessor ===
v798 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1056 #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid i671 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1016 
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1016  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i671 
y: i6 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i671 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v486 
=== Succesors ===
trueSuccessor: v802 
falseSuccessor: v804 
=== Usages ===
=== Predecessor ===
i1016 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v486 #trueSuccessor: v802 #falseSuccessor: v804  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1017 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1017  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1017 v642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1017 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 12]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1036 
=== Succesors ===
next: v809 
=== Usages ===
v12 v17 
=== Predecessor ===
v802 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1036 #next: v809  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 v17 v92 i200 i201 i233 i273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1017 
y: i8 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1017 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
stamp: void
trueSuccessorProbability: 0.9963454110228706
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v806 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
i1017 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v806 #falseSuccessor: v14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607149501188906223
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v460  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
v806 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B81" 
    xhandlers
    flags 
    probability 4570573330970775808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1017 
y: i6 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1017 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v13 
falseSuccessor: v808 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v13 #falseSuccessor: v808  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4570573330970775808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v457  <|@  <|@
f <@*|@fixed>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
v13 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B3" 
    successors "B7" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v457 v460 
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v457 v460 #next: v642  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i6 
=== Succesors ===
=== Usages ===
i10 v52 v439 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 1]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 i285 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 1]
stamp: i32 [1 - 2] ⇈0000000000000003
=== Inputs ===
condition: v7 
trueValue: i8 
falseValue: i9 
=== Succesors ===
=== Usages ===
v642 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v7 trueValue: i8 falseValue: i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 51]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1036 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1018 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1036 value: i10 stateAfter: - lastLocationAccess: - #next: i1018  <|@  <|@
f <@~|@floating>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1018 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 34]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1040 
=== Succesors ===
next: i1019 
=== Usages ===
i160 i167 i373 
=== Predecessor ===
v642 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1040 #next: i1019  <|@  <|@
f <@~|@floating>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1019 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 49]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1042 
=== Succesors ===
next: i1020 
=== Usages ===
i167 v421 
=== Predecessor ===
i1018 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1042 #next: i1020  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1020 v636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1020 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 38]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1041 
=== Succesors ===
next: i1021 
=== Usages ===
i160 
=== Predecessor ===
i1019 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1041 #next: i1021  <|@  <|@
f <@~|@floating>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1021 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.offset
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1037 
=== Succesors ===
next: i1022 
=== Usages ===
i142 i149 i366 
=== Predecessor ===
i1020 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1037 #next: i1022  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1022 i1031 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1022 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 21]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1039 
=== Succesors ===
next: i1023 
=== Usages ===
i149 v396 v454 
=== Predecessor ===
i1021 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1039 #next: i1023  <|@  <|@
f <@~|@floating>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1023 i1030 v630 i1034 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1023 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 10]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1038 
=== Succesors ===
next: i1024 
=== Usages ===
i142 
=== Predecessor ===
i1022 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1038 #next: i1024  <|@  <|@
f <@~|@floating>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1013 
=== Succesors ===
=== Usages ===
i1024 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1013  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1024 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1043 
=== Succesors ===
next: v970 
=== Usages ===
v748 v771 j739 
=== Predecessor ===
i1023 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1043 #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid j739 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1024 
=== Succesors ===
=== Usages ===
v747 v770 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1024  <|@  <|@
f <@~|@floating>@ <|@
tid i167 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 52]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i1018 
y: i1019 
=== Succesors ===
=== Usages ===
i169 i246 v226 ?208 ?213 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1018 y: i1019  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 41]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i1018 
y: i1020 
=== Succesors ===
=== Usages ===
i177 i169 i173 v751 j755 v759 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1018 y: i1020  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 66]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i167 
y: i160 
=== Succesors ===
=== Usages ===
i696 v353 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i167 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 24]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i1021 
y: i1022 
=== Succesors ===
=== Usages ===
?208 v214 v774 i168 ?213 i765 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1021 y: i1022  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 13]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i1021 
y: i1023 
=== Succesors ===
=== Usages ===
i176 i168 j741 v748 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1021 y: i1023  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 61]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i149 
y: i142 
=== Succesors ===
=== Usages ===
i696 v353 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i149 y: i142  <|@  <|@
f <@~|@floating>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i169 
y: i168 
=== Succesors ===
=== Usages ===
i696 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i169 y: i168  <|@  <|@
f <@~|@floating>@ <|@
tid i696 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v353 
trueValue: i169 
falseValue: i168 
=== Succesors ===
=== Usages ===
i173 j742 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v353 trueValue: i169 falseValue: i168  <|@  <|@
f <@~|@floating>@ <|@
tid j742 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i696 
=== Succesors ===
=== Usages ===
j744 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i696  <|@  <|@
f <@~|@floating>@ <|@
tid j743 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j744 j767 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j744 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j742 
y: j743 
=== Succesors ===
=== Usages ===
j745 j756 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j742 y: j743  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i160 
y: i696 
=== Succesors ===
=== Usages ===
v751 v179 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i160 y: i696  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i160 
y: i173 
=== Succesors ===
=== Usages ===
v970 v986 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i160 y: i173  <|@  <|@
f <@*|@fixed>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v751 
=== Succesors ===
trueSuccessor: v969 
falseSuccessor: v966 
=== Usages ===
=== Predecessor ===
i1024 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v751 #trueSuccessor: v969 #falseSuccessor: v966  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v978  <|@  <|@
f <@~|@floating>@ <|@
tid j741 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i142 
=== Succesors ===
=== Usages ===
j745 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i142  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j741 
y: j744 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j741 y: j744  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j745 
y: j739 
=== Succesors ===
=== Usages ===
v978 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j745 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid i956 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -137499
stableDimension: 0
stamp: i32 [-137499] ⇊00000000fffde6e5 ⇈00000000fffde6e5
stampKind: i32
value: int[-137499|0xfffffffffffde6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i958 i958 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v747 
=== Succesors ===
trueSuccessor: v977 
falseSuccessor: v974 
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v747 #trueSuccessor: v977 #falseSuccessor: v974  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v976 
=== Usages ===
=== Predecessor ===
v978 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v976  <|@  <|@
f <@~|@floating>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i142 
y: i1024 
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i142 y: i1024  <|@  <|@
f <@*|@fixed>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v748 
=== Succesors ===
trueSuccessor: v967 
falseSuccessor: v975 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v748 #trueSuccessor: v967 #falseSuccessor: v975  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v965 
=== Usages ===
=== Predecessor ===
v976 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v965  <|@  <|@
f <@*|@fixed>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v963 
=== Predecessor ===
v967 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1059 
=== Usages ===
=== Predecessor ===
v976 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1059  <|@  <|@
f <@*|@fixed>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
v975 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v955 
=== Usages ===
=== Predecessor ===
v978 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v955  <|@  <|@
f <@*|@fixed>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
v974 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v964 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v964  <|@  <|@
f <@*|@fixed>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v963 
=== Predecessor ===
v966 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B9" 
    successors "B14" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v964 v965 
=== Succesors ===
next: v986 
=== Usages ===
v753 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v964 v965 #next: v986  <|@  <|@
f <@*|@fixed>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v751 
=== Succesors ===
trueSuccessor: v985 
falseSuccessor: v982 
=== Usages ===
=== Predecessor ===
v963 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v751 #trueSuccessor: v985 #falseSuccessor: v982  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1025 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1025  <|@  <|@
f <@~|@floating>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1014 
=== Succesors ===
=== Usages ===
i1025 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1014  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1025 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1045 
=== Succesors ===
next: v994 
=== Usages ===
v759 j754 
=== Predecessor ===
v985 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1045 #next: v994  <|@  <|@
f <@~|@floating>@ <|@
tid j755 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i160 
=== Succesors ===
=== Usages ===
j756 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j756 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j744 
y: j755 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j744 y: j755  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1025 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1025  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j756 
y: j754 
=== Succesors ===
=== Usages ===
v994 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j756 y: j754  <|@  <|@
f <@~|@floating>@ <|@
tid i962 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -143131
stableDimension: 0
stamp: i32 [-143131] ⇊00000000fffdd0e5 ⇈00000000fffdd0e5
stampKind: i32
value: int[-143131|0xfffffffffffdd0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i958 i958 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v758 
=== Succesors ===
trueSuccessor: v993 
falseSuccessor: v990 
=== Usages ===
=== Predecessor ===
i1025 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v758 #trueSuccessor: v993 #falseSuccessor: v990  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v992  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i160 
y: i1025 
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i160 y: i1025  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v759 
=== Succesors ===
trueSuccessor: v983 
falseSuccessor: v991 
=== Usages ===
=== Predecessor ===
v993 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v759 #trueSuccessor: v983 #falseSuccessor: v991  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v981 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v981  <|@  <|@
f <@*|@fixed>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
v983 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1060 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1060  <|@  <|@
f <@*|@fixed>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
v991 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v961 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v961  <|@  <|@
f <@*|@fixed>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
v990 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i958 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-143131 - -137499] ⇊00000000fffdc0e5 ⇈00000000fffdf6e5
valueDescription: i32
=== Inputs ===
merge: v954 
values: i956 i962 i956 i962 
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v954 values: i956 i962 i956 i962  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v955 v961 v1059 v1060 
=== Succesors ===
next: v960 
=== Usages ===
i958 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v955 v961 v1059 v1060 #next: v960  <|@  <|@
f <@~|@floating>@ <|@
tid a957 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@287855974
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@287855974]
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?459 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 51]
rethrowException: false
sourceFile: CharsetEncoder.java
sourceLine: 579
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 i4 - - - 
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 i4 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?459 
actionAndReason: i958 
speculation: a957 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?459 actionAndReason: i958 speculation: a957  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v980 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v980  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
v982 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v980 v981 
=== Succesors ===
next: v174 
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v980 v981 #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid i682 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
v979 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628636845649449885
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i176 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v175 
values: i142 i201 
=== Succesors ===
=== Usages ===
j764 v774 v1044 v771 i201 i765 ?208 i211 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v175 values: i142 i201  <|@  <|@
f <@~|@floating>@ <|@
tid i177 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v175 
values: i160 i200 
=== Succesors ===
=== Usages ===
v1046 v179 ?208 i212 i200 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v175 values: i160 i200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 28.221435738803496
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v174 
=== Succesors ===
next: v185 
=== Usages ===
i176 i177 v181 v193 v207 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v174 #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i177 
y: i173 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i177 y: i173  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.9647476131021091
=== Inputs ===
condition: v179 
=== Succesors ===
trueSuccessor: v180 
falseSuccessor: v181 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v179 #trueSuccessor: v180 #falseSuccessor: v181  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4628356813802972979
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1026 
=== Usages ===
v753 v763 
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1026  <|@  <|@
f <@~|@floating>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v963 v180 
=== Succesors ===
=== Usages ===
i1026 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v963 v180  <|@  <|@
f <@~|@floating>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a667 
index: i176 
=== Succesors ===
=== Usages ===
i1026 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a667 index: i176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1026 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v753 
address: v1044 
=== Succesors ===
next: v199 
=== Usages ===
v683 i685 
=== Predecessor ===
v180 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v753 address: v1044 #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1026 
y: i682 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1026 y: i682  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.9998116902024854
=== Inputs ===
condition: v683 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v193 
=== Usages ===
=== Predecessor ===
i1026 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v683 #trueSuccessor: v189 #falseSuccessor: v193  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4628355370672739229
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v566  <|@  <|@
f <@~|@floating>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v979 v180 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v979 v180  <|@  <|@
f <@~|@floating>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i177 
index: a1014 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i177 index: a1014  <|@  <|@
f <@~|@floating>@ <|@
tid i685 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1026 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1026  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v763 
address: v1046 
value: i685 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v763 address: v1046 value: i685 stateAfter: - lastLocationAccess: - #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid i200 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i177 
y: i8 
=== Succesors ===
=== Usages ===
i177 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i177 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i176 
y: i8 
=== Succesors ===
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i176 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
loopBegin: v175 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v175  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4572561083591122456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v175 
=== Succesors ===
next: v192 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v175 #next: v192  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
v193 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607136238632537412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v175 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v175 #next: v190  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v190 v192 
=== Succesors ===
next: v1002 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v190 v192 #next: v1002  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i176 
y: i149 
=== Succesors ===
=== Usages ===
v1002 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i176 y: i149  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 57
code: ResolvedJavaMethodBytecode<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: CharsetEncoder.java
sourceLine: 579
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 i4 - - - 
=== Succesors ===
=== Usages ===
?288 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 i4 - - -  <|@  <|@
tid ?288 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 691
stackSize: 0
=== Inputs ===
outerFrameState: ?87 
values: - - - 
=== Succesors ===
=== Usages ===
?281 ?277 ?208 ?213 ?893 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v774 
=== Succesors ===
trueSuccessor: v1001 
falseSuccessor: v998 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v774 #trueSuccessor: v1001 #falseSuccessor: v998  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1010 
=== Usages ===
=== Predecessor ===
v1002 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1010  <|@  <|@
f <@~|@floating>@ <|@
tid j764 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i176 
=== Succesors ===
=== Usages ===
j768 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i176  <|@  <|@
f <@~|@floating>@ <|@
tid i765 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i149 
y: i176 
=== Succesors ===
=== Usages ===
j766 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i149 y: i176  <|@  <|@
f <@~|@floating>@ <|@
tid j766 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i765 
=== Succesors ===
=== Usages ===
j767 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i765  <|@  <|@
f <@~|@floating>@ <|@
tid j767 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j766 
y: j743 
=== Succesors ===
=== Usages ===
j768 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j766 y: j743  <|@  <|@
f <@~|@floating>@ <|@
tid j768 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j764 
y: j767 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j764 y: j767  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j768 
y: j739 
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j768 y: j739  <|@  <|@
f <@*|@fixed>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v770 
=== Succesors ===
trueSuccessor: v1009 
falseSuccessor: v1006 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v770 #trueSuccessor: v1009 #falseSuccessor: v1006  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1008 
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1008  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i176 
y: i1024 
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i176 y: i1024  <|@  <|@
f <@*|@fixed>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v771 
=== Succesors ===
trueSuccessor: v999 
falseSuccessor: v1007 
=== Usages ===
=== Predecessor ===
v1009 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v771 #trueSuccessor: v999 #falseSuccessor: v1007  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v997 
=== Usages ===
=== Predecessor ===
v1008 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v997  <|@  <|@
f <@*|@fixed>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v995 
=== Predecessor ===
v999 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1005 
=== Usages ===
=== Predecessor ===
v1008 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1005  <|@  <|@
f <@*|@fixed>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
v1007 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1004 
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1004  <|@  <|@
f <@*|@fixed>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
v1006 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1004 v1005 
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1004 v1005 #next: v819  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: ?288 
values: a1 a2 a3 a667 i176 i149 a1014 i177 i167 - - - 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?288 values: a1 a2 a3 a667 i176 i149 a1014 i177 i167 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 569
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
reason: BoundsCheckException
speculation: Object[d.a@1832177577]
stamp: void
=== Inputs ===
stateBefore: ?208 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?208  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v996 
=== Usages ===
=== Predecessor ===
v1002 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v996  <|@  <|@
f <@*|@fixed>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v995 
=== Predecessor ===
v998 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v996 v997 
=== Succesors ===
next: v209 
=== Usages ===
v776 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v996 v997 #next: v209  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
v995 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B40" "B59" 
    successors "B37" "B63" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607879228772281884
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i211 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v210 
values: i176 i273 i273 
=== Succesors ===
=== Usages ===
?213 v214 ?281 v1047 v587 i366 i273 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v210 values: i176 i273 i273  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v210 
values: i177 i233 i286 
=== Succesors ===
=== Usages ===
?213 v599 v226 v587 i233 v1048 i286 i246 v1050 i285 ?281 i373 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v210 values: i177 i233 i286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.1547228949992876
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v209 
=== Succesors ===
next: v220 
=== Usages ===
i211 i212 v216 v228 v274 v287 v862 v825 v842 v847 v852 v857 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v209 #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i211 
y: i149 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i211 y: i149  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.13401192679415996
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v215 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v215 #falseSuccessor: v216  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594743355575062853
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 116]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1027 
=== Usages ===
v776 
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1027  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v995 v215 
=== Succesors ===
=== Usages ===
i1027 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v995 v215  <|@  <|@
f <@~|@floating>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a667 
index: i211 
=== Succesors ===
=== Usages ===
i1027 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a667 index: i211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1027 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v776 
address: v1047 
=== Succesors ===
next: i1028 
=== Usages ===
i576 
=== Predecessor ===
v215 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v776 address: v1047 #next: i1028  <|@  <|@
f <@~|@floating>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1014 
=== Succesors ===
=== Usages ===
i1028 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1014  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1028 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1063 
=== Succesors ===
next: v225 
=== Usages ===
v599 v619 
=== Predecessor ===
i1027 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1063 #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i212 
y: i1028 
=== Succesors ===
=== Usages ===
v858 v826 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i212 y: i1028  <|@  <|@
f <@~|@floating>@ <|@
tid i576 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1027 
=== Succesors ===
=== Usages ===
v222 i234 i259 v239 i267 v380 i252 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1027  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 84]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i268 v222 i262 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i576 
y: i187 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i576 y: i187  <|@  <|@
f <@~|@floating>@ <|@
tid i273 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i211 
y: i8 
=== Succesors ===
=== Usages ===
i211 i211 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i211 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 151]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i212 
y: i8 
=== Succesors ===
=== Usages ===
i212 v1051 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i212 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.9444529691575878
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v223 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
i1028 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v223 #falseSuccessor: v224  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594433662254056419
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i212 
y: i167 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i212 y: i167  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.9998375304630381
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v227 
falseSuccessor: v228 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v227 #falseSuccessor: v228  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594432806747644799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 147]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v826 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v826  <|@  <|@
f <@*|@fixed>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v599 
=== Succesors ===
trueSuccessor: v822 
falseSuccessor: v825 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v599 #trueSuccessor: v822 #falseSuccessor: v825  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594432806747644799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v586 
=== Usages ===
v586 
=== Predecessor ===
v826 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i212 
index: a1014 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i212 index: a1014  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 156]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
resultBits: 8
stamp: i8
=== Inputs ===
value: i576 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v822 
address: v1048 
value: i234 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v822 address: v1048 value: i234 stateAfter: - lastLocationAccess: - #next: v274  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
loopBegin: v210 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v210  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v210 
=== Succesors ===
next: v922 
=== Usages ===
=== Predecessor ===
v826 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v210 #next: v922  <|@  <|@
f <@~|@floating>@ <|@
tid i923 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -148251
stableDimension: 0
stamp: i32 [-148251] ⇊00000000fffdbce5 ⇈00000000fffdbce5
stampKind: i32
value: int[-148251|0xfffffffffffdbce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v825 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" "B48" 
    xhandlers
    flags 
    probability 4537629533658711715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 137]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v210 
=== Succesors ===
next: a276 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v210 #next: a276  <|@  <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
returnStamp: a# Ljava/nio/charset/CoderResult;
signature: [Ljdk.vm.ci.meta.JavaType;@6a74727f
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>
=== Inputs ===
arguments: a2 i211 a3 i212 
=== Succesors ===
=== Usages ===
a276 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 i211 a3 i212  <|@  <|@
tid ?893 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 0
=== Inputs ===
outerFrameState: ?288 
values: - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
a276 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?288 values: - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a276 <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
polymorphic: false
stamp: a# Ljava/nio/charset/CoderResult;
targetMethod: Direct#UTF_8$Encoder.overflow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v587 
stateDuring: ?893 
=== Succesors ===
next: i1029 
=== Usages ===
?277 v1049 v65 v71 v72 
=== Predecessor ===
v228 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v587 stateDuring: ?893 #next: i1029  <|@  <|@
tid ?277 <|@
d <@d|@=== Debug Properties ===
bci: 146
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 1
=== Inputs ===
outerFrameState: ?288 
values: - - - - - - - - - - - - a276 
=== Succesors ===
=== Usages ===
v949 i1029 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?288 values: - - - - - - - - - - - - a276  <|@  <|@
f <@~|@floating>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a276 
index: - 
=== Succesors ===
=== Usages ===
i1029 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a276 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1029 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CoderResult.type
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:129) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 91]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?277 
guard: - 
address: v1049 
=== Succesors ===
next: v834 
=== Usages ===
v92 v98 
=== Predecessor ===
a276 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?277 guard: - address: v1049 #next: v834  <|@  <|@
f <@~|@floating>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isUnderflow(CoderResult.java:120) [bci: 4]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 102]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1029 
y: i6 
=== Succesors ===
=== Usages ===
v834 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1029 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
stamp: void
trueSuccessorProbability: 0.9999763130215975
=== Inputs ===
condition: v98 
=== Succesors ===
trueSuccessor: v831 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
i1029 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v98 #trueSuccessor: v831 #falseSuccessor: v36  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4537629367653059069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v834 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 109]
stamp: void
trueSuccessorProbability: 0.9963826232969987
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v69 
falseSuccessor: v51 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v69 #falseSuccessor: v51  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4537604016561581912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:594) [bci: 131]
stamp: void
=== Inputs ===
result: a276 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a276 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4501082307533907077
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1030 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1030  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1030 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 113]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1038 
=== Succesors ===
next: i1031 
=== Usages ===
v128 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1038 #next: i1031  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1031 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 5]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 113]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1039 
=== Succesors ===
next: v838 
=== Usages ===
v128 
=== Predecessor ===
i1030 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1039 #next: v838  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 113]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1030 
y: i1031 
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1030 y: i1031  <|@  <|@
f <@*|@fixed>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 116]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v837 
falseSuccessor: v835 
=== Usages ===
=== Predecessor ===
i1031 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v837 #falseSuccessor: v835  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v952 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v952  <|@  <|@
f <@~|@floating>@ <|@
tid i953 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -152083
stableDimension: 0
stamp: i32 [-152083] ⇊00000000fffdaded ⇈00000000fffdaded
stampKind: i32
value: int[-152083|0xfffffffffffdaded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i947 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v944 
=== Predecessor ===
v837 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 4501082307533907077
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:594) [bci: 131]
stamp: void
=== Inputs ===
result: a276 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v835 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a276 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4468506903950059860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v834 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:129) [bci: 5]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 91]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1029 
y: i8 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1029 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 94]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v92 
=== Succesors ===
trueSuccessor: v68 
falseSuccessor: v833 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v92 #trueSuccessor: v68 #falseSuccessor: v833  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4468506903950059860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:587) [bci: 99]
stamp: void
=== Inputs ===
result: a276 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a276 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v950 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v950  <|@  <|@
f <@~|@floating>@ <|@
tid i951 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -151315
stableDimension: 0
stamp: i32 [-151315] ⇊00000000fffdb0ed ⇈00000000fffdb0ed
stampKind: i32
value: int[-151315|0xfffffffffffdb0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i947 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v944 
=== Predecessor ===
v833 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B46" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i947 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-152083 - -150539] ⇊00000000fffda0e5 ⇈00000000fffdbffd
valueDescription: i32
=== Inputs ===
merge: v944 
values: i951 i953 
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v944 values: i951 i953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v950 v952 
=== Succesors ===
next: v949 
=== Usages ===
i947 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v950 v952 #next: v949  <|@  <|@
f <@*|@fixed>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?277 
actionAndReason: i947 
speculation: a900 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?277 actionAndReason: i947 speculation: a900  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 161]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v843 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v843  <|@  <|@
f <@~|@floating>@ <|@
tid i238 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 163]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] ⇊0000000000000800 ⇈0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i576 
y: i238 
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i576 y: i238  <|@  <|@
f <@*|@fixed>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v842 
falseSuccessor: v839 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v842 #falseSuccessor: v839  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v210 
=== Succesors ===
next: v924 
=== Usages ===
=== Predecessor ===
v843 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v210 #next: v924  <|@  <|@
f <@~|@floating>@ <|@
tid i925 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -152339
stableDimension: 0
stamp: i32 [-152339] ⇊00000000fffdaced ⇈00000000fffdaced
stampKind: i32
value: int[-152339|0xfffffffffffdaced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v842 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v848 
=== Usages ===
=== Predecessor ===
v843 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v848  <|@  <|@
f <@~|@floating>@ <|@
tid i379 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i576 
y: i379 
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i576 y: i379  <|@  <|@
f <@*|@fixed>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v380 
=== Succesors ===
trueSuccessor: v844 
falseSuccessor: v847 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v380 #trueSuccessor: v844 #falseSuccessor: v847  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v853 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v853  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 398]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i167 
y: i212 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i167 y: i212  <|@  <|@
f <@~|@floating>@ <|@
tid i247 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 399]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 i286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i246 
y: i247 
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i246 y: i247  <|@  <|@
f <@*|@fixed>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v248 
=== Succesors ===
trueSuccessor: v852 
falseSuccessor: v849 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v248 #trueSuccessor: v852 #falseSuccessor: v849  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v210 
=== Succesors ===
next: v928 
=== Usages ===
=== Predecessor ===
v853 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v210 #next: v928  <|@  <|@
f <@~|@floating>@ <|@
tid i929 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -152851
stableDimension: 0
stamp: i32 [-152851] ⇊00000000fffdaaed ⇈00000000fffdaaed
stampKind: i32
value: int[-152851|0xfffffffffffdaaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v852 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v853 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v858  <|@  <|@
f <@*|@fixed>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v599 
=== Succesors ===
trueSuccessor: v854 
falseSuccessor: v857 
=== Usages ===
=== Predecessor ===
v849 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v599 #trueSuccessor: v854 #falseSuccessor: v857  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v863 
=== Usages ===
v737 
=== Predecessor ===
v858 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v863  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i212 
y: i9 
=== Succesors ===
=== Usages ===
v619 v1052 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i212 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i285 
y: i1028 
=== Succesors ===
=== Usages ===
v863 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i285 y: i1028  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v619 
=== Succesors ===
trueSuccessor: v859 
falseSuccessor: v862 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v619 #trueSuccessor: v859 #falseSuccessor: v862  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v607 
=== Usages ===
v737 
=== Predecessor ===
v863 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v607  <|@  <|@
f <@~|@floating>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v859 v854 
=== Succesors ===
=== Usages ===
v607 v627 v617 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v859 v854  <|@  <|@
f <@~|@floating>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i212 
index: a1014 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i212 index: a1014  <|@  <|@
f <@~|@floating>@ <|@
tid i251 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 425]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i252 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 427]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i576 
y: i251 
=== Succesors ===
=== Usages ===
i253 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i576 y: i251  <|@  <|@
f <@~|@floating>@ <|@
tid i250 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 420]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] ⇊00000000000000e0 ⇈00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i253 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i253 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 428]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32 [224 - 239] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
x: i252 
y: i250 
=== Succesors ===
=== Usages ===
i254 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i252 y: i250  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 429]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
resultBits: 8
stamp: i8 [-32 - -17] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
value: i253 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i253  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v737 
address: v1050 
value: i254 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v859 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v737 address: v1050 value: i254 stateAfter: - lastLocationAccess: - #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i233 
index: a1014 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i233 index: a1014  <|@  <|@
f <@~|@floating>@ <|@
tid i258 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 443]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i259 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 445]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32 [0 - 1023] ⇈00000000000003ff
=== Inputs ===
x: i576 
y: i258 
=== Succesors ===
=== Usages ===
i261 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i576 y: i258  <|@  <|@
f <@~|@floating>@ <|@
tid i260 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 446]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i261 i267 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i261 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 448]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i259 
y: i260 
=== Succesors ===
=== Usages ===
i262 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i259 y: i260  <|@  <|@
f <@~|@floating>@ <|@
tid i262 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 449]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i261 
y: i187 
=== Succesors ===
=== Usages ===
i263 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i261 y: i187  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 450]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i262 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i262  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v737 
address: v1051 
value: i263 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v627 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v737 address: v1051 value: i263 stateAfter: - lastLocationAccess: - #next: v627  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i285 
index: a1014 
=== Succesors ===
=== Usages ===
v627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i285 index: a1014  <|@  <|@
f <@~|@floating>@ <|@
tid i267 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 466]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i576 
y: i260 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i576 y: i260  <|@  <|@
f <@~|@floating>@ <|@
tid i268 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 467]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i267 
y: i187 
=== Succesors ===
=== Usages ===
i269 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i267 y: i187  <|@  <|@
f <@~|@floating>@ <|@
tid i269 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 468]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i268 
=== Succesors ===
=== Usages ===
v627 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v737 
address: v1052 
value: i269 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v737 address: v1052 value: i269 stateAfter: - lastLocationAccess: - #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid i286 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 456]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i212 
y: i247 
=== Succesors ===
=== Usages ===
i212 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i212 y: i247  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
loopBegin: v210 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v210  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v210 
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v210 #next: v932  <|@  <|@
f <@~|@floating>@ <|@
tid i933 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -158747
stableDimension: 0
stamp: i32 [-158747] ⇊00000000fffd93e5 ⇈00000000fffd93e5
stampKind: i32
value: int[-158747|0xfffffffffffd93e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v862 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v210 
=== Succesors ===
next: v930 
=== Usages ===
=== Predecessor ===
v858 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v210 #next: v930  <|@  <|@
f <@~|@floating>@ <|@
tid i931 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -153627
stableDimension: 0
stamp: i32 [-153627] ⇊00000000fffda7e5 ⇈00000000fffda7e5
stampKind: i32
value: int[-153627|0xfffffffffffda7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v857 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v210 
=== Succesors ===
next: v926 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v210 #next: v926  <|@  <|@
f <@~|@floating>@ <|@
tid i927 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -152595
stableDimension: 0
stamp: i32 [-152595] ⇊00000000fffdabed ⇈00000000fffdabed
stampKind: i32
value: int[-152595|0xfffffffffffdabed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v847 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 476]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v210 
=== Succesors ===
next: v867 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v210 #next: v867  <|@  <|@
f <@~|@floating>@ <|@
tid i366 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 6]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i211 
y: i1021 
=== Succesors ===
=== Usages ===
v404 v396 v398 v630 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i211 y: i1021  <|@  <|@
f <@~|@floating>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1022 
y: i366 
=== Succesors ===
=== Usages ===
v867 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1022 y: i366  <|@  <|@
f <@*|@fixed>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v396 
=== Succesors ===
trueSuccessor: v866 
falseSuccessor: v864 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v396 #trueSuccessor: v866 #falseSuccessor: v864  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v917 
=== Usages ===
=== Predecessor ===
v867 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v917  <|@  <|@
f <@~|@floating>@ <|@
tid i918 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -160787
stableDimension: 0
stamp: i32 [-160787] ⇊00000000fffd8bed ⇈00000000fffd8bed
stampKind: i32
value: int[-160787|0xfffffffffffd8bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v866 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v867 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v871  <|@  <|@
f <@~|@floating>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i366 
y: i6 
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i366 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v398 
=== Succesors ===
trueSuccessor: v870 
falseSuccessor: v868 
=== Usages ===
=== Predecessor ===
v864 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v398 #trueSuccessor: v870 #falseSuccessor: v868  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v934 
=== Usages ===
=== Predecessor ===
v871 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v934  <|@  <|@
f <@~|@floating>@ <|@
tid i935 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -161043
stableDimension: 0
stamp: i32 [-161043] ⇊00000000fffd8aed ⇈00000000fffd8aed
stampKind: i32
value: int[-161043|0xfffffffffffd8aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v870 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1032 
=== Usages ===
=== Predecessor ===
v871 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1032  <|@  <|@
f <@~|@floating>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1032 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1032 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1053 
=== Succesors ===
next: v875 
=== Usages ===
v404 
=== Predecessor ===
v868 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1053 #next: v875  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i366 
y: i1032 
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i366 y: i1032  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v404 
=== Succesors ===
trueSuccessor: v874 
falseSuccessor: v872 
=== Usages ===
=== Predecessor ===
i1032 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v404 #trueSuccessor: v874 #falseSuccessor: v872  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v936 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v936  <|@  <|@
f <@~|@floating>@ <|@
tid i937 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -162067
stableDimension: 0
stamp: i32 [-162067] ⇊00000000fffd86ed ⇈00000000fffd86ed
stampKind: i32
value: int[-162067|0xfffffffffffd86ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v874 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v879 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v879  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 17]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i212 
y: i1018 
=== Succesors ===
=== Usages ===
?426 v421 v423 v636 v429 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i212 y: i1018  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1019 
y: i373 
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1019 y: i373  <|@  <|@
f <@*|@fixed>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v421 
=== Succesors ===
trueSuccessor: v878 
falseSuccessor: v876 
=== Usages ===
=== Predecessor ===
v872 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v421 #trueSuccessor: v878 #falseSuccessor: v876  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v938 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v938  <|@  <|@
f <@~|@floating>@ <|@
tid i939 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -162323
stableDimension: 0
stamp: i32 [-162323] ⇊00000000fffd85ed ⇈00000000fffd85ed
stampKind: i32
value: int[-162323|0xfffffffffffd85ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v878 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v883 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v883  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i373 
y: i6 
=== Succesors ===
=== Usages ===
v883 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i373 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v882 
falseSuccessor: v880 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v882 #falseSuccessor: v880  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v940 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v940  <|@  <|@
f <@~|@floating>@ <|@
tid i941 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -162579
stableDimension: 0
stamp: i32 [-162579] ⇊00000000fffd84ed ⇈00000000fffd84ed
stampKind: i32
value: int[-162579|0xfffffffffffd84ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v882 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B76" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1033 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1033  <|@  <|@
f <@~|@floating>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1033 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1033 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1054 
=== Succesors ===
next: v887 
=== Usages ===
v429 
=== Predecessor ===
v880 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1054 #next: v887  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i373 
y: i1033 
=== Succesors ===
=== Usages ===
v887 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i373 y: i1033  <|@  <|@
f <@*|@fixed>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v429 
=== Succesors ===
trueSuccessor: v886 
falseSuccessor: v884 
=== Usages ===
=== Predecessor ===
i1033 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v429 #trueSuccessor: v886 #falseSuccessor: v884  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v942 
=== Usages ===
=== Predecessor ===
v887 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v942  <|@  <|@
f <@~|@floating>@ <|@
tid i943 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -163603
stableDimension: 0
stamp: i32 [-163603] ⇊00000000fffd80ed ⇈00000000fffd80ed
stampKind: i32
value: int[-163603|0xfffffffffffd80ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v886 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B64" "B41" "B53" "B62" "B56" "B61" "B60" "B66" "B68" "B70" "B72" "B74" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i919 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-163603 - -148251] ⇊00000000fffd80e5 ⇈00000000fffdbfed
valueDescription: i32
=== Inputs ===
merge: v916 
values: i918 i923 i925 i927 i929 i931 i933 i935 i937 i939 i941 i943 
=== Succesors ===
=== Usages ===
v921 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v916 values: i918 i923 i925 i927 i929 i931 i933 i935 i937 i939 i941 i943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v917 v922 v924 v926 v928 v930 v932 v934 v936 v938 v940 v942 
=== Succesors ===
next: v921 
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v917 v922 v924 v926 v928 v930 v932 v934 v936 v938 v940 v942 #next: v921  <|@  <|@
tid ?213 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: ?288 
values: a1 a2 a3 a667 i211 i149 a1014 i212 i167 - - - 
=== Succesors ===
=== Usages ===
v921 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?288 values: a1 a2 a3 a667 i211 i149 a1014 i212 i167 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?213 
actionAndReason: i919 
speculation: a900 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?213 actionAndReason: i919 speculation: a900  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v887 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1038 
value: i366 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v636 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1038 value: i366 stateAfter: - lastLocationAccess: - #next: v636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1041 
value: i373 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1041 value: i373 stateAfter: - lastLocationAccess: - #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid a283 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:637) [bci: 485]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rawvalue: CoderResult@1617107905
stableDimension: 0
stamp: a!# Ljava/nio/charset/CoderResult;
stampKind: a -
value: Object[CoderResult@1617107905]
=== Inputs ===
=== Succesors ===
=== Usages ===
v445 v444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 109]
stamp: void
trueSuccessorProbability: 0.9963826232969987
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v438 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v443 #falseSuccessor: v438  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 4607149623264343353
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:594) [bci: 131]
stamp: void
=== Inputs ===
result: a283 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a283 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4570487327248526934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1034 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1034  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1034 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 113]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1038 
=== Succesors ===
next: v891 
=== Usages ===
v454 
=== Predecessor ===
v438 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1038 #next: v891  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 113]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1034 
y: i1022 
=== Succesors ===
=== Usages ===
v891 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1034 y: i1022  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 116]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v454 
=== Succesors ===
trueSuccessor: v890 
falseSuccessor: v888 
=== Usages ===
=== Predecessor ===
i1034 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v454 #trueSuccessor: v890 #falseSuccessor: v888  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v889 
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v889  <|@  <|@
tid ?281 <|@
d <@d|@=== Debug Properties ===
bci: 482
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 636
stackSize: 0
=== Inputs ===
outerFrameState: ?288 
values: - a2 a3 - i211 - - i212 - - - - 
=== Succesors ===
=== Usages ===
?378 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?288 values: - a2 a3 - i211 - - i212 - - - -  <|@  <|@
tid ?378 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<UTF_8.access$200(Buffer, int, Buffer, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 57
stackSize: 0
=== Inputs ===
outerFrameState: ?281 
values: - - - - 
=== Succesors ===
=== Usages ===
?432 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?281 values: - - - -  <|@  <|@
tid ?432 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<UTF_8.updatePositions(Buffer, int, Buffer, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 78
stackSize: 0
=== Inputs ===
outerFrameState: ?378 
values: - - - - 
=== Succesors ===
=== Usages ===
?426 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?378 values: - - - -  <|@  <|@
tid ?426 <|@
d <@d|@=== Debug Properties ===
bci: 25
code: ResolvedJavaMethodBytecode<Buffer.position(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rethrowException: false
sourceFile: Buffer.java
sourceLine: 246
stackSize: 0
=== Inputs ===
outerFrameState: ?432 
values: a3 i373 
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?432 values: a3 i373  <|@  <|@
f <@*|@fixed>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 641
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 116]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?426 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v890 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?426  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors 
    xhandlers
    flags 
    probability 4570487327248526934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:594) [bci: 131]
stamp: void
=== Inputs ===
result: a283 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a283 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v914 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v914  <|@  <|@
f <@~|@floating>@ <|@
tid i915 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -169491
stableDimension: 0
stamp: i32 [-169491] ⇊00000000fffd69ed ⇈00000000fffd69ed
stampKind: i32
value: int[-169491|0xfffffffffffd69ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i901 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
v808 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v912 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid i913 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -186899
stableDimension: 0
stamp: i32 [-186899] ⇊00000000fffd25ed ⇈00000000fffd25ed
stampKind: i32
value: int[-186899|0xfffffffffffd25ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i901 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
v804 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v910 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v910  <|@  <|@
f <@~|@floating>@ <|@
tid i911 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -132371
stableDimension: 0
stamp: i32 [-132371] ⇊00000000fffdfaed ⇈00000000fffdfaed
stampKind: i32
value: int[-132371|0xfffffffffffdfaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i901 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
v800 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" "B81" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i901 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-186899 - -132371] ⇊00000000fffd20e5 ⇈00000000fffdfffd
valueDescription: i32
=== Inputs ===
merge: v897 
values: i911 i913 i915 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v897 values: i911 i913 i915  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v910 v912 v914 
=== Succesors ===
next: v903 
=== Usages ===
i901 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v910 v912 v914 #next: v903  <|@  <|@
f <@*|@fixed>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i901 
speculation: a900 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v897 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i901 speculation: a900  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1013 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1013  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/UTF_8$Encoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v1036 ?459 ?208 ?87 ?213 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/nio/HeapCharBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v1038 ?213 ?459 ?281 ?87 ?208 v1053 v587 v1055 v1056 v1037 v1039 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/nio/ByteBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v1042 ?213 ?459 ?281 ?87 v1041 ?208 v587 v1057 v1058 v1054 ?426 v1040 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v7 ?459 ?87 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: CharsetEncoder.java
sourceLine: 569
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 i4 - - - 
=== Succesors ===
=== Usages ===
v903 a1013 v1061 a1014 v1062 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 i4 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1055 <|@
result [v1|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1013 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1013 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.hb
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v1055 
=== Succesors ===
next: v1061 
=== Usages ===
a667 v1061 v1043 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v1055 #next: v1061  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a1013 
=== Succesors ===
next: a1014 
=== Usages ===
=== Predecessor ===
a1013 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a1013 #next: a1014  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
result [v2|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a1014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1014 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: true
stamp: n# [B
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v1057 
=== Succesors ===
next: v1062 
=== Usages ===
?208 v1062 v1045 v1046 v1048 v1050 v1051 v1052 ?213 v1063 
=== Predecessor ===
v1061 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v1057 #next: v1062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a1014 
=== Succesors ===
next: i1015 
=== Usages ===
=== Predecessor ===
a1014 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a1014 #next: i1015  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
result [v2|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1015 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1015 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.isReadOnly
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1058 
=== Succesors ===
next: v801 
=== Usages ===
i680 
=== Predecessor ===
v1062 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1058 #next: v801  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1015 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1015  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 v12 v98 v486 v118 v423 v398 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i680 
y: i6 
=== Succesors ===
=== Usages ===
v801 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i680 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid a667 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1013 
=== Succesors ===
=== Usages ===
?208 v1044 v1047 ?213 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1013  <|@  <|@
f <@~|@floating>@ <|@
tid a900 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v903 v949 v921 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v798 
falseSuccessor: v800 
=== Usages ===
=== Predecessor ===
i1015 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v798 #falseSuccessor: v800  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4655686c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction v4|DWORD[.] = MOV [v1|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction v5|DWORD[.] = MOV [v2|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v5|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVZXB [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@150596a5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B82" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1016 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1016  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
result [v1|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1016 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.isReadOnly
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1056 
=== Succesors ===
next: v805 
=== Usages ===
i671 
=== Predecessor ===
v798 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1056 #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid i671 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1016 
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1016  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i671 
y: i6 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i671 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v486 
=== Succesors ===
trueSuccessor: v802 
falseSuccessor: v804 
=== Usages ===
=== Predecessor ===
i1016 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v486 #trueSuccessor: v802 #falseSuccessor: v804  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVZXB [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1017 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1017  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1017 v642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1017 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 12]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1036 
=== Succesors ===
next: v809 
=== Usages ===
v12 v17 
=== Predecessor ===
v802 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1036 #next: v809  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 v17 v92 i200 i201 i233 i273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1017 
y: i8 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1017 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
stamp: void
trueSuccessorProbability: 0.9963454110228706
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v806 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
i1017 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v806 #falseSuccessor: v14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9963454110228706 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607149501188906223
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v460  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
v806 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B81" 
    xhandlers
    flags 
    probability 4570573330970775808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1017 
y: i6 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1017 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v13 
falseSuccessor: v808 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v13 #falseSuccessor: v808  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4570573330970775808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v457  <|@  <|@
f <@*|@fixed>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
v13 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B3" 
    successors "B7" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v457 v460 
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v457 v460 #next: v642  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i6 
=== Succesors ===
=== Usages ===
i10 v52 v439 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 1]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 i285 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 1]
stamp: i32 [1 - 2] ⇈0000000000000003
=== Inputs ===
condition: v7 
trueValue: i8 
falseValue: i9 
=== Succesors ===
=== Usages ===
v642 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v7 trueValue: i8 falseValue: i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 51]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1036 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1018 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1036 value: i10 stateAfter: - lastLocationAccess: - #next: i1018  <|@  <|@
f <@~|@floating>@ <|@
tid v1040 <|@
result [v2|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1018 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 34]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1040 
=== Succesors ===
next: i1019 
=== Usages ===
i160 i167 i373 
=== Predecessor ===
v642 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1040 #next: i1019  <|@  <|@
f <@~|@floating>@ <|@
tid v1042 <|@
result [v2|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1019 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 49]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1042 
=== Succesors ===
next: i1020 
=== Usages ===
i167 v421 
=== Predecessor ===
i1018 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1042 #next: i1020  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
result [v2|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1020 v636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1020 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 38]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1041 
=== Succesors ===
next: i1021 
=== Usages ===
i160 
=== Predecessor ===
i1019 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1041 #next: i1021  <|@  <|@
f <@~|@floating>@ <|@
tid v1037 <|@
result [v1|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1021 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.offset
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1037 
=== Succesors ===
next: i1022 
=== Usages ===
i142 i149 i366 
=== Predecessor ===
i1020 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1037 #next: i1022  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
result [v1|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1022 i1031 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1022 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 21]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1039 
=== Succesors ===
next: i1023 
=== Usages ===
i149 v396 v454 
=== Predecessor ===
i1021 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1039 #next: i1023  <|@  <|@
f <@~|@floating>@ <|@
tid v1038 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1023 i1030 v630 i1034 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1023 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 10]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1038 
=== Succesors ===
next: i1024 
=== Usages ===
i142 
=== Predecessor ===
i1022 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1038 #next: i1024  <|@  <|@
f <@~|@floating>@ <|@
tid v1043 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1013 
=== Succesors ===
=== Usages ===
i1024 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1013  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1024 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1043 
=== Succesors ===
next: v970 
=== Usages ===
v748 v771 j739 
=== Predecessor ===
i1023 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1043 #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid j739 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1024 
=== Succesors ===
=== Usages ===
v747 v770 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1024  <|@  <|@
f <@~|@floating>@ <|@
tid i167 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 52]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i1018 
y: i1019 
=== Succesors ===
=== Usages ===
i169 i246 v226 ?208 ?213 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1018 y: i1019  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 41]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i1018 
y: i1020 
=== Succesors ===
=== Usages ===
i177 i169 i173 v751 j755 v759 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1018 y: i1020  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 66]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i167 
y: i160 
=== Succesors ===
=== Usages ===
i696 v353 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i167 y: i160  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 24]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i1021 
y: i1022 
=== Succesors ===
=== Usages ===
?208 v214 v774 i168 ?213 i765 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1021 y: i1022  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 13]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i1021 
y: i1023 
=== Succesors ===
=== Usages ===
i176 i168 j741 v748 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1021 y: i1023  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 61]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i149 
y: i142 
=== Succesors ===
=== Usages ===
i696 v353 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i149 y: i142  <|@  <|@
f <@~|@floating>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i169 
y: i168 
=== Succesors ===
=== Usages ===
i696 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i169 y: i168  <|@  <|@
f <@~|@floating>@ <|@
tid i696 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v353 
trueValue: i169 
falseValue: i168 
=== Succesors ===
=== Usages ===
i173 j742 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v353 trueValue: i169 falseValue: i168  <|@  <|@
f <@~|@floating>@ <|@
tid j742 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i696 
=== Succesors ===
=== Usages ===
j744 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i696  <|@  <|@
f <@~|@floating>@ <|@
tid j743 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j744 j767 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j744 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j742 
y: j743 
=== Succesors ===
=== Usages ===
j745 j756 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j742 y: j743  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i160 
y: i696 
=== Succesors ===
=== Usages ===
v751 v179 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i160 y: i696  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i160 
y: i173 
=== Succesors ===
=== Usages ===
v970 v986 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i160 y: i173  <|@  <|@
f <@*|@fixed>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v751 
=== Succesors ===
trueSuccessor: v969 
falseSuccessor: v966 
=== Usages ===
=== Predecessor ===
i1024 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v751 #trueSuccessor: v969 #falseSuccessor: v966  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v11|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v2|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v2|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = ADD (x: v12|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v14|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SUB (x: v20|DWORD, ~y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v15|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = ADD (x: v17|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SUB (x: v23|DWORD, ~y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = CMOVE (falseValue: v25|DWORD, ~trueValue: v22|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = DEC v27|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = ADD (x: v21|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v978  <|@  <|@
f <@~|@floating>@ <|@
tid j741 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i142 
=== Succesors ===
=== Usages ===
j745 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i142  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j741 
y: j744 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j741 y: j744  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j745 
y: j739 
=== Succesors ===
=== Usages ===
v978 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j745 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid i956 <|@
result int[-137499|0xfffffffffffde6e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -137499
stableDimension: 0
stamp: i32 [-137499] ⇊00000000fffde6e5 ⇈00000000fffde6e5
stampKind: i32
value: int[-137499|0xfffffffffffde6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i958 i958 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v747 
=== Succesors ===
trueSuccessor: v977 
falseSuccessor: v974 
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v747 #trueSuccessor: v977 #falseSuccessor: v974  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVSXD v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = ADD (x: v30|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v976 
=== Usages ===
=== Predecessor ===
v978 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v976  <|@  <|@
f <@~|@floating>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i142 
y: i1024 
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i142 y: i1024  <|@  <|@
f <@*|@fixed>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v748 
=== Succesors ===
trueSuccessor: v967 
falseSuccessor: v975 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v748 #trueSuccessor: v967 #falseSuccessor: v975  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v18|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v965 
=== Usages ===
=== Predecessor ===
v976 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v965  <|@  <|@
f <@*|@fixed>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v963 
=== Predecessor ===
v967 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1059 
=== Usages ===
=== Predecessor ===
v976 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1059  <|@  <|@
f <@*|@fixed>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
v975 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-137499|0xfffffffffffde6e5]] destination: B10 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v955 
=== Usages ===
=== Predecessor ===
v978 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v955  <|@  <|@
f <@*|@fixed>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
v974 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-137499|0xfffffffffffde6e5]] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v964 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v964  <|@  <|@
f <@*|@fixed>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v963 
=== Predecessor ===
v966 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B9" 
    successors "B14" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v964 v965 
=== Succesors ===
next: v986 
=== Usages ===
v753 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v964 v965 #next: v986  <|@  <|@
f <@*|@fixed>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v751 
=== Succesors ===
trueSuccessor: v985 
falseSuccessor: v982 
=== Usages ===
=== Predecessor ===
v963 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v751 #trueSuccessor: v985 #falseSuccessor: v982  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1025 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1025  <|@  <|@
f <@~|@floating>@ <|@
tid v1045 <|@
result [v5|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1014 
=== Succesors ===
=== Usages ===
i1025 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1014  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1025 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1045 
=== Succesors ===
next: v994 
=== Usages ===
v759 j754 
=== Predecessor ===
v985 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1045 #next: v994  <|@  <|@
f <@~|@floating>@ <|@
tid j755 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i160 
=== Succesors ===
=== Usages ===
j756 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i160  <|@  <|@
f <@~|@floating>@ <|@
tid j756 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j744 
y: j755 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j744 y: j755  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1025 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1025  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j756 
y: j754 
=== Succesors ===
=== Usages ===
v994 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j756 y: j754  <|@  <|@
f <@~|@floating>@ <|@
tid i962 <|@
result int[-143131|0xfffffffffffdd0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -143131
stableDimension: 0
stamp: i32 [-143131] ⇊00000000fffdd0e5 ⇈00000000fffdd0e5
stampKind: i32
value: int[-143131|0xfffffffffffdd0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i958 i958 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v758 
=== Succesors ===
trueSuccessor: v993 
falseSuccessor: v990 
=== Usages ===
=== Predecessor ===
i1025 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v758 #trueSuccessor: v993 #falseSuccessor: v990  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v992  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i160 
y: i1025 
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i160 y: i1025  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v759 
=== Succesors ===
trueSuccessor: v983 
falseSuccessor: v991 
=== Usages ===
=== Predecessor ===
v993 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v759 #trueSuccessor: v983 #falseSuccessor: v991  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v981 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v981  <|@  <|@
f <@*|@fixed>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
v983 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1060 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1060  <|@  <|@
f <@*|@fixed>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
v991 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-143131|0xfffffffffffdd0e5]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v961 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v961  <|@  <|@
f <@*|@fixed>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
v990 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-143131|0xfffffffffffdd0e5]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i958 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-143131 - -137499] ⇊00000000fffdc0e5 ⇈00000000fffdf6e5
valueDescription: i32
=== Inputs ===
merge: v954 
values: i956 i962 i956 i962 
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v954 values: i956 i962 i956 i962  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v955 v961 v1059 v1060 
=== Succesors ===
next: v960 
=== Usages ===
i958 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v955 v961 v1059 v1060 #next: v960  <|@  <|@
f <@~|@floating>@ <|@
tid a957 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@287855974
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@287855974]
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?459 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 51]
rethrowException: false
sourceFile: CharsetEncoder.java
sourceLine: 579
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 i4 - - - 
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 i4 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?459 
actionAndReason: i958 
speculation: a957 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?459 actionAndReason: i958 speculation: a957  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@287855974] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v37|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:54] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v980 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v980  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
v982 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v980 v981 
=== Succesors ===
next: v174 
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v980 v981 #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid i682 <|@
result short[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
v979 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD, v21|DWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628636845649449885
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i176 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v175 
values: i142 i201 
=== Succesors ===
=== Usages ===
j764 v774 v1044 v771 i201 i765 ?208 i211 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v175 values: i142 i201  <|@  <|@
f <@~|@floating>@ <|@
tid i177 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v175 
values: i160 i200 
=== Succesors ===
=== Usages ===
v1046 v179 ?208 i212 i200 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v175 values: i160 i200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 28.221435738803496
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v174 
=== Succesors ===
next: v185 
=== Usages ===
i176 i177 v181 v193 v207 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v174 #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i177 
y: i173 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i177 y: i173  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.9647476131021091
=== Inputs ===
condition: v179 
=== Succesors ===
trueSuccessor: v180 
falseSuccessor: v181 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v179 #trueSuccessor: v180 #falseSuccessor: v181  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9647476131021091 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4628356813802972979
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1026 
=== Usages ===
v753 v763 
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1026  <|@  <|@
f <@~|@floating>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v963 v180 
=== Succesors ===
=== Usages ===
i1026 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v963 v180  <|@  <|@
f <@~|@floating>@ <|@
tid v1044 <|@
result [v7|QWORD[.] + v38|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a667 
index: i176 
=== Succesors ===
=== Usages ===
i1026 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a667 index: i176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1026 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v753 
address: v1044 
=== Succesors ===
next: v199 
=== Usages ===
v683 i685 
=== Predecessor ===
v180 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v753 address: v1044 #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1026 
y: i682 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1026 y: i682  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.9998116902024854
=== Inputs ===
condition: v683 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v193 
=== Usages ===
=== Predecessor ===
i1026 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v683 #trueSuccessor: v189 #falseSuccessor: v193  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVSX [v7|QWORD[.] + v38|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v40|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998116902024854 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4628355370672739229
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v566  <|@  <|@
f <@~|@floating>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v979 v180 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v979 v180  <|@  <|@
f <@~|@floating>@ <|@
tid v1046 <|@
result [v39|DWORD + v5|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i177 
index: a1014 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i177 index: a1014  <|@  <|@
f <@~|@floating>@ <|@
tid i685 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1026 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1026  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v566 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v763 
address: v1046 
value: i685 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v763 address: v1046 value: i685 stateAfter: - lastLocationAccess: - #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid i200 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i177 
y: i8 
=== Succesors ===
=== Usages ===
i177 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i177 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i176 
y: i8 
=== Succesors ===
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i176 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
loopBegin: v175 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v175  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v39|DWORD + v5|DWORD[.] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC v39|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = INC v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|DWORD, v41|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4572561083591122456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v175 
=== Succesors ===
next: v192 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v175 #next: v192  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
v193 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607136238632537412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v175 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v175 #next: v190  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v190 v192 
=== Succesors ===
next: v1002 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v190 v192 #next: v1002  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i176 
y: i149 
=== Succesors ===
=== Usages ===
v1002 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i176 y: i149  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 57
code: ResolvedJavaMethodBytecode<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: CharsetEncoder.java
sourceLine: 579
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 i4 - - - 
=== Succesors ===
=== Usages ===
?288 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 i4 - - -  <|@  <|@
tid ?288 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 691
stackSize: 0
=== Inputs ===
outerFrameState: ?87 
values: - - - 
=== Succesors ===
=== Usages ===
?281 ?277 ?208 ?213 ?893 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v774 
=== Succesors ===
trueSuccessor: v1001 
falseSuccessor: v998 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v774 #trueSuccessor: v1001 #falseSuccessor: v998  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1010 
=== Usages ===
=== Predecessor ===
v1002 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1010  <|@  <|@
f <@~|@floating>@ <|@
tid j764 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i176 
=== Succesors ===
=== Usages ===
j768 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i176  <|@  <|@
f <@~|@floating>@ <|@
tid i765 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i149 
y: i176 
=== Succesors ===
=== Usages ===
j766 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i149 y: i176  <|@  <|@
f <@~|@floating>@ <|@
tid j766 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i765 
=== Succesors ===
=== Usages ===
j767 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i765  <|@  <|@
f <@~|@floating>@ <|@
tid j767 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j766 
y: j743 
=== Succesors ===
=== Usages ===
j768 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j766 y: j743  <|@  <|@
f <@~|@floating>@ <|@
tid j768 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j764 
y: j767 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j764 y: j767  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j768 
y: j739 
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j768 y: j739  <|@  <|@
f <@*|@fixed>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v770 
=== Succesors ===
trueSuccessor: v1009 
falseSuccessor: v1006 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v770 #trueSuccessor: v1009 #falseSuccessor: v1006  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD v38|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = SUB (x: v23|DWORD, ~y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVSXD v44|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = DEC v45|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = ADD (x: v43|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1008 
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1008  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i176 
y: i1024 
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i176 y: i1024  <|@  <|@
f <@*|@fixed>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v771 
=== Succesors ===
trueSuccessor: v999 
falseSuccessor: v1007 
=== Usages ===
=== Predecessor ===
v1009 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v771 #trueSuccessor: v999 #falseSuccessor: v1007  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v18|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v997 
=== Usages ===
=== Predecessor ===
v1008 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v997  <|@  <|@
f <@*|@fixed>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v995 
=== Predecessor ===
v999 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1005 
=== Usages ===
=== Predecessor ===
v1008 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1005  <|@  <|@
f <@*|@fixed>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
v1007 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1004 
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1004  <|@  <|@
f <@*|@fixed>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
v1006 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1004 v1005 
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1004 v1005 #next: v819  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: ?288 
values: a1 a2 a3 a667 i176 i149 a1014 i177 i167 - - - 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?288 values: a1 a2 a3 a667 i176 i149 a1014 i177 i167 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 569
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
reason: BoundsCheckException
speculation: Object[d.a@1832177577]
stamp: void
=== Inputs ===
stateBefore: ?208 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?208  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1832177577] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -145691 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v7|QWORD[.] v38|DWORD v23|DWORD v5|DWORD[.] v39|DWORD v20|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v996 
=== Usages ===
=== Predecessor ===
v1002 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v996  <|@  <|@
f <@*|@fixed>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v995 
=== Predecessor ===
v998 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v996 v997 
=== Succesors ===
next: v209 
=== Usages ===
v776 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v996 v997 #next: v209  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
v995 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|DWORD, v39|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B40" "B59" 
    successors "B37" "B63" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607879228772281884
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i211 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v210 
values: i176 i273 i273 
=== Succesors ===
=== Usages ===
?213 v214 ?281 v1047 v587 i366 i273 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v210 values: i176 i273 i273  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v210 
values: i177 i233 i286 
=== Succesors ===
=== Usages ===
?213 v599 v226 v587 i233 v1048 i286 i246 v1050 i285 ?281 i373 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v210 values: i177 i233 i286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.1547228949992876
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v209 
=== Succesors ===
next: v220 
=== Usages ===
i211 i212 v216 v228 v274 v287 v862 v825 v842 v847 v852 v857 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v209 #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i211 
y: i149 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i211 y: i149  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.13401192679415996
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v215 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v215 #falseSuccessor: v216  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|DWORD, v50|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13401192679415996 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594743355575062853
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 116]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1027 
=== Usages ===
v776 
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1027  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v995 v215 
=== Succesors ===
=== Usages ===
i1027 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v995 v215  <|@  <|@
f <@~|@floating>@ <|@
tid v1047 <|@
result [v7|QWORD[.] + v49|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a667 
index: i211 
=== Succesors ===
=== Usages ===
i1027 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a667 index: i211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1027 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v776 
address: v1047 
=== Succesors ===
next: i1028 
=== Usages ===
i576 
=== Predecessor ===
v215 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v776 address: v1047 #next: i1028  <|@  <|@
f <@~|@floating>@ <|@
tid v1063 <|@
result [v5|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1014 
=== Succesors ===
=== Usages ===
i1028 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1014  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1028 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1063 
=== Succesors ===
next: v225 
=== Usages ===
v599 v619 
=== Predecessor ===
i1027 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1063 #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i212 
y: i1028 
=== Succesors ===
=== Usages ===
v858 v826 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i212 y: i1028  <|@  <|@
f <@~|@floating>@ <|@
tid i576 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1027 
=== Succesors ===
=== Usages ===
v222 i234 i259 v239 i267 v380 i252 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1027  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
result int[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 84]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i268 v222 i262 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i576 
y: i187 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i576 y: i187  <|@  <|@
f <@~|@floating>@ <|@
tid i273 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i211 
y: i8 
=== Succesors ===
=== Usages ===
i211 i211 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i211 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 151]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i212 
y: i8 
=== Succesors ===
=== Usages ===
i212 v1051 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i212 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.9444529691575878
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v223 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
i1028 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v223 #falseSuccessor: v224  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVSX [v7|QWORD[.] + v49|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVZX v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v53|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594433662254056419
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i212 
y: i167 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i212 y: i167  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.9998375304630381
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v227 
falseSuccessor: v228 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v227 #falseSuccessor: v228  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594432806747644799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 147]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v826 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v826  <|@  <|@
f <@*|@fixed>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v599 
=== Succesors ===
trueSuccessor: v822 
falseSuccessor: v825 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v599 #trueSuccessor: v822 #falseSuccessor: v825  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594432806747644799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v586 
=== Usages ===
v586 
=== Predecessor ===
v826 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
result [v50|DWORD + v5|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i212 
index: a1014 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i212 index: a1014  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 156]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
resultBits: 8
stamp: i8
=== Inputs ===
value: i576 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v822 
address: v1048 
value: i234 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v822 address: v1048 value: i234 stateAfter: - lastLocationAccess: - #next: v274  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
loopBegin: v210 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v210  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v50|DWORD + v5|DWORD[.] * 8 + 16], y: v53|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD, v55|DWORD] destination: B40 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v210 
=== Succesors ===
next: v922 
=== Usages ===
=== Predecessor ===
v826 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v210 #next: v922  <|@  <|@
f <@~|@floating>@ <|@
tid i923 <|@
result int[-148251|0xfffffffffffdbce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -148251
stableDimension: 0
stamp: i32 [-148251] ⇊00000000fffdbce5 ⇈00000000fffdbce5
stampKind: i32
value: int[-148251|0xfffffffffffdbce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v825 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-148251|0xfffffffffffdbce5]] destination: B41 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" "B48" 
    xhandlers
    flags 
    probability 4537629533658711715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 137]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v210 
=== Succesors ===
next: a276 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v210 #next: a276  <|@  <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
returnStamp: a# Ljava/nio/charset/CoderResult;
signature: [Ljdk.vm.ci.meta.JavaType;@6a74727f
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>
=== Inputs ===
arguments: a2 i211 a3 i212 
=== Succesors ===
=== Usages ===
a276 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 i211 a3 i212  <|@  <|@
tid ?893 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 0
=== Inputs ===
outerFrameState: ?288 
values: - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
a276 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?288 values: - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a276 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
polymorphic: false
stamp: a# Ljava/nio/charset/CoderResult;
targetMethod: Direct#UTF_8$Encoder.overflow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v587 
stateDuring: ?893 
=== Succesors ===
next: i1029 
=== Usages ===
?277 v1049 v65 v71 v72 
=== Predecessor ===
v228 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v587 stateDuring: ?893 #next: i1029  <|@  <|@
tid ?277 <|@
d <@d|@=== Debug Properties ===
bci: 146
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 1
=== Inputs ===
outerFrameState: ?288 
values: - - - - - - - - - - - - a276 
=== Succesors ===
=== Usages ===
v949 i1029 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?288 values: - - - - - - - - - - - - a276  <|@  <|@
f <@~|@floating>@ <|@
tid v1049 <|@
result [v56|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a276 
index: - 
=== Succesors ===
=== Usages ===
i1029 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a276 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1029 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CoderResult.type
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:129) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 91]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?277 
guard: - 
address: v1049 
=== Succesors ===
next: v834 
=== Usages ===
v92 v98 
=== Predecessor ===
a276 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?277 guard: - address: v1049 #next: v834  <|@  <|@
f <@~|@floating>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isUnderflow(CoderResult.java:120) [bci: 4]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 102]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1029 
y: i6 
=== Succesors ===
=== Usages ===
v834 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1029 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
stamp: void
trueSuccessorProbability: 0.9999763130215975
=== Inputs ===
condition: v98 
=== Succesors ===
trueSuccessor: v831 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
i1029 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v98 #trueSuccessor: v831 #falseSuccessor: v36  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v49|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v50|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143, 17, 57] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: v56|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction v57|DWORD = MOV [v56|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v57|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999763130215975 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4537629367653059069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v834 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 109]
stamp: void
trueSuccessorProbability: 0.9963826232969987
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v69 
falseSuccessor: v51 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v69 #falseSuccessor: v51  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9963826232969987 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4537604016561581912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:594) [bci: 131]
stamp: void
=== Inputs ===
result: a276 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a276 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4501082307533907077
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1030 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1030  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1030 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 113]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1038 
=== Succesors ===
next: i1031 
=== Usages ===
v128 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1038 #next: i1031  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1031 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 5]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 113]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1039 
=== Succesors ===
next: v838 
=== Usages ===
v128 
=== Predecessor ===
i1030 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1039 #next: v838  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 113]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1030 
y: i1031 
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1030 y: i1031  <|@  <|@
f <@*|@fixed>@ <|@
tid v838 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 116]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v837 
falseSuccessor: v835 
=== Usages ===
=== Predecessor ===
i1031 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v837 #falseSuccessor: v835  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|DWORD, y: [v1|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v952 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v952  <|@  <|@
f <@~|@floating>@ <|@
tid i953 <|@
result int[-152083|0xfffffffffffdaded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -152083
stableDimension: 0
stamp: i32 [-152083] ⇊00000000fffdaded ⇈00000000fffdaded
stampKind: i32
value: int[-152083|0xfffffffffffdaded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i947 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v944 
=== Predecessor ===
v837 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-152083|0xfffffffffffdaded]] destination: B46 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 4501082307533907077
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:594) [bci: 131]
stamp: void
=== Inputs ===
result: a276 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v835 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a276 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4468506903950059860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v834 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:129) [bci: 5]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 91]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1029 
y: i8 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1029 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 94]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v92 
=== Succesors ===
trueSuccessor: v68 
falseSuccessor: v833 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v92 #trueSuccessor: v68 #falseSuccessor: v833  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v57|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4468506903950059860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:587) [bci: 99]
stamp: void
=== Inputs ===
result: a276 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a276 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v950 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v950  <|@  <|@
f <@~|@floating>@ <|@
tid i951 <|@
result int[-151315|0xfffffffffffdb0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -151315
stableDimension: 0
stamp: i32 [-151315] ⇊00000000fffdb0ed ⇈00000000fffdb0ed
stampKind: i32
value: int[-151315|0xfffffffffffdb0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i947 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v944 
=== Predecessor ===
v833 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-151315|0xfffffffffffdb0ed]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B46" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i947 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-152083 - -150539] ⇊00000000fffda0e5 ⇈00000000fffdbffd
valueDescription: i32
=== Inputs ===
merge: v944 
values: i951 i953 
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v944 values: i951 i953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v950 v952 
=== Succesors ===
next: v949 
=== Usages ===
i947 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v950 v952 #next: v949  <|@  <|@
f <@*|@fixed>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?277 
actionAndReason: i947 
speculation: a900 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?277 actionAndReason: i947 speculation: a900  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: v56|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:146, 17, 57] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 161]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v843 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v843  <|@  <|@
f <@~|@floating>@ <|@
tid i238 <|@
result int[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 163]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] ⇊0000000000000800 ⇈0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i576 
y: i238 
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i576 y: i238  <|@  <|@
f <@*|@fixed>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v842 
falseSuccessor: v839 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v842 #falseSuccessor: v839  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v53|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v210 
=== Succesors ===
next: v924 
=== Usages ===
=== Predecessor ===
v843 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v210 #next: v924  <|@  <|@
f <@~|@floating>@ <|@
tid i925 <|@
result int[-152339|0xfffffffffffdaced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -152339
stableDimension: 0
stamp: i32 [-152339] ⇊00000000fffdaced ⇈00000000fffdaced
stampKind: i32
value: int[-152339|0xfffffffffffdaced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v842 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-152339|0xfffffffffffdaced]] destination: B53 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v848 
=== Usages ===
=== Predecessor ===
v843 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v848  <|@  <|@
f <@~|@floating>@ <|@
tid i379 <|@
result int[55296|0xd800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i576 
y: i379 
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i576 y: i379  <|@  <|@
f <@*|@fixed>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v380 
=== Succesors ===
trueSuccessor: v844 
falseSuccessor: v847 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v380 #trueSuccessor: v844 #falseSuccessor: v847  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v53|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B54 -> B55 falseDestination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v853 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v853  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 398]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i167 
y: i212 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i167 y: i212  <|@  <|@
f <@~|@floating>@ <|@
tid i247 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 399]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 i286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i246 
y: i247 
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i246 y: i247  <|@  <|@
f <@*|@fixed>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v248 
=== Succesors ===
trueSuccessor: v852 
falseSuccessor: v849 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v248 #trueSuccessor: v852 #falseSuccessor: v849  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v20|DWORD, ~y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v60|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v210 
=== Succesors ===
next: v928 
=== Usages ===
=== Predecessor ===
v853 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v210 #next: v928  <|@  <|@
f <@~|@floating>@ <|@
tid i929 <|@
result int[-152851|0xfffffffffffdaaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -152851
stableDimension: 0
stamp: i32 [-152851] ⇊00000000fffdaaed ⇈00000000fffdaaed
stampKind: i32
value: int[-152851|0xfffffffffffdaaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v852 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-152851|0xfffffffffffdaaed]] destination: B56 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v853 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v858  <|@  <|@
f <@*|@fixed>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v599 
=== Succesors ===
trueSuccessor: v854 
falseSuccessor: v857 
=== Usages ===
=== Predecessor ===
v849 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v599 #trueSuccessor: v854 #falseSuccessor: v857  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B57 -> B58 falseDestination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v863 
=== Usages ===
v737 
=== Predecessor ===
v858 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v863  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i212 
y: i9 
=== Succesors ===
=== Usages ===
v619 v1052 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i212 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i285 
y: i1028 
=== Succesors ===
=== Usages ===
v863 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i285 y: i1028  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v619 
=== Succesors ===
trueSuccessor: v859 
falseSuccessor: v862 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v619 #trueSuccessor: v859 #falseSuccessor: v862  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = LEA [v50|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v607 
=== Usages ===
v737 
=== Predecessor ===
v863 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v607  <|@  <|@
f <@~|@floating>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v859 v854 
=== Succesors ===
=== Usages ===
v607 v627 v617 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v859 v854  <|@  <|@
f <@~|@floating>@ <|@
tid v1050 <|@
result [v50|DWORD + v5|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i212 
index: a1014 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i212 index: a1014  <|@  <|@
f <@~|@floating>@ <|@
tid i251 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 425]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i252 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 427]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i576 
y: i251 
=== Succesors ===
=== Usages ===
i253 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i576 y: i251  <|@  <|@
f <@~|@floating>@ <|@
tid i250 <|@
result int[224|0xe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 420]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] ⇊00000000000000e0 ⇈00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i253 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i253 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 428]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32 [224 - 239] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
x: i252 
y: i250 
=== Succesors ===
=== Usages ===
i254 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i252 y: i250  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 429]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
resultBits: 8
stamp: i8 [-32 - -17] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
value: i253 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i253  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v607 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v737 
address: v1050 
value: i254 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v859 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v737 address: v1050 value: i254 stateAfter: - lastLocationAccess: - #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid v1051 <|@
result [v55|DWORD + v5|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i233 
index: a1014 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i233 index: a1014  <|@  <|@
f <@~|@floating>@ <|@
tid i258 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 443]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i259 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 445]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32 [0 - 1023] ⇈00000000000003ff
=== Inputs ===
x: i576 
y: i258 
=== Succesors ===
=== Usages ===
i261 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i576 y: i258  <|@  <|@
f <@~|@floating>@ <|@
tid i260 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 446]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i261 i267 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i261 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 448]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i259 
y: i260 
=== Succesors ===
=== Usages ===
i262 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i259 y: i260  <|@  <|@
f <@~|@floating>@ <|@
tid i262 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 449]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i261 
y: i187 
=== Succesors ===
=== Usages ===
i263 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i261 y: i187  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 450]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i262 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i262  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v617 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v737 
address: v1051 
value: i263 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v627 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v737 address: v1051 value: i263 stateAfter: - lastLocationAccess: - #next: v627  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
result [v61|DWORD + v5|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i285 
index: a1014 
=== Succesors ===
=== Usages ===
v627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i285 index: a1014  <|@  <|@
f <@~|@floating>@ <|@
tid i267 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 466]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i576 
y: i260 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i576 y: i260  <|@  <|@
f <@~|@floating>@ <|@
tid i268 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 467]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i267 
y: i187 
=== Succesors ===
=== Usages ===
i269 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i267 y: i187  <|@  <|@
f <@~|@floating>@ <|@
tid i269 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 468]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i268 
=== Succesors ===
=== Usages ===
v627 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v627 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v737 
address: v1052 
value: i269 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v737 address: v1052 value: i269 stateAfter: - lastLocationAccess: - #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid i286 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 456]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i212 
y: i247 
=== Succesors ===
=== Usages ===
i212 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i212 y: i247  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
loopBegin: v210 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v210  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = SHR v53|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = OR v62|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v50|DWORD + v5|DWORD[.] * 8 + 16], y: v63|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = SHR v53|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = AND v64|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = OR v65|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v55|DWORD + v5|DWORD[.] * 8 + 16], y: v66|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = AND v53|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = OR v67|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v61|DWORD + v5|DWORD[.] * 8 + 16], y: v68|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = LEA [v50|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD, v69|DWORD] destination: B59 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v210 
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v210 #next: v932  <|@  <|@
f <@~|@floating>@ <|@
tid i933 <|@
result int[-158747|0xfffffffffffd93e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -158747
stableDimension: 0
stamp: i32 [-158747] ⇊00000000fffd93e5 ⇈00000000fffd93e5
stampKind: i32
value: int[-158747|0xfffffffffffd93e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v862 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-158747|0xfffffffffffd93e5]] destination: B60 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v210 
=== Succesors ===
next: v930 
=== Usages ===
=== Predecessor ===
v858 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v210 #next: v930  <|@  <|@
f <@~|@floating>@ <|@
tid i931 <|@
result int[-153627|0xfffffffffffda7e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -153627
stableDimension: 0
stamp: i32 [-153627] ⇊00000000fffda7e5 ⇈00000000fffda7e5
stampKind: i32
value: int[-153627|0xfffffffffffda7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v857 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-153627|0xfffffffffffda7e5]] destination: B61 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v210 
=== Succesors ===
next: v926 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v210 #next: v926  <|@  <|@
f <@~|@floating>@ <|@
tid i927 <|@
result int[-152595|0xfffffffffffdabed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -152595
stableDimension: 0
stamp: i32 [-152595] ⇊00000000fffdabed ⇈00000000fffdabed
stampKind: i32
value: int[-152595|0xfffffffffffdabed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v847 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-152595|0xfffffffffffdabed]] destination: B62 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 476]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v210 
=== Succesors ===
next: v867 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v210 #next: v867  <|@  <|@
f <@~|@floating>@ <|@
tid i366 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 6]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i211 
y: i1021 
=== Succesors ===
=== Usages ===
v404 v396 v398 v630 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i211 y: i1021  <|@  <|@
f <@~|@floating>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1022 
y: i366 
=== Succesors ===
=== Usages ===
v867 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1022 y: i366  <|@  <|@
f <@*|@fixed>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v396 
=== Succesors ===
trueSuccessor: v866 
falseSuccessor: v864 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v396 #trueSuccessor: v866 #falseSuccessor: v864  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = SUB (x: v49|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v917 
=== Usages ===
=== Predecessor ===
v867 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v917  <|@  <|@
f <@~|@floating>@ <|@
tid i918 <|@
result int[-160787|0xfffffffffffd8bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -160787
stableDimension: 0
stamp: i32 [-160787] ⇊00000000fffd8bed ⇈00000000fffd8bed
stampKind: i32
value: int[-160787|0xfffffffffffd8bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v866 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-160787|0xfffffffffffd8bed]] destination: B64 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v867 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v871  <|@  <|@
f <@~|@floating>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i366 
y: i6 
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i366 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v398 
=== Succesors ===
trueSuccessor: v870 
falseSuccessor: v868 
=== Usages ===
=== Predecessor ===
v864 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v398 #trueSuccessor: v870 #falseSuccessor: v868  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v70|DWORD, y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v934 
=== Usages ===
=== Predecessor ===
v871 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v934  <|@  <|@
f <@~|@floating>@ <|@
tid i935 <|@
result int[-161043|0xfffffffffffd8aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -161043
stableDimension: 0
stamp: i32 [-161043] ⇊00000000fffd8aed ⇈00000000fffd8aed
stampKind: i32
value: int[-161043|0xfffffffffffd8aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v870 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-161043|0xfffffffffffd8aed]] destination: B66 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1032 
=== Usages ===
=== Predecessor ===
v871 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1032  <|@  <|@
f <@~|@floating>@ <|@
tid v1053 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1032 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1032 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1053 
=== Succesors ===
next: v875 
=== Usages ===
v404 
=== Predecessor ===
v868 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1053 #next: v875  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i366 
y: i1032 
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i366 y: i1032  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v404 
=== Succesors ===
trueSuccessor: v874 
falseSuccessor: v872 
=== Usages ===
=== Predecessor ===
i1032 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v404 #trueSuccessor: v874 #falseSuccessor: v872  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v936 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v936  <|@  <|@
f <@~|@floating>@ <|@
tid i937 <|@
result int[-162067|0xfffffffffffd86ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -162067
stableDimension: 0
stamp: i32 [-162067] ⇊00000000fffd86ed ⇈00000000fffd86ed
stampKind: i32
value: int[-162067|0xfffffffffffd86ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v874 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-162067|0xfffffffffffd86ed]] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v879 
=== Usages ===
=== Predecessor ===
v875 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v879  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 17]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: i32
=== Inputs ===
x: i212 
y: i1018 
=== Succesors ===
=== Usages ===
?426 v421 v423 v636 v429 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i212 y: i1018  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1019 
y: i373 
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1019 y: i373  <|@  <|@
f <@*|@fixed>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v421 
=== Succesors ===
trueSuccessor: v878 
falseSuccessor: v876 
=== Usages ===
=== Predecessor ===
v872 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v421 #trueSuccessor: v878 #falseSuccessor: v876  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v50|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v938 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v938  <|@  <|@
f <@~|@floating>@ <|@
tid i939 <|@
result int[-162323|0xfffffffffffd85ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -162323
stableDimension: 0
stamp: i32 [-162323] ⇊00000000fffd85ed ⇈00000000fffd85ed
stampKind: i32
value: int[-162323|0xfffffffffffd85ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v878 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-162323|0xfffffffffffd85ed]] destination: B70 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v883 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v883  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i373 
y: i6 
=== Succesors ===
=== Usages ===
v883 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i373 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v882 
falseSuccessor: v880 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v882 #falseSuccessor: v880  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v940 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v940  <|@  <|@
f <@~|@floating>@ <|@
tid i941 <|@
result int[-162579|0xfffffffffffd84ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -162579
stableDimension: 0
stamp: i32 [-162579] ⇊00000000fffd84ed ⇈00000000fffd84ed
stampKind: i32
value: int[-162579|0xfffffffffffd84ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v882 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-162579|0xfffffffffffd84ed]] destination: B72 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B76" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1033 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1033  <|@  <|@
f <@~|@floating>@ <|@
tid v1054 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1033 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1033 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1054 
=== Succesors ===
next: v887 
=== Usages ===
v429 
=== Predecessor ===
v880 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1054 #next: v887  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i373 
y: i1033 
=== Succesors ===
=== Usages ===
v887 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i373 y: i1033  <|@  <|@
f <@*|@fixed>@ <|@
tid v887 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v429 
=== Succesors ===
trueSuccessor: v886 
falseSuccessor: v884 
=== Usages ===
=== Predecessor ===
i1033 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v429 #trueSuccessor: v886 #falseSuccessor: v884  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: [v2|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v942 
=== Usages ===
=== Predecessor ===
v887 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v942  <|@  <|@
f <@~|@floating>@ <|@
tid i943 <|@
result int[-163603|0xfffffffffffd80ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -163603
stableDimension: 0
stamp: i32 [-163603] ⇊00000000fffd80ed ⇈00000000fffd80ed
stampKind: i32
value: int[-163603|0xfffffffffffd80ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v886 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-163603|0xfffffffffffd80ed]] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B64" "B41" "B53" "B62" "B56" "B61" "B60" "B66" "B68" "B70" "B72" "B74" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i919 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-163603 - -148251] ⇊00000000fffd80e5 ⇈00000000fffdbfed
valueDescription: i32
=== Inputs ===
merge: v916 
values: i918 i923 i925 i927 i929 i931 i933 i935 i937 i939 i941 i943 
=== Succesors ===
=== Usages ===
v921 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v916 values: i918 i923 i925 i927 i929 i931 i933 i935 i937 i939 i941 i943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v917 v922 v924 v926 v928 v930 v932 v934 v936 v938 v940 v942 
=== Succesors ===
next: v921 
=== Usages ===
i919 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v917 v922 v924 v926 v928 v930 v932 v934 v936 v938 v940 v942 #next: v921  <|@  <|@
tid ?213 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: ?288 
values: a1 a2 a3 a667 i211 i149 a1014 i212 i167 - - - 
=== Succesors ===
=== Usages ===
v921 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?288 values: a1 a2 a3 a667 i211 i149 a1014 i212 i167 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?213 
actionAndReason: i919 
speculation: a900 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?213 actionAndReason: i919 speculation: a900  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v7|QWORD[.] v49|DWORD v23|DWORD v5|DWORD[.] v50|DWORD v20|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v887 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1038 
value: i366 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v636 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1038 value: i366 stateAfter: - lastLocationAccess: - #next: v636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1041 
value: i373 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1041 value: i373 stateAfter: - lastLocationAccess: - #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid a283 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:637) [bci: 485]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rawvalue: CoderResult@1617107905
stableDimension: 0
stamp: a!# Ljava/nio/charset/CoderResult;
stampKind: a -
value: Object[CoderResult@1617107905]
=== Inputs ===
=== Succesors ===
=== Usages ===
v445 v444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 109]
stamp: void
trueSuccessorProbability: 0.9963826232969987
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v438 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v443 #falseSuccessor: v438  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9963826232969987 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 4607149623264343353
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:594) [bci: 131]
stamp: void
=== Inputs ===
result: a283 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a283 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4570487327248526934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1034 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1034  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1034 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 113]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1038 
=== Succesors ===
next: v891 
=== Usages ===
v454 
=== Predecessor ===
v438 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1038 #next: v891  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 113]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1034 
y: i1022 
=== Succesors ===
=== Usages ===
v891 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1034 y: i1022  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 116]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v454 
=== Succesors ===
trueSuccessor: v890 
falseSuccessor: v888 
=== Usages ===
=== Predecessor ===
i1034 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v454 #trueSuccessor: v890 #falseSuccessor: v888  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: [v1|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v889 
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v889  <|@  <|@
tid ?281 <|@
d <@d|@=== Debug Properties ===
bci: 482
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 636
stackSize: 0
=== Inputs ===
outerFrameState: ?288 
values: - a2 a3 - i211 - - i212 - - - - 
=== Succesors ===
=== Usages ===
?378 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?288 values: - a2 a3 - i211 - - i212 - - - -  <|@  <|@
tid ?378 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<UTF_8.access$200(Buffer, int, Buffer, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 57
stackSize: 0
=== Inputs ===
outerFrameState: ?281 
values: - - - - 
=== Succesors ===
=== Usages ===
?432 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?281 values: - - - -  <|@  <|@
tid ?432 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<UTF_8.updatePositions(Buffer, int, Buffer, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 78
stackSize: 0
=== Inputs ===
outerFrameState: ?378 
values: - - - - 
=== Succesors ===
=== Usages ===
?426 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?378 values: - - - -  <|@  <|@
tid ?426 <|@
d <@d|@=== Debug Properties ===
bci: 25
code: ResolvedJavaMethodBytecode<Buffer.position(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
rethrowException: false
sourceFile: Buffer.java
sourceLine: 246
stackSize: 0
=== Inputs ===
outerFrameState: ?432 
values: a3 i373 
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?432 values: a3 i373  <|@  <|@
f <@*|@fixed>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 641
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 116]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?426 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v890 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?426  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -164115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:246) [bci: 25]
locals: v2|QWORD[.] v71|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
locals: - - - - 
sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
locals: - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
locals: - v1|QWORD[.] v2|QWORD[.] - v49|DWORD - - v50|DWORD - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:25, 18, 4, 482, 17, 57] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors 
    xhandlers
    flags 
    probability 4570487327248526934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:590) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:594) [bci: 131]
stamp: void
=== Inputs ===
result: a283 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a283 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v914 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v914  <|@  <|@
f <@~|@floating>@ <|@
tid i915 <|@
result int[-169491|0xfffffffffffd69ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -169491
stableDimension: 0
stamp: i32 [-169491] ⇊00000000fffd69ed ⇈00000000fffd69ed
stampKind: i32
value: int[-169491|0xfffffffffffd69ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i901 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
v808 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-169491|0xfffffffffffd69ed]] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v912 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid i913 <|@
result int[-186899|0xfffffffffffd25ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -186899
stableDimension: 0
stamp: i32 [-186899] ⇊00000000fffd25ed ⇈00000000fffd25ed
stampKind: i32
value: int[-186899|0xfffffffffffd25ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i901 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
v804 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-186899|0xfffffffffffd25ed]] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v910 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v910  <|@  <|@
f <@~|@floating>@ <|@
tid i911 <|@
result int[-132371|0xfffffffffffdfaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -132371
stableDimension: 0
stamp: i32 [-132371] ⇊00000000fffdfaed ⇈00000000fffdfaed
stampKind: i32
value: int[-132371|0xfffffffffffdfaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i901 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
v800 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-132371|0xfffffffffffdfaed]] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" "B81" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i901 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-186899 - -132371] ⇊00000000fffd20e5 ⇈00000000fffdfffd
valueDescription: i32
=== Inputs ===
merge: v897 
values: i911 i913 i915 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v897 values: i911 i913 i915  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v910 v912 v914 
=== Succesors ===
next: v903 
=== Usages ===
i901 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v910 v912 v914 #next: v903  <|@  <|@
f <@*|@fixed>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i901 
speculation: a900 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v897 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i901 speculation: a900  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4655686c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction v4|DWORD[.] = MOV [v1|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction v5|DWORD[.] = MOV [v2|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v5|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVZXB [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@150596a5 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B82" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVZXB [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9963454110228706 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607149501188906223
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B3" 
    successors "B7" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v11|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v2|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v2|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = ADD (x: v12|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v14|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SUB (x: v20|DWORD, ~y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v15|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = ADD (x: v17|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SUB (x: v23|DWORD, ~y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = CMOVE (falseValue: v25|DWORD, ~trueValue: v22|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = DEC v27|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = ADD (x: v21|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B9" 
    successors "B14" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD, v21|DWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4628356813802972979
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVSX [v7|QWORD[.] + v38|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v40|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998116902024854 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4628355370672739229
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v39|DWORD + v5|DWORD[.] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC v39|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = INC v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|DWORD, v41|DWORD] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628636845649449885
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9647476131021091 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607136238632537412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|DWORD, v39|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B40" "B59" 
    successors "B37" "B63" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607879228772281884
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|DWORD, v50|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13401192679415996 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594743355575062853
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVSX [v7|QWORD[.] + v49|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVZX v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v53|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594433662254056419
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594432806747644799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594432806747644799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v50|DWORD + v5|DWORD[.] * 8 + 16], y: v53|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD, v55|DWORD] destination: B40 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v53|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v53|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B54 -> B55 falseDestination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v20|DWORD, ~y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v60|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B57 -> B58 falseDestination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = LEA [v50|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = SHR v53|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = OR v62|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v50|DWORD + v5|DWORD[.] * 8 + 16], y: v63|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = SHR v53|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = AND v64|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = OR v65|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v55|DWORD + v5|DWORD[.] * 8 + 16], y: v66|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = AND v53|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = OR v67|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v61|DWORD + v5|DWORD[.] * 8 + 16], y: v68|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = LEA [v50|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD, v69|DWORD] destination: B59 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = SUB (x: v49|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v70|DWORD, y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v50|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B76" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: [v2|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9963826232969987 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 4607149623264343353
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD v38|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = SUB (x: v23|DWORD, ~y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVSXD v44|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = DEC v45|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = ADD (x: v43|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v18|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVSXD v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = ADD (x: v30|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v18|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4572561083591122456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B81" 
    xhandlers
    flags 
    probability 4570573330970775808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4570573330970775808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4570487327248526934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: [v1|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors 
    xhandlers
    flags 
    probability 4570487327248526934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" "B48" 
    xhandlers
    flags 
    probability 4537629533658711715
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v49|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v50|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143, 17, 57] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: v56|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction v57|DWORD = MOV [v56|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v57|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999763130215975 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4537629367653059069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9963826232969987 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4537604016561581912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4501082307533907077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|DWORD, y: [v1|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 4501082307533907077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4468506903950059860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v57|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4468506903950059860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-137499|0xfffffffffffde6e5]] destination: B10 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@287855974] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v37|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:54] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -164115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:246) [bci: 25]
locals: v2|QWORD[.] v71|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
locals: - - - - 
sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
locals: - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
locals: - v1|QWORD[.] v2|QWORD[.] - v49|DWORD - - v50|DWORD - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:25, 18, 4, 482, 17, 57] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-152595|0xfffffffffffdabed]] destination: B62 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B64" "B41" "B53" "B62" "B56" "B61" "B60" "B66" "B68" "B70" "B72" "B74" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v7|QWORD[.] v49|DWORD v23|DWORD v5|DWORD[.] v50|DWORD v20|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-152083|0xfffffffffffdaded]] destination: B46 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B46" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: v56|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:146, 17, 57] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-151315|0xfffffffffffdb0ed]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-137499|0xfffffffffffde6e5]] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-169491|0xfffffffffffd69ed]] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" "B81" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1832177577] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -145691 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v7|QWORD[.] v38|DWORD v23|DWORD v5|DWORD[.] v39|DWORD v20|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-163603|0xfffffffffffd80ed]] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-143131|0xfffffffffffdd0e5]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-162323|0xfffffffffffd85ed]] destination: B70 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-162067|0xfffffffffffd86ed]] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-158747|0xfffffffffffd93e5]] destination: B60 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-161043|0xfffffffffffd8aed]] destination: B66 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-152851|0xfffffffffffdaaed]] destination: B56 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-132371|0xfffffffffffdfaed]] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-143131|0xfffffffffffdd0e5]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-162579|0xfffffffffffd84ed]] destination: B72 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-160787|0xfffffffffffd8bed]] destination: B64 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-186899|0xfffffffffffd25ed]] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-152339|0xfffffffffffdaced]] destination: B53 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-153627|0xfffffffffffda7e5]] destination: B61 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-148251|0xfffffffffffdbce5]] destination: B41 -> B75 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: ifeq          8
     4: iconst_2      
     5: goto          9
     8: iconst_1      
     9: istore        4
    11: aload_0       
    12: getfield      #4          // state:int
    15: ifeq          48
    18: aload_0       
    19: getfield      #4          // state:int
    22: iconst_1      
    23: if_icmpeq     48
    26: iload_3       
    27: ifeq          38
    30: aload_0       
    31: getfield      #4          // state:int
    34: iconst_2      
    35: if_icmpeq     48
    38: aload_0       
    39: aload_0       
    40: getfield      #4          // state:int
    43: iload         4
    45: invokespecial #32         // throwIllegalStateException:(int, int)void
    48: aload_0       
    49: iload         4
    51: putfield      #4          // state:int
    54: aload_0       
    55: aload_1       
    56: aload_2       
    57: invokevirtual #33         // encodeLoop:(java.nio.CharBuffer, java.nio.ByteBuffer)java.nio.charset.CoderResult
    60: astore        5
    62: goto          89
    65: astore        6
    67: new           #49         // java.nio.charset.CoderMalfunctionError
    70: dup           
    71: aload         6
    73: invokespecial #34         // java.nio.charset.CoderMalfunctionError.<init>:(java.lang.Exception)void
    76: athrow        
    77: astore        6
    79: new           #49         // java.nio.charset.CoderMalfunctionError
    82: dup           
    83: aload         6
    85: invokespecial #34         // java.nio.charset.CoderMalfunctionError.<init>:(java.lang.Exception)void
    88: athrow        
    89: aload         5
    91: invokevirtual #35         // java.nio.charset.CoderResult.isOverflow:()boolean
    94: ifeq          100
    97: aload         5
    99: areturn       
   100: aload         5
   102: invokevirtual #36         // java.nio.charset.CoderResult.isUnderflow:()boolean
   105: ifeq          134
   108: iload_3       
   109: ifeq          131
   112: aload_1       
   113: invokevirtual #37         // java.nio.Buffer.hasRemaining:()boolean
   116: ifeq          131
   119: aload_1       
   120: invokevirtual #38         // java.nio.Buffer.remaining:()int
   123: invokestatic  #39         // java.nio.charset.CoderResult.malformedForLength:(int)java.nio.charset.CoderResult
   126: astore        5
   128: goto          134
   131: aload         5
   133: areturn       
   134: aconst_null   
   135: astore        6
   137: aload         5
   139: invokevirtual #40         // java.nio.charset.CoderResult.isMalformed:()boolean
   142: ifeq          154
   145: aload_0       
   146: getfield      #2          // malformedInputAction:java.nio.charset.CodingErrorAction
   149: astore        6
   151: goto          190
   154: aload         5
   156: invokevirtual #41         // java.nio.charset.CoderResult.isUnmappable:()boolean
   159: ifeq          171
   162: aload_0       
   163: getfield      #3          // unmappableCharacterAction:java.nio.charset.CodingErrorAction
   166: astore        6
   168: goto          190
   171: getstatic     #42         // $assertionsDisabled:boolean
   174: ifne          190
   177: new           #60         // java.lang.AssertionError
   180: dup           
   181: aload         5
   183: invokevirtual #43         // java.nio.charset.CoderResult.toString:()java.lang.String
   186: invokespecial #44         // java.lang.AssertionError.<init>:(java.lang.Object)void
   189: athrow        
   190: aload         6
   192: getstatic     #1          // java.nio.charset.CodingErrorAction.REPORT:java.nio.charset.CodingErrorAction
   195: if_acmpne     201
   198: aload         5
   200: areturn       
   201: aload         6
   203: getstatic     #45         // java.nio.charset.CodingErrorAction.REPLACE:java.nio.charset.CodingErrorAction
   206: if_acmpne     234
   209: aload_2       
   210: invokevirtual #25         // java.nio.Buffer.remaining:()int
   213: aload_0       
   214: getfield      #9          // replacement:byte[]
   217: arraylength   
   218: if_icmpge     225
   221: getstatic     #46         // java.nio.charset.CoderResult.OVERFLOW:java.nio.charset.CoderResult
   224: areturn       
   225: aload_2       
   226: aload_0       
   227: getfield      #9          // replacement:byte[]
   230: invokevirtual #47         // java.nio.ByteBuffer.put:(byte[])java.nio.ByteBuffer
   233: pop           
   234: aload         6
   236: getstatic     #48         // java.nio.charset.CodingErrorAction.IGNORE:java.nio.charset.CodingErrorAction
   239: if_acmpeq     250
   242: aload         6
   244: getstatic     #45         // java.nio.charset.CodingErrorAction.REPLACE:java.nio.charset.CodingErrorAction
   247: if_acmpne     268
   250: aload_1       
   251: aload_1       
   252: invokevirtual #49         // java.nio.Buffer.position:()int
   255: aload         5
   257: invokevirtual #50         // java.nio.charset.CoderResult.length:()int
   260: iadd          
   261: invokevirtual #51         // java.nio.Buffer.position:(int)java.nio.Buffer
   264: pop           
   265: goto          54
   268: getstatic     #42         // $assertionsDisabled:boolean
   271: ifne          282
   274: new           #60         // java.lang.AssertionError
   277: dup           
   278: invokespecial #52         // java.lang.AssertionError.<init>:()void
   281: athrow        
   282: goto          54
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4655686c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|DWORD - - - 
>@ <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|DWORD - - - 
>@ <|@ instruction r11|DWORD[.] = MOV [rcx|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOVZXB [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@150596a5 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B82" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rax|DWORD = MOVZXB [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   34  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMP rbx|DWORD y: 1 size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.9963454110228706 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607149501188906223
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B3" 
    successors "B7" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rbx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr   80  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rbx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction rbx|DWORD = MOV [rcx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   84  <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   86  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction rbp|DWORD = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   90  <|@ instruction r13|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   92  <|@ instruction r14|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   96  <|@ instruction rsi|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction r8|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction rdi|DWORD = ADD (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction stack:60|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rbx|DWORD = SUB (x: rdi|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rbx|DWORD = CMOVE (falseValue: rbx|DWORD, ~trueValue: rcx|DWORD) condition: > <|@ <|@
      nr  118  <|@ instruction rcx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  120  <|@ instruction rcx|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr  122  <|@ instruction rbx|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction CMP (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B9" 
    successors "B14" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction CMP (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4628356813802972979
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  256  <|@ instruction rax|DWORD = MOVSX [r9|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction CMP rax|DWORD y: 128 size: WORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 0.9998116902024854 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4628355370672739229
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction MOVB (x: [rdx|DWORD + r11|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  266  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  268  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B26" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628636845649449885
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  250  <|@ instruction CMP (x: rbx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction BRANCH trueDestinationProbability: 0.9647476131021091 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607136238632537412
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction rbx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B40" "B59" 
    successors "B37" "B63" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607879228772281884
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  352  <|@ instruction CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 0.13401192679415996 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594743355575062853
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction rax|DWORD = MOVSX [r9|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  360  <|@ instruction rsi|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  362  <|@ instruction rax|DWORD = MOVZX rax|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction rdx|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  366  <|@ instruction rcx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  368  <|@ instruction CMP rax|DWORD y: 128 size: DWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594433662254056419
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594432806747644799
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction CMP (x: rsi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594432806747644799
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction MOVB (x: [rbx|DWORD + r11|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  388  <|@ instruction rbx|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B40 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction CMP rax|DWORD y: 2048 size: DWORD <|@ <|@
      nr  492  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction CMP rax|DWORD y: 55296 size: DWORD <|@ <|@
      nr  508  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B54 -> B55 falseDestination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction r13|DWORD = SUB (x: r8|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  516  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction CMP (x: rsi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B57 -> B58 falseDestination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction r13|DWORD = LEA [rbx|DWORD + 2] size: DWORD <|@ <|@
      nr  538  <|@ instruction CMP (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rsi|DWORD = SHR rax|DWORD y: 12 size: DWORD <|@ <|@
      nr  546  <|@ instruction rsi|DWORD = OR rsi|DWORD y: 224 size: DWORD <|@ <|@
      nr  548  <|@ instruction MOVB (x: [rbx|DWORD + r11|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  550  <|@ instruction rsi|DWORD = SHR rax|DWORD y: 6 size: DWORD <|@ <|@
      nr  552  <|@ instruction rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  554  <|@ instruction rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  556  <|@ instruction MOVB (x: [rcx|DWORD + r11|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  558  <|@ instruction rax|DWORD = AND rax|DWORD y: 63 size: DWORD <|@ <|@
      nr  560  <|@ instruction rax|DWORD = OR rax|DWORD y: 128 size: DWORD <|@ <|@
      nr  562  <|@ instruction MOVB (x: [r13|DWORD + r11|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  564  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 3] size: DWORD <|@ <|@
      nr  566  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B59 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction rax|DWORD = SUB (x: r10|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  604  <|@ instruction CMP (x: rax|DWORD, y: stack:64|DWORD) size: DWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  620  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction CMP (x: rax|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  640  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction rcx|DWORD = SUB (x: rbx|DWORD, ~y: stack:60|DWORD) size: DWORD <|@ <|@
      nr  656  <|@ instruction CMP (x: rcx|DWORD, y: stack:56|DWORD) size: DWORD <|@ <|@
      nr  658  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  672  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B76" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction CMP (x: rcx|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  692  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction MOV (x: [r13|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  718  <|@ instruction MOV (x: [r14|QWORD[.] + 24], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905] <|@ <|@
      nr  722  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 0.9963826232969987 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 4607149623264343353
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  290  <|@ instruction rbx|DWORD = SUB (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  294  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr  296  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction CMP (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B35" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  132  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rdx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  184  <|@ instruction r13|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  186  <|@ instruction r13|QWORD = ADD (x: r13|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  188  <|@ instruction rcx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction CMP (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 4572561083591122456
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B81" 
    xhandlers
    flags 
    probability 4570573330970775808
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4570573330970775808
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4570487327248526934
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction rdx|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction CMP (x: rdx|DWORD, y: [r13|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  738  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors 
    xhandlers
    flags 
    probability 4570487327248526934
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  754  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" "B48" 
    xhandlers
    flags 
    probability 4537629533658711715
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r10|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rcx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] stack:52|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143, 17, 57] <|@ <|@
      nr  422  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:24, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: rax|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] stack:52|DWORD - - - 
>@ <|@ instruction r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57] <|@ <|@
      nr  424  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.9999763130215975 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4537629367653059069
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction BRANCH trueDestinationProbability: 0.9963826232969987 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4537604016561581912
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4501082307533907077
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction r10|DWORD = MOV [rbp|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  446  <|@ instruction CMP (x: r10|DWORD, y: [rbp|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 4501082307533907077
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4468506903950059860
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4468506903950059860
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction r10|DWORD = MOVE input: int[-137499|0xfffffffffffde6e5] <|@ <|@
      nr  152  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B10 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  226  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@287855974] <|@ <|@
      nr  228  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  232  <|@ st <@st|@reference-map: [rbp:0, stack:16, stack:32]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 54]
locals: stack:32|QWORD[.] rbp|QWORD[.] stack:48|QWORD[.] rsi|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:54] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction MOV [r15|QWORD + 668] y: -164115 size: DWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  750  <|@ st <@st|@reference-map: [rbp:0, stack:16, stack:32]
live-base-pointers: []
java.nio.Buffer.position(Buffer.java:246) [bci: 25]
locals: stack:48|QWORD[.] rcx|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
locals: - - - - 
sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
locals: - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
locals: - rbp|QWORD[.] stack:48|QWORD[.] - r10|DWORD - - rbx|DWORD - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:32|QWORD[.] rbp|QWORD[.] stack:48|QWORD[.] rsi|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:25, 18, 4, 482, 17, 57] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction rcx|DWORD = MOVE input: int[-152595|0xfffffffffffdabed] <|@ <|@
      nr  594  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B62 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B64" "B41" "B53" "B62" "B56" "B61" "B60" "B66" "B68" "B70" "B72" "B74" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  706  <|@ instruction MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  710  <|@ st <@st|@reference-map: [rbp:0, r9:0, r11:0, stack:16, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] rbp|QWORD[.] stack:48|QWORD[.] r9|QWORD[.] r10|DWORD rdi|DWORD r11|DWORD[.] rbx|DWORD r8|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:32|QWORD[.] rbp|QWORD[.] stack:48|QWORD[.] rsi|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r10|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B46 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B46" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [rax:0, rbp:0, stack:16, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: rax|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:32|QWORD[.] rbp|QWORD[.] stack:48|QWORD[.] rsi|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:146, 17, 57] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r10|DWORD = MOVE input: int[-151315|0xfffffffffffdb0ed] <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction r10|DWORD = MOVE input: int[-137499|0xfffffffffffde6e5] <|@ <|@
      nr  162  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction r10|DWORD = MOVE input: int[-169491|0xfffffffffffd69ed] <|@ <|@
      nr  762  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" "B81" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  798  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  802  <|@ st <@st|@reference-map: [rcx:0, rbp:0, r11:0]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0]
locals: r11|QWORD[.] rbp|QWORD[.] rcx|QWORD[.] rsi|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1832177577] <|@ <|@
      nr  332  <|@ instruction MOV [r15|QWORD + 668] y: -145691 size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  336  <|@ st <@st|@reference-map: [rbp:0, r9:0, r11:0, stack:16, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] rbp|QWORD[.] stack:48|QWORD[.] r9|QWORD[.] rcx|DWORD rdi|DWORD r11|DWORD[.] rdx|DWORD r8|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:32|QWORD[.] rbp|QWORD[.] stack:48|QWORD[.] rsi|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction rcx|DWORD = MOVE input: int[-163603|0xfffffffffffd80ed] <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r10|DWORD = MOVE input: int[-143131|0xfffffffffffdd0e5] <|@ <|@
      nr  208  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: int[-162323|0xfffffffffffd85ed] <|@ <|@
      nr  664  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B70 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed] <|@ <|@
      nr  646  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = MOVE input: int[-158747|0xfffffffffffd93e5] <|@ <|@
      nr  574  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B60 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction rcx|DWORD = MOVE input: int[-161043|0xfffffffffffd8aed] <|@ <|@
      nr  628  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction JUMP ~[] destination: B66 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction rcx|DWORD = MOVE input: int[-152851|0xfffffffffffdaaed] <|@ <|@
      nr  522  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B56 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction r10|DWORD = MOVE input: int[-132371|0xfffffffffffdfaed] <|@ <|@
      nr  788  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOVE input: int[-143131|0xfffffffffffdd0e5] <|@ <|@
      nr  218  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction rcx|DWORD = MOVE input: int[-162579|0xfffffffffffd84ed] <|@ <|@
      nr  680  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B72 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed] <|@ <|@
      nr  612  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction JUMP ~[] destination: B64 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction r10|DWORD = MOVE input: int[-186899|0xfffffffffffd25ed] <|@ <|@
      nr  776  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction rsi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = MOVE input: int[-152339|0xfffffffffffdaced] <|@ <|@
      nr  498  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B53 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: int[-153627|0xfffffffffffda7e5] <|@ <|@
      nr  584  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B61 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction rcx|DWORD = MOVE input: int[-148251|0xfffffffffffdbce5] <|@ <|@
      nr  398  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B41 -> B75 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: ifeq          8
     4: iconst_2      
     5: goto          9
     8: iconst_1      
     9: istore        4
    11: aload_0       
    12: getfield      #4          // state:int
    15: ifeq          48
    18: aload_0       
    19: getfield      #4          // state:int
    22: iconst_1      
    23: if_icmpeq     48
    26: iload_3       
    27: ifeq          38
    30: aload_0       
    31: getfield      #4          // state:int
    34: iconst_2      
    35: if_icmpeq     48
    38: aload_0       
    39: aload_0       
    40: getfield      #4          // state:int
    43: iload         4
    45: invokespecial #32         // throwIllegalStateException:(int, int)void
    48: aload_0       
    49: iload         4
    51: putfield      #4          // state:int
    54: aload_0       
    55: aload_1       
    56: aload_2       
    57: invokevirtual #33         // encodeLoop:(java.nio.CharBuffer, java.nio.ByteBuffer)java.nio.charset.CoderResult
    60: astore        5
    62: goto          89
    65: astore        6
    67: new           #49         // java.nio.charset.CoderMalfunctionError
    70: dup           
    71: aload         6
    73: invokespecial #34         // java.nio.charset.CoderMalfunctionError.<init>:(java.lang.Exception)void
    76: athrow        
    77: astore        6
    79: new           #49         // java.nio.charset.CoderMalfunctionError
    82: dup           
    83: aload         6
    85: invokespecial #34         // java.nio.charset.CoderMalfunctionError.<init>:(java.lang.Exception)void
    88: athrow        
    89: aload         5
    91: invokevirtual #35         // java.nio.charset.CoderResult.isOverflow:()boolean
    94: ifeq          100
    97: aload         5
    99: areturn       
   100: aload         5
   102: invokevirtual #36         // java.nio.charset.CoderResult.isUnderflow:()boolean
   105: ifeq          134
   108: iload_3       
   109: ifeq          131
   112: aload_1       
   113: invokevirtual #37         // java.nio.Buffer.hasRemaining:()boolean
   116: ifeq          131
   119: aload_1       
   120: invokevirtual #38         // java.nio.Buffer.remaining:()int
   123: invokestatic  #39         // java.nio.charset.CoderResult.malformedForLength:(int)java.nio.charset.CoderResult
   126: astore        5
   128: goto          134
   131: aload         5
   133: areturn       
   134: aconst_null   
   135: astore        6
   137: aload         5
   139: invokevirtual #40         // java.nio.charset.CoderResult.isMalformed:()boolean
   142: ifeq          154
   145: aload_0       
   146: getfield      #2          // malformedInputAction:java.nio.charset.CodingErrorAction
   149: astore        6
   151: goto          190
   154: aload         5
   156: invokevirtual #41         // java.nio.charset.CoderResult.isUnmappable:()boolean
   159: ifeq          171
   162: aload_0       
   163: getfield      #3          // unmappableCharacterAction:java.nio.charset.CodingErrorAction
   166: astore        6
   168: goto          190
   171: getstatic     #42         // $assertionsDisabled:boolean
   174: ifne          190
   177: new           #60         // java.lang.AssertionError
   180: dup           
   181: aload         5
   183: invokevirtual #43         // java.nio.charset.CoderResult.toString:()java.lang.String
   186: invokespecial #44         // java.lang.AssertionError.<init>:(java.lang.Object)void
   189: athrow        
   190: aload         6
   192: getstatic     #1          // java.nio.charset.CodingErrorAction.REPORT:java.nio.charset.CodingErrorAction
   195: if_acmpne     201
   198: aload         5
   200: areturn       
   201: aload         6
   203: getstatic     #45         // java.nio.charset.CodingErrorAction.REPLACE:java.nio.charset.CodingErrorAction
   206: if_acmpne     234
   209: aload_2       
   210: invokevirtual #25         // java.nio.Buffer.remaining:()int
   213: aload_0       
   214: getfield      #9          // replacement:byte[]
   217: arraylength   
   218: if_icmpge     225
   221: getstatic     #46         // java.nio.charset.CoderResult.OVERFLOW:java.nio.charset.CoderResult
   224: areturn       
   225: aload_2       
   226: aload_0       
   227: getfield      #9          // replacement:byte[]
   230: invokevirtual #47         // java.nio.ByteBuffer.put:(byte[])java.nio.ByteBuffer
   233: pop           
   234: aload         6
   236: getstatic     #48         // java.nio.charset.CodingErrorAction.IGNORE:java.nio.charset.CodingErrorAction
   239: if_acmpeq     250
   242: aload         6
   244: getstatic     #45         // java.nio.charset.CodingErrorAction.REPLACE:java.nio.charset.CodingErrorAction
   247: if_acmpne     268
   250: aload_1       
   251: aload_1       
   252: invokevirtual #49         // java.nio.Buffer.position:()int
   255: aload         5
   257: invokevirtual #50         // java.nio.charset.CoderResult.length:()int
   260: iadd          
   261: invokevirtual #51         // java.nio.Buffer.position:(int)java.nio.Buffer
   264: pop           
   265: goto          54
   268: getstatic     #42         // $assertionsDisabled:boolean
   271: ifne          282
   274: new           #60         // java.lang.AssertionError
   277: dup           
   278: invokespecial #52         // java.lang.AssertionError.<init>:()void
   281: athrow        
   282: goto          54
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B83" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4655686c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|DWORD - - - 
>@ <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|DWORD - - - 
>@ <|@ instruction r11|DWORD[.] = MOV [rcx|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOVZXB [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@150596a5 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B82" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rax|DWORD = MOVZXB [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   34  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMP rbx|DWORD y: 1 size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.9963454110228706 condition: = trueDestination: B2 -> B6 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B2" 
    successors "B7" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   78  <|@ instruction rbx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: = <|@ <|@
      nr   80  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rbx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction rbx|DWORD = MOV [rcx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   84  <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   86  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   88  <|@ instruction rbp|DWORD = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   90  <|@ instruction r13|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   92  <|@ instruction r14|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   96  <|@ instruction rsi|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction r8|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction rdi|DWORD = ADD (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r14|DWORD = ADD (x: r14|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction stack:60|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rbx|DWORD = SUB (x: rdi|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rbx|DWORD = CMOVE (falseValue: rbx|DWORD, ~trueValue: rcx|DWORD) condition: > <|@ <|@
      nr  118  <|@ instruction rcx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  120  <|@ instruction rcx|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr  122  <|@ instruction rbx|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction CMP (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B14" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction CMP (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4628356813802972979
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  256  <|@ instruction rax|DWORD = MOVSX [r9|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction CMP rax|DWORD y: 128 size: WORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 0.9998116902024854 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4628355370672739229
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction MOVB (x: [rdx|DWORD + r11|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  266  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  268  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B24 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B23" "B27" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628636845649449885
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  250  <|@ instruction CMP (x: rbx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction BRANCH trueDestinationProbability: 0.9647476131021091 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" "B23" 
    successors "B28" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction rbx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B40" "B59" 
    successors "B37" "B63" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607879228772281884
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  352  <|@ instruction CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 0.13401192679415996 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594743355575062853
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction rax|DWORD = MOVSX [r9|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  360  <|@ instruction rsi|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  362  <|@ instruction rax|DWORD = MOVZX rax|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction rdx|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  366  <|@ instruction rcx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  368  <|@ instruction CMP rax|DWORD y: 128 size: DWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B42" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594433662254056419
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594432806747644799
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction CMP (x: rsi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594432806747644799
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction MOVB (x: [rbx|DWORD + r11|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  388  <|@ instruction rbx|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B40 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction CMP rax|DWORD y: 2048 size: DWORD <|@ <|@
      nr  492  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction CMP rax|DWORD y: 55296 size: DWORD <|@ <|@
      nr  508  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B54 -> B55 falseDestination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction r13|DWORD = SUB (x: r8|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  516  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction CMP (x: rsi|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B57 -> B58 falseDestination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction r13|DWORD = LEA [rbx|DWORD + 2] size: DWORD <|@ <|@
      nr  538  <|@ instruction CMP (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4576108714917156385
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rsi|DWORD = SHR rax|DWORD y: 12 size: DWORD <|@ <|@
      nr  546  <|@ instruction rsi|DWORD = OR rsi|DWORD y: 224 size: DWORD <|@ <|@
      nr  548  <|@ instruction MOVB (x: [rbx|DWORD + r11|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  550  <|@ instruction rsi|DWORD = SHR rax|DWORD y: 6 size: DWORD <|@ <|@
      nr  552  <|@ instruction rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  554  <|@ instruction rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  556  <|@ instruction MOVB (x: [rcx|DWORD + r11|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  558  <|@ instruction rax|DWORD = AND rax|DWORD y: 63 size: DWORD <|@ <|@
      nr  560  <|@ instruction rax|DWORD = OR rax|DWORD y: 128 size: DWORD <|@ <|@
      nr  562  <|@ instruction MOVB (x: [r13|DWORD + r11|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  564  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 3] size: DWORD <|@ <|@
      nr  566  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B59 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction rax|DWORD = SUB (x: r10|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  604  <|@ instruction CMP (x: rax|DWORD, y: stack:64|DWORD) size: DWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  620  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction CMP (x: rax|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  640  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction rcx|DWORD = SUB (x: rbx|DWORD, ~y: stack:60|DWORD) size: DWORD <|@ <|@
      nr  656  <|@ instruction CMP (x: rcx|DWORD, y: stack:56|DWORD) size: DWORD <|@ <|@
      nr  658  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  672  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B76" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction CMP (x: rcx|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  692  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4607182204923414503
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction MOV (x: [r13|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  718  <|@ instruction MOV (x: [r14|QWORD[.] + 24], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905] <|@ <|@
      nr  722  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 0.9963826232969987 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 4607149623264343353
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B33" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  290  <|@ instruction rbx|DWORD = SUB (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  294  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr  296  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction CMP (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B35" "B33" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B35 falseDestination: B29 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  132  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" "B10" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B13 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  184  <|@ instruction r13|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  186  <|@ instruction r13|QWORD = ADD (x: r13|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  188  <|@ instruction rcx|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction CMP (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B21 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B81" 
    xhandlers
    flags 
    probability 4570573330970775808
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4570573330970775808
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4570487327248526934
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction rdx|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction CMP (x: rdx|DWORD, y: [r13|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  738  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors 
    xhandlers
    flags 
    probability 4570487327248526934
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  754  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" "B48" 
    xhandlers
    flags 
    probability 4537629533658711715
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r10|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rcx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] stack:52|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143, 17, 57] <|@ <|@
      nr  422  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:24, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: rax|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] stack:52|DWORD - - - 
>@ <|@ instruction r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57] <|@ <|@
      nr  424  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.9999763130215975 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4537629367653059069
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction BRANCH trueDestinationProbability: 0.9963826232969987 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4537604016561581912
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4501082307533907077
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction r10|DWORD = MOV [rbp|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  446  <|@ instruction CMP (x: r10|DWORD, y: [rbp|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 4501082307533907077
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4468506903950059860
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4468506903950059860
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction r10|DWORD = MOVE input: int[-137499|0xfffffffffffde6e5] <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B10 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" "B18" "B10" "B17" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@287855974] <|@ <|@
      nr  228  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  232  <|@ st <@st|@reference-map: [rbp:0, stack:16, stack:32]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 54]
locals: stack:32|QWORD[.] rbp|QWORD[.] stack:48|QWORD[.] rsi|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:54] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction MOV [r15|QWORD + 668] y: -164115 size: DWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  750  <|@ st <@st|@reference-map: [rbp:0, stack:16, stack:32]
live-base-pointers: []
java.nio.Buffer.position(Buffer.java:246) [bci: 25]
locals: stack:48|QWORD[.] rcx|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
locals: - - - - 
sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
locals: - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
locals: - rbp|QWORD[.] stack:48|QWORD[.] - r10|DWORD - - rbx|DWORD - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:32|QWORD[.] rbp|QWORD[.] stack:48|QWORD[.] rsi|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:25, 18, 4, 482, 17, 57] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction rcx|DWORD = MOVE input: int[-152595|0xfffffffffffdabed] <|@ <|@
      nr  594  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B62 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B64" "B41" "B53" "B62" "B56" "B61" "B60" "B66" "B68" "B70" "B72" "B74" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  706  <|@ instruction MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  710  <|@ st <@st|@reference-map: [rbp:0, r9:0, r11:0, stack:16, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] rbp|QWORD[.] stack:48|QWORD[.] r9|QWORD[.] r10|DWORD rdi|DWORD r11|DWORD[.] rbx|DWORD r8|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:32|QWORD[.] rbp|QWORD[.] stack:48|QWORD[.] rsi|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r10|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B46 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B46" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [rax:0, rbp:0, stack:16, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: rax|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:32|QWORD[.] rbp|QWORD[.] stack:48|QWORD[.] rsi|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:146, 17, 57] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r10|DWORD = MOVE input: int[-151315|0xfffffffffffdb0ed] <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction r10|DWORD = MOVE input: int[-137499|0xfffffffffffde6e5] <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction r10|DWORD = MOVE input: int[-169491|0xfffffffffffd69ed] <|@ <|@
      nr  762  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" "B81" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  798  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  802  <|@ st <@st|@reference-map: [rcx:0, rbp:0, r11:0]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0]
locals: r11|QWORD[.] rbp|QWORD[.] rcx|QWORD[.] rsi|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1832177577] <|@ <|@
      nr  332  <|@ instruction MOV [r15|QWORD + 668] y: -145691 size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  336  <|@ st <@st|@reference-map: [rbp:0, r9:0, r11:0, stack:16, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] rbp|QWORD[.] stack:48|QWORD[.] r9|QWORD[.] rcx|DWORD rdi|DWORD r11|DWORD[.] rdx|DWORD r8|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:32|QWORD[.] rbp|QWORD[.] stack:48|QWORD[.] rsi|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction rcx|DWORD = MOVE input: int[-163603|0xfffffffffffd80ed] <|@ <|@
      nr  698  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r10|DWORD = MOVE input: int[-143131|0xfffffffffffdd0e5] <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: int[-162323|0xfffffffffffd85ed] <|@ <|@
      nr  664  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B70 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed] <|@ <|@
      nr  646  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = MOVE input: int[-158747|0xfffffffffffd93e5] <|@ <|@
      nr  574  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B60 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction rcx|DWORD = MOVE input: int[-161043|0xfffffffffffd8aed] <|@ <|@
      nr  628  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction JUMP ~[] destination: B66 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction rcx|DWORD = MOVE input: int[-152851|0xfffffffffffdaaed] <|@ <|@
      nr  522  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B56 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction r10|DWORD = MOVE input: int[-132371|0xfffffffffffdfaed] <|@ <|@
      nr  788  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOVE input: int[-143131|0xfffffffffffdd0e5] <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction rcx|DWORD = MOVE input: int[-162579|0xfffffffffffd84ed] <|@ <|@
      nr  680  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B72 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed] <|@ <|@
      nr  612  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction JUMP ~[] destination: B64 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction r10|DWORD = MOVE input: int[-186899|0xfffffffffffd25ed] <|@ <|@
      nr  776  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction rsi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction rcx|DWORD = MOVE input: int[-152339|0xfffffffffffdaced] <|@ <|@
      nr  498  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B53 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: int[-153627|0xfffffffffffda7e5] <|@ <|@
      nr  584  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B61 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B75" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction rcx|DWORD = MOVE input: int[-148251|0xfffffffffffdbce5] <|@ <|@
      nr  398  <|@ instruction rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B41 -> B75 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: ifeq          8
     4: iconst_2      
     5: goto          9
     8: iconst_1      
     9: istore        4
    11: aload_0       
    12: getfield      #4          // state:int
    15: ifeq          48
    18: aload_0       
    19: getfield      #4          // state:int
    22: iconst_1      
    23: if_icmpeq     48
    26: iload_3       
    27: ifeq          38
    30: aload_0       
    31: getfield      #4          // state:int
    34: iconst_2      
    35: if_icmpeq     48
    38: aload_0       
    39: aload_0       
    40: getfield      #4          // state:int
    43: iload         4
    45: invokespecial #32         // throwIllegalStateException:(int, int)void
    48: aload_0       
    49: iload         4
    51: putfield      #4          // state:int
    54: aload_0       
    55: aload_1       
    56: aload_2       
    57: invokevirtual #33         // encodeLoop:(java.nio.CharBuffer, java.nio.ByteBuffer)java.nio.charset.CoderResult
    60: astore        5
    62: goto          89
    65: astore        6
    67: new           #49         // java.nio.charset.CoderMalfunctionError
    70: dup           
    71: aload         6
    73: invokespecial #34         // java.nio.charset.CoderMalfunctionError.<init>:(java.lang.Exception)void
    76: athrow        
    77: astore        6
    79: new           #49         // java.nio.charset.CoderMalfunctionError
    82: dup           
    83: aload         6
    85: invokespecial #34         // java.nio.charset.CoderMalfunctionError.<init>:(java.lang.Exception)void
    88: athrow        
    89: aload         5
    91: invokevirtual #35         // java.nio.charset.CoderResult.isOverflow:()boolean
    94: ifeq          100
    97: aload         5
    99: areturn       
   100: aload         5
   102: invokevirtual #36         // java.nio.charset.CoderResult.isUnderflow:()boolean
   105: ifeq          134
   108: iload_3       
   109: ifeq          131
   112: aload_1       
   113: invokevirtual #37         // java.nio.Buffer.hasRemaining:()boolean
   116: ifeq          131
   119: aload_1       
   120: invokevirtual #38         // java.nio.Buffer.remaining:()int
   123: invokestatic  #39         // java.nio.charset.CoderResult.malformedForLength:(int)java.nio.charset.CoderResult
   126: astore        5
   128: goto          134
   131: aload         5
   133: areturn       
   134: aconst_null   
   135: astore        6
   137: aload         5
   139: invokevirtual #40         // java.nio.charset.CoderResult.isMalformed:()boolean
   142: ifeq          154
   145: aload_0       
   146: getfield      #2          // malformedInputAction:java.nio.charset.CodingErrorAction
   149: astore        6
   151: goto          190
   154: aload         5
   156: invokevirtual #41         // java.nio.charset.CoderResult.isUnmappable:()boolean
   159: ifeq          171
   162: aload_0       
   163: getfield      #3          // unmappableCharacterAction:java.nio.charset.CodingErrorAction
   166: astore        6
   168: goto          190
   171: getstatic     #42         // $assertionsDisabled:boolean
   174: ifne          190
   177: new           #60         // java.lang.AssertionError
   180: dup           
   181: aload         5
   183: invokevirtual #43         // java.nio.charset.CoderResult.toString:()java.lang.String
   186: invokespecial #44         // java.lang.AssertionError.<init>:(java.lang.Object)void
   189: athrow        
   190: aload         6
   192: getstatic     #1          // java.nio.charset.CodingErrorAction.REPORT:java.nio.charset.CodingErrorAction
   195: if_acmpne     201
   198: aload         5
   200: areturn       
   201: aload         6
   203: getstatic     #45         // java.nio.charset.CodingErrorAction.REPLACE:java.nio.charset.CodingErrorAction
   206: if_acmpne     234
   209: aload_2       
   210: invokevirtual #25         // java.nio.Buffer.remaining:()int
   213: aload_0       
   214: getfield      #9          // replacement:byte[]
   217: arraylength   
   218: if_icmpge     225
   221: getstatic     #46         // java.nio.charset.CoderResult.OVERFLOW:java.nio.charset.CoderResult
   224: areturn       
   225: aload_2       
   226: aload_0       
   227: getfield      #9          // replacement:byte[]
   230: invokevirtual #47         // java.nio.ByteBuffer.put:(byte[])java.nio.ByteBuffer
   233: pop           
   234: aload         6
   236: getstatic     #48         // java.nio.charset.CodingErrorAction.IGNORE:java.nio.charset.CodingErrorAction
   239: if_acmpeq     250
   242: aload         6
   244: getstatic     #45         // java.nio.charset.CodingErrorAction.REPLACE:java.nio.charset.CodingErrorAction
   247: if_acmpne     268
   250: aload_1       
   251: aload_1       
   252: invokevirtual #49         // java.nio.Buffer.position:()int
   255: aload         5
   257: invokevirtual #50         // java.nio.charset.CoderResult.length:()int
   260: iadd          
   261: invokevirtual #51         // java.nio.Buffer.position:(int)java.nio.Buffer
   264: pop           
   265: goto          54
   268: getstatic     #42         // $assertionsDisabled:boolean
   271: ifne          282
   274: new           #60         // java.lang.AssertionError
   277: dup           
   278: invokespecial #52         // java.lang.AssertionError.<init>:()void
   281: athrow        
   282: goto          54
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24304889742420488954241848894c2410448944240c448b522c438504d4448b592c438504dc0fb64128458bca49c1e10385c00f85ad0400000fb6422885c00f85e40400008b5e1483fb010f85620200004585c0b801000000bb020000000f44d8895e148b59248b791c8b41188b6a24448b6a1c448b7218468b14d50c000000418bf2448bc34403c703c3418bc82bc8897c24088bfd4103fd4403f5895c24048bdf412bde3bd90f4fd94863cb48ffc903d83bd80f8fb60100003bd844892c240f8fc70100008bd0418bcee91c0000006690410fbf4449106681f880000f830d000000428844da10ffc2ffc13bda7fe23bf90f8f510100008bda448bd10f1f440000413bfa0f8ebc000000430fbf445110428b34dd0c0000000fb7c0418bd2ffc28bcbffc181f8800000000f831d000000443bc30f8eb40100003bf30f8621040000428844db108bd9448bd2ebb481f8000800000f82e303000081f800d800000f8369020000458be8442beb4183fd030f8c5d0300003bf30f86d2030000448d6b02413bf50f86220300008bf0c1ee0c81cee0000000428874db108bf0c1ee0683e63f81ce80000000428874d91083e03f81c880000000438844dd108d5b03448bd2e93bffffff418bc22bc53b04240f8f4103000085c00f8ce30200004c8b6c2418413b450c0f8cb00200008bcb2b4c24043b4c24080f8f8f02000085c90f8c010300004c8b742410413b4e0c0f8c5c020000448b44240c4189451841894e1848beaddeaddeaddeadde4585c00f8598000000488bc6488b6c24304883c438850500000000c5f877c34863c18bdf2bd94863db48ffcb4803c3483bf00f86e2010000443bd10f878dfeffffe9d40100004963d64803d1483bf20f8694010000453bd60f8732feffffe9f6000000428b14dd0c0000004c63e84c03e98bca493bcd0f86540200003bd00f8718feffffe9cd0100004c8bf14c8bea85db0f855d010000488b742420e986fdffff8b1424413b55180f8fd8000000488bc6488b6c24304883c438850500000000c5f877c34c8b7424104c8b6c2418498bf5418bd24d8bd6498bca448bc36690e80000000090448b500c4585d28b74240c0f854100000085f60f8513000000488b6c24304883c438850500000000c5f877c3488b6c2418448b5518443b551c0f8ca3000000488b6c24304883c438850500000000c5f877c3488b6c24184183fa010f859b000000488b6c24304883c438850500000000c5f877c341bae5e6fdff8b74240c488b6c241849bbaddeaddeaddeadde4589979c0200004d899fa8020000e800000000908b74240c498bed41c7879c020000ed7efdff4d89a7a8020000e80000000090b9edabfdff8b74240c488b6c241841898f9c0200004d89a7a8020000e8000000009041baedadfdff4589979c0200004d89a7a8020000e8000000009041baedb0fdffebe441bae5e6fdffe96bffffff41baed69fdff8b74240c498bed4c8b5c24204589979c0200004d89a7a8020000e800000000908b74240c488b6c241849baaddeaddeaddeadde41c7879c020000e5c6fdff4d8997a8020000e80000000090b9ed80fdff8b74240c498bede95dffffff41bae5d0fdffe9fefeffffb9ed85fdff8b74240c498bede941ffffffb9ed86fdff8b74240c498bede930ffffffb9e593fdff8b74240c488b6c2418e91dffffffb9ed8afdff8b74240c488b6c2418e90affffffb9edaafdff8b74240c488b6c2418e9f7feffff41baedfafdff488bea4c8bde418bf0e936ffffff41bae5d0fdffe984feffffb9ed84fdff8b74240c498bede9c7feffffb9ed8bfdff8b74240c488b6c2418e9b4feffff41baed25fdff488bea4c8bde418bf0e9f3feffffb9edacfdff8b74240c488b6c2418e98dfeffffb9e5a7fdff8b74240c488b6c2418e97afeffffb9e5bcfdff8b74240c488b6c2418e967feffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4655686c slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 63 12 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 68 14 r10|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD state [bci:0]  <||@
  Comment 68 [rcx:0, rdx:0, rsi:0, stack:16, stack:24, stack:32]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3         |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|DWORD  |-  |-  |-   <||@
  Comment 68 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 72 16 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 72 [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:24, stack:32]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3         |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|DWORD  |-  |-  |-   <||@
  Comment 72 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 18 r11|DWORD[.] = MOV [rcx|QWORD[.] + 44] size: DWORD state [bci:0]  <||@
  Comment 76 [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:24, stack:32]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3         |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|DWORD  |-  |-  |-   <||@
  Comment 76 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 80 20 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:0]  <||@
  Comment 80 [rcx:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:32]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3         |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|DWORD  |-  |-  |-   <||@
  Comment 80 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 84 22 rax|DWORD = MOVZXB [rcx|QWORD[.] + 40] size: DWORD  <||@
  Comment 88 24 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@150596a5 encoding: base: 0 shift: 3  <||@
  Comment 95 26 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 97 28 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B83  <||@
  Comment 103 block B1 null  <||@
  Comment 103 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 32 rax|DWORD = MOVZXB [rdx|QWORD[.] + 40] size: DWORD  <||@
  Comment 107 34 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 109 36 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B82  <||@
  Comment 115 block B2 null  <||@
  Comment 115 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 115 40 rbx|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 118 42 CMP rbx|DWORD y: 1 size: DWORD  <||@
  Comment 121 44 BRANCH trueDestinationProbability: 0.9963454110228706 condition: = trueDestination: B2 -> B6 falseDestination: B2 -> B4  <||@
  Comment 127 block B6 null  <||@
  Comment 127 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 127 74 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 130 76 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 135 78 rbx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 143 80 MOV (x: [rsi|QWORD[.] + 20], y: rbx|DWORD) size: DWORD  <||@
  Comment 146 82 rbx|DWORD = MOV [rcx|QWORD[.] + 36] size: DWORD  <||@
  Comment 149 84 rdi|DWORD = MOV [rcx|QWORD[.] + 28] size: DWORD  <||@
  Comment 152 86 rax|DWORD = MOV [rcx|QWORD[.] + 24] size: DWORD  <||@
  Comment 155 88 rbp|DWORD = MOV [rdx|QWORD[.] + 36] size: DWORD  <||@
  Comment 158 90 r13|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 162 92 r14|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 166 94 r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 174 96 rsi|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 177 98 r8|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 183 100 rax|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 185 102 rcx|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 190 104 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 194 106 rdi|DWORD = ADD (x: rbp|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 199 108 r14|DWORD = ADD (x: r14|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 202 110 stack:60|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 206 112 rbx|DWORD = SUB (x: rdi|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 211 114 CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 213 116 rbx|DWORD = CMOVE (falseValue: rbx|DWORD, ~trueValue: rcx|DWORD) condition: >  <||@
  Comment 216 118 rcx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 219 120 rcx|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 222 122 rbx|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 224 124 CMP (x: rbx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 226 126 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B13  <||@
  Comment 232 block B13 null  <||@
  Comment 232 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 232 174 CMP (x: rbx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 234 180 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 238 176 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B21  <||@
  Comment 244 block B21 null  <||@
  Comment 244 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 244 242 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 246 244 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 249 246 JUMP ~[] destination: B21 -> B22  <||@
  Comment 254 block B23 loop 0 depth 1 header:175|LoopBegin  <||@
  Comment 254 254 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 256 256 rax|DWORD = MOVSX [r9|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 262 258 CMP rax|DWORD y: 128 size: WORD  <||@
  Comment 267 260 BRANCH trueDestinationProbability: 0.9998116902024854 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B27  <||@
  Comment 273 block B24 loop 0 depth 1 header:175|LoopBegin  <||@
  Comment 273 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 273 264 MOVB (x: [rdx|DWORD + r11|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 278 266 rdx|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 280 268 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 282 270 JUMP ~[] destination: B24 -> B22  <||@
  Comment 282 block B22 loop 0 depth 1 header:175|LoopBegin  <||@
  Comment 282 248 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 282 250 CMP (x: rbx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 284 252 BRANCH trueDestinationProbability: 0.9647476131021091 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B27  <||@
  Comment 286 block B27 null  <||@
  Comment 286 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 286 282 CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 288 284 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B35  <||@
  Comment 294 block B35 null  <||@
  Comment 294 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 294 344 rbx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 296 346 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 299 348 JUMP ~[] destination: B35 -> B36  <||@
  Comment 299 block B36 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 299 350 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 304 352 CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 307 354 BRANCH trueDestinationProbability: 0.13401192679415996 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B63  <||@
  Comment 313 block B37 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 313 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 313 358 rax|DWORD = MOVSX [r9|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 319 360 rsi|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 327 362 rax|DWORD = MOVZX rax|DWORD size: DWORD  <||@
  Comment 330 364 rdx|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 335 366 rcx|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 339 368 CMP rax|DWORD y: 128 size: DWORD  <||@
  Comment 345 370 BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B52  <||@
  Comment 351 block B38 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 351 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 351 374 CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 354 376 BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B42  <||@
  Comment 360 block B39 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 360 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 360 380 CMP (x: rsi|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 362 382 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 368 block B40 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 368 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 368 386 MOVB (x: [rbx|DWORD + r11|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 373 388 rbx|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 375 390 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 378 392 JUMP ~[] destination: B40 -> B36  <||@
  Comment 380 block B52 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 380 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 380 490 CMP rax|DWORD y: 2048 size: DWORD  <||@
  Comment 386 492 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 392 block B54 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 392 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 392 506 CMP rax|DWORD y: 55296 size: DWORD  <||@
  Comment 398 508 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B54 -> B55 falseDestination: B54 -> B62  <||@
  Comment 404 block B55 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 404 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 404 512 r13|DWORD = SUB (x: r8|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 410 514 CMP r13|DWORD y: 3 size: DWORD  <||@
  Comment 414 516 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 420 block B57 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 420 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 420 530 CMP (x: rsi|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 422 532 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B57 -> B58 falseDestination: B57 -> B61  <||@
  Comment 428 block B58 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 428 534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 428 536 r13|DWORD = LEA [rbx|DWORD + 2] size: DWORD  <||@
  Comment 432 538 CMP (x: rsi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 435 540 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B60  <||@
  Comment 441 block B59 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 441 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 544 rsi|DWORD = SHR rax|DWORD y: 12 size: DWORD  <||@
  Comment 446 546 rsi|DWORD = OR rsi|DWORD y: 224 size: DWORD  <||@
  Comment 452 548 MOVB (x: [rbx|DWORD + r11|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 457 550 rsi|DWORD = SHR rax|DWORD y: 6 size: DWORD  <||@
  Comment 462 552 rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD  <||@
  Comment 465 554 rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD  <||@
  Comment 471 556 MOVB (x: [rcx|DWORD + r11|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 476 558 rax|DWORD = AND rax|DWORD y: 63 size: DWORD  <||@
  Comment 479 560 rax|DWORD = OR rax|DWORD y: 128 size: DWORD  <||@
  Comment 485 562 MOVB (x: [r13|DWORD + r11|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 490 564 rbx|DWORD = LEA [rbx|DWORD + 3] size: DWORD  <||@
  Comment 493 566 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 496 568 JUMP ~[] destination: B59 -> B36  <||@
  Comment 501 block B63 null  <||@
  Comment 501 600 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 501 602 rax|DWORD = SUB (x: r10|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 506 604 CMP (x: rax|DWORD, y: stack:64|DWORD) size: DWORD  <||@
  Comment 509 606 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 515 block B65 null  <||@
  Comment 515 618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 515 620 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 517 622 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B67  <||@
  Comment 523 block B67 null  <||@
  Comment 523 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 523 636 r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 528 638 CMP (x: rax|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 532 640 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 538 block B69 null  <||@
  Comment 538 652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 538 654 rcx|DWORD = SUB (x: rbx|DWORD, ~y: stack:60|DWORD) size: DWORD  <||@
  Comment 544 656 CMP (x: rcx|DWORD, y: stack:56|DWORD) size: DWORD  <||@
  Comment 548 658 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71  <||@
  Comment 554 block B71 null  <||@
  Comment 554 670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 554 672 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 556 674 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73  <||@
  Comment 562 block B73 null  <||@
  Comment 562 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 562 688 r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 567 690 CMP (x: rcx|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD  <||@
  Comment 571 692 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B76  <||@
  Comment 577 block B76 null  <||@
  Comment 577 712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 577 714 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 582 716 MOV (x: [r13|QWORD[.] + 24], y: rax|DWORD) size: DWORD  <||@
  Comment 586 718 MOV (x: [r14|QWORD[.] + 24], y: rcx|DWORD) size: DWORD  <||@
  Comment 590 720 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905]  <||@
  Comment 590 {Object[CoderResult@1617107905]}  <||@
  Comment 600 722 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 603 724 BRANCH trueDestinationProbability: 0.9963826232969987 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 609 block B77 null  <||@
  Comment 609 726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 609 728 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 612 730 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 621 12  <||@
  Comment 631 block B28 null  <||@
  Comment 631 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 631 288 rax|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 634 290 rbx|DWORD = SUB (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 638 292 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 641 294 rbx|QWORD = DEC rbx|QWORD size: QWORD  <||@
  Comment 644 296 rax|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 647 298 CMP (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 650 300 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B33  <||@
  Comment 656 block B29 null  <||@
  Comment 656 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 656 304 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 659 306 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B35 falseDestination: B29 -> B33  <||@
  Comment 670 block B7 null  <||@
  Comment 670 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 670 130 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 673 132 rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 676 134 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 679 136 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B11  <||@
  Comment 685 block B8 null  <||@
  Comment 685 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 685 140 CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 688 142 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B13 falseDestination: B8 -> B10  <||@
  Comment 699 block B14 null  <||@
  Comment 699 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 699 182 rdx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 707 184 r13|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 710 186 r13|QWORD = ADD (x: r13|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 713 188 rcx|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 715 190 CMP (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 718 192 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B18  <||@
  Comment 724 block B15 null  <||@
  Comment 724 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 724 196 CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 726 198 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B21 falseDestination: B15 -> B17  <||@
  Comment 737 block B4 null  <||@
  Comment 737 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 737 52 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 740 54 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 743 56 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 745 58 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B81  <||@
  Comment 751 block B5 null  <||@
  Comment 751 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 751 68 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 756 70 JUMP ~[] destination: B5 -> B6  <||@
  Comment 761 block B78 null  <||@
  Comment 761 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 761 734 rdx|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 764 736 CMP (x: rdx|DWORD, y: [r13|QWORD[.] + 24]) size: DWORD  <||@
  Comment 768 738 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 774 block B80 null  <||@
  Comment 774 752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 774 754 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 777 756 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 786 12  <||@
  Comment 796 block B42 null  <||@
  Comment 796 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 796 406 r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 801 408 r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 806 410 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 809 412 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 812 414 r10|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 815 416 rcx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 818 418 r8|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 821 420 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143, 17, 57]  <||@
  Comment 821 8  <||@
  Comment 823 {HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>}  <||@
  Comment 828 [stack:16, stack:24, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:52|DWORD  |-  |-  |-   <||@
  Comment 829 422 r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57]  <||@
  Comment 829 [rax:0, stack:16, stack:24, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-             |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
     stack:   |rax|QWORD[.]  |   |   |   |   |   |   |   |   |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:52|DWORD  |-  |-  |-   <||@
  Comment 829 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 833 424 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 836 430 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 840 426 BRANCH trueDestinationProbability: 0.9999763130215975 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B48  <||@
  Comment 846 block B43 null  <||@
  Comment 846 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 846 432 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 848 434 BRANCH trueDestinationProbability: 0.9963826232969987 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45  <||@
  Comment 854 block B44 null  <||@
  Comment 854 436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 854 438 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 863 12  <||@
  Comment 873 block B45 null  <||@
  Comment 873 440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 873 442 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 878 444 r10|DWORD = MOV [rbp|QWORD[.] + 24] size: DWORD  <||@
  Comment 882 446 CMP (x: r10|DWORD, y: [rbp|QWORD[.] + 28]) size: DWORD  <||@
  Comment 886 448 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B47  <||@
  Comment 892 block B47 null  <||@
  Comment 892 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 892 458 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 901 12  <||@
  Comment 911 block B48 null  <||@
  Comment 911 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 911 464 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 916 466 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 920 468 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 926 block B49 null  <||@
  Comment 926 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 926 472 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 935 12  <||@
  Comment 945 block B10 null  <||@
  Comment 945 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 945 150 r10|DWORD = MOVE input: int[-137499|0xfffffffffffde6e5]  <||@
  Comment 951 156 JUMP ~[] destination: B10 -> B19  <||@
  Comment 951 block B19 null  <||@
  Comment 951 224 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 951 162 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 955 164 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 960 226 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@287855974]  <||@
  Comment 960 {Object[d.a@287855974]}  <||@
  Comment 970 228 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 977 230 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 984 232 DEOPT info [bci:54]  <||@
  Comment 984 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 989 [rbp:0, stack:16, stack:32]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 54, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6 
     locals:  |stack:32|QWORD[.]  |rbp|QWORD[.]  |stack:48|QWORD[.]  |rsi|DWORD  |-  |-  |-   <||@
  Comment 990 block B79 null  <||@
  Comment 990 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 990 742 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 994 744 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 997 746 MOV [r15|QWORD + 668] y: -164115 size: DWORD  <||@
  Comment 1008 748 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1015 750 DEOPT info [bci:25, 18, 4, 482, 17, 57]  <||@
  Comment 1015 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1020 [rbp:0, stack:16, stack:32]at java.nio.Buffer.position(Buffer.java:246) [bci: 25, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:48|QWORD[.]  |rcx|DWORD 
  at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482, duringCall: true, rethrow: false]
              |0  |1             |2                  |3  |4          |5  |6  |7          |8  |9  |10  |11 
     locals:  |-  |rbp|QWORD[.]  |stack:48|QWORD[.]  |-  |r10|DWORD  |-  |-  |rbx|DWORD  |-  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6 
     locals:  |stack:32|QWORD[.]  |rbp|QWORD[.]  |stack:48|QWORD[.]  |rsi|DWORD  |-  |-  |-   <||@
  Comment 1021 block B62 null  <||@
  Comment 1021 590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1021 592 rcx|DWORD = MOVE input: int[-152595|0xfffffffffffdabed]  <||@
  Comment 1026 594 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1030 596 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1035 598 JUMP ~[] destination: B62 -> B75  <||@
  Comment 1035 block B75 null  <||@
  Comment 1035 704 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1035 706 MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD  <||@
  Comment 1042 708 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1049 710 DEOPT info [bci:109, 17, 57]  <||@
  Comment 1049 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1054 [rbp:0, r9:0, r11:0, stack:16, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3            |4          |5          |6             |7          |8         |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |rbp|QWORD[.]  |stack:48|QWORD[.]  |r9|QWORD[.]  |r10|DWORD  |rdi|DWORD  |r11|DWORD[.]  |rbx|DWORD  |r8|DWORD  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6 
     locals:  |stack:32|QWORD[.]  |rbp|QWORD[.]  |stack:48|QWORD[.]  |rsi|DWORD  |-  |-  |-   <||@
  Comment 1055 block B46 null  <||@
  Comment 1055 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1055 452 r10|DWORD = MOVE input: int[-152083|0xfffffffffffdaded]  <||@
  Comment 1061 454 JUMP ~[] destination: B46 -> B51  <||@
  Comment 1061 block B51 null  <||@
  Comment 1061 480 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1061 482 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1068 484 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1075 486 DEOPT info [bci:146, 17, 57]  <||@
  Comment 1075 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1080 [rax:0, rbp:0, stack:16, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-             |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
     stack:   |rax|QWORD[.]  |   |   |   |   |   |   |   |   |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6 
     locals:  |stack:32|QWORD[.]  |rbp|QWORD[.]  |stack:48|QWORD[.]  |rsi|DWORD  |-  |-  |-   <||@
  Comment 1081 block B50 null  <||@
  Comment 1081 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1081 476 r10|DWORD = MOVE input: int[-151315|0xfffffffffffdb0ed]  <||@
  Comment 1087 478 JUMP ~[] destination: B50 -> B51  <||@
  Comment 1089 block B11 null  <||@
  Comment 1089 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1089 160 r10|DWORD = MOVE input: int[-137499|0xfffffffffffde6e5]  <||@
  Comment 1095 166 JUMP ~[] destination: B11 -> B19  <||@
  Comment 1100 block B81 null  <||@
  Comment 1100 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1100 760 r10|DWORD = MOVE input: int[-169491|0xfffffffffffd69ed]  <||@
  Comment 1106 762 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1110 766 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1113 768 r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1118 770 JUMP ~[] destination: B81 -> B84  <||@
  Comment 1118 block B84 null  <||@
  Comment 1118 796 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1118 798 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1125 800 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1132 802 DEOPT info [bci:0]  <||@
  Comment 1132 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1137 [rcx:0, rbp:0, r11:0]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3          |4  |5  |6 
     locals:  |r11|QWORD[.]  |rbp|QWORD[.]  |rcx|QWORD[.]  |rsi|DWORD  |-  |-  |-   <||@
  Comment 1138 block B33 null  <||@
  Comment 1138 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1138 322 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1142 324 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1147 330 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1832177577]  <||@
  Comment 1147 {Object[d.a@1832177577]}  <||@
  Comment 1157 332 MOV [r15|QWORD + 668] y: -145691 size: DWORD  <||@
  Comment 1168 334 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1175 336 DEOPT info [bci:109, 17, 57]  <||@
  Comment 1175 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1180 [rbp:0, r9:0, r11:0, stack:16, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3            |4          |5          |6             |7          |8         |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |rbp|QWORD[.]  |stack:48|QWORD[.]  |r9|QWORD[.]  |rcx|DWORD  |rdi|DWORD  |r11|DWORD[.]  |rdx|DWORD  |r8|DWORD  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6 
     locals:  |stack:32|QWORD[.]  |rbp|QWORD[.]  |stack:48|QWORD[.]  |rsi|DWORD  |-  |-  |-   <||@
  Comment 1181 block B74 null  <||@
  Comment 1181 694 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1181 696 rcx|DWORD = MOVE input: int[-163603|0xfffffffffffd80ed]  <||@
  Comment 1186 698 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1190 700 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1193 702 JUMP ~[] destination: B74 -> B75  <||@
  Comment 1198 block B17 null  <||@
  Comment 1198 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1198 206 r10|DWORD = MOVE input: int[-143131|0xfffffffffffdd0e5]  <||@
  Comment 1204 212 JUMP ~[] destination: B17 -> B19  <||@
  Comment 1209 block B70 null  <||@
  Comment 1209 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1209 662 rcx|DWORD = MOVE input: int[-162323|0xfffffffffffd85ed]  <||@
  Comment 1214 664 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1218 666 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1221 668 JUMP ~[] destination: B70 -> B75  <||@
  Comment 1226 block B68 null  <||@
  Comment 1226 642 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1226 644 rcx|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed]  <||@
  Comment 1231 646 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1235 648 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1238 650 JUMP ~[] destination: B68 -> B75  <||@
  Comment 1243 block B60 null  <||@
  Comment 1243 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1243 572 rcx|DWORD = MOVE input: int[-158747|0xfffffffffffd93e5]  <||@
  Comment 1248 574 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1252 576 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1257 578 JUMP ~[] destination: B60 -> B75  <||@
  Comment 1262 block B66 null  <||@
  Comment 1262 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1262 626 rcx|DWORD = MOVE input: int[-161043|0xfffffffffffd8aed]  <||@
  Comment 1267 628 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1271 630 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1276 632 JUMP ~[] destination: B66 -> B75  <||@
  Comment 1281 block B56 null  <||@
  Comment 1281 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1281 520 rcx|DWORD = MOVE input: int[-152851|0xfffffffffffdaaed]  <||@
  Comment 1286 522 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1290 524 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1295 526 JUMP ~[] destination: B56 -> B75  <||@
  Comment 1300 block B83 null  <||@
  Comment 1300 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1300 786 r10|DWORD = MOVE input: int[-132371|0xfffffffffffdfaed]  <||@
  Comment 1306 788 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1309 790 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1312 792 rsi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1315 794 JUMP ~[] destination: B83 -> B84  <||@
  Comment 1320 block B18 null  <||@
  Comment 1320 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1320 216 r10|DWORD = MOVE input: int[-143131|0xfffffffffffdd0e5]  <||@
  Comment 1326 222 JUMP ~[] destination: B18 -> B19  <||@
  Comment 1331 block B72 null  <||@
  Comment 1331 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1331 678 rcx|DWORD = MOVE input: int[-162579|0xfffffffffffd84ed]  <||@
  Comment 1336 680 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1340 682 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1343 684 JUMP ~[] destination: B72 -> B75  <||@
  Comment 1348 block B64 null  <||@
  Comment 1348 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1348 610 rcx|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed]  <||@
  Comment 1353 612 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1357 614 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1362 616 JUMP ~[] destination: B64 -> B75  <||@
  Comment 1367 block B82 null  <||@
  Comment 1367 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1367 774 r10|DWORD = MOVE input: int[-186899|0xfffffffffffd25ed]  <||@
  Comment 1373 776 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1376 778 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1379 780 rsi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1382 782 JUMP ~[] destination: B82 -> B84  <||@
  Comment 1387 block B53 null  <||@
  Comment 1387 494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1387 496 rcx|DWORD = MOVE input: int[-152339|0xfffffffffffdaced]  <||@
  Comment 1392 498 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1396 500 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1401 502 JUMP ~[] destination: B53 -> B75  <||@
  Comment 1406 block B61 null  <||@
  Comment 1406 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1406 582 rcx|DWORD = MOVE input: int[-153627|0xfffffffffffda7e5]  <||@
  Comment 1411 584 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1415 586 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1420 588 JUMP ~[] destination: B61 -> B75  <||@
  Comment 1425 block B41 null  <||@
  Comment 1425 394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1425 396 rcx|DWORD = MOVE input: int[-148251|0xfffffffffffdbce5]  <||@
  Comment 1430 398 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1434 400 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1439 402 JUMP ~[] destination: B41 -> B75  <||@
  Comment 1444 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1444 4  <||@
  Comment 1450 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1450 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-3602[java.nio.charset.CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)]"
  method "HotSpotCompilation-3602[java.nio.charset.CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)]"
  date 1527005143548
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1078558c0 448b560849c1e203493bc20f858f05fbfe900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24304889742420488954241848894c2410448944240c448b522c438504d4448b592c438504dc0fb64128458bca49c1e10385c00f85ad0400000fb6422885c00f85e40400008b5e1483fb010f85620200004585c0b801000000bb020000000f44d8895e148b59248b791c8b41188b6a24448b6a1c448b7218468b14d50c000000418bf2448bc34403c703c3418bc82bc8897c24088bfd4103fd4403f5895c24048bdf412bde3bd90f4fd94863cb48ffc903d83bd80f8fb60100003bd844892c240f8fc70100008bd0418bcee91c0000006690410fbf4449106681f880000f830d000000428844da10ffc2ffc13bda7fe23bf90f8f510100008bda448bd10f1f440000413bfa0f8ebc000000430fbf445110428b34dd0c0000000fb7c0418bd2ffc28bcbffc181f8800000000f831d000000443bc30f8eb40100003bf30f8621040000428844db108bd9448bd2ebb481f8000800000f82e303000081f800d800000f8369020000458be8442beb4183fd030f8c5d0300003bf30f86d2030000448d6b02413bf50f86220300008bf0c1ee0c81cee0000000428874db108bf0c1ee0683e63f81ce80000000428874d91083e03f81c880000000438844dd108d5b03448bd2e93bffffff418bc22bc53b04240f8f4103000085c00f8ce30200004c8b6c2418413b450c0f8cb00200008bcb2b4c24043b4c24080f8f8f02000085c90f8c010300004c8b742410413b4e0c0f8c5c020000448b44240c4189451841894e1848beb8b91ac0060000004585c00f8598000000488bc6488b6c24304883c4388505d39403fdc5f877c34863c18bdf2bd94863db48ffcb4803c3483bf00f86e2010000443bd10f878dfeffffe9d40100004963d64803d1483bf20f8694010000453bd60f8732feffffe9f6000000428b14dd0c0000004c63e84c03e98bca493bcd0f86540200003bd00f8718feffffe9cd0100004c8bf14c8bea85db0f855d010000488b742420e986fdffff8b1424413b55180f8fd8000000488bc6488b6c24304883c43885052e9403fdc5f877c34c8b7424104c8b6c2418498bf5418bd24d8bd6498bca448bc36690e82409fbfe90448b500c4585d28b74240c0f854100000085f60f8513000000488b6c24304883c4388505e19303fdc5f877c3488b6c2418448b5518443b551c0f8ca3000000488b6c24304883c4388505bb9303fdc5f877c3488b6c24184183fa010f859b000000488b6c24304883c4388505999303fdc5f877c341bae5e6fdff8b74240c488b6c241849bbe8babbbf070000004589979c0200004d899fa8020000e86119fbfe908b74240c498bed41c7879c020000ed7efdff4d89a7a8020000e84219fbfe90b9edabfdff8b74240c488b6c241841898f9c0200004d89a7a8020000e82019fbfe9041baedadfdff4589979c0200004d89a7a8020000e80619fbfe9041baedb0fdffebe441bae5e6fdffe96bffffff41baed69fdff8b74240c498bed4c8b5c24204589979c0200004d89a7a8020000e8cd18fbfe908b74240c488b6c241849ba90aabcbf0700000041c7879c020000e5c6fdff4d8997a8020000e8a218fbfe90b9ed80fdff8b74240c498bede95dffffff41bae5d0fdffe9fefeffffb9ed85fdff8b74240c498bede941ffffffb9ed86fdff8b74240c498bede930ffffffb9e593fdff8b74240c488b6c2418e91dffffffb9ed8afdff8b74240c488b6c2418e90affffffb9edaafdff8b74240c488b6c2418e9f7feffff41baedfafdff488bea4c8bde418bf0e936ffffff41bae5d0fdffe984feffffb9ed84fdff8b74240c498bede9c7feffffb9ed8bfdff8b74240c488b6c2418e9b4feffff41baed25fdff488bea4c8bde418bf0e9f3feffffb9edacfdff8b74240c488b6c2418e98dfeffffb9e5a7fdff8b74240c488b6c2418e97afeffffb9e5bcfdff8b74240c488b6c2418e967feffffe8b7473fff90e89116fbfe90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4655686c slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 63 12 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 68 14 r10|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD state [bci:0]  <||@
  Comment 68 [rcx:0, rdx:0, rsi:0, stack:16, stack:24, stack:32]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3         |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|DWORD  |-  |-  |-   <||@
  Comment 68 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 72 16 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 72 [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:24, stack:32]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3         |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|DWORD  |-  |-  |-   <||@
  Comment 72 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 18 r11|DWORD[.] = MOV [rcx|QWORD[.] + 44] size: DWORD state [bci:0]  <||@
  Comment 76 [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:24, stack:32]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3         |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|DWORD  |-  |-  |-   <||@
  Comment 76 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 80 20 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:0]  <||@
  Comment 80 [rcx:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:32]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3         |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|DWORD  |-  |-  |-   <||@
  Comment 80 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 84 22 rax|DWORD = MOVZXB [rcx|QWORD[.] + 40] size: DWORD  <||@
  Comment 88 24 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@150596a5 encoding: base: 0 shift: 3  <||@
  Comment 95 26 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 97 28 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B83  <||@
  Comment 103 block B1 null  <||@
  Comment 103 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 32 rax|DWORD = MOVZXB [rdx|QWORD[.] + 40] size: DWORD  <||@
  Comment 107 34 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 109 36 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B82  <||@
  Comment 115 block B2 null  <||@
  Comment 115 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 115 40 rbx|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 118 42 CMP rbx|DWORD y: 1 size: DWORD  <||@
  Comment 121 44 BRANCH trueDestinationProbability: 0.9963454110228706 condition: = trueDestination: B2 -> B6 falseDestination: B2 -> B4  <||@
  Comment 127 block B6 null  <||@
  Comment 127 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 127 74 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 130 76 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 135 78 rbx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: =  <||@
  Comment 143 80 MOV (x: [rsi|QWORD[.] + 20], y: rbx|DWORD) size: DWORD  <||@
  Comment 146 82 rbx|DWORD = MOV [rcx|QWORD[.] + 36] size: DWORD  <||@
  Comment 149 84 rdi|DWORD = MOV [rcx|QWORD[.] + 28] size: DWORD  <||@
  Comment 152 86 rax|DWORD = MOV [rcx|QWORD[.] + 24] size: DWORD  <||@
  Comment 155 88 rbp|DWORD = MOV [rdx|QWORD[.] + 36] size: DWORD  <||@
  Comment 158 90 r13|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 162 92 r14|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 166 94 r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 174 96 rsi|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 177 98 r8|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 183 100 rax|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 185 102 rcx|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 190 104 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 194 106 rdi|DWORD = ADD (x: rbp|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 199 108 r14|DWORD = ADD (x: r14|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 202 110 stack:60|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 206 112 rbx|DWORD = SUB (x: rdi|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 211 114 CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 213 116 rbx|DWORD = CMOVE (falseValue: rbx|DWORD, ~trueValue: rcx|DWORD) condition: >  <||@
  Comment 216 118 rcx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 219 120 rcx|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 222 122 rbx|DWORD = ADD (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 224 124 CMP (x: rbx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 226 126 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B13  <||@
  Comment 232 block B13 null  <||@
  Comment 232 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 232 174 CMP (x: rbx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 234 180 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 238 176 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B21  <||@
  Comment 244 block B21 null  <||@
  Comment 244 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 244 242 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 246 244 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 249 246 JUMP ~[] destination: B21 -> B22  <||@
  Comment 254 block B23 loop 0 depth 1 header:175|LoopBegin  <||@
  Comment 254 254 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 256 256 rax|DWORD = MOVSX [r9|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 262 258 CMP rax|DWORD y: 128 size: WORD  <||@
  Comment 267 260 BRANCH trueDestinationProbability: 0.9998116902024854 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B27  <||@
  Comment 273 block B24 loop 0 depth 1 header:175|LoopBegin  <||@
  Comment 273 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 273 264 MOVB (x: [rdx|DWORD + r11|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 278 266 rdx|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 280 268 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 282 270 JUMP ~[] destination: B24 -> B22  <||@
  Comment 282 block B22 loop 0 depth 1 header:175|LoopBegin  <||@
  Comment 282 248 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 282 250 CMP (x: rbx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 284 252 BRANCH trueDestinationProbability: 0.9647476131021091 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B27  <||@
  Comment 286 block B27 null  <||@
  Comment 286 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 286 282 CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 288 284 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B35  <||@
  Comment 294 block B35 null  <||@
  Comment 294 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 294 344 rbx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 296 346 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 299 348 JUMP ~[] destination: B35 -> B36  <||@
  Comment 299 block B36 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 299 350 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 304 352 CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 307 354 BRANCH trueDestinationProbability: 0.13401192679415996 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B63  <||@
  Comment 313 block B37 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 313 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 313 358 rax|DWORD = MOVSX [r9|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 319 360 rsi|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 327 362 rax|DWORD = MOVZX rax|DWORD size: DWORD  <||@
  Comment 330 364 rdx|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 335 366 rcx|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 339 368 CMP rax|DWORD y: 128 size: DWORD  <||@
  Comment 345 370 BRANCH trueDestinationProbability: 0.9444529691575878 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B52  <||@
  Comment 351 block B38 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 351 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 351 374 CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 354 376 BRANCH trueDestinationProbability: 0.9998375304630381 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B42  <||@
  Comment 360 block B39 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 360 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 360 380 CMP (x: rsi|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 362 382 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 368 block B40 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 368 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 368 386 MOVB (x: [rbx|DWORD + r11|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 373 388 rbx|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 375 390 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 378 392 JUMP ~[] destination: B40 -> B36  <||@
  Comment 380 block B52 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 380 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 380 490 CMP rax|DWORD y: 2048 size: DWORD  <||@
  Comment 386 492 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 392 block B54 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 392 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 392 506 CMP rax|DWORD y: 55296 size: DWORD  <||@
  Comment 398 508 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B54 -> B55 falseDestination: B54 -> B62  <||@
  Comment 404 block B55 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 404 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 404 512 r13|DWORD = SUB (x: r8|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 410 514 CMP r13|DWORD y: 3 size: DWORD  <||@
  Comment 414 516 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 420 block B57 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 420 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 420 530 CMP (x: rsi|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 422 532 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B57 -> B58 falseDestination: B57 -> B61  <||@
  Comment 428 block B58 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 428 534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 428 536 r13|DWORD = LEA [rbx|DWORD + 2] size: DWORD  <||@
  Comment 432 538 CMP (x: rsi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 435 540 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B60  <||@
  Comment 441 block B59 loop 1 depth 1 header:210|LoopBegin  <||@
  Comment 441 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 544 rsi|DWORD = SHR rax|DWORD y: 12 size: DWORD  <||@
  Comment 446 546 rsi|DWORD = OR rsi|DWORD y: 224 size: DWORD  <||@
  Comment 452 548 MOVB (x: [rbx|DWORD + r11|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 457 550 rsi|DWORD = SHR rax|DWORD y: 6 size: DWORD  <||@
  Comment 462 552 rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD  <||@
  Comment 465 554 rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD  <||@
  Comment 471 556 MOVB (x: [rcx|DWORD + r11|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 476 558 rax|DWORD = AND rax|DWORD y: 63 size: DWORD  <||@
  Comment 479 560 rax|DWORD = OR rax|DWORD y: 128 size: DWORD  <||@
  Comment 485 562 MOVB (x: [r13|DWORD + r11|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 490 564 rbx|DWORD = LEA [rbx|DWORD + 3] size: DWORD  <||@
  Comment 493 566 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 496 568 JUMP ~[] destination: B59 -> B36  <||@
  Comment 501 block B63 null  <||@
  Comment 501 600 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 501 602 rax|DWORD = SUB (x: r10|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 506 604 CMP (x: rax|DWORD, y: stack:64|DWORD) size: DWORD  <||@
  Comment 509 606 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 515 block B65 null  <||@
  Comment 515 618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 515 620 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 517 622 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B67  <||@
  Comment 523 block B67 null  <||@
  Comment 523 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 523 636 r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 528 638 CMP (x: rax|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 532 640 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 538 block B69 null  <||@
  Comment 538 652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 538 654 rcx|DWORD = SUB (x: rbx|DWORD, ~y: stack:60|DWORD) size: DWORD  <||@
  Comment 544 656 CMP (x: rcx|DWORD, y: stack:56|DWORD) size: DWORD  <||@
  Comment 548 658 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71  <||@
  Comment 554 block B71 null  <||@
  Comment 554 670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 554 672 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 556 674 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73  <||@
  Comment 562 block B73 null  <||@
  Comment 562 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 562 688 r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 567 690 CMP (x: rcx|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD  <||@
  Comment 571 692 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B76  <||@
  Comment 577 block B76 null  <||@
  Comment 577 712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 577 714 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 582 716 MOV (x: [r13|QWORD[.] + 24], y: rax|DWORD) size: DWORD  <||@
  Comment 586 718 MOV (x: [r14|QWORD[.] + 24], y: rcx|DWORD) size: DWORD  <||@
  Comment 590 720 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1617107905]  <||@
  Comment 590 {Object[CoderResult@1617107905]}  <||@
  Comment 600 722 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 603 724 BRANCH trueDestinationProbability: 0.9963826232969987 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 609 block B77 null  <||@
  Comment 609 726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 609 728 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 612 730 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 621 12  <||@
  Comment 631 block B28 null  <||@
  Comment 631 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 631 288 rax|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 634 290 rbx|DWORD = SUB (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 638 292 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 641 294 rbx|QWORD = DEC rbx|QWORD size: QWORD  <||@
  Comment 644 296 rax|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 647 298 CMP (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 650 300 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B33  <||@
  Comment 656 block B29 null  <||@
  Comment 656 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 656 304 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 659 306 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B35 falseDestination: B29 -> B33  <||@
  Comment 670 block B7 null  <||@
  Comment 670 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 670 130 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 673 132 rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 676 134 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 679 136 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B11  <||@
  Comment 685 block B8 null  <||@
  Comment 685 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 685 140 CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 688 142 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B13 falseDestination: B8 -> B10  <||@
  Comment 699 block B14 null  <||@
  Comment 699 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 699 182 rdx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 707 184 r13|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 710 186 r13|QWORD = ADD (x: r13|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 713 188 rcx|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 715 190 CMP (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 718 192 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B18  <||@
  Comment 724 block B15 null  <||@
  Comment 724 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 724 196 CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 726 198 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B21 falseDestination: B15 -> B17  <||@
  Comment 737 block B4 null  <||@
  Comment 737 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 737 52 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 740 54 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 743 56 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 745 58 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B81  <||@
  Comment 751 block B5 null  <||@
  Comment 751 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 751 68 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 756 70 JUMP ~[] destination: B5 -> B6  <||@
  Comment 761 block B78 null  <||@
  Comment 761 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 761 734 rdx|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 764 736 CMP (x: rdx|DWORD, y: [r13|QWORD[.] + 24]) size: DWORD  <||@
  Comment 768 738 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 774 block B80 null  <||@
  Comment 774 752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 774 754 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 777 756 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 786 12  <||@
  Comment 796 block B42 null  <||@
  Comment 796 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 796 406 r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 801 408 r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 806 410 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 809 412 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 812 414 r10|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 815 416 rcx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 818 418 r8|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 821 420 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:143, 17, 57]  <||@
  Comment 821 8  <||@
  Comment 823 {HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>}  <||@
  Comment 828 [stack:16, stack:24, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:52|DWORD  |-  |-  |-   <||@
  Comment 829 422 r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57]  <||@
  Comment 829 [rax:0, stack:16, stack:24, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-             |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
     stack:   |rax|QWORD[.]  |   |   |   |   |   |   |   |   |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:52|DWORD  |-  |-  |-   <||@
  Comment 829 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 833 424 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 836 430 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 840 426 BRANCH trueDestinationProbability: 0.9999763130215975 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B48  <||@
  Comment 846 block B43 null  <||@
  Comment 846 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 846 432 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 848 434 BRANCH trueDestinationProbability: 0.9963826232969987 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45  <||@
  Comment 854 block B44 null  <||@
  Comment 854 436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 854 438 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 863 12  <||@
  Comment 873 block B45 null  <||@
  Comment 873 440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 873 442 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 878 444 r10|DWORD = MOV [rbp|QWORD[.] + 24] size: DWORD  <||@
  Comment 882 446 CMP (x: r10|DWORD, y: [rbp|QWORD[.] + 28]) size: DWORD  <||@
  Comment 886 448 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B47  <||@
  Comment 892 block B47 null  <||@
  Comment 892 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 892 458 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 901 12  <||@
  Comment 911 block B48 null  <||@
  Comment 911 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 911 464 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 916 466 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 920 468 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 926 block B49 null  <||@
  Comment 926 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 926 472 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 935 12  <||@
  Comment 945 block B10 null  <||@
  Comment 945 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 945 150 r10|DWORD = MOVE input: int[-137499|0xfffffffffffde6e5]  <||@
  Comment 951 156 JUMP ~[] destination: B10 -> B19  <||@
  Comment 951 block B19 null  <||@
  Comment 951 224 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 951 162 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 955 164 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 960 226 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@287855974]  <||@
  Comment 960 {Object[d.a@287855974]}  <||@
  Comment 970 228 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 977 230 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 984 232 DEOPT info [bci:54]  <||@
  Comment 984 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 989 [rbp:0, stack:16, stack:32]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 54, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6 
     locals:  |stack:32|QWORD[.]  |rbp|QWORD[.]  |stack:48|QWORD[.]  |rsi|DWORD  |-  |-  |-   <||@
  Comment 990 block B79 null  <||@
  Comment 990 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 990 742 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 994 744 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 997 746 MOV [r15|QWORD + 668] y: -164115 size: DWORD  <||@
  Comment 1008 748 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1015 750 DEOPT info [bci:25, 18, 4, 482, 17, 57]  <||@
  Comment 1015 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1020 [rbp:0, stack:16, stack:32]at java.nio.Buffer.position(Buffer.java:246) [bci: 25, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:48|QWORD[.]  |rcx|DWORD 
  at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482, duringCall: true, rethrow: false]
              |0  |1             |2                  |3  |4          |5  |6  |7          |8  |9  |10  |11 
     locals:  |-  |rbp|QWORD[.]  |stack:48|QWORD[.]  |-  |r10|DWORD  |-  |-  |rbx|DWORD  |-  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6 
     locals:  |stack:32|QWORD[.]  |rbp|QWORD[.]  |stack:48|QWORD[.]  |rsi|DWORD  |-  |-  |-   <||@
  Comment 1021 block B62 null  <||@
  Comment 1021 590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1021 592 rcx|DWORD = MOVE input: int[-152595|0xfffffffffffdabed]  <||@
  Comment 1026 594 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1030 596 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1035 598 JUMP ~[] destination: B62 -> B75  <||@
  Comment 1035 block B75 null  <||@
  Comment 1035 704 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1035 706 MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD  <||@
  Comment 1042 708 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1049 710 DEOPT info [bci:109, 17, 57]  <||@
  Comment 1049 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1054 [rbp:0, r9:0, r11:0, stack:16, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3            |4          |5          |6             |7          |8         |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |rbp|QWORD[.]  |stack:48|QWORD[.]  |r9|QWORD[.]  |r10|DWORD  |rdi|DWORD  |r11|DWORD[.]  |rbx|DWORD  |r8|DWORD  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6 
     locals:  |stack:32|QWORD[.]  |rbp|QWORD[.]  |stack:48|QWORD[.]  |rsi|DWORD  |-  |-  |-   <||@
  Comment 1055 block B46 null  <||@
  Comment 1055 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1055 452 r10|DWORD = MOVE input: int[-152083|0xfffffffffffdaded]  <||@
  Comment 1061 454 JUMP ~[] destination: B46 -> B51  <||@
  Comment 1061 block B51 null  <||@
  Comment 1061 480 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1061 482 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1068 484 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1075 486 DEOPT info [bci:146, 17, 57]  <||@
  Comment 1075 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1080 [rax:0, rbp:0, stack:16, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-             |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
     stack:   |rax|QWORD[.]  |   |   |   |   |   |   |   |   |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6 
     locals:  |stack:32|QWORD[.]  |rbp|QWORD[.]  |stack:48|QWORD[.]  |rsi|DWORD  |-  |-  |-   <||@
  Comment 1081 block B50 null  <||@
  Comment 1081 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1081 476 r10|DWORD = MOVE input: int[-151315|0xfffffffffffdb0ed]  <||@
  Comment 1087 478 JUMP ~[] destination: B50 -> B51  <||@
  Comment 1089 block B11 null  <||@
  Comment 1089 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1089 160 r10|DWORD = MOVE input: int[-137499|0xfffffffffffde6e5]  <||@
  Comment 1095 166 JUMP ~[] destination: B11 -> B19  <||@
  Comment 1100 block B81 null  <||@
  Comment 1100 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1100 760 r10|DWORD = MOVE input: int[-169491|0xfffffffffffd69ed]  <||@
  Comment 1106 762 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1110 766 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1113 768 r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1118 770 JUMP ~[] destination: B81 -> B84  <||@
  Comment 1118 block B84 null  <||@
  Comment 1118 796 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1118 798 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1125 800 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1132 802 DEOPT info [bci:0]  <||@
  Comment 1132 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1137 [rcx:0, rbp:0, r11:0]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:569) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3          |4  |5  |6 
     locals:  |r11|QWORD[.]  |rbp|QWORD[.]  |rcx|QWORD[.]  |rsi|DWORD  |-  |-  |-   <||@
  Comment 1138 block B33 null  <||@
  Comment 1138 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1138 322 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1142 324 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1147 330 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1832177577]  <||@
  Comment 1147 {Object[d.a@1832177577]}  <||@
  Comment 1157 332 MOV [r15|QWORD + 668] y: -145691 size: DWORD  <||@
  Comment 1168 334 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1175 336 DEOPT info [bci:109, 17, 57]  <||@
  Comment 1175 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1180 [rbp:0, r9:0, r11:0, stack:16, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3            |4          |5          |6             |7          |8         |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |rbp|QWORD[.]  |stack:48|QWORD[.]  |r9|QWORD[.]  |rcx|DWORD  |rdi|DWORD  |r11|DWORD[.]  |rdx|DWORD  |r8|DWORD  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6 
     locals:  |stack:32|QWORD[.]  |rbp|QWORD[.]  |stack:48|QWORD[.]  |rsi|DWORD  |-  |-  |-   <||@
  Comment 1181 block B74 null  <||@
  Comment 1181 694 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1181 696 rcx|DWORD = MOVE input: int[-163603|0xfffffffffffd80ed]  <||@
  Comment 1186 698 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1190 700 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1193 702 JUMP ~[] destination: B74 -> B75  <||@
  Comment 1198 block B17 null  <||@
  Comment 1198 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1198 206 r10|DWORD = MOVE input: int[-143131|0xfffffffffffdd0e5]  <||@
  Comment 1204 212 JUMP ~[] destination: B17 -> B19  <||@
  Comment 1209 block B70 null  <||@
  Comment 1209 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1209 662 rcx|DWORD = MOVE input: int[-162323|0xfffffffffffd85ed]  <||@
  Comment 1214 664 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1218 666 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1221 668 JUMP ~[] destination: B70 -> B75  <||@
  Comment 1226 block B68 null  <||@
  Comment 1226 642 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1226 644 rcx|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed]  <||@
  Comment 1231 646 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1235 648 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1238 650 JUMP ~[] destination: B68 -> B75  <||@
  Comment 1243 block B60 null  <||@
  Comment 1243 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1243 572 rcx|DWORD = MOVE input: int[-158747|0xfffffffffffd93e5]  <||@
  Comment 1248 574 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1252 576 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1257 578 JUMP ~[] destination: B60 -> B75  <||@
  Comment 1262 block B66 null  <||@
  Comment 1262 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1262 626 rcx|DWORD = MOVE input: int[-161043|0xfffffffffffd8aed]  <||@
  Comment 1267 628 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1271 630 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1276 632 JUMP ~[] destination: B66 -> B75  <||@
  Comment 1281 block B56 null  <||@
  Comment 1281 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1281 520 rcx|DWORD = MOVE input: int[-152851|0xfffffffffffdaaed]  <||@
  Comment 1286 522 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1290 524 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1295 526 JUMP ~[] destination: B56 -> B75  <||@
  Comment 1300 block B83 null  <||@
  Comment 1300 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1300 786 r10|DWORD = MOVE input: int[-132371|0xfffffffffffdfaed]  <||@
  Comment 1306 788 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1309 790 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1312 792 rsi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1315 794 JUMP ~[] destination: B83 -> B84  <||@
  Comment 1320 block B18 null  <||@
  Comment 1320 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1320 216 r10|DWORD = MOVE input: int[-143131|0xfffffffffffdd0e5]  <||@
  Comment 1326 222 JUMP ~[] destination: B18 -> B19  <||@
  Comment 1331 block B72 null  <||@
  Comment 1331 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1331 678 rcx|DWORD = MOVE input: int[-162579|0xfffffffffffd84ed]  <||@
  Comment 1336 680 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1340 682 rbp|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1343 684 JUMP ~[] destination: B72 -> B75  <||@
  Comment 1348 block B64 null  <||@
  Comment 1348 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1348 610 rcx|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed]  <||@
  Comment 1353 612 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1357 614 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1362 616 JUMP ~[] destination: B64 -> B75  <||@
  Comment 1367 block B82 null  <||@
  Comment 1367 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1367 774 r10|DWORD = MOVE input: int[-186899|0xfffffffffffd25ed]  <||@
  Comment 1373 776 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1376 778 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1379 780 rsi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1382 782 JUMP ~[] destination: B82 -> B84  <||@
  Comment 1387 block B53 null  <||@
  Comment 1387 494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1387 496 rcx|DWORD = MOVE input: int[-152339|0xfffffffffffdaced]  <||@
  Comment 1392 498 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1396 500 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1401 502 JUMP ~[] destination: B53 -> B75  <||@
  Comment 1406 block B61 null  <||@
  Comment 1406 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1406 582 rcx|DWORD = MOVE input: int[-153627|0xfffffffffffda7e5]  <||@
  Comment 1411 584 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1415 586 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1420 588 JUMP ~[] destination: B61 -> B75  <||@
  Comment 1425 block B41 null  <||@
  Comment 1425 394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1425 396 rcx|DWORD = MOVE input: int[-148251|0xfffffffffffdbce5]  <||@
  Comment 1430 398 rsi|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1434 400 rbp|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1439 402 JUMP ~[] destination: B41 -> B75  <||@
  Comment 1444 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1444 4  <||@
  Comment 1450 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1450 5  <||@
  HexCodeFile>>> <|@
end_nmethod
